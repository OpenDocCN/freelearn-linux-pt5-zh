- en: Chapter 10. Migrating from Physical Desktops to Virtual Desktops
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter analyzes the strategies and techniques used to migrate a user population
    from a physical desktop environment to a virtual desktop solution. While many
    VDI solutions will be part of net new construction and not involve the migration
    of users, the majority of VDI solutions to be implemented will involve some component
    of user migration.
  prefs: []
  type: TYPE_NORMAL
- en: To help ensure success of the overall VDI endeavor, it is important to minimize
    the perceived impact of the transition to the end users. Part of this impact minimization
    is understanding how to properly migrate user-specific data, also known as the
    user’s persona.
  prefs: []
  type: TYPE_NORMAL
- en: A user’s persona consists of the user preferences, application settings, themes,
    shortcuts, favorites, printers, and other unique configurations. In order to decouple
    a user’s persona from a desktop, the persona must ultimately reside outside of
    the desktop operating system. Typically, user personas are stored on a classic
    network file share or a distributed filesystem share. By storing personas on a
    network share, a consistent end user experience can be delivered no matter which
    vDesktop resource a user connects to, as the persona is not bound to a specific
    vDesktop.
  prefs: []
  type: TYPE_NORMAL
- en: There are several solutions on the market that help with the migration of a
    user’s persona, including everything from Microsoft roaming profiles and folder
    redirection, to AppSense, to Liquidware Labs ProfileUnity.
  prefs: []
  type: TYPE_NORMAL
- en: Migration of the user persona
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to migrate a user’s persona, it must first be decoupled from the desktop
    operating system. In a completely coupled scenario, the user’s persona resides
    inside the operating environment of the physical desktop.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is an illustration that shows the characteristics of
    a physical desktop:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Migration of the user persona](img/1124EN_10_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding diagram, the operating system, applications, and user persona,
    all reside within the same environment. There is no application virtualization
    (for example, VMware ThinApp) or persona management solution (for example, ProfileUnity)
    in place. The first step to successfully migrate the physical desktop in the preceding
    scenario to a fully functioning vDesktop, is to separate the persona from the
    operating environment.
  prefs: []
  type: TYPE_NORMAL
- en: Separating the persona from the operating environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By separating a user’s persona from the underlying desktop, it can be freely
    migrated to another physical desktop, or ideally, to a virtual desktop. This is
    the same approach used in application virtualization where a given application
    is packaged via ThinApp, for example, and is now untethered from the underlying
    operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is an illustration that shows the decoupling of the user’s
    persona from the physical desktop:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Separating the persona from the operating environment](img/1124EN_10_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Three of the easiest options for untethering the persona from the operating
    environment of the physical desktop are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft roaming profile + folder redirection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liquidware Labs ProfileUnity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AppSense
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this state, a physical desktop still contains installed applications, but
    customizations and other details that comprise the user’s persona reside outside
    of the guest OS.
  prefs: []
  type: TYPE_NORMAL
- en: Folder redirection
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Folder redirection works by redirecting the path of a folder (for example,
    `\My Documents)` to a new location, typically a network share, unbeknownst to
    the user. An end user who has his `\My Documents` redirected to a network share
    will continue to open, save, and manipulate files in his `\My Documents` while
    the user is opening, saving, and manipulating files on a network share as opposed
    to the local drive in the background. The advantages of folder redirection are
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: A users data is accessible from any desktop resource, assuming appropriate network
    connectivity exists
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Group policy can be leveraged to enforce disk quotas to minimize the space of
    a users persona
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A users data that has been redirected is likely to have a greater chance of
    recovery from a desktop failure, as production network shares are often backed
    up more frequently than desktops
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With the native Microsoft solution, the `My Documents, Application Data, Desktop`,
    and `Start Menu` parent folders can be redirected. The subfolders of the aforementioned
    parent folders will also be redirected.
  prefs: []
  type: TYPE_NORMAL
- en: '`My Documents` is a folder that a user will have read/write access to, and
    is used as a place to save documents, pictures, media, and other data. `My Documents`
    is the default save-to location for many Microsoft applications.'
  prefs: []
  type: TYPE_NORMAL
- en: The `Application Data` folder is used by applications to save customized user
    settings relevant to a given application.
  prefs: []
  type: TYPE_NORMAL
- en: The `Desktop` folder is the folder that contains all of the items that reside
    on a user’s desktop.
  prefs: []
  type: TYPE_NORMAL
- en: The `Start Menu` folder contains items found in a desktop’s start menu list.
  prefs: []
  type: TYPE_NORMAL
- en: Profiles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In order to understand how roaming profiles work, it is important to understand
    what makes up a profile in a Windows environment. In Windows, a profile consists
    of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Registry hive:** The registry hive, stored as `NTuser.dat`, stores the contents
    of HKEY_CURRENT_USER'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Profile folder:** (for example, `C:\Users\User4)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Within the registry hive and profile folder are the configuration settings for
    things such as mapped printers, desktop shortcuts, drive mapping, unique processes,
    and logging.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Windows, there are several types of profiles as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Local profile:** This is the typical type of profile used and is created
    upon first login of a user to a desktop'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Roaming profile:** This type of profile makes a local copy of the network-based
    master copy during login; at logoff, changes are copied back to the network-based
    master copy'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mandatory profile:** This type of profile is used by administrators to specify
    settings for users; changes made by users are lost during logoff'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In many VDI solutions, especially those that are nonpersistent, a roaming profile
    or other profile management solution will be used. This is because roaming profiles
    allow any user to access any available vDesktop and still maintain their own unique
    personalization settings.
  prefs: []
  type: TYPE_NORMAL
- en: 'How a profile is built: first login'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To understand how a Windows profile is built, it is first important to understand
    the folder directory structure of `C:\Users.`
  prefs: []
  type: TYPE_NORMAL
- en: 'Under `C:\Users` there are several folders as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`All Users:` Settings in this folder apply to anyone who logs in to the desktop'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Default User:` Settings in this folder are used as a template for any new
    users who log in to the workstation, meaning that they do not already have a profile
    folder on the desktop'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Username:` Settings in this folder are unique to the specific user'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When a user logs in to a desktop, whether physical or virtual, for the first
    time, that user has his own unique profile folder created under `C:\Documents
    and Settings` (for example, Windows XP) or `C:\Users` (for example, Windows 7).
    The contents of this folder are based off of the contents in `Default User`. In
    addition, any contents in `All Users` are loaded as part of the profile.
  prefs: []
  type: TYPE_NORMAL
- en: Subsequent logins
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Once a user has his/her own unique profile folder on a desktop, they no longer
    use the `Default User` folder. This means that any settings or shortcuts that
    have been placed in `Default User` after the user has already created a profile
    will not be reflected in the user’s profile. However, shortcuts placed in the
    `All Users` folder will be reflected.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If a user has administrative access to a machine and deletes a shortcut or file
    that originates from `All Users`, that shortcut or file will be deleted for all
    users on the machine.
  prefs: []
  type: TYPE_NORMAL
- en: A shortcut or file placed in `All Users` will immediately be displayed to any
    user logged in to the desktop.
  prefs: []
  type: TYPE_NORMAL
- en: Roaming profiles
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Roaming profiles are profiles that are stored in a central repository and accessed
    on demand at the time of logging in to a desktop operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is an illustration that shows a user’s ability to log
    in to either of the desktops and still receive his profile settings:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Roaming profiles](img/1124EN_10_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Using roaming profiles is a technique to store the user’s profile folder on
    a network share, thereby decoupling the user profile from the actual desktop.
  prefs: []
  type: TYPE_NORMAL
- en: In an example scenario without roaming profiles, a user, Dwayne, walks up to
    a physical desktop, Desktop1\. Dwayne works on a document, changes his wallpaper,
    maps a printer, and then logs out. If Dwayne then walks over to a different physical
    desktop, Desktop2 and logs in, he would not have any of the work, settings, or
    mappings he just made on Desktop1\. This is because Dwayne’s profile physically
    resides on the local drive of Desktop1.
  prefs: []
  type: TYPE_NORMAL
- en: In the same scenario with roaming profiles enabled, Dwayne’s documents, wallpapers,
    printer mappings, and other settings would be copied to a central network location
    upon logging off from Desktop1\. Therefore, when Dwayne logs in to Desktop2, all
    of the settings, documents, and mappings would be downloaded from the central
    network location.
  prefs: []
  type: TYPE_NORMAL
- en: One of the drawbacks of roaming profiles is that it is possible to enter into
    a scenario where a user’s profile is extremely large and the log on and log off
    tasks are crippled as a profile is synced with the network share. For example,
    if a user has a 5 GB roaming profile and logs in to a machine for the first time,
    the entire 5 GB worth of data will be downloaded from the network location before
    the user is presented with a working desktop. Therefore, it’s important to minimize
    the data that resides in the roaming profile to ensure a positive end user experience.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ensure that “allow offline files” and/or “allow offline caching” is disabled.
    If using a non-persistent VDI solution and offline caching is allowed, it’s possible
    that a user could log in to a vDesktop and not download the current version of
    his own profile (because a cached copy exists).
  prefs: []
  type: TYPE_NORMAL
- en: 'Roaming profiles + folder redirection: increased performance'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As the majority of large files in a user’s profile are likely to be in locations
    such as `\My Documents`, redirecting such a folder to a network location can ensure
    a user’s profile is not overly bloated.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is an illustration that shows the segmentation of a user’s
    persona with folder redirection and roaming profiles:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Roaming profiles + folder redirection: increased performance](img/1124EN_10_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: By combining folder redirection and roaming profiles, large files, for example,
    documents stored typically in `\My Documents` can be redirected to a network location
    while settings and configuration files can be synced via roaming profiles.
  prefs: []
  type: TYPE_NORMAL
- en: 'Other third-party solutions: Liquidware Labs ProfileUnity'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: While there are several profile management solutions on the market, Liquidware
    Labs ProfileUnity is a cost-competitive solution that maintains settings and configurations
    in native Windows format versus storing them in a proprietary database.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, ProfileUnity also provides additional benefits such as the ability
    to:'
  prefs: []
  type: TYPE_NORMAL
- en: Manage user profiles and folder redirection from one console
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Easily configure MAPI profiles for use with Microsoft Exchange Server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filter the execution of a script based on rules, machines class, OS, connection
    type, and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Speed up log on times through the use of compression and profile corruption
    reduction technologies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, for system administrators not overly comfortable with advanced
    group policy management, ProfileUnity has a fairly intuitive user interface for
    management.
  prefs: []
  type: TYPE_NORMAL
- en: Cutting over from physical to virtual
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Once the profile has been decoupled from the desktop, a user can log in to
    a physical desktop on Tuesday and log in to a vDesktop on Wednesday, and maintain
    all settings. A few things to consider are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: If upgrading operating systems as part of the migration, ensure all of the settings
    from the older OS apply to the newer OS.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If planning to provide the ability to go back and forth between an older and
    newer OS, special considerations may need to be made to ensure that settings apply.
    For example, wallpaper file types are different between Windows XP and Windows
    7.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, considering what type of desktop pool is implemented (persistent or non-persistent)
    as well as what type of profile management solution is chosen (native Microsoft,
    Liquidware Labs ProfileUnity, and so on), the first login may take a significant
    amount of time.
  prefs: []
  type: TYPE_NORMAL
- en: The use of VMware View User Data Disks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: VMware View provides the ability to store a user’s profile in a User Data Disk.
    The User Data Disk is tethered to a specific vDesktop in the VDI.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is an illustration that shows the user of a User Data
    Disk for profile management:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The use of VMware View User Data Disks](img/1124EN_10_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: VMware View provides the ability to redirect a user’s profile to a persistent
    **User Data Disk (UDD)**. This disk is separate from the other disks that make
    up a user’s vDesktop; however, a user’s UDD can only be attached to one vDesktop
    at a time. Furthermore, UDDs can only be used with persistent desktop pools.
  prefs: []
  type: TYPE_NORMAL
- en: User profiles can be migrated to a UDD through the use of standard Microsoft
    tools or third-party solutions. Once a user profile has been completely and successfully
    migrated to the UDD, it no longer resides on the network share and its contents
    are only accessible after attaching the UDD (a `.vmdk` file) to a virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: Operational considerations with user data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In addition to technical considerations that need to be made in a VMware View
    solution, there are also operational considerations to be made. One such consideration
    is the management of user data as it relates to human resource activities. Such
    activities include the hiring and termination of employees. For example, when
    an employee is terminated, the user data must be typically archived and stored
    for a defined period of time.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is an illustration that shows the management of User
    Data Disks in a VMware View environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Operational considerations with user data](img/1124EN_10_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: If User Data Disks are part of the solution, the User Data Disk must be detached
    from the vDesktop and likely moved to a separate data store dedicated to historical
    data, when an employee is terminated. At some point, if the historical data is
    to be analyzed, the User Data Disk must first be attached to an existing virtual
    machine. This can become cumbersome for organizations with seasonal turnover,
    for example, groups managing election campaigns.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is an illustration that shows the management of user
    profiles residing in a central file share:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Operational considerations with user data](img/1124EN_10_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: By using a central file share, all of the user data across an organization resides
    in a single place. Access to the file share is often controlled by a user’s Active
    Directory account, therefore disabling a user’s account (due to termination, for
    example) also disables his/her access to the profile directory; however, the profile
    directory still resides on the file share until an administrator takes action
    (if necessary).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For brand new VDI environments (for example, a classroom facility) that don’t
    need to import user data, migrating user persona data is of no concern. However,
    for many organizations, the migration of user data from a physical desktop to
    a virtual desktop will be an important part of the implementation process. By
    decoupling the user’s data from the desktop operating system, the user’s settings
    can be maintained while the actual desktop is transitioned from physical to virtual.
    In addition, it is important to have an understanding of how the user profile
    solution may impact business processes, especially those related to human resources.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will focus on backing up the VDI as well as recovering during
    an outage. While redundant design is covered in this book, there are times when
    an unforeseen or unscheduled outage could cause a potential issue in the VDI.
    Therefore, it is important to understand how to protect and recover from such
    outages.
  prefs: []
  type: TYPE_NORMAL
