["```\n    policy_module(myskype, 0.1)\n\n    attribute_role skype_roles;\n\n    type skype_t;\n    type skype_exec_t;\n    userdom_user_application_domain(skype_t, skype_exec_t)\n    role skype_roles types skype_t;\n\n    type skype_home_t;\n    userdom_user_home_content(skype_home_t)\n\n    type skype_tmpfs_t;\n    userdom_user_tmpfs_file(skype_tmpfs_t);\n    ```", "```\n    # Allow manage rights on ~/.Skype\n    manage_dirs_pattern(skype_t, skype_home_t, skype_home_t)\n    manage_files_pattern(skype_t, skype_home_t, skype_home_t)\n    userdom_user_home_dir_filetrans(skype_t, skype_home_t, dir, \".Skype\")\n    ```", "```\n    # Shared memory (also needed for X11)\n    manage_files_pattern(skype_t, skype_tmpfs_t, skype_tmpfs_t)\n    manage_lnk_files_pattern(skype_t, skype_tmpfs_t, skype_tmpfs_t)\n    manage_fifo_files_pattern(skype_t, skype_tmpfs_t, skype_tmpfs_t)\n    manage_sock_files_pattern(skype_t, skype_tmpfs_t, skype_tmpfs_t)\n    fs_tmpfs_filetrans(skype_t, skype_tmpfs_t, { file lnk_file fifo_file sock_file })\n\n    # Application is an X11 application\n    xserver_user_x_domain_template(skype, skype_t, skype_tmpfs_t)\n    ```", "```\n    # Network access\n    corenet_tcp_bind_generic_node(skype_t)\n    corenet_udp_bind_generic_node(skype_t)\n    # Central skype services\n    corenet_tcp_connect_http_port(skype_t)\n    corenet_tcp_connect_all_unreserved_ports(skype_t)\n    # Listen for incoming communication\n    corenet_tcp_bind_all_unreserved_ports(skype_t)\n    corenet_udp_bind_all_unreserved_ports(skype_t)\n    ```", "```\n    # Voice and video calls\n    dev_read_sound(skype_t)\n    dev_read_video_dev(skype_t)\n    dev_write_sound(skype_t)\n    dev_write_video_dev(skype_t)\n    # Terminal (tty) output\n    userdom_use_user_terminals(skype_t)\n    ```", "```\ninterface(`userdom_user_application_domain',`\n        application_domain($1, $2)\n        ubac_constrained($1)\n')\n```", "```\ninterface(`application_domain',`\n        application_type($1)\n        application_executable_file($2)\n        domain_entry_file($1, $2)\n')\n```", "```\nuserdom_manage_user_home_content_files(skype_t)\nuserdom_manage_user_home_content_dirs(skype_t)\n```", "```\nxdg_manage_downloads_home(skype_t)\n```", "```\n~$ netstat -naput | grep skype\ntcp  0  0 0.0.0.0:34431  0.0.0.0:*  LISTEN  8160/skype\ntcp  0  0 10.221.44.241:40650  111.221.77.150:40008  ESTABLISHED  8160/skype\n…\nudp  0  0 0.0.0.0:34302  0.0.0.0:*    8160/skype\n\n```", "```\n    HOME_DIR/\\.Skype(/.*)?  gen_context(system_u:object_r:skype_home_t,s0)\n    ```", "```\n    /opt/skype/skype  --  gen_context(system_u:object_r:skype_exec_t,s0)\n    /opt/bin/skype  --  gen_context(system_u:object_r:skype_exec_t,s0)\n    /usr/bin/skype  --  gen_context(system_u:object_r:skype_exec_t,s0)\n    ```", "```\n    interface(`skype_role',`\n      gen_require(`\n        type skype_t, skype_exec_t, skype_tmp_t, skype_home_t;\n      ')\n      # Allow the skype_t domain for the user role\n      roleattribute $1 skype_roles;\n      # Allow domain transition for user domain to skype_t\n      domtrans_pattern($2, skype_exec_t, skype_t)\n      # Interact with skype process\n      ps_process_pattern($2, skype_t)\n      allow $2 skype_t:process { ptrace signal_perms };\n      # Manage skype file resources\n      manage_dirs_pattern($2, skype_home_t, skype_home_t)\n      manage_files_pattern($2, skype_home_t, skype_home_t)\n      manage_lnk_files_pattern($2, skype_home_t, skype_home_t)\n      # Allow user to relabel the resources if needed\n      relabel_dirs_pattern($2, skype_home_t, skype_home_t)\n      relabel_files_pattern($2, skype_home_t, skype_home_t)\n      relabel_lnk_files_pattern($2, skype_home_t, skype_home_t)\n    ')\n    ```", "```\n    policy_module(myunprivuser, 1.0)\n    gen_require(`\n      type user_t;\n      role user_r;\n    ')\n    optional_policy(`\n      skype_role(user_r, user_t)\n    ')\n    ```", "```\n    ~# restorecon /opt/skype/bin/skype /opt/bin/skype /usr/bin/skype\n    ~# restorecon -RF /home/user/.Skype\n\n    ```", "```\napplication_type(skype_t)\nfiles_type(skype_exec_t)\nallow skype_t skype_exec_t:file { entrypoint mmap_file_perms ioctl lock };\nubac_constrained(skype_t)\n```", "```\n    ~# semodule -R\n\n    ```", "```\n    ~$ skype\n    skype: error while loading shared libraries: cannot restore segment prot after reloc: Permission denied\n\n    ```", "```\n    ~# ausearch -m avc -ts recent\n\n    ```", "```\ntype=AVC msg=audit(1398930752.113:608): avc: denied { execmod } for pid=8943 comm=\"skype\" path=\"/opt/bin/skype\" dev=\"dm-2\" ino=801 scontext=user_u:user_r:skype_t:s0 tcontext=user_u:user_r:skype_exec_t:s0 tclass=file\n```", "```\n# Error 'cannot restore segment prot after reloc'\nallow skype_t skype_exec_t:file execmod;\n```", "```\n    type=AVC msg=audit(1398936489.877:2464): avc: denied { search } for pid=8241 comm=\"skype\" name=\"modules\" dev=\"dm-0\" ino=1322041 scontext=user_u:user_r:skype_t:s0 tcontext=user_u:object_r:user_home_t:s0 tclass=dir\n    ```", "```\n    ~$ sefindif dontaudit.*user_home_t.*search\n    interface(`userdom_dontaudit_search_user_home_content',`\n     dontaudit $1 user_home_t:dir search_dir_perms;\n\n    ```", "```\n~# semodule -DB\n\n```", "```\n~# semodule -B\n\n```", "```\n    interface(`skype_read_home',`\n      gen_require(`\n        type skype_home_t;\n      ')\n      userdom_search_user_home_dirs($1)\n      allow $1 skype_home_t:dir list_dir_perms;\n      allow $1 skype_home_t:file read_file_perms;\n      allow $1 skype_home_t:lnk_file read_lnk_file_perms;\n    ')\n    ```", "```\n    gen_tunable(skype_use_audio, false)\n    gen_tunable(skype_use_video, false)\n    gen_tunable(skype_manage_user_content, false)\n    ```", "```\n    tunable_policy(`skype_use_audio',`\n      dev_read_sound(skype_t)\n      dev_write_sound(skype_t)\n    ')\n    tunable_policy(`skype_use_video',`\n      dev_read_video_dev(skype_t)\n      dev_write_video_dev(skype_t)\n    ')\n    tunable_policy(`skype_manage_user_content',`\n      userdom_manage_user_home_content_dirs(skype_t)\n      userdom_manage_user_home_content_files(skype_t)\n    ')\n    ```", "```\ntunable_policy(`skype_manage_user_content',`\n  # boolean enabled\n  userdom_manage_user_home_content_dirs(skype_t)\n  userdom_manage_user_home_content_files(skype_t)\n  ',`\n  # boolean disabled\n  userdom_dontaudit_manage_user_home_content_dirs(skype_t)\n  userdom_dontaudit_read_user_home_content_files(skype_t)\n  …\n')\n```", "```\ntunable_policy(`use_nfs_home_dirs && skype_manage_user_content',` … ')\n```", "```\ntunable_policy(`!use_nfs_home_dirs',` … ')\n```", "```\n    ifdef(`distro_gentoo',`\n      xdg_manage_downloads_home(skype_t)\n    ')\n    ```", "```\n    ~$ sesearch -s skype_t -t xdg_downloads_home_t -A\n\n    ```", "```\nDISTRO ?= gentoo\n```", "```\nifneq ($(DISTRO),)\n        M4PARAM += -D distro_$(DISTRO)\nendif\n```", "```\nifdef(`debug',` … ')\n```", "```\n~$ export M4PARAM=\"-D debug\"\n~$ make mypolicy.pp\n\n```"]