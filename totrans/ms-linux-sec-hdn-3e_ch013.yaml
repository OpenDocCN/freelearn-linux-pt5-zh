- en: 12 Scanning, Auditing, and Hardening
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12 扫描、审计和加固
- en: Join our book community on Discord
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加入我们的 Discord 书籍社区
- en: '[https://packt.link/SecNet](https://packt.link/SecNet)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/SecNet](https://packt.link/SecNet)'
- en: '![](img/file74.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](img/file74.png)'
- en: A common misconception is that Linux users never need to worry about malware.
    Yes, it's true that Linux is much more resistant to viruses than Windows is. But
    viruses are only one type of malware, and other types of malware can be planted
    on Linux machines. And, if you're running a server that will share files with
    Windows users, you'll want to make sure that you don't share any virus-infected
    files with them.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的误解是，Linux 用户从不需要担心恶意软件。没错，Linux 相比 Windows 对病毒的抵抗力更强。但病毒只是恶意软件的一种类型，其他类型的恶意软件也可以被植入
    Linux 系统。如果你运行一个与 Windows 用户共享文件的服务器，你就需要确保不会与他们共享任何被病毒感染的文件。
- en: While Linux system log files are nice, they don't always give a good picture
    of who does what or who accesses what. It could be that either intruders or insiders
    are trying to access data that they're not authorized to access. What we really
    want is a good auditing system to alert us when people do things that they're
    not supposed to do.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Linux 系统日志文件很好，但它们并不总能清晰显示谁做了什么或谁访问了什么。可能是入侵者或内部人员正在试图访问他们没有授权访问的数据。我们真正需要的是一个好的审计系统，能够在有人做出不该做的事情时发出警报。
- en: And then there's the issue of regulatory compliance. Your organization may have
    to deal with one or more regulatory bodies that dictate how you harden your servers
    against attacks. If you're not in compliance, you could be fined or put out of
    business.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 还有合规性问题。你的组织可能需要应对一个或多个监管机构，要求你加固服务器以防止攻击。如果不符合规定，可能会面临罚款或停业。
- en: Fortunately, we have ways to deal with all of these issues, and they aren't
    all that complicated.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们有办法处理所有这些问题，而且它们并不复杂。
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将讨论以下主题：
- en: Installing and updating ClamAV and maldet
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和更新 ClamAV 和 maldet
- en: Scanning with ClamAV and maldet
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 ClamAV 和 maldet 进行扫描
- en: SELinux considerations
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux 考虑事项
- en: Scanning for rootkits with Rootkit Hunter
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Rootkit Hunter 扫描 rootkit
- en: Performing quick malware analysis with strings and VirusTotal
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 strings 和 VirusTotal 进行快速恶意软件分析
- en: Controlling the `auditd` daemon
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制 `auditd` 守护进程
- en: Creating audit rules
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建审计规则
- en: Using the `ausearch` and `aureport` utilities to search the audit logs for problems
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `ausearch` 和 `aureport` 工具在审计日志中搜索问题
- en: Using `inotifywait` for quick and easy auditing
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `inotifywait` 进行快速简便的审计
- en: '`oscap`, the command-line utility for managing and applying OpenSCAP policies'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oscap`，用于管理和应用 OpenSCAP 策略的命令行工具'
- en: OpenSCAP Workbench, the GUI utility for managing and applying OpenSCAP policies
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAP Workbench，管理和应用 OpenSCAP 策略的 GUI 工具
- en: OpenSCAP policy files and the compliance standards that each of them is designed
    to meet
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAP 策略文件以及每个文件所设计满足的合规性标准
- en: Applying a policy during operating system installation
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在操作系统安装过程中应用策略
- en: If you're ready, let's begin by looking at a Linux-based virus scanning solution.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你准备好了，我们就从一个基于 Linux 的病毒扫描解决方案开始。
- en: Installing and updating ClamAV and maldet
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和更新 ClamAV 和 maldet
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can get all the nitty-gritty details about LMD at [https://www.rfxn.com/projects/linux-malware-detect/](https://www.rfxn.com/projects/linux-malware-detect/).
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在 [https://www.rfxn.com/projects/linux-malware-detect/](https://www.rfxn.com/projects/linux-malware-detect/)
    获取关于 LMD 的详细信息。
- en: The reason that we're installing ClamAV and LMD together is that, as the LMD
    folk freely admit, the ClamAV scan engine gives much better performance when scanning
    large file sets. Also, by having them both together, ClamAV can use the LMD malware
    signatures as well as its own malware signatures.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一起安装 ClamAV 和 LMD 的原因是，正如 LMD 开发者所承认的，ClamAV 扫描引擎在扫描大文件集时表现更好。此外，两个工具一起使用时，ClamAV
    可以使用 LMD 的恶意软件签名以及其自身的恶意软件签名。
- en: Just to be clear...
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 只是为了澄清一下...
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Viruses are a real problem for computers that run the Windows operating system.
    But, as far as anyone has been able to tell, there's no such thing as a virus
    that can harm a Linux-based operating system. So, the only real reason to run
    an antivirus solution on a Linux machine is to prevent infecting any Windows machines
    on your network. This means that you don't need to worry about installing an antivirus
    product on your Linux-based DNS servers, DHCP servers, and so forth. But, if you
    have a Linux-based email server, Samba server, download server, or any other Linux-based
    machine that shares files with Windows computers, then installing an antivirus
    solution is a good idea.
  id: totrans-29
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 病毒对于运行Windows操作系统的计算机来说是一个真正的问题。但根据目前的了解，似乎没有病毒能够危害基于Linux的操作系统。因此，唯一需要在Linux机器上运行杀毒软件的真实原因，是为了防止感染你网络中的任何Windows机器。这意味着你不需要担心在基于Linux的DNS服务器、DHCP服务器等设备上安装杀毒产品。但是，如果你有基于Linux的邮件服务器、Samba服务器、下载服务器或任何与Windows计算机共享文件的Linux机器，那么安装一个杀毒解决方案是个不错的选择。
- en: All right, so much for the theory. Let's get our hands dirty, shall we?
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，理论部分就到这里。接下来我们开始动手操作，怎么样？
- en: Hands-on lab – installing ClamAV and maldet
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动手实验 – 安装ClamAV和maldet
- en: 'We''ll begin by installing ClamAV. (It''s in the normal repository for Ubuntu,
    but not for CentOS or AlmaLinux. For CentOS and AlmaLinux, you''ll need to install
    the EPEL repository, as I showed you in *Chapter 1*, *Running Linux in a Virtual
    Environment*.) We''ll also install `wget`, which we''ll use to download LMD. For
    this lab, you can use Ubuntu, CentOS 7, or either version of AlmaLinux. Let''s
    get started:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先安装ClamAV。（它在Ubuntu的常规仓库中，但在CentOS或AlmaLinux中没有。对于CentOS和AlmaLinux，你需要安装EPEL仓库，正如我在*第1章*《在虚拟环境中运行Linux》中所展示的。）我们还将安装`wget`，用于下载LMD。在这个实验中，你可以使用Ubuntu、CentOS
    7或任何版本的AlmaLinux。开始吧：
- en: 'The following command will install ClamAV, `inotify-tools` and `wget` on Ubuntu:'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下命令将在Ubuntu上安装ClamAV，`inotify-tools`和`wget`：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following command will install ClamAV, `inotify-tools`, and `wget` on CentOS
    7:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将在CentOS 7上安装ClamAV，`inotify-tools`和`wget`：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For AlmaLinux 8 or AlmaLinux 9, do this:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于AlmaLinux 8或AlmaLinux 9，请执行以下操作：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that if you chose the **Minimal** installation option when creating a CentOS
    or an AlmaLinux virtual machine (VM), you may also have to install the `perl`
    and the `tar` packages.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果在创建CentOS或AlmaLinux虚拟机（VM）时选择了**最小化**安装选项，你可能还需要安装`perl`和`tar`包。
- en: For Ubuntu, the `clamav` package contains everything you need. For CentOS or
    AlmaLinux, you'll need to also install `clamav-update` in order to obtain virus
    updates.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu，`clamav`包包含了你需要的一切。对于CentOS或AlmaLinux，你还需要安装`clamav-update`以便获取病毒更新。
- en: The rest of the steps will be the same for either VM.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 剩下的步骤对于任意虚拟机（VM）来说都是相同的。
- en: Next, you'll download and install LMD.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你需要下载并安装LMD。
- en: 'Here, you''ll want to do something that I rarely tell people to do. That is,
    you''ll want to log in to the root user shell. The reason is that, although the
    LMD installer works fine with `sudo`, you''ll end up with the program files being
    owned by the user who performed the installation, instead of by the root user.
    Performing the installation from the root user''s shell saves us the trouble of
    tracking down those files and changing the ownership. So, download the file as
    follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，你需要做一件我很少告诉别人做的事。那就是，你需要登录到root用户的shell。原因是，尽管LMD安装程序在使用`sudo`时也能正常工作，但程序文件会被安装者的用户所拥有，而不是root用户。如果从root用户的shell进行安装，可以避免安装后需要追踪并更改文件所有权的麻烦。所以，按如下方式下载文件：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, you'll have the file in the root user's home directory.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你的文件应该在root用户的主目录下。
- en: 'Extract the archive and enter the resultant directory:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压档案并进入解压后的目录：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Run the installer. Once the installer finishes, copy the `README` file to your
    own home directory so that you can have it for ready reference. (This `README`
    file is the documentation for LMD.) Then, exit from the root user''s shell back
    to your own shell:'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行安装程序。安装程序完成后，将`README`文件复制到你自己的主目录，以便随时参考。（这个`README`文件是LMD的文档。）然后，从root用户的shell退出，返回到你自己的shell：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As you see, the installer automatically creates the symbolic link that enables
    the `maldet` service, and it also automatically downloads and installs the newest
    malware signatures.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，安装程序会自动创建符号链接，启用`maldet`服务，并自动下载和安装最新的恶意软件签名。
- en: 'For CentOS or AlmaLinux, the `maldet.service` file that the installer copied
    to the `/lib/systemd/system/` directory has the wrong SELinux context, which will
    prevent `maldet` from starting. Correct the SELinux context like this:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 CentOS 或 AlmaLinux，安装程序复制到 `/lib/systemd/system/` 目录的 `maldet.service` 文件具有错误的
    SELinux 上下文，这将阻止 `maldet` 启动。通过以下方式修正 SELinux 上下文：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You've reached the end of the lab – congratulations!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你，已经完成了实验的全部内容！
- en: Hands-on lab – configuring maldet
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实验环节 – 配置 maldet
- en: 'In previous versions, maldet was configured by default to automatically monitor
    and scan users'' home directories. In its current version, the default is for
    it to only monitor the `/dev/shm/`, `/var/tmp/`, and `/tmp/` directories. We''re
    going to reconfigure it so that we can add some directories. Let''s get started:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的版本中，maldet 默认配置为自动监控和扫描用户的家目录。在当前版本中，默认只监控 `/dev/shm/`、`/var/tmp/` 和 `/tmp/`
    目录。我们将重新配置它，以便添加其他目录。开始吧：
- en: 'Open the `/usr/local/maldetect/conf.maldet` file for editing. Find these two
    lines:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `/usr/local/maldetect/conf.maldet` 文件进行编辑。找到这两行：
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Change them to look like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 将它们更改为如下所示：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'At the top of the file, enable email alerts and set your username as the email
    address. The two lines should now look something like this:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件的顶部，启用电子邮件提醒并将你的用户名设置为电子邮件地址。这两行应该类似于以下内容：
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'LMD isn''t already configured to move suspicious files to the `quarantine`
    folder, and we want to make it do that. Further down in the `conf.maldet` file,
    look for the line that says:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: LMD 默认并未配置将可疑文件移动到 `quarantine` 文件夹，我们需要让它执行这一操作。在 `conf.maldet` 文件的进一步位置，查找以下行：
- en: '[PRE11]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Change it to this:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其更改为以下内容：
- en: '[PRE12]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You'll see a few other quarantine actions that you can configure, but, for now,
    this is all we need.
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你还会看到一些可以配置的其他隔离操作，但现在这就是我们需要做的所有配置。
- en: Save the `conf.maldet` file, because that's all the changes that we need to
    make to it.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存 `conf.maldet` 文件，因为这是我们需要进行的所有更改。
- en: 'Open the `/usr/local/maldetect/monitor_paths` file for editing. Add the directories
    that you want to monitor, like this:'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开 `/usr/local/maldetect/monitor_paths` 文件进行编辑。添加你想要监控的目录，像这样：
- en: '[PRE13]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Since viruses affect Windows and not Linux, just monitor the directories with
    files that will be shared with Windows machines.
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由于病毒影响的是 Windows 而不是 Linux，因此只需监控与 Windows 机器共享的文件所在的目录。
- en: 'After you save the file, start the `maldet` daemon:'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存文件后，启动 `maldet` 守护进程：
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You can add more directories to the `monitor_paths` file at any time, but remember
    to restart the `maldet` daemon any time that you do, in order to read in the new
    additions.
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以随时向 `monitor_paths` 文件添加更多目录，但记住每次添加后都需要重新启动 `maldet` 守护进程，以便读取新的添加内容。
- en: You've reached the end of the lab – congratulations!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你，已经完成了实验的全部内容！
- en: Now, let's talk about keeping ClamAV and maldet updated.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来谈谈如何保持 ClamAV 和 maldet 的更新。
- en: Updating ClamAV and maldet
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更新 ClamAV 和 maldet
- en: 'The good news for busy admins is that you don''t have to do anything to keep
    either of these updated. To verify that they are getting updated, we can look
    in the system log file:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 对于忙碌的管理员来说，好消息是你无需做任何事情来保持这两个软件的更新。为了验证它们是否正在更新，我们可以查看系统日志文件：
- en: '[PRE15]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You'll see these same entries in either the Ubuntu logs, the CentOS logs, or
    the AlmaLinux logs. However, there is a difference between how the updates get
    run automatically.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是在 Ubuntu 日志、CentOS 日志，还是 AlmaLinux 日志中，你都会看到这些相同的条目。然而，更新自动执行的方式有所不同。
- en: 'Look in the `/lib/systemd/system/` directory of your Ubuntu or AlmaLinux VMs,
    and you’ll see the `clamav-freshclam.service` file:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的 Ubuntu 或 AlmaLinux 虚拟机的 `/lib/systemd/system/` 目录中，你会看到 `clamav-freshclam.service`
    文件：
- en: '[PRE16]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This service is automatically enabled and started on Ubuntu, but you’ll need
    to enable and start it yourself on AlmaLinux, like so:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务在 Ubuntu 上会自动启用并启动，但在 AlmaLinux 上需要你手动启用并启动，方法如下：
- en: '[PRE17]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Without a `freshclam.conf` configuration file, AlmaLinux just runs the update
    service every two hours. Ubuntu, on the other hand, uses the `/etc/clamav/freshclam.conf`
    file to change the update interval to every hour, as you see at the bottom of
    the file:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有 `freshclam.conf` 配置文件，AlmaLinux 会每两小时运行一次更新服务。而 Ubuntu 则使用 `/etc/clamav/freshclam.conf`
    文件将更新间隔设置为每小时一次，正如你在文件底部所看到的：
- en: '[PRE18]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If you have the crypto policy set to `FUTURE` mode on your AlmaLinux 8/9 machine,
    the ClamAV database update won’t work. That’s because the ClamAV site uses a security
    certificate that’s not compatible with `FUTURE` mode. So, if you want to run ClamAV
    on any type of RHEL 8 or 9 machine, you’ll just have to leave the crypto policy
    set to `DEFAULT` mode.
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你在 AlmaLinux 8/9 机器上将加密策略设置为 `FUTURE` 模式，ClamAV 数据库更新将无法工作。因为 ClamAV 网站使用的安全证书与
    `FUTURE` 模式不兼容。所以，如果你想在任何类型的 RHEL 8 或 9 机器上运行 ClamAV，你需要将加密策略设置为 `DEFAULT` 模式。
- en: 'On your CentOS 7 machine, you''ll see a `clamav-update` `cron` job in the `/etc/cron.d/`
    directory that looks like this:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的 CentOS 7 机器上，你会看到一个 `clamav-update` 的 `cron` 作业文件，位于 `/etc/cron.d/` 目录下，内容如下：
- en: '[PRE19]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The `*/3` in the second column from the left indicates that ClamAV will check
    for updates every three hours. You can change that if you like, but you'll also
    need to change the setting in the `/etc/sysconfig/freshclam` file.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧第二列的 `*/3` 表示 ClamAV 每三小时检查一次更新。如果你愿意，可以更改此值，但你也需要在 `/etc/sysconfig/freshclam`
    文件中更改该设置。
- en: 'Let''s say that you want CentOS 7 to also check for ClamAV updates every hour.
    In the `cron` job file, change `*/3` to `*`. (You don''t need to do `*/1` because
    the asterisk by itself in that position already indicates that the job will run
    every hour.) Then, in the `/etc/sysconfig/freshclam` file, look for this line:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你希望 CentOS 7 每小时检查一次 ClamAV 更新。在 `cron` 作业文件中，将 `*/3` 改为 `*`。 （你不需要设置 `*/1`，因为单独的星号已经表示作业会每小时运行一次。）然后，在
    `/etc/sysconfig/freshclam` 文件中，查找以下这一行：
- en: '[PRE20]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Uncomment that line and add the number of minutes that you want between updates.
    To set it to 1 hour, so that it matches the `cron` job, it will look like this:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 取消该行的注释，并添加你希望每次更新之间的时间间隔。如果要将其设置为 1 小时，以便与 `cron` 作业匹配，应该如下所示：
- en: '[PRE21]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: A disabled `clamav-freshclam.service` file also gets installed on CentOS 7\.
    If you’d rather use the service instead of the `cron` job, just delete the `/etc/cron.d/clamav-update`
    file, and then enable the `clamav-freshclam` service.
  id: totrans-94
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个禁用的 `clamav-freshclam.service` 文件也会在 CentOS 7 上安装。如果你更倾向于使用服务而不是 `cron` 作业，只需删除
    `/etc/cron.d/clamav-update` 文件，然后启用 `clamav-freshclam` 服务。
- en: 'To prove that `maldet` is being updated, you can look in its own log files
    in the `/usr/local/maldetect/logs/` directory. In the `event_log` file, you''ll
    see these messages:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要证明 `maldet` 正在更新，你可以查看它自己日志文件所在的 `/usr/local/maldetect/logs/` 目录。在 `event_log`
    文件中，你会看到以下这些信息：
- en: '[PRE22]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'In the `/usr/local/maldetect/conf.maldet` file, you''ll see these two lines,
    but with some comments in between them:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `/usr/local/maldetect/conf.maldet` 文件中，你会看到这两行，但它们之间有一些注释：
- en: '[PRE23]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Not only will LMD automatically update its malware signatures, but it will also
    ensure that you have the latest version of LMD itself.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: LMD 不仅会自动更新其恶意软件签名，还会确保你拥有最新版本的 LMD 本身。
- en: Scanning with ClamAV and maldet
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ClamAV 和 maldet 扫描
- en: LMD's maldet daemon constantly monitors the directories that you specify in
    the `/usr/local/maldetect/monitor_paths` file. When it finds a suspicious file,
    it will perform the action that you specified in the `conf.maldet` file.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: LMD 的 maldet 守护进程会持续监控你在 `/usr/local/maldetect/monitor_paths` 文件中指定的目录。当它发现可疑文件时，会执行你在
    `conf.maldet` 文件中指定的操作。
- en: '[PRE24]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: There are four different simulated virus files that you can download from [https://www.eicar.org/download-anti-malware-testfile/](https://www.eicar.org/download-anti-malware-testfile/).
    Note that if you’re running a Windows host machine, these files could get flagged
    by the Windows antivirus. So, your best bet is to download the files directly
    to your Linux virtual machines.
  id: totrans-103
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以从 [https://www.eicar.org/download-anti-malware-testfile/](https://www.eicar.org/download-anti-malware-testfile/)
    下载四种不同的模拟病毒文件。请注意，如果你在 Windows 主机上运行，这些文件可能会被 Windows 防病毒软件标记。因此，最好的方法是直接将文件下载到你的
    Linux 虚拟机中。
- en: 'Just download one or all of the EICAR test files and transfer them to your
    home directory on the virtual machines. Your best bet is to download the files
    directly to your virtual machines, with these four commands:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 只需下载一个或所有的 EICAR 测试文件，并将其传输到虚拟机的主目录。最好的做法是直接将文件下载到虚拟机中，使用以下四个命令：
- en: '[PRE25]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Wait just a few moments, and you should see the files disappear. Then, look
    in the `/usr/local/maldetect/logs/event_log` file to verify that the LMD moved
    the files to quarantine:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 等待片刻，你应该看到文件消失。然后，在 `/usr/local/maldetect/logs/event_log` 文件中查看，验证 LMD 是否已将文件移至隔离区：
- en: '[PRE26]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Ignore the `warning clamd service not running` messages, because we don’t need
    to use that service.
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 忽略 `warning clamd service not running` 的消息，因为我们不需要使用该服务。
- en: There's still a bit more to LMD than what I can show you here. However, you
    can read all about it in the `README` file that comes with it.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: LMD的功能远不止我在这里能展示的内容。不过，你可以在随附的`README`文件中了解所有相关信息。
- en: SELinux considerations
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SELinux注意事项
- en: It used to be that doing an antivirus scan on a Red Hat-type system would trigger
    an SELinux alert. But, in the course of proofing this chapter, the scans all worked
    as they should, and SELinux never bothered me once.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，在Red Hat类系统上进行杀毒扫描会触发SELinux警报。但是，在本章校对的过程中，所有扫描都正常工作，SELinux从未打扰过我一次。
- en: 'If you ever do generate any SELinux alerts with your virus scans, all you need
    to do to fix it is to change one Boolean:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在病毒扫描时生成了SELinux警报，只需更改一个布尔值就能解决：
- en: '[PRE27]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'What interests us here is the `antivirus_can_scan_system` Boolean, which is
    off by default. To turn it on to enable virus scans, just do this:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里关注的是默认关闭的`antivirus_can_scan_system`布尔值。要启用病毒扫描，只需执行以下操作：
- en: '[PRE28]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: That should fix any SELinux-related scan problems that you may have. But, as
    things stand now, you probably won't need to worry about it.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该解决你可能遇到的任何与SELinux相关的扫描问题。不过，就目前情况来看，你可能不需要太担心这个问题。
- en: Scanning for rootkits with Rootkit Hunter
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Rootkit Hunter扫描根套件
- en: Rootkits are exceedingly nasty pieces of malware that can definitely ruin your
    day. They can listen for commands from their masters, steal sensitive data and
    send it to their masters, or provide an easy-access back door for their masters.
    They're designed to be stealthy, with the ability to hide themselves from plain
    view. Sometimes, they'll replace utilities such as `ls` or `ps` with their own
    trojaned versions that will show all files or processes on the system except for
    the ones that are associated with the rootkit. Rootkits can infect any operating
    system, even our beloved Linux.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 根套件是极其恶劣的恶意软件，确实能毁掉你的一天。它们可以监听主人的命令，窃取敏感数据并发送给主人，或者为主人提供一个便捷的后门。它们的设计目标是隐秘，能够躲避普通视野的检查。有时，它们会用自己篡改过的版本替换像`ls`或`ps`这样的工具，这样就能显示系统上的所有文件或进程，除了与根套件相关的那些。根套件可以感染任何操作系统，甚至是我们喜爱的Linux。
- en: In order to plant a rootkit, an attacker has to have already gained administrative
    privileges on a system. This is one of the many reasons why I always cringe when
    I see people doing all of their work from the root user's shell and why I'm a
    firm advocate of using `sudo` whenever possible. I mean, really, why should we
    make it easy for the bad guys?
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 为了植入根套件，攻击者必须已经在系统上获得了管理员权限。这是我每次看到有人从root用户的shell进行所有工作时都感到不安的原因之一，也是我始终坚信尽可能使用`sudo`的原因。我的意思是，真的，为什么我们要让坏人这么容易得手？
- en: Several years ago, back in the dark days of Windows XP, Sony Music got into
    a bit of trouble when someone discovered that they had planted a rootkit on their
    music CDs. They didn't mean to do anything malicious, but only wanted to stop
    people from using their computers to make illegal copies. Of course, most people
    ran Windows XP with an administrator account, which made it really easy for the
    rootkit to infect their computers. Windows users still mostly run with administrator
    accounts, but they at least now have User Access Control to help mitigate these
    types of problems.
  id: totrans-120
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 几年前，在Windows XP的黑暗时期，索尼音乐公司遇到了一些麻烦，当时有人发现他们在音乐CD上植入了根套件。他们并不打算做任何恶意的事情，只是希望阻止人们使用计算机进行非法复制。当然，大多数人都使用Windows
    XP管理员账户，这使得根套件很容易感染他们的计算机。如今，Windows用户仍然大多数使用管理员账户，但至少现在有了用户访问控制来帮助缓解这些问题。
- en: There are a couple of different programs that scan for rootkits, and both are
    used pretty much the same way. One is called **Rootkit Hunter**, and the other
    is called **chkrootkit**. Now, understand that I’m showing you these programs
    because as a Linux administrator, you’ll be expected to know about them. In reality,
    they’re not very useful, because there are a whole lot of rootkits that neither
    of them will detect. If you really want to prove that, just go to Github and do
    a keyword search for *rootkit*. Find a rootkit that will run on Linux, download
    the source code to a virtual machine, and then follow the included directions
    for how to compile and install it. Once it’s installed, do a scan with either
    one of the rootkit scan programs. Most likely, the rootkit won’t get detected.
    Also, don’t expect AppArmor or SELinux to prevent someone from installing a rootkit,
    because they won’t.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种不同的程序可以扫描 rootkit，它们的使用方法基本相同。一个叫做 **Rootkit Hunter**，另一个叫做 **chkrootkit**。现在，请理解我向您展示这些程序，因为作为
    Linux 管理员，您需要了解它们。实际上，它们并不是特别有用，因为有很多 rootkit 它们无法检测到。如果您真的想验证这一点，可以去 Github 上做一个
    *rootkit* 的关键字搜索。找到一个可以在 Linux 上运行的 rootkit，将源代码下载到虚拟机上，然后按照包含的说明进行编译和安装。一旦安装完成，使用其中任何一个
    rootkit 扫描程序进行扫描。很可能，rootkit 不会被检测到。另外，也不要指望 AppArmor 或 SELinux 能防止别人安装 rootkit，因为它们无法做到这一点。
- en: 'Not every rootkit on Github will compile correctly for you, so finding ones
    that work will involve a bit of trial-and-error. One that I did get to compile
    and install correctly is the Reptile rootkit, which you can download from here:
    [https://github.com/f0rb1dd3n/Reptile](https://github.com/f0rb1dd3n/Reptile)'
  id: totrans-122
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 不是每个 Github 上的 rootkit 都能正确编译，所以找到有效的可能需要一些反复试验。我成功编译并正确安装的一个是 Reptile rootkit，您可以从这里下载：[https://github.com/f0rb1dd3n/Reptile](https://github.com/f0rb1dd3n/Reptile)
- en: Okay, let's move on to the lab.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们继续进行实验。
- en: Hands-on lab – installing and updating Rootkit Hunter
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实验室操作 – 安装和更新 Rootkit Hunter
- en: 'For Ubuntu, Rootkit Hunter is in the normal repository. For CentOS or AlmaLinux,
    you''ll need to install the EPEL repository, as I showed you how to do in *Chapter
    1*, *Running Linux in a Virtual Environment*. For all of these Linux distros,
    the package name is `rkhunter`. Let''s get started:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Ubuntu，Rootkit Hunter 位于正常的仓库中。对于 CentOS 或 AlmaLinux，您需要安装 EPEL 仓库，正如我在*第
    1 章*中展示的那样，*在虚拟环境中运行 Linux*。对于所有这些 Linux 发行版，软件包名称是 `rkhunter`。让我们开始吧：
- en: 'Use one of the following commands to install Rootkit Hunter, as appropriate.
    For Ubuntu, do this:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令之一安装 Rootkit Hunter，具体取决于您的系统。对于 Ubuntu，请执行以下操作：
- en: '[PRE29]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'For CentOS 7, do the following:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 CentOS 7，请执行以下操作：
- en: '[PRE30]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'For AlmaLinux 8 or AlmaLinux 9, do this:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 AlmaLinux 8 或 AlmaLinux 9，请执行以下操作：
- en: '[PRE31]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'After it''s been installed, you can look at its options with this command:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，您可以通过以下命令查看其选项：
- en: '[PRE32]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Next, update the rootkit signatures using the `--update` option:'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，使用 `--update` 选项更新 rootkit 签名：
- en: '[PRE33]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Now, we're ready to scan.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们准备好进行扫描了。
- en: You've reached the end of the lab – congratulations!
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 您已完成实验室操作 – 恭喜！
- en: Scanning for rootkits
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 扫描 rootkit
- en: 'To run your scan, use the `-c` option. (That''s `-c` for *check*.) Be patient,
    because it will take a while:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行扫描，使用 `-c` 选项。（`-c` 代表*检查*。）请耐心等待，因为这会花费一些时间：
- en: '[PRE34]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: When you run the scan in this manner, Rootkit Hunter will periodically stop
    and ask you to hit the Enter key to continue. When the scan completes, you'll
    find a `rkhunter.log` file in the `/var/log/` directory.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 当您以这种方式运行扫描时，Rootkit Hunter 会定期停下来，要求您按 Enter 键继续。扫描完成后，您将在 `/var/log/` 目录中找到
    `rkhunter.log` 文件。
- en: 'To have Rootkit Hunter automatically run as a `cron` job, use the `--cronjob`
    option, which will cause the program to run all the way through without prompting
    you to keep hitting the Enter key. You might also want to use the `--rwo` option,
    which will cause the program to only report warnings, instead of also reporting
    on everything that''s good. From the command line, the command would look like
    this:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 要让 Rootkit Hunter 自动作为 `cron` 任务运行，使用 `--cronjob` 选项，这将使程序完整运行，而无需您不断按 Enter
    键。您还可能希望使用 `--rwo` 选项，这样程序只会报告警告，而不会报告所有正常情况。从命令行看，命令如下：
- en: '[PRE35]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'To create a `cron` job that will automatically run Rootkit Hunter on a nightly
    basis, open the `crontab` editor for the root user:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个 `cron` 任务，让 Rootkit Hunter 每晚自动运行，请打开 root 用户的 `crontab` 编辑器：
- en: '[PRE36]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Let''s say that you want to run Rootkit Hunter every night at 20 minutes past
    10\. Enter this into the `crontab` editor:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您希望 Rootkit Hunter 每晚 10:20 运行。请输入以下内容到 `crontab` 编辑器：
- en: '[PRE37]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Since `cron` only works with 24-hour clock time, you'll have to express 10:00
    P.M. as 22\. (Just add 12 to the normal P.M. clock times that you're used to using.)
    The three asterisks mean that the job will run every day of the month, every month
    of the year, and every day of the week, respectively. You'll need to list the
    entire path for the command. Otherwise, `cron` won't be able to find it.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 `cron` 只能使用24小时制时间，你必须将晚上10:00表达为22\.（只需将你习惯使用的普通P.M.时间加12即可。）三个星号意味着该任务将每月的每一天、每年的每个月以及每周的每一天运行。你需要列出命令的完整路径。否则，`cron`
    将找不到它。
- en: You'll find more options that might interest you in the `rkhunter` man page,
    but this should be enough to get you going with it.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 `rkhunter` 的手册页中找到更多可能感兴趣的选项，但这应该足以让你开始使用它了。
- en: A few moments ago, I told you that these rootkit scanner programs aren’t very
    effective, because there are many rootkits that they won’t detect. That’s why
    the best way to deal with rootkits is to prevent them from getting installed in
    the first place. So, be sure to keep your systems locked down to prevent malicious
    actors from gaining root privileges.
  id: totrans-150
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 刚才我告诉过你，这些 rootkit 扫描程序并不是很有效，因为有许多 rootkit 它们无法检测到。这就是为什么处理 rootkit 的最佳方法是防止它们首次安装。因此，请确保保持系统锁定，以防止恶意行为者获取
    root 权限。
- en: Next, let's look at a couple of quick techniques for analyzing malware.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看几种快速分析恶意软件的技术。
- en: Performing a quick malware analysis with strings and VirusTotal
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用字符串和VirusTotal进行快速恶意软件分析
- en: Malware analysis is one of those advanced topics that I can't cover in detail
    here. However, I can show you a couple of quick ways to analyze a suspicious file.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件分析是我这里无法详细讨论的高级话题之一。不过，我可以向你展示几种快速分析可疑文件的方法。
- en: Analyze a file with strings
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用字符串分析文件
- en: 'Executable files often have strings of text embedded in them. You can use the
    `strings` utility to look at those strings. (Yeah, that makes sense, right?) Depending
    on your distro, `strings` might or might not already be installed. It''s already
    on CentOS and AlmaLinux, but to get it on Ubuntu, you''ll need to install the
    `binutils` package, like so:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 可执行文件通常内嵌有一系列文本字符串。你可以使用`strings`工具查看这些字符串。（是的，这很有道理，对吧？）根据你的发行版，`strings`可能已经安装了，也可能没有。它已经在CentOS和AlmaLinux上，但在Ubuntu上，你需要安装`binutils`包，像这样：
- en: '[PRE38]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'As an example, let''s look at a `Your File Is Ready To Download_2285169994.exe`
    file that was automatically downloaded from a cryptocoin faucet site. To examine
    the file, I’ll do this:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，让我们看看从一个加密币水龙头网站自动下载的`Your File Is Ready To Download_2285169994.exe`文件。为了检查这个文件，我会这样做：
- en: '[PRE39]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: I saved the output to a text file that I can open in `vim` so that I can view
    the line numbers. To see the line numbers, I entered `:set number` at the bottom
    of the `vim` screen. (In `vim` parlance, we're using the last line mode.)
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我将输出保存到一个文本文件中，可以在 `vim` 中打开以查看行号。为了查看行号，我在 `vim` 屏幕底部输入了 `:set number`。（在 `vim`
    的术语中，我们使用最后一行模式。）
- en: 'It''s hard to say exactly what to search for, so you''ll just need to browse
    through until you see something interesting. In this case, look at what I''ve
    found starting at line `386`:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 很难准确地说要搜索什么，所以你只需浏览，直到看到一些有趣的内容为止。在这种情况下，看看我从第`386`行开始找到的内容：
- en: '[PRE40]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: It's saying that the installation process of this program can be made to run
    in `SILENT` mode, without popping up any dialog boxes. It can also be made to
    run in such a way that the user can't cancel the installation. Of course, the
    line at the top says that these are `optional command line parameters`. But, are
    they really optional, or are they hard coded in as the default? It's not clear,
    but in my mind, any installer that can be made to run in `SILENT` mode and that
    can't be canceled looks a bit suspicious, even if we're talking about `optional`
    parameters.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 有人说，可以将该程序的安装过程设置为以`SILENT`模式运行，而不弹出任何对话框。它还可以被设置为以一种用户无法取消安装的方式运行。当然，顶部的那行说这些是`可选的命令行参数`。但是，它们真的是可选的吗，还是默认硬编码了？这一点不太清楚，但在我看来，任何可以设置为以`SILENT`模式运行且不能被取消的安装程序都有些可疑，即使我们谈论的是`可选`参数。
- en: Okay, so you're probably wondering, *What is a cryptocoin faucet?* Well, it's
    a website where you can go to claim a small amount of cryptocoin, such as Bitcoin,
    Ethereum, or Monero, in exchange for viewing the advertising and solving some
    sort of CAPTCHA puzzle. Most faucet operators are honest, but the advertising
    they allow on their sites often isn't and is often laden with malware, scams,
    and Not-Safe-For-Work images.
  id: totrans-163
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 好的，你可能会想，*什么是加密货币水龙头？* 它是一个网站，你可以通过浏览广告并解决某种 CAPTCHA 问题来领取少量的加密货币，比如比特币、以太坊或门罗币。大多数水龙头运营商是诚实的，但他们允许的网站广告往往并不安全，通常充斥着恶意软件、骗局和不适宜工作的图片。
- en: Now, this little trick works fine sometimes, but not always. More sophisticated
    malware might not contain any text strings that can give you any type of a clue.
    So, let's look at another little quick trick for malware analysis.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这个小技巧有时候能很好地工作，但并非总是如此。更复杂的恶意软件可能不包含任何能够提供线索的文本字符串。那么，让我们看一下另一个用于恶意软件分析的快速小技巧。
- en: Scanning the malware with VirusTotal
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 VirusTotal 扫描恶意软件
- en: '**VirusTotal** is a website where you can upload suspicious files for analysis.
    It uses a multitude of various virus scanners, so if one scanner misses something,
    another is likely to find it. Here are the results of scanning the `Your File
    Is Ready To Download_2285169994.exe` file:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**VirusTotal** 是一个可以上传可疑文件进行分析的网站。它使用多种病毒扫描器，因此如果某个扫描器漏掉了什么，另一个扫描器可能会发现它。以下是扫描
    `Your File Is Ready To Download_2285169994.exe` 文件的结果：'
- en: '![Figure 12.1: The VirusTotal scanner](img/file75.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.1：VirusTotal 扫描器](img/file75.png)'
- en: 'Figure 12.1: The VirusTotal scanner'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.1：VirusTotal 扫描器
- en: Here, we see that different virus scanners classify this file in different ways.
    But whether it's classified as `Win.Malware.Installcore`, `Trojan.InstallCore`,
    or whatever else, it's still bad.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到不同的病毒扫描器对这个文件有不同的分类。但无论它被归类为 `Win.Malware.Installcore`、`Trojan.InstallCore`
    还是其他什么名字，它依然是有害的。
- en: As good as VirusTotal is, you'll want to use it with caution. Don't upload any
    files that contain sensitive or confidential information, because it will get
    shared with other people.
  id: totrans-170
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 虽然 VirusTotal 很好用，但你需要小心使用它。不要上传任何包含敏感或机密信息的文件，因为这些信息会被分享给其他人。
- en: So, what is this particular piece of malware all about? Well, it's actually
    a fake Adobe Flash installer. Of course, you don't want to test that by installing
    it on a production Windows machine. But, if you have a Windows VM handy, you can
    test the malware on it. (Either make a snapshot of the VM before you begin or
    be prepared to trash the VM afterward.)
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这个特定的恶意软件到底是怎么回事呢？实际上，它是一个伪装成 Adobe Flash 安装程序的恶意软件。当然，你不想在生产环境的 Windows
    机器上安装它进行测试。但是，如果你有一个 Windows 虚拟机，可以在其上测试这个恶意软件。（在开始之前最好先做一个虚拟机快照，或者准备好之后丢弃虚拟机。）
- en: As I said at the beginning, malware analysis is quite an in-depth topic and
    there are lots of more sophisticated programs to use for it. However, if you have
    suspicions about something and need to just do a quick check, these two techniques
    might be all you need.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我一开始所说，恶意软件分析是一个相当深入的话题，有许多更复杂的工具可以用来分析它。然而，如果你对某个文件有疑虑并且只需要做一个快速检查，这两种技巧可能就足够了。
- en: Next, let's look at how to automatically audit the system for different events.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何自动审计系统中的各种事件。
- en: Understanding the auditd daemon
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 `auditd` 守护进程
- en: So, you have a directory full of super-secret files that only a very few people
    need to see, and you want to know when unauthorized people try to see them. Or,
    maybe you want to see when a certain file gets changed, or you want to see when
    people log into the system and what they're doing once they do log in. For all
    this and more, you have the `auditd` system. It's a really cool system, and I
    think that you'll like it.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个目录，里面充满了只有极少数人需要查看的超级机密文件，你想知道何时有人未经授权尝试查看它们。或者，你也许想知道某个文件何时被修改，或者想知道系统有人登录后做了什么事情。为了满足这些需求，你可以使用
    `auditd` 系统。它是一个非常酷的系统，我相信你会喜欢它的。
- en: One of the beauties of `auditd` is that it works at the Linux kernel level,
    rather than at the user-mode level. This makes it much harder for attackers to
    subvert.
  id: totrans-176
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`auditd` 的一个优点是它工作在 Linux 内核层级，而不是用户模式层级。这使得攻击者更难以破坏它。'
- en: 'On Red Hat-type systems, `auditd` comes installed and enabled by default. So,
    you''ll find it already there on your CentOS and AlmaLinux machines. On Ubuntu,
    it won''t be installed, so you''ll have to do it yourself:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Red Hat 系列系统中，`auditd` 默认已经安装并启用。所以，你会在 CentOS 和 AlmaLinux 机器上找到它。而在 Ubuntu
    系统中，它并不会默认安装，因此你需要手动安装：
- en: '[PRE41]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'On Ubuntu, you can control the `auditd` daemon with the normal `systemctl`
    commands. So, if you need to restart `auditd` to read in a new configuration,
    you can do that with:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 上，你可以通过正常的 `systemctl` 命令来控制 `auditd` 守护进程。所以，如果你需要重新启动 `auditd` 以读取新的配置文件，你可以使用以下命令：
- en: '[PRE42]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'On RHEL-type machines, `auditd` is configured to not work with the normal `systemctl`
    commands. (For all other daemons, they do.) So, on your CentOS and AlmaLinux machines,
    you''ll restart the `auditd` daemon with the old-fashioned `service` command,
    like so:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在 RHEL 类型的机器上，`auditd` 配置为不与普通的 `systemctl` 命令一起工作。（对于所有其他守护进程，它们是可以的。）所以，在你的
    CentOS 和 AlmaLinux 机器上，你需要用传统的 `service` 命令来重启 `auditd` 守护进程，像这样：
- en: '[PRE43]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Other than this minor difference, everything I tell you about `auditd` from
    here on will apply to all of your virtual machines.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这个小差异之外，从这里开始我告诉你关于 `auditd` 的所有内容都会适用于你所有的虚拟机。
- en: Creating audit rules
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建审计规则
- en: 'Okay, let''s start with something simple and work our way up to something awesome.
    First, let''s check to see whether any audit rules are in effect:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们从一些简单的开始，一步步进入更高级的内容。首先，让我们检查一下是否有任何审计规则生效：
- en: '[PRE44]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: As you see, the `auditctl` command is what we use to manage audit rules. The
    `-l` option lists the rules.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`auditctl` 命令是我们用来管理审计规则的。`-l` 选项列出规则。
- en: Auditing a file for changes
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 审计文件变更
- en: 'Now, let''s say that we want to see when someone changes the `/etc/passwd`
    file. (The command that we''ll use will look a bit daunting, but I promise that
    it will make sense once we break it down.) Here goes:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我们想查看当有人更改 `/etc/passwd` 文件时的情况。（我们将使用的命令看起来可能有点吓人，但我保证一旦我们分解它，就能理解。）下面是命令：
- en: '[PRE45]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Here''s the breakdown:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是详细说明：
- en: '`-w`: This stands for where, and it points to the object that we want to monitor.
    In this case, it''s `/etc/passwd`.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-w`：这代表“哪里”，它指向我们想要监控的对象。在这种情况下，它是 `/etc/passwd`。'
- en: '`-p`: This indicates the object''s permissions that we want to monitor. In
    this case, we''re monitoring to see when anyone either tries to (w)rite to the
    file or tries to make (a)ttribute changes. (The other two permissions that we
    can audit are (r)ead and e(x)ecute.)'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p`：这表示我们想要监控的对象权限。在这种情况下，我们监控的是，当任何人尝试（w）写入文件或尝试进行（a）属性更改时的情况。（我们可以审计的其他两个权限是（r）读取和（x）执行。）'
- en: '`-k`: The `k` stands for key, which is just `auditd`''s way of assigning a
    name to a rule. So, `passwd_changes` is the key, or the name, of the rule that
    we''re creating.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-k`：`k` 代表键，它是 `auditd` 为规则分配名称的方式。所以，`passwd_changes` 是我们正在创建的规则的键或名称。'
- en: The `auditctl -l` command shows us that the rule is indeed there.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`auditctl -l` 命令向我们展示了规则确实存在。'
- en: 'Now, the slight problem with this is that the rule is only temporary and will
    disappear when we reboot the machine. To make it permanent, we need to create
    a custom `rules` file in the `/etc/audit/rules.d/` directory. Then, when you restart
    the `auditd` daemon, the custom rules will be inserted into the `/etc/audit/audit.rules`
    file. Because the `/etc/audit/` directory can only be accessed by someone with
    root privileges, I''ll just open the file by listing the entire path to the file,
    rather than trying to enter the directory:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这个小问题是，这个规则是临时的，当我们重新启动机器时它会消失。为了使其永久生效，我们需要在 `/etc/audit/rules.d/` 目录中创建一个自定义的
    `rules` 文件。然后，当你重新启动 `auditd` 守护进程时，自定义规则将会被插入到 `/etc/audit/audit.rules` 文件中。由于
    `/etc/audit/` 目录只能被具有 root 权限的用户访问，我将通过列出文件的完整路径来打开文件，而不是尝试进入该目录：
- en: '[PRE46]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'There''s not a whole lot in this default file:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这个默认文件里没有很多内容：
- en: '[PRE47]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Here''s the breakdown for this file:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这是这个文件的详细说明：
- en: '`-D`: This will cause all rules and watches that are currently in effect to
    be deleted so that we can start from a clean slate. So, if I were to restart the
    `auditd` daemon right now, it would read this `audit.rules` file, which would
    delete the rule that I just created.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-D`：这将导致当前生效的所有规则和监视被删除，以便我们从干净的状态开始。所以，如果我现在重新启动 `auditd` 守护进程，它会读取这个 `audit.rules`
    文件，并删除我刚刚创建的规则。'
- en: '`-b 8192`: This sets the number of outstanding audit buffers that we can have
    going at one time. If all of the buffers get full, the system can''t generate
    any more audit messages.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-b 8192`：这设置了我们可以同时进行的未处理审计缓冲区的数量。如果所有缓冲区都满了，系统将无法生成更多的审计信息。'
- en: '`-f 1`: This sets the failure mode for critical errors, and the value can be
    either `0`, `1`, or `2`. `-f 0` would set the mode to silent, meaning that `auditd`
    wouldn''t do anything about critical errors. `-f 1`, as we see here, tells `auditd`
    to only report the critical errors, while `-f 2` would cause the Linux kernel
    to go into panic mode. According to the `auditctl` man page, anyone in a high-security
    environment would likely want to change this to `-f 2`. For our purposes, though,
    `-f1` works.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-f 1`：这设置了关键错误的失败模式，值可以是`0`、`1`或`2`。`-f 0`将模式设置为静默，意味着`auditd`不会对关键错误做出任何处理。`-f
    1`，正如我们所见，会告诉`auditd`只报告关键错误，而`-f 2`则会导致Linux内核进入恐慌模式。根据`auditctl`的手册页，任何处于高安全环境中的人都可能会将其更改为`-f
    2`。不过就我们而言，`-f 1`是可行的。'
- en: 'You could use your text editor to create a new `rules` file in the `/etc/audit/rules.d/`
    directory. Alternatively, you could just redirect the `auditctl -l` output into
    a new file, like this:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用文本编辑器在`/etc/audit/rules.d/`目录中创建一个新的`rules`文件。或者，你也可以像这样将`auditctl -l`的输出重定向到一个新文件：
- en: '[PRE48]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'On Ubuntu:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu上：
- en: sudo systemctl restart auditd
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: sudo systemctl restart auditd
- en: 'Since the Bash shell doesn''t allow me to directly redirect information into
    a file in the `/etc/` directory, even with `sudo`, I have to use the `sudo sh
    -c` command in order to execute the `auditctl` command. After restarting the `auditd`
    daemon, our `audit.rules` file now looks like this:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Bash shell不允许我直接将信息重定向到`/etc/`目录中的文件，即使使用`sudo`，我必须使用`sudo sh -c`命令来执行`auditctl`命令。在重新启动`auditd`守护进程后，我们的`audit.rules`文件现在看起来是这样的：
- en: '[PRE49]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Now, the rule will take effect every time the machine is rebooted, and every
    time that you manually restart the `auditd` daemon.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，每次机器重启时，或者每次你手动重启`auditd`守护进程时，这个规则都会生效。
- en: Auditing a directory
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 审计一个目录
- en: 'Vicky and Cleopatra, my solid gray kitty and my gray-and-white tabby kitty,
    have some super sensitive secrets that they need to safeguard. So, I created the
    `secretcats` group and added them to it. Then, I created the `secretcats` shared
    directory and set the access controls on it, as I showed you how to do in *Chapter
    9, Access Control Lists and Shared Directory Management*:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: Vicky和Cleopatra，我的纯灰色小猫和灰白色的虎斑猫，有一些超级敏感的秘密需要保护。所以，我创建了一个`secretcats`组并将它们添加进去。然后，我创建了`secretcats`共享目录并设置了访问控制，正如我在*第9章，访问控制列表和共享目录管理*中所示的那样：
- en: '[PRE50]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Vicky and Cleopatra want to be absolutely sure that nobody gets into their
    stuff, so they requested that I set up an auditing rule for their directory:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Vicky和Cleopatra想确保没有人能进入她们的东西，所以她们请求我为她们的目录设置一个审计规则：
- en: '[PRE51]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'As before, the `-w` option denotes what we want to monitor, while the `-k`
    option denotes the name of the audit rule. This time, I left out the `-p` option
    because I want to monitor for every type of access. In other words, I want to
    monitor for any read, write, attribute change, or execute actions. (Because this
    is a directory, the execute action happens when somebody tries to `cd` into the
    directory.) You can see in the `auditctl -l` output that by leaving out the `-p`
    option, we will now monitor for everything. However, let''s say that I only want
    to monitor for when someone tries to `cd` into this directory. I could have made
    the rule look like this:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，`-w`选项表示我们想要监控的内容，而`-k`选项表示审计规则的名称。这一次，我省略了`-p`选项，因为我想监控所有类型的访问。换句话说，我想监控任何读取、写入、属性更改或执行的操作。（因为这是一个目录，执行操作发生在有人尝试`cd`进入该目录时。）你可以在`auditctl
    -l`的输出中看到，省略`-p`选项后，我们将会监控所有操作。但是，假设我只想监控有人尝试`cd`进入该目录的情况，我可以将规则设置成这样：
- en: '[PRE52]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Easy enough so far, right?
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止还算简单吧？
- en: Plan carefully when you create your own custom audit rules. Auditing more files
    and directories than you need to can have a bit of a performance impact and could
    drown you in excessive information. Just audit what you really need to audit,
    as called for by either the scenario or what any applicable governing bodies require.
  id: totrans-219
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在创建自己的自定义审计规则时要仔细规划。审计比实际需要更多的文件和目录可能会对性能产生一定影响，并且可能会淹没你在过多的信息中。只审计你真正需要审计的内容，按照情景要求或任何适用的管理机构的要求进行审计。
- en: Now, let's look at something a bit more complex.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一些稍微复杂一点的内容。
- en: Auditing system calls
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 审计系统调用
- en: 'Creating rules to monitor when someone performs a certain action isn''t hard,
    but the command syntax is a bit trickier than what we''ve seen so far. With this
    rule, we''re going to be alerted every time Charlie either tries to open a file
    or tries to create a file:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 创建规则以监视某人执行特定操作并不难，但命令的语法比我们之前看到的要稍微复杂一些。通过这个规则，每当Charlie尝试打开文件或创建文件时，我们都会收到警报：
- en: '[PRE53]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Here''s the breakdown:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这是详细说明：
- en: '`-a always,exit`: Here, we have the action and the list. The `exit` part means
    that this rule will be added to the system call `exit` list. Whenever the operating
    system exits from a system call, the `exit` list will be used to determine if
    an audit event needs to be generated. The `always` part is the action, which means
    that an audit record for this rule will always be created on exit from the specified
    system call. Note that the action and list parameters have to be separated by
    a comma.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-a always,exit`：在这里，我们有动作和列表。`exit`部分意味着这个规则会被添加到系统调用`exit`列表中。每当操作系统退出一个系统调用时，`exit`列表将用于确定是否需要生成审计事件。`always`部分是动作，意味着每当从指定的系统调用退出时，都会为这个规则创建一个审计记录。请注意，动作和列表参数必须用逗号分隔。'
- en: '`-F arch=b64`: The `-F` option is used to build a rule field, and we can see
    two rule fields in this command. This first rule field specifies the machine''s
    CPU architecture. `b64` means that the computer is running with an x86_64 CPU.
    (Whether it''s Intel or AMD doesn''t matter.) Considering that 32-bit machines
    are dying off and that Sun SPARC and PowerPC machines aren''t all that common,
    `b64` is what you''ll now mostly see.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-F arch=b64`：`-F`选项用于构建规则字段，我们可以在这个命令中看到两个规则字段。第一个规则字段指定了机器的CPU架构。`b64`意味着计算机正在使用x86_64
    CPU运行。（不管是Intel还是AMD都不重要。）考虑到32位机器正在逐渐淘汰，而且Sun SPARC和PowerPC机器也并不常见，`b64`是你现在最常看到的。'
- en: '`-S openat`: The `-S` option specifies the system call that we want to monitor.
    `openat` is the system call that either opens or creates a file.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-S openat`：`-S`选项指定了我们想要监视的系统调用。`openat`是一个系统调用，用来打开或创建文件。'
- en: '`-F auid=1006`: This second audit field specifies the user ID number of the
    user that we want to monitor. (Charlie''s user ID number is `1006`.)'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-F auid=1006`：这个第二个审计字段指定了我们想要监视的用户ID号码。（Charlie的用户ID号码是`1006`。）'
- en: A complete explanation of system calls, or syscalls, is a bit too esoteric for
    our present purpose. For now, suffice it to say that a syscall happens whenever
    a user issues a command that requests that the Linux kernel provide a service.
    If you're so inclined, you can read more about syscalls at [https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/](https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/).
  id: totrans-229
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对系统调用（或称syscalls）的完整解释对于我们当前的目的来说有点过于深奥。暂时说一下，系统调用会在用户发出请求Linux内核提供服务的命令时发生。如果你有兴趣，可以阅读更多关于系统调用的内容，网址是[https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/](https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/)。
- en: 'What I''ve presented here are just a few of the many things that you can do
    with auditing rules. To see more examples, check out the `auditctl` man page:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里展示的只是你可以使用审计规则做的事情中的一小部分。想要查看更多示例，请查阅`auditctl`的手册页：
- en: '[PRE54]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: So, now you're wondering, *Now that I have these rules, how do I know when someone
    tries to violate them?* As always, I'm glad that you asked.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，现在你可能在想，*既然我已经有了这些规则，我怎么知道别人什么时候会违反这些规则呢？* 和往常一样，我很高兴你提出了这个问题。
- en: Using ausearch and aureport
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用ausearch和aureport
- en: The `auditd` daemon logs events to the `/var/log/audit/audit.log` file. Although
    you could directly read the file with something such as `less`, you really don't
    want to. The `ausearch` and `aureport` utilities will help you translate the file
    into a language that makes some sort of sense.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`auditd`守护进程将事件记录到`/var/log/audit/audit.log`文件中。尽管你可以直接通过`less`等工具读取文件，但其实并不推荐这样做。`ausearch`和`aureport`工具将帮助你将文件翻译成一种更易懂的语言。'
- en: Searching for file change alerts
  id: totrans-235
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 搜索文件变更警报
- en: 'Let''s start by looking at the rule that we created that will alert us whenever
    a change is made to the `/etc/passwd` file:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从查看我们创建的规则开始，这个规则会在`/etc/passwd`文件发生更改时向我们发出警报：
- en: '[PRE55]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Now, let''s make a change to the file and look for the alert message. Rather
    than add another user, since I''m running out of cats whose names I can use, I''ll
    just use the `chfn` utility to add contact information to the comment field for
    Cleopatra''s entry:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们对文件进行更改并查看警报信息。为了不再添加新用户，因为我已经用完了可以使用的猫咪名字，我将使用`chfn`工具将联系方式添加到克利奥帕特拉条目的注释字段：
- en: '[PRE56]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Now, I''ll use `ausearch` to look for any audit messages that this event may
    have generated:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我将使用 `ausearch` 查找这个事件可能生成的任何审计消息：
- en: '[PRE57]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Here''s the breakdown:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这是细节分析：
- en: '`-i`: This takes any numeric data and, whenever possible, converts it into
    text. In this case, it takes user ID numbers and converts them into the actual
    username, which shows up here as `auid=donnie`. If I were to leave the `-i` out,
    the user information would show up as `auid=1000`, which is my user ID number.'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-i`：该选项将任何数字数据（尽可能）转换为文本。在这种情况下，它将用户 ID 号转换为实际用户名，在此显示为 `auid=donnie`。如果我省略
    `-i` 选项，用户信息将显示为 `auid=1000`，这是我的用户 ID 号。'
- en: '`-k passwd_changes`: This specifies the key, or the name, of the audit rule
    for which we want to see the audit messages.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-k passwd_changes`：这指定了审计规则的键或名称，我们希望查看该规则的审计消息。'
- en: 'Here, you see that there are two parts to this output. The first part just
    shows when I created the audit rule, so we''re not interested in that. In the
    second part, you can see when I triggered the rule, but it doesn''t show how I
    triggered it. So, let''s use `aureport` to see whether it will give us a bit more
    detail:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，你会看到输出有两部分。第一部分仅显示我创建审计规则的时间，因此我们不关心这一部分。在第二部分，你可以看到我触发了该规则的时间，但它没有显示我如何触发它。所以，让我们使用
    `aureport` 查看它是否能提供更多的细节：
- en: '[PRE58]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: What's curious is that with `ausearch`, you have to specify the name, or key,
    of the audit rule that interests you after the `-k` option. With `aureport`, the
    `-k` option means that you want to look at all log entries that have to do with
    all audit rule keys. To see log entries for a specific key, just pipe the output
    into `grep`. The `-i` option does the same thing that it does for `ausearch`.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，在使用 `ausearch` 时，你必须在 `-k` 选项后指定你感兴趣的审计规则的名称或键。而在 `aureport` 中，`-k` 选项意味着你想查看所有与所有审计规则键相关的日志条目。要查看特定键的日志条目，只需将输出通过管道传递到
    `grep`。`-i` 选项执行与 `ausearch` 相同的功能。
- en: 'As you see, `aureport` parses the cryptic language of the `audit.log` file
    into plain language that''s easier to understand. I wasn''t sure about what I
    had done to generate events 1 and 2, so I looked in the `/var/log/secure` file
    to see whether I could find out. I saw these two entries for those times:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`aureport` 将 `audit.log` 文件中晦涩的语言解析成更易理解的简单语言。我不确定自己做了什么操作以生成事件1和事件2，于是我查看了
    `/var/log/secure` 文件，看看能否找出原因。我在该时间点看到了以下两个条目：
- en: '[PRE59]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: So, event 1 was from when I initially created the audit rule, and event 2 happened
    when I did an `ausearch` operation.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，事件1是我最初创建审计规则时发生的，事件2是我执行 `ausearch` 操作时发生的。
- en: 'I must confess that the events in lines *4* and *5* are a bit of a mystery.
    Both were created when I invoked the `usermod` command, and both of them correlate
    to the secure log entries where I added Vicky and Cleopatra to the `secretcats`
    group:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 我必须坦白，第*4*行和第*5*行的事件有点神秘。它们都是在我调用 `usermod` 命令时创建的，而且它们都与我将 Vicky 和 Cleopatra
    添加到 `secretcats` 组的安全日志条目相关：
- en: '[PRE60]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: The strange part about this is that adding a user to a secondary group doesn't
    modify the `passwd` file. So, I really don't know why the rule was triggered to
    create the events in lines *4* and *5*.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 奇怪的是，向用户添加副组并不会修改 `passwd` 文件。所以，我真不知道为什么这个规则会触发，并在第*4*行和第*5*行创建事件。
- en: 'This leaves us with the event in line *3*, which is where I used `chfn` to
    actually modify the `passwd` file. Here''s the `secure` log entry for that:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这就剩下第*3*行的事件了，在那里我使用 `chfn` 实际修改了 `passwd` 文件。以下是该条目的 `secure` 日志记录：
- en: '[PRE61]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: So, out of all of these events, the one in line *3* is the only one where the
    `/etc/passwd` file was actually modified.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在所有这些事件中，只有第*3*行的事件是实际修改了 `/etc/passwd` 文件的。
- en: The `/var/log/secure` file that I keep mentioning here is on Red Hat-type operating
    systems, such as CentOS and AlmaLinux. On your Ubuntu machine, you'll see the
    `/var/log/auth.log` file instead.
  id: totrans-257
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我这里提到的 `/var/log/secure` 文件位于 Red Hat 类型的操作系统中，例如 CentOS 和 AlmaLinux。在你的 Ubuntu
    机器上，你将看到 `/var/log/auth.log` 文件。
- en: Searching for directory access rule violations
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 搜索目录访问规则违规
- en: 'For our next scenario, we’ll create a shared directory for Vicky and Cleopatra
    and then create an audit rule for it that looks like this:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下一个场景，我们将为 Vicky 和 Cleopatra 创建一个共享目录，然后为其创建一个如下所示的审计规则：
- en: '[PRE62]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'So, all access or attempted access to this directory should trigger an alert.
    First, let''s have Vicky enter the `/secretcats/` directory and run an `ls -l`
    command:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，所有访问或尝试访问该目录的行为都应触发警报。首先，让我们让 Vicky 进入 `/secretcats/` 目录并运行 `ls -l` 命令：
- en: '[PRE63]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Here, we see that Cleopatra has already been there and has created a file.
    (We''ll get back to that in a moment.) When an event triggers an `auditd` rule,
    it often creates multiple records in the `/var/log/audit/audit.log` file. If you
    look through each record for an event, you''ll see that each one covers a different
    aspect of that event. When I do an `ausearch` command, I see a total of five records
    just from that one `ls -l` operation. For the sake of saving space, I''ll just
    put the first one here:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到 Cleopatra 已经在这里创建了一个文件。（稍后我们会回来详细看看。）当事件触发 `auditd` 规则时，通常会在 `/var/log/audit/audit.log`
    文件中生成多条记录。如果你查看每条记录，你会看到每条记录都涵盖了该事件的不同方面。当我执行 `ausearch` 命令时，我看到仅仅通过一次 `ls -l`
    操作就有五条记录。为了节省空间，我这里只放第一条记录：
- en: '[PRE64]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'I''ll put the last one here:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 我将把最后一条记录放在这里：
- en: '[PRE65]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: In both records, you see the action that was taken (`ls -l`) and information
    about the person – or cat, in this case – that took the action. Since this is
    a RHEL-type machine, you also see SELinux context information. In the second record,
    you can also see the name of the file that Vicky saw when she did the `ls` command.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两条记录中，你可以看到执行的操作（`ls -l`）和执行操作的人员——在这种情况下是猫——的信息。由于这是一个 RHEL 类型的机器，你还会看到 SELinux
    上下文信息。在第二条记录中，你还可以看到 Vicky 在执行 `ls` 命令时看到的文件名。
- en: 'Next, let''s say that that sneaky Charlie guy logs in and tries to get into
    the `/secretcats/` directory:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，假设那个狡猾的 Charlie 进入系统并尝试进入 `/secretcats/` 目录：
- en: '[PRE66]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Charlie isn''t a member of the `secretcats` group and doesn''t have permission
    to go into the `secretcats` directory. So, he should trigger an alert message.
    Well, he actually triggered one that consists of four records, and I''ll again
    just list the first one and the last one. Here''s the first one:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: Charlie 不是 `secretcats` 组的成员，也没有权限进入 `secretcats` 目录。所以，他应该触发警报信息。实际上，他触发了一个包含四条记录的警报，我会再次列出第一条和最后一条。下面是第一条记录：
- en: '[PRE67]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Here''s the last one:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最后一条记录：
- en: '[PRE68]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: There are two things to note here. First, just attempting to `cd` into the directory
    doesn't trigger an alert. However, using `ls` to try to read the contents of the
    directory does. Secondly, note the `Permission denied` message that shows up in
    the second record.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有两点需要注意。首先，仅仅尝试 `cd` 进入目录并不会触发警报。然而，使用 `ls` 尝试读取目录内容时，会触发警报。其次，注意第二条记录中出现的
    `Permission denied` 消息。
- en: 'The last set of alerts that we''ll look at were created when Cleopatra created
    her `cleopatrafile.txt` file. This event triggered an alert that consists of 30
    records. I''ll just show you two of them, with the first one here:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看的最后一组警报是在 Cleopatra 创建她的 `cleopatrafile.txt` 文件时触发的。这个事件触发了一个包含 30 条记录的警报。我这里只展示其中的两条，第一条如下：
- en: '[PRE69]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Here’s the second one:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第二条记录：
- en: '[PRE70]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: You can tell that the first of these two messages happened when Cleopatra saved
    the file and exited `vim` because the second message shows `objtype=DELETE`, where
    her temporary `vim` swap file was deleted.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看出，这两条消息中的第一条发生在 Cleopatra 保存文件并退出 `vim` 时，因为第二条消息显示了 `objtype=DELETE`，她的临时
    `vim` 交换文件被删除了。
- en: Okay, this is all good, but what if this is too much information? What if you
    just want a quick and sparse list of all of the security events that got triggered
    by this rule? For that, we'll use `aureport`. We'll use it just like we did previously.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这些都没问题，但如果这些信息太多了怎么办？如果你只是想要一份简洁且稀疏的安全事件列表，该怎么办呢？为此，我们将使用 `aureport`。我们将像之前那样使用它。
- en: 'First, let''s pipe the `aureport` output into `less` instead of into `grep`
    so that we can see the column headers:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将 `aureport` 的输出通过管道传递给 `less`，而不是传递给 `grep`，这样我们可以看到列标题：
- en: '[PRE71]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: The status in the `success` column will be either `yes` or `no`, depending upon
    whether the user was able to successfully perform an action that violated a rule.
    Or, it could be a question mark if the event isn't the result of the rule being
    triggered.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '`success` 列中的状态将是 `yes` 或 `no`，取决于用户是否成功执行了违反规则的操作。或者，如果事件不是由规则触发的，状态可能是问号。'
- en: 'For Charlie, we see a `yes` event in line *48*, with the events in lines *49*
    through *51* all having a `no` status. We can also see that all of these entries
    were triggered by Charlie''s use of the `ls` command:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Charlie，我们可以看到在第 *48* 行发生了一个 `yes` 事件，而第 *49* 到 *51* 行的事件都显示为 `no` 状态。我们还可以看到，所有这些记录都是由于
    Charlie 使用了 `ls` 命令而触发的：
- en: '[donnie@localhost ~]$ sudo aureport -i -k | grep ''secretcats_watch'''
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '[donnie@localhost ~]$ sudo aureport -i -k | grep ''secretcats_watch'''
- en: 6\. 12/11/2017 15:01:25 secretcats_watch yes ? donnie 11772
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. 12/11/2017 15:01:25 secretcats_watch yes ? donnie 11772
- en: 8\. 12/12/2017 11:49:29 secretcats_watch yes /usr/bin/ls cleopatra 13828
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 8\. 12/12/2017 11:49:29 secretcats_watch yes /usr/bin/ls cleopatra 13828
- en: 9\. 12/12/2017 11:49:37 secretcats_watch yes /usr/bin/vim cleopatra 13830
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 9\. 12/12/2017 11:49:37 secretcats_watch yes /usr/bin/vim cleopatra 13830
- en: 10\. 12/12/2017 11:49:37 secretcats_watch yes /usr/bin/vim cleopatra 13829
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 10\. 12/12/2017 11:49:37 secretcats_watch yes /usr/bin/vim cleopatra 13829
- en: 48\. 12/12/2017 12:32:04 secretcats_watch yes /usr/bin/ls charlie 14152
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 48\. 12/12/2017 12:32:04 secretcats_watch yes /usr/bin/ls charlie 14152
- en: 49\. 12/12/2017 12:32:04 secretcats_watch no /usr/bin/ls charlie 14153
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 49\. 12/12/2017 12:32:04 secretcats_watch no /usr/bin/ls charlie 14153
- en: 50\. 12/12/2017 12:32:04 secretcats_watch no /usr/bin/ls charlie 14154
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 50\. 12/12/2017 12:32:04 secretcats_watch no /usr/bin/ls charlie 14154
- en: 51\. 12/12/2017 12:32:04 secretcats_watch no /usr/bin/ls charlie 14155
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 51\. 12/12/2017 12:32:04 secretcats_watch no /usr/bin/ls charlie 14155
- en: '[donnie@localhost ~]$'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '[donnie@localhost ~]$'
- en: 'You''d be tempted to think that the `yes` event in line *48* indicates that
    Charlie was successful in reading the contents of the `secretcats` directory.
    To analyze this further, let''s look at the event numbers at the end of each line
    and correlate them to the output of our previous `ausearch` command. You''ll see
    that event numbers `14152` through `14155` belong to records that all have the
    same timestamp. We can see this in the first line of each record:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会觉得，第*48*行中的`yes`事件表示Charlie成功读取了`secretcats`目录的内容。为了进一步分析，我们来看一下每行末尾的事件编号，并将它们与我们之前运行的`ausearch`命令的输出对应起来。你会看到，事件编号`14152`到`14155`属于一组记录，它们的时间戳相同。我们可以从每条记录的第一行看到这一点：
- en: '[PRE72]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: As we noted previously, the last record of this series shows `Permission denied`
    for Charlie, and that's what really counts.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所提到的，这一系列的最后一条记录显示Charlie的`Permission denied`，这才是最重要的。
- en: 'Space doesn''t permit me to give a full explanation of each individual item
    in an audit log record. However, you can read about it here, in the official Red
    Hat documentation: [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#understanding-audit-log-files_auditing-the-system](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#understanding-audit-log-files_auditing-the-system).'
  id: totrans-298
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 空间有限，我无法对审计日志记录中的每一项逐个进行详细解释。然而，你可以在这里阅读官方的Red Hat文档：[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#understanding-audit-log-files_auditing-the-system](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#understanding-audit-log-files_auditing-the-system)。
- en: Searching for system call rule violations
  id: totrans-299
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 搜索系统调用规则违规
- en: 'The third rule that we created was to monitor that sneaky Charlie. This rule
    will alert us whenever Charlie tries to open or create a file. (As we noted previously,
    `1006` is Charlie''s user ID number.):'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建的第三条规则是用来监控那个狡猾的Charlie。这条规则会在Charlie尝试打开或创建文件时触发警报。（正如我们之前所提到的，`1006`是Charlie的用户ID。）
- en: '[PRE73]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Even though Charlie hasn''t done that much on this system, this rule gives
    us a lot more log entries than what we bargained for. We''ll look at just a couple
    of entries:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Charlie在这个系统上做的事情不多，这个规则却给我们带来了比预期更多的日志条目。我们来看看其中的几条：
- en: '[PRE74]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'This record was generated when Charlie tried to access the `/secretcats/` directory.
    So, we can expect to see this one. But, what we didn''t expect to see was the
    exceedingly long list of records of files that Charlie indirectly accessed when
    he logged into the system through **Secure Shell** (**SSH**). Here''s one:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 这条记录是在Charlie尝试访问`/secretcats/`目录时生成的。所以我们可以预期会看到这一条。但我们没有预料到的是，Charlie通过**安全外壳**（**SSH**）登录系统时，间接访问的文件记录清单异常冗长。这里有一条：
- en: '[PRE75]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Here''s another one:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有另一条：
- en: '[PRE76]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: In the first record, we see that Charlie accessed the `/usr/sbin/sshd` file.
    In the second, we see that he accessed the `/usr/bin/bash` file. It's not that
    Charlie chose to access those files. The operating system accessed those files
    for him in the course of just a normal login event. So as you see, when you create
    audit rules, you have to be careful what you wish for because there's a definite
    danger that the wish might be granted. If you really need to monitor someone,
    you'll want to create a rule that won't give you quite this much information.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一条记录中，我们看到Charlie访问了`/usr/sbin/sshd`文件。在第二条记录中，我们看到他访问了`/usr/bin/bash`文件。并不是Charlie主动选择访问这些文件。操作系统在正常的登录过程中为他访问了这些文件。所以如你所见，当你创建审计规则时，必须小心你所希望的结果，因为有可能你会得到你并不完全想要的。如果你确实需要监控某人，你应该创建一个不会给你提供如此多信息的规则。
- en: 'While we''re at it, we might as well see what the `aureport` output for this
    looks like:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经开始了，不如看看`aureport`的输出是什么样的：
- en: '[PRE77]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: In addition to what Charlie did, we also see what Vicky and Cleopatra did. That's
    because the rule that we set for the `/secretcats/` directory generated `openat`
    events when Vicky and Cleopatra accessed, viewed, or created files in that directory.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Charlie的行为外，我们还可以看到Vicky和Cleopatra的行为。这是因为我们为`/secretcats/`目录设置的规则，在Vicky和Cleopatra访问、查看或创建该目录中的文件时生成了`openat`事件。
- en: Generating authentication reports
  id: totrans-312
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生成身份验证报告
- en: 'You can generate user authentication reports without having to define any audit
    rules. Just use `aureport` with the `-au` option switch. (Remember `au`, the first
    two letters of *authentication*.):'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在不定义任何审计规则的情况下生成用户身份验证报告。只需使用`aureport`加上`-au`选项切换。（记住`au`是*authentication*（认证）前两个字母。）
- en: '[PRE78]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: For login events, this tells us whether the user logged in at the local terminal
    or remotely through SSH. To see the details of any event, use `ausearch` with
    the `-a` option, followed by the event number that you see at the end of a line.
    (Strangely, the `-a` option stands for an *event*.)
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 对于登录事件，这告诉我们用户是通过本地终端还是远程SSH登录的。要查看任何事件的详细信息，使用`ausearch`并加上`-a`选项，后面跟上你在行尾看到的事件号。（奇怪的是，`-a`选项代表一个*事件*。）
- en: 'Let''s look at event number `14122` for Charlie:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来看一下Charlie的事件号`14122`：
- en: '[PRE79]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'The problem with this is that it really doesn''t make any sense. I''m the one
    who did the logins for Charlie, and I know for a fact that Charlie never had any
    failed logins. In fact, we can correlate this with the matching entry from the
    `/var/log/secure` file:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题在于它真的没有任何意义。我是为Charlie执行登录操作的人，而且我可以肯定地说Charlie从未有过登录失败的情况。事实上，我们可以将这与`/var/log/secure`文件中的匹配条目进行关联：
- en: '[PRE80]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: The timestamps for these two entries are a few seconds later than the timestamp
    for the `ausearch` output, but that's okay. There's nothing in this log file to
    suggest that Charlie ever had a failed login, and these two entries clearly show
    that Charlie's login really was successful. The lesson here is that when you see
    something strange in either the `ausearch` or `aureport` output, be sure to correlate
    it with the matching entry in the proper authentication log file to get a better
    idea of what's going on. (By authentication log file, I mean `/var/log/secure`
    for Red Hat-type systems and `/var/log/auth.log` for Ubuntu systems. The names
    may vary for other Linux distros.)
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个条目的时间戳比`ausearch`输出的时间戳晚了几秒钟，但这没问题。这个日志文件中没有任何迹象表明Charlie曾经登录失败，而且这两个条目清楚地显示了Charlie的登录确实是成功的。这里的教训是，当你在`ausearch`或`aureport`的输出中看到奇怪的内容时，一定要与正确的身份验证日志文件中的匹配条目进行关联，以更好地了解发生了什么。（这里提到的身份验证日志文件是指Red
    Hat类型系统的`/var/log/secure`和Ubuntu系统的`/var/log/auth.log`。其他Linux发行版的文件名可能会有所不同。）
- en: Using pre-defined rulesets
  id: totrans-321
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用预定义的规则集
- en: 'In the `/usr/share/doc/audit-version_number/rules/` directory of your CentOS
    7 machine and the `/usr/share/audit/sample-rules/` directory of your AlmaLinux
    machines, you''ll see some pre-made rulesets for different scenarios. Once you
    install `auditd` on Ubuntu, you''ll have audit rules in the `/usr/share/doc/auditd/examples/rules/`
    directory. In any case, some of the rulesets are common among all three of these
    distros. Let''s look at the AlmaLinux 9 machine to see what we have there:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的CentOS 7机器的`/usr/share/doc/audit-version_number/rules/`目录和AlmaLinux机器的`/usr/share/audit/sample-rules/`目录中，你会看到一些针对不同场景的预设规则集。一旦你在Ubuntu上安装了`auditd`，你将在`/usr/share/doc/auditd/examples/rules/`目录下找到审计规则。无论如何，这三个发行版中有些规则集是通用的。我们来看一下AlmaLinux
    9机器，看看那里的情况：
- en: '[PRE81]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'The three files I want to focus on are the `nispom`, `pci-dss`, and `stig`
    files. Each of these three rulesets is designed to meet the auditing standards
    of a particular certifying agency. In order, these rulesets are:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 我想关注的三个文件是`nispom`、`pci-dss`和`stig`文件。每个规则集都旨在满足特定认证机构的审计标准。按顺序，这些规则集是：
- en: '**nispom**: The National Industrial Security Program – you''ll see this ruleset
    used at either the US Department of Defense or its contractors.'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**nispom**：国家工业安全计划——你会看到这个规则集在美国国防部或其承包商那里使用。'
- en: '**pci-dss**: Payment Card Industry Data Security Standard – if you work in
    the banking or financial industries, or even if you''re just running an online
    business that accepts credit cards, you''ll likely become very familiar with this.'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**pci-dss**：支付卡行业数据安全标准——如果你从事银行或金融行业的工作，甚至如果你只是在经营一个接受信用卡支付的在线业务，你很可能会非常熟悉这个标准。'
- en: '**stig**: Security Technical Implementation Guides – if you work for the US
    government, or possibly other governments, you''ll be dealing with this one.'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**stig**: 安全技术实施指南 - 如果你在美国政府工作，或可能在其他政府工作，你将会接触到这个。'
- en: 'To use one of these rules sets, just copy the appropriate files over to the
    `/etc/audit/rules.d/` directory:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用这些规则集中的一个，只需将相应的文件复制到`/etc/audit/rules.d/`目录：
- en: '[PRE82]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: After you've copied the rule file over, restart the `auditd` daemon to read
    in the new rules.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在复制规则文件之后，重新启动`auditd`守护进程以读取新规则。
- en: 'For Red Hat, CentOS, or AlmaLinux, do this:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Red Hat、CentOS或AlmaLinux，执行以下操作：
- en: '[PRE83]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'For Ubuntu, do this:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu，执行以下操作：
- en: '[PRE84]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Of course, there's always the chance that a particular rule in one of these
    sets might not work for you or that you might need to enable a rule that's currently
    disabled. If so, just open the appropriate rules file in your text editor and
    comment out what doesn't work or uncomment what you need to enable.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，某些规则可能对你不起作用，或者你可能需要启用一个当前被禁用的规则。如果是这样，只需在文本编辑器中打开相应的规则文件，注释掉不生效的部分或取消注释需要启用的部分。
- en: Even though `auditd` is very cool, bear in mind that it only alerts you about
    potential security breaches. It doesn't do anything to harden the system against
    them.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 即使`auditd`非常酷，也要记住它只是提醒你潜在的安全漏洞，并不会增强系统的安全性来防止这些漏洞。
- en: Hands-on lab – using auditd
  id: totrans-337
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实操实验 - 使用`auditd`
- en: 'In this lab, you''ll practice using the features of `auditd`. Let''s get started:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 在本实验中，你将练习使用`auditd`的各种功能。让我们开始吧：
- en: 'For Ubuntu only, install `auditd`:'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅在Ubuntu中，安装`auditd`：
- en: '[PRE85]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'View the rules that are currently in effect:'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看当前生效的规则：
- en: '[PRE86]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'From the command line, create a temporary rule that audits the `/etc/passwd`
    file for changes. Verify that the rule is in effect:'
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令行中，创建一个临时规则，审计`/etc/passwd`文件的变化。验证规则是否生效：
- en: '[PRE87]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Create a user account for Lionel. On Ubuntu, do this:'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Lionel创建一个用户账户。在Ubuntu中，执行以下操作：
- en: '[PRE88]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'On CentOS or AlmaLinux, do this:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在CentOS或AlmaLinux中，执行以下操作：
- en: '[PRE89]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Search for audit messages regarding any changes to the `passwd` file:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索有关`passwd`文件变动的审计信息：
- en: '[PRE90]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Log out of your own account and log in as Lionel. Then, log out of Lionel's
    account and back in to your own.
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注销你的账户并以Lionel的身份登录。然后，再次注销Lionel的账户，重新登录到你的账户。
- en: 'Do an authentication report:'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行身份验证报告：
- en: '[PRE91]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Create the `/secrets` directory and set the permissions so that only the root
    user can access it:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`/secrets`目录并设置权限，确保只有root用户能够访问：
- en: '[PRE92]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'Create a rule that monitors the `/secrets` directory:'
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个监视`/secrets`目录的规则：
- en: '[PRE93]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'Log out of your account, and log in as Lionel. Have him try to view what''s
    in the `/secrets` directory:'
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注销你的账户，然后以Lionel的身份登录。让他尝试查看`/secrets`目录中的内容：
- en: '[PRE94]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Log out of Lionel''s account and log in to your own. View the alerts that Lionel
    created:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注销Lionel的账户并登录到你的账户。查看Lionel创建的警报：
- en: '[PRE95]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'You now have two temporary rules that will disappear when you reboot the machine.
    Make them permanent by creating a `custom.rules` file:'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在有了两个临时规则，它们将在重启机器时消失。通过创建一个`custom.rules`文件，使其变为永久规则：
- en: '[PRE96]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'Reboot the machine and verify that the rules are still in effect:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启机器并验证规则是否仍然生效：
- en: '[PRE97]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: You've reached the end of the lab – congratulations!
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 你已完成实验 - 恭喜！
- en: Hands-on lab –Using pre-configured rules with auditd
  id: totrans-367
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实操实验 - 使用预配置规则与`auditd`
- en: 'In this lab, we’ll simulate that the US government is our client, and that
    we need to set up a server that will meet their **Security Technical Implementation
    Guides** (**STIG**) auditing standards. To do that, we’ll use several pre-configured
    rulesets that get installed when you install `auditd`. Note that this lab will
    work on any of your virtual machines:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 在本实验中，我们将模拟美国政府是我们的客户，我们需要设置一个服务器来符合他们的**安全技术实施指南**（**STIG**）审计标准。为此，我们将使用在安装`auditd`时自动安装的多个预配置规则集。请注意，此实验可以在你任何一台虚拟机上运行：
- en: Delete the `custom.rules` file that you created in the previous lab, and then
    restart the `auditd` service.
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除你在上一个实验中创建的`custom.rules`文件，然后重启`auditd`服务。
- en: 'Copy the `10-base-config.rules`, `30-stig.rules`, `31-privileged.rules`, and
    `99-finalize.rules` files to the `/etc/audit/rules.d/` directory. (These rules
    files are in the `/usr/share/doc/auditd/examples/rules/` directory on Ubuntu,
    and in the `/usr/share/audit/sample-rules/` directory on AlmaLinx.):'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`10-base-config.rules`、`30-stig.rules`、`31-privileged.rules`和`99-finalize.rules`文件复制到`/etc/audit/rules.d/`目录。（这些规则文件在Ubuntu的`/usr/share/doc/auditd/examples/rules/`目录中，在AlmaLinux的`/usr/share/audit/sample-rules/`目录中。）
- en: '[PRE98]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Restart the `auditd` service, and then use `sudo auditctl -l` to view the new
    active ruleset.
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启`auditd`服务，然后使用`sudo auditctl -l`查看新的活动规则集。
- en: End of lab.
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实验结束。
- en: You’ve just seen that we can sometimes use several different pre-configured
    rulesets at once *if* they complement each other. Understand though that you’ll
    never use *all* of the pre-configured rulesets at once.
  id: totrans-374
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你刚刚看到，我们有时可以同时使用多个不同的预配置规则集，只要它们互补。但要理解的是，你永远不会同时使用*所有*预配置的规则集。
- en: In this section, you looked at some examples of how to work with `auditd`. Next,
    let’s look at a simpler method of auditing files and directories.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分中，你了解了一些如何使用`auditd`的示例。接下来，让我们看看一种更简单的文件和目录审计方法。
- en: Auditing files and directories with inotifywait
  id: totrans-376
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用inotifywait审计文件和目录
- en: There might be times when you’ll just want a quick and easy way to monitor a
    file or a directory in real time. Instead of having audit messages sent to the
    `audit.log` file, you can use `inotifywait` to have a message pop up in your terminal
    as soon as someone accesses a designated file or directory. This tool is part
    of the `inotify-tools` package on both Ubuntu and AlmaLinux. It’s not installed
    by default, so go ahead and install it if it isn’t already.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，你可能只需要一个快速简便的方法来实时监控文件或目录。与其将审计消息发送到`audit.log`文件，不如使用`inotifywait`，它可以在有人访问指定文件或目录时，立即在终端中弹出消息。这个工具是`inotify-tools`包的一部分，适用于Ubuntu和AlmaLinux。它不是默认安装的，如果未安装，您可以自行安装。
- en: 'To monitor a single file, just do:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 要监控单个文件，只需执行：
- en: '[PRE99]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'The `/secrets/` directory is set so that only someone with root privileges
    can access it, so I have to use `sudo` to make this work. The `-m` option causes
    `inotifywait` to perform continuous monitoring, instead of exiting as soon as
    something happens. The **OPEN** message came up when I opened the file with `less`,
    and the **CLOSE_NOWRITE,CLOSE** message came up when I exited `less`. Now, let’s
    close this down and monitor the whole directory. All we have to do is to add the
    `-r` option and leave out the file name, like this:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '`/secrets/`目录设置为只有具有root权限的人才能访问，因此我必须使用`sudo`才能使其生效。`-m`选项使`inotifywait`进行持续监控，而不是在发生某些事件后立即退出。当我使用`less`打开文件时，出现了**OPEN**消息，当我退出`less`时，出现了**CLOSE_NOWRITE,CLOSE**消息。现在，让我们关闭这个，并监控整个目录。我们只需要添加`-r`选项，省略文件名，如下所示：'
- en: '[PRE100]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: This time, I opened the `donnie_file.txt` file in `vim`, which caused a whole
    bunch of messages to come up. That’s because when you open a file in `vim`, it
    creates some temporary files that will get cleared out when you exit `vim`. (Note
    that I haven’t actually edited the file yet, and that more messages will get created
    when I do.)
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，我在`vim`中打开了`donnie_file.txt`文件，这导致出现了一堆消息。因为当你在`vim`中打开一个文件时，它会创建一些临时文件，这些临时文件在退出`vim`时会被清除。（注意，我实际上还没有编辑文件，而且当我编辑文件时，更多的消息会被创建。）
- en: As good as `inotifywait` seems to be, there is one downside. It’s just that
    to use it, you’ll need to stayed glued to your workstation, keep the terminal
    window from which you’re running `inotifywait` open, and watch for messages to
    pop up. There’s no logging mechanism, and no daemon mode. But, if you need to
    monitor something in real-time, this could be useful.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管`inotifywait`看起来很有用，但它也有一个缺点。那就是，为了使用它，你需要始终盯着工作站，保持运行`inotifywait`的终端窗口打开，并等待消息弹出。它没有日志机制，也没有守护进程模式。但是，如果你需要实时监控某些东西，它可能会很有用。
- en: That’s all there is to it for `inotifywait`. Next, we'll look at OpenSCAP, which
    can actually remediate a less-than-secure system.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是`inotifywait`的全部内容。接下来，我们将介绍OpenSCAP，它实际上可以修复不太安全的系统。
- en: Applying OpenSCAP policies with oscap
  id: totrans-385
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用oscap应用OpenSCAP策略
- en: 'The **Security Content Automation Protocol** (**SCAP**) was created by the
    US **National Institute of Standards and Technology** (**NIST**). It consists
    of hardening guides, hardening templates, and baseline configuration guides for
    setting up secure systems. OpenSCAP is a set of FOSS tools that can be used to
    implement SCAP. It consists of the following:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全内容自动化协议**（**SCAP**）是由美国**国家标准与技术研究院**（**NIST**）创建的。它包括强化指南、强化模板和用于设置安全系统的基准配置指南。OpenSCAP是一套开源工具，可用于实施SCAP。它包括以下内容：'
- en: Security profiles that you can apply to a system. There are different profiles
    for meeting the requirements of several different certifying agencies.
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以应用于系统的安全配置文件。不同的配置文件满足多个不同认证机构的要求。
- en: Security guides to help with the initial setup of your system.
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助进行系统初步设置的安全指南。
- en: The `oscap` command-line utility to apply security templates.
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oscap` 命令行工具用于应用安全模板。'
- en: On systems that have a desktop interface, you have SCAP Workbench, a GUI-type
    utility.
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在有桌面界面的系统上，你可以使用 SCAP Workbench，一个图形界面工具。
- en: You can install OpenSCAP on either the Red Hat or the Ubuntu distros, but it's
    much better implemented on the Red Hat distros. For one thing, when you install
    a Red Hat-type operating system, you can choose to apply a SCAP profile during
    installation. You can't do that with Ubuntu. All of the Red Hat-type distros come
    with a fairly complete set of ready-to-use profiles. Ubuntu 22.04 comes with outdated
    profiles for Fedora 14 and RHEL 6, and none for Ubuntu 22.04, which I think is
    totally bizarre. Not to worry though, because I’ll show you how to get some good
    Ubuntu profiles in just a bit.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 Red Hat 或 Ubuntu 发行版上安装 OpenSCAP，但在 Red Hat 发行版上实现得更好。首先，当你安装 Red Hat 类型的操作系统时，你可以选择在安装过程中应用
    SCAP 配置文件。而 Ubuntu 则做不到这一点。所有 Red Hat 类型的发行版都配备了一套相当完整的、可直接使用的配置文件。而 Ubuntu 22.04
    只包含 Fedora 14 和 RHEL 6 的过时配置文件，并没有适用于 Ubuntu 22.04 的配置文件，这让我觉得非常奇怪。不过不用担心，我稍后会告诉你如何获得一些不错的
    Ubuntu 配置文件。
- en: When doing initial system builds, it's desirable to start with a security checklist
    that's appropriate for your scenario, because there are certain things the OpenSCAP
    can’t automate for you. Then, use OpenSCAP to do the rest. I'll tell you more
    about security checklists at the end of *Chapter 16*, *Security Tips and Tricks
    for the Busy Bee*.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行初始系统构建时，最好从一个适合你场景的安全检查单开始，因为 OpenSCAP 无法为你自动完成某些任务。然后，使用 OpenSCAP 完成剩余的工作。我将在
    *第16章*，*繁忙蜜蜂的安全小贴士和技巧* 的最后告诉你更多关于安全检查单的信息。
- en: All right, let's learn how to install OpenSCAP and how to use the command-line
    utility that's common to all of our distros.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们学习如何安装 OpenSCAP 以及如何使用所有发行版中通用的命令行工具。
- en: Installing OpenSCAP
  id: totrans-394
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 OpenSCAP
- en: 'On your CentOS 7 machine, assuming that you didn''t install OpenSCAP during
    the operating system installation, do this:'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的 CentOS 7 机器上，如果你没有在操作系统安装过程中安装 OpenSCAP，请执行以下操作：
- en: '[PRE101]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'Do the following for either AlmaLinux 8 or AlmaLinux 9:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 AlmaLinux 8 或 AlmaLinux 9，请执行以下操作：
- en: sudo dnf install openscap-scanner scap-security-guide
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: sudo dnf install openscap-scanner scap-security-guide
- en: 'Do the following on an Ubuntu 22.04 machine:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 22.04 机器上执行以下操作：
- en: '[PRE102]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: Viewing the profile files
  id: totrans-401
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查看配置文件
- en: On the CentOS 7 machine and the AlmaLinux machines, you'll see the profile files
    in the `/usr/share/xml/scap/ssg/content/` directory.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CentOS 7 机器和 AlmaLinux 机器上，你会在 `/usr/share/xml/scap/ssg/content/` 目录下看到配置文件。
- en: 'As I already mentioned, Ubuntu only gives us some outdated Fedora 14 and RHEL
    6 profiles in the `/usr/share/openscap/` directory, and none at all for any flavor
    of Ubuntu. (Why that is, I have no clue.) The profile files are in `.xml` format,
    and each one contains one or more profiles that you can apply to the system. For
    example, here are some from the CentOS 7 machine:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我之前提到的，Ubuntu 只在 `/usr/share/openscap/` 目录下提供了一些过时的 Fedora 14 和 RHEL 6 配置文件，而没有任何
    Ubuntu 版本的配置文件。（为什么会这样，我也不知道。）这些配置文件是 `.xml` 格式的，每个文件包含一个或多个可以应用于系统的配置文件。例如，这里是来自
    CentOS 7 机器的一些配置文件：
- en: '[PRE103]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'You’ll see a somewhat similar list on your AlmaLinux 8 machine, except that
    they’ll be specific to AlmaLinux 8\. On AlmaLinux 9, things are a bit different.
    At the time of this writing, all we have is just one profile file. That’s because
    the RHEL 9 distros are quite new, so the development of SCAP profiles for them
    isn’t yet complete. Anyway, here’s AlmaLinux 9 file:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AlmaLinux 8 机器上，你会看到一个类似的列表，只不过它们是针对 AlmaLinux 8 的。而在 AlmaLinux 9 上，情况有点不同。写这篇文章时，我们只有一个配置文件。这是因为
    RHEL 9 发行版相当新，所以针对它们的 SCAP 配置文件的开发还未完成。无论如何，这是 AlmaLinux 9 的文件：
- en: '[PRE104]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'The command-line utility for working with OpenSCAP is `oscap`. On our AlmaLinux
    9 machine, let''s use this with the `info` switch to view information about any
    of the profile files. Let''s look at the `ssg-almalinux9-ds.xml` file:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 用于处理 OpenSCAP 的命令行工具是 `oscap`。在我们的 AlmaLinux 9 机器上，让我们使用它并加上 `info` 参数来查看任何配置文件的信息。我们来看一下
    `ssg-almalinux9-ds.xml` 文件：
- en: '[PRE105]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Due to formatting constraints, I can’t show you the entire list of profiles.
    So, do this for yourself and scroll down the list. You’ll see profiles for **STIG**
    and **PCI-DSS**, just as we had for the auditing rules. There’s also a **HIPAA**
    profile for medical facilities here in the US, several benchmark profiles from
    the **Center for Internet Security**, (**CIS**), and several that are specific
    for certain non-US countries, among others.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 由于格式限制，我无法向您展示完整的配置文件列表。因此，请您自行操作，向下滚动列表。您将看到针对**STIG**和**PCI-DSS**的配置文件，就像我们在审核规则中看到的那样。这里还提供了适用于美国医疗机构的**HIPAA**配置文件，**互联网安全中心**（**CIS**）的一些基准配置文件，以及适用于某些非美国国家的多个配置文件，等等。
- en: Getting the missing profiles for Ubuntu
  id: totrans-410
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取Ubuntu缺失的配置文件
- en: We’ve seen that there aren’t any SCAP profiles for Ubuntu in the Ubuntu repositories.
    So, is all hope lost for Ubuntu users? Absolutely not. Fortunately, the `scap-security-guide`
    package that you can install on a Fedora Server virtual machine comes with SCAP
    profiles for a variety of other Linux distros, including the newest versions of
    Ubuntu. So, your best bet for setting up OpenSCAP on Ubuntu is to create a Fedora
    Server VM, install the `scap-security-guide` package in the same manner that you
    just did for AlmaLinux, and then copy the appropriate profile file from Fedora’s
    `/usr/share/xml/scap/ssg/content/` directory to your Ubuntu machine. After that,
    you’re golden.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，Ubuntu的Ubuntu仓库中没有SCAP配置文件。那么，Ubuntu用户是否就此失去了希望？绝对没有。幸运的是，您可以在Fedora
    Server虚拟机上安装的`scap-security-guide`包附带了多种其他Linux发行版的SCAP配置文件，包括最新版本的Ubuntu。因此，您在Ubuntu上设置OpenSCAP的最佳方法是创建一个Fedora
    Server虚拟机，按照您刚刚在AlmaLinux上所做的方式安装`scap-security-guide`包，然后将Fedora的`/usr/share/xml/scap/ssg/content/`目录中的相应配置文件复制到您的Ubuntu机器上。之后，您就可以继续了。
- en: Scanning the system
  id: totrans-412
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 扫描系统
- en: In this section, we'll work with our AlmaLinux 9 VM.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将处理我们的AlmaLinux 9虚拟机。
- en: This procedure works the same for most all Linux distros, except that the names
    of the profiles will differ.
  id: totrans-414
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这个过程适用于大多数Linux发行版，唯一不同的是配置文件的名称会有所不同。
- en: 'Now, let''s say that we need to ensure that our systems are compliant with
    **Payment Card Industry** standards. First, we''ll scan the AlmaLinux 9 machine
    to see what needs remediation. (Note that the following command is very long and
    wraps around on the printed page.):'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我们需要确保系统符合**支付卡行业**标准。首先，我们将扫描AlmaLinux 9机器，看看需要修复什么。（请注意，以下命令非常长，并在打印页面上换行。）
- en: '[PRE106]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'As we always like to do, let''s break this down:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们喜欢做的那样，让我们来逐步分析：
- en: '`xccdf eval`: The **Extensible Configuration Checklist Description Format**
    is one of the languages that we can use to write security profile rules. We''re
    going to use a profile that was written in this language to perform an evaluation
    of the system.'
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xccdf eval`：**可扩展配置检查描述格式**（Extensible Configuration Checklist Description
    Format）是我们可以用来编写安全配置规则的语言之一。我们将使用以这种语言编写的配置文件来执行系统评估。'
- en: '`--profile xccdf_org.ssgproject.content_profile_pci-dss`: Here, I specified
    that I want to use the Payment Card Industry-Data Security Standard profile to
    evaluate the system. (Profile names come from the `Id` lines in the profile file.)'
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--profile xccdf_org.ssgproject.content_profile_pci-dss`：在这里，我指定了要使用支付卡行业数据安全标准（PCI-DSS）配置文件来评估系统。（配置文件名称来自配置文件中的`Id`行。）'
- en: '`--fetch-remote`: Use this option to fetch additional rules. (Note that this
    option won’t work if you have the system crypto policy set to `FUTURE` mode.)'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--fetch-remote`：使用此选项来获取附加规则。（请注意，如果您的系统加密策略设置为`FUTURE`模式，则此选项将无法使用。）'
- en: '`--results scan-xccdf-results.xml`: I''m going to save the scan results to
    this `.xml` format file. When the scan has finished, I''ll create a report from
    this file.'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--results scan-xccdf-results.xml`：我将扫描结果保存到这个`.xml`格式的文件中。扫描完成后，我将从这个文件生成报告。'
- en: '`/usr/share/xml/scap/ssg/content/ssg-almalinux9-ds.xml`: This is the profile
    file that contains the `xccdf_org.ssgproject.content_profile_pci-dss` profile.'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/usr/share/xml/scap/ssg/content/ssg-almalinux9-ds.xml`：这是包含`xccdf_org.ssgproject.content_profile_pci-dss`配置文件的文件。'
- en: 'As the scan progresses, the output will be sent to the screen, as well as to
    the designated output file. It''s a long list of items, so I''ll only show you
    a few of them. Here are a couple of items that look okay:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 随着扫描的进行，输出将被发送到屏幕以及指定的输出文件。这是一个很长的项目列表，因此我只展示其中的一部分。以下是几个看起来还可以的项目：
- en: '[PRE107]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'Here are a couple of items that need to be fixed:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是几个需要修复的项目：
- en: '[PRE108]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: So, we have patches for certain security vulnerabilities installed, which is
    good. However, it seems that we have some problems with our password policies.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们安装了一些针对特定安全漏洞的修补程序，这很好。不过，似乎我们的密码策略还有些问题。
- en: 'Now that I''ve run the scan and created an output file with the results, I
    can build my report:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我已经运行了扫描并创建了包含结果的输出文件，我可以开始构建我的报告：
- en: '[PRE109]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: This extracts information from the `.xml` format file that isn't meant to be
    read by humans and transfers it to a `.html` file that you can open in your web
    browser. (For the record, the report says that there are 49 problems that need
    to be fixed.)
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 这从 `.xml` 格式的文件中提取信息，这些文件不适合人类阅读，并将其转换为 `.html` 文件，你可以在网页浏览器中打开它。（顺便说一下，报告上说有
    49 个问题需要修复。）
- en: Remediating the system
  id: totrans-431
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修复系统
- en: 'So, we have 49 problems that we need to fix before our system can be considered
    compliant with Payment Card Industry standards. Let''s see how many of them `oscap`
    can fix for us:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们有 49 个问题需要修复，才能使我们的系统符合支付卡行业标准。让我们看看 `oscap` 能为我们修复其中多少个问题：
- en: '[PRE110]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: This is the same command that I used to perform the initial scan, except that
    I added the `--remediate` option and I'm saving the results to a different file.
    You'll want to have a bit of patience when you run this command because fixing
    some problems involves downloading and installing software packages. In fact,
    even as I type this, `oscap` is busy downloading and installing the missing AIDE
    intrusion detection system package.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我用来执行初步扫描的相同命令，只是我添加了 `--remediate` 选项，并将结果保存到不同的文件中。当你运行这个命令时，可能需要一点耐心，因为修复某些问题需要下载和安装软件包。事实上，甚至在我输入这些文字时，`oscap`
    正在忙着下载和安装缺失的 AIDE 入侵检测系统软件包。
- en: 'Okay, here are some of the things that were fixed:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，以下是一些已经修复的问题：
- en: '[PRE111]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: Result fixed
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 结果已修复
- en: There are a couple of errors because of things that `oscap` couldn't fix, but
    that's normal. At least you know about them so that you can try to fix them yourself.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个错误是因为 `oscap` 无法修复的，但这是正常的。至少你知道这些问题，这样你可以尝试自己修复它们。
- en: 'Now, check this out. Do you remember how in *Chapter 3, Securing User Accounts*,
    I made you jump through hoops to ensure that users had strong passwords that expire
    on a regular basis? Well, by applying this OpenSCAP profile, you get all that
    fixed for you automatically. Here are a few of the items that were fixed:'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，看看这个。你还记得在 *第 3 章，保护用户账户* 中，我让你费尽心思确保用户拥有强密码并定期过期吗？好吧，通过应用这个 OpenSCAP 配置文件，你可以自动修复这些问题。以下是一些已修复的项目：
- en: '[PRE112]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: So, yeah, OpenSCAP is pretty cool, and even the command-line tools aren't hard
    to use. However, if you have to use a GUI, we have a tool for that, which we'll
    look at next.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，是的，OpenSCAP 非常棒，甚至命令行工具也不难使用。不过，如果你需要使用图形界面，我们也有一个工具可以使用，接下来我们会看一下。
- en: Using SCAP Workbench
  id: totrans-442
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 SCAP Workbench
- en: For machines with a desktop environment installed, we have SCAP Workbench. However,
    if you've ever worked with early versions of the tool, you were likely quite disappointed.
    Indeed, the early versions of Workbench were so bad that they weren't even usable.
    Thankfully, things have since improved. Now, Workbench is quite a nice little
    tool.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 对于安装了桌面环境的机器，我们有 SCAP Workbench。不过，如果你曾经使用过该工具的早期版本，你可能会感到非常失望。事实上，早期版本的 Workbench
    糟糕到根本无法使用。幸运的是，情况现在已经有所改善。现在，Workbench 变成了一个相当不错的小工具。
- en: 'To get SCAP Workbench, just use the appropriate installation command. On CentOS
    7, do this:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取 SCAP Workbench，只需使用适当的安装命令。在 CentOS 7 上，执行以下操作：
- en: '[PRE113]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'On AlmaLinux 8 or AlmaLinux 9, do this:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AlmaLinux 8 或 AlmaLinux 9 上，执行以下操作：
- en: '[PRE114]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'On Ubuntu, do the following:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 上，执行以下操作：
- en: '[PRE115]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Yeah, the package name is just `scap-workbench` instead of `openscap-workbench`.
    I don't know why, but I do know that you'll never find it if you're searching
    for `openscap` packages.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，软件包名称是 `scap-workbench`，而不是 `openscap-workbench`。我不知道为什么，但我知道如果你搜索 `openscap`
    软件包，是永远找不到它的。
- en: 'Once you''ve installed it, you''ll see its menu item on the **Show Applications**
    portion of the **Activities** page:'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，你将在 **活动** 页面上的 **显示应用程序** 部分看到它的菜单项：
- en: '![Figure 12.2: SCAP Workbench on the Gnome 3 desktop](img/file76.png)'
  id: totrans-452
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.2：Gnome 3 桌面上的 SCAP Workbench](img/file76.png)'
- en: 'Figure 12.2: SCAP Workbench on the Gnome 3 desktop'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.2：Gnome 3 桌面上的 SCAP Workbench
- en: When you first open the program, you would think that the system would ask you
    for a root or sudo password. But, it doesn't. We'll see if that affects us in
    a moment.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 当你第一次打开程序时，你会认为系统会要求你输入 root 或 sudo 密码。但实际上并没有。我们稍后看看这是否会影响我们。
- en: 'The first thing you''ll see on the opening screen is a drop-down list for you
    to select the type of content that you want to load. I''ll select **AlmaLinux9**
    and then click on the **Load Content** button:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 在打开的屏幕上，你首先会看到一个下拉列表，供你选择要加载的内容类型。我将选择**AlmaLinux9**，然后点击**加载内容**按钮：
- en: '![Figure 12.3: Select content to load](img/file77.png)'
  id: totrans-456
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.3：选择要加载的内容](img/file77.png)'
- en: 'Figure 12.3: Select content to load'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.3：选择要加载的内容
- en: 'Next, you''ll see the top panel, where you can select the desired profile.
    You can also choose to customize the profile, and whether you want to run the
    scan on the local machine or on a remote machine. In the bottom pane, you''ll
    see a list of rules for that profile. You can expand each rule item to get a description
    of that rule:'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你会看到顶部面板，你可以选择所需的配置文件。你还可以选择自定义配置文件，并决定是否在本地机器或远程机器上运行扫描。在底部面板中，你会看到该配置文件的规则列表。你可以展开每一项规则，以查看该规则的描述：
- en: '![Figure 12.4: Viewing the rules, and generating a remediation role](img/file78.png)'
  id: totrans-459
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.4：查看规则，并生成修复角色](img/file78.png)'
- en: 'Figure 12.4: Viewing the rules, and generating a remediation role'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.4：查看规则，并生成修复角色
- en: At the bottom of this screen, you see some cool options. Click on the **Generate
    remediation role** button, and you can choose to create a Puppet manifest, an
    Ansible playbook, or a Bash shell script that you can distribute and apply to
    other AlmaLinux 9 machines on your network. You can also choose to **Fetch remote
    resources** and to **Remediate**.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个屏幕的底部，你会看到一些很酷的选项。点击**生成修复角色**按钮，你可以选择创建一个 Puppet 清单、一个 Ansible 剧本，或者一个 Bash
    shell 脚本，然后将它分发并应用到你网络中的其他 AlmaLinux 9 机器上。你还可以选择**获取远程资源**和**修复**。
- en: 'Now, let''s click that **Scan** button to see what happens:'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，点击那个**扫描**按钮，看看会发生什么：
- en: '![Figure 12.5: Enter your password](img/file79.png)'
  id: totrans-463
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.5：输入你的密码](img/file79.png)'
- en: 'Figure 12.5: Enter your password'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.5：输入你的密码
- en: Cool! As I had hoped, it prompts you for your sudo password. Beyond that, I'll
    leave you to play with it. It's just another one of those GUI-thingies, so the
    rest of it should be fairly easy to figure out.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 很棒！正如我所希望的，它会提示你输入 sudo 密码。除此之外，剩下的交给你去尝试。这只是另一个图形界面工具，应该比较容易上手。
- en: Next, we'll take a look at how to choose an appropriate OpenSCAP profile.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何选择一个合适的 OpenSCAP 配置文件。
- en: Choosing an OpenSCAP profile
  id: totrans-467
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择一个 OpenSCAP 配置文件
- en: So, now, you're saying, *Okay, this is all good, but how do I find out what's
    in these profiles and which one I need?* Well, there are several ways.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，现在你可能在想，*好的，这些都不错，但我怎么知道这些配置文件里有什么，以及我需要哪个？* 其实，有几种方式可以解决这个问题。
- en: The first way, which I've just shown you, is to install SCAP Workbench on a
    machine with a desktop interface and read through the descriptions of all the
    rules for each profile.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 我刚刚展示的第一种方式，是在拥有桌面界面的机器上安装 SCAP Workbench，并阅读每个配置文件中所有规则的描述。
- en: The second way, which might be a bit easier, is to go to the OpenSCAP website
    and look through the documentation that they have there.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方式，可能稍微简单一点，就是访问 OpenSCAP 网站，查看他们那里的文档。
- en: You'll find information about the available OpenSCAP profiles at [https://www.open-scap.org/security-policies/choosing-policy/](https://www.open-scap.org/security-policies/choosing-policy/).
  id: totrans-471
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在[https://www.open-scap.org/security-policies/choosing-policy/](https://www.open-scap.org/security-policies/choosing-policy/)上找到关于可用
    OpenSCAP 配置文件的信息。
- en: 'As far as knowing which profile to choose, there are a few things to consider:'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 至于如何知道选择哪个配置文件，有几个方面需要考虑：
- en: If you work in the financial sector or in a business that does online financial
    transactions, then go with the `pci-dss` profile.
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你在金融行业工作，或者在从事在线金融交易的公司工作，那么可以选择 `pci-dss` 配置文件。
- en: If you work for a government agency, especially if it's the US government, then
    go with either the `stig` profile or the `nispom` profile, as dictated by the
    particular agency.
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你在政府机构工作，特别是美国政府，那么可以根据具体机构的要求选择 `stig` 配置文件或 `nispom` 配置文件。
- en: If neither of these two considerations applies to your situation, then you'll
    just want to do some research and planning in order to figure out what really
    needs to be locked down. Look through the rules in each profile and read through
    the documentation on the OpenSCAP website to help you decide what you need.
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果这两种情况都不适用于你，那么你需要做一些研究和规划，找出哪些内容确实需要锁定。浏览每个配置文件中的规则，并阅读 OpenSCAP 网站上的文档，帮助你决定需要什么。
- en: With Red Hat and its offspring, you can even apply a policy as you install the
    operating system. We'll look at that next.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Red Hat 及其衍生版本，你甚至可以在安装操作系统时应用一个策略。接下来我们将介绍这个内容。
- en: Applying an OpenSCAP profile during system installation
  id: totrans-477
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在系统安装过程中应用 OpenSCAP 配置文件
- en: One of the things that I love about the Red Hat folk is that they totally get
    this whole security thing. Yeah, we can lock down other distros and make them
    more secure, as we've already seen. But with Red Hat distros, it's a bit easier.
    For a lot of things, the maintainers of the Red Hat-type distros have set secure
    default options that aren't securely set by default on other distros. (For example,
    prior to the release of Ubuntu 22.04, Red Hat distros had been the only ones that
    come with users' home directories locked down by default.) For other things, the
    Red Hat-type distros come with tools and installation options that help make life
    easier for a busy, security-conscious administrator.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 我非常喜欢 Red Hat 团队的一点是，他们完全理解安全问题。是的，我们可以锁定其他发行版并使其更加安全，正如我们已经看到的那样。但是使用 Red Hat
    发行版时，这就简单多了。很多情况下，Red Hat 类型的发行版的维护者已经设置了安全的默认选项，而其他发行版的默认设置并不安全。（例如，在 Ubuntu
    22.04 发布之前，Red Hat 发行版是唯一一个默认锁定用户主目录的发行版。）对于其他一些事情，Red Hat 类型的发行版带有工具和安装选项，帮助忙碌的安全管理员更加轻松地工作。
- en: 'When you install a Red Hat-type distro, you''ll be given the chance to apply
    an OpenSCAP profile during the operating system installation. Here, on this AlmaLinux
    9 installer screen, you''ll see the option to choose a security profile in the
    bottom right-hand corner of the screen:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装一个 Red Hat 类型的发行版时，你将有机会在操作系统安装过程中应用 OpenSCAP 配置文件。在这个 AlmaLinux 9 安装器的界面上，你可以看到在屏幕右下角有一个选择安全配置文件的选项：
- en: '![Figure 12.6: Select a SCAP profile during installation](img/file80.png)'
  id: totrans-480
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.6：在安装过程中选择 SCAP 配置文件](img/file80.png)'
- en: 'Figure 12.6: Select a SCAP profile during installation'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.6：在安装过程中选择 SCAP 配置文件
- en: 'All you have to do is click on that and then choose your profile:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需要点击它，然后选择你的配置文件：
- en: '![Figure: 12.7: Selecting the PCI-DSS profile](img/file81.png)'
  id: totrans-483
  prefs: []
  type: TYPE_IMG
  zh: '![图：12.7：选择 PCI-DSS 配置文件](img/file81.png)'
- en: 'Figure: 12.7: Selecting the PCI-DSS profile'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 图：12.7：选择 PCI-DSS 配置文件
- en: Okay, that pretty much wraps it up for our discussion of OpenSCAP. The only
    thing left to add is that, as great as OpenSCAP is, it won't do everything. For
    example, some security standards require that you have certain directories, such
    as `/home/` or `/var/`, on their own separate partitions. An OpenSCAP scan will
    alert you if that's not the case, but it can't change your existing partitioning
    scheme. So, for things like that, you'll need to get a checklist from the governing
    body that dictates your security requirements and do a bit of advanced work before
    you even touch OpenSCAP.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这差不多就是我们关于 OpenSCAP 讨论的总结了。唯一需要补充的是，尽管 OpenSCAP 非常强大，但它并不能做所有事情。例如，一些安全标准要求你将某些目录（如
    `/home/` 或 `/var/`）放在独立的分区上。OpenSCAP 扫描会提醒你如果情况不是这样，但它无法更改你现有的分区方案。因此，对于这类问题，你需要从制定安全要求的管理机构那里获取检查清单，并在使用
    OpenSCAP 之前做一些高级操作。
- en: Summary
  id: totrans-486
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: We covered a lot of ground in this chapter, and we saw some really cool stuff.
    We began by looking at a couple of antivirus scanners so that we can prevent infecting
    any Windows machines that access our Linux servers. In the *Scanning for rootkits
    with Rootkit Hunter* section, we saw how to scan for those nasty rootkits. We
    also saw a couple of quick techniques to examine a potentially malicious file.
    It's important to know how to audit systems, especially in high-security environments,
    and we saw how to do that. Finally, we wrapped things up with a discussion of
    hardening our systems with OpenSCAP.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们涵盖了很多内容，也看到了一些非常酷的东西。我们从查看几个杀毒扫描器开始，以便防止任何访问我们 Linux 服务器的 Windows 机器被感染。在*使用
    Rootkit Hunter 扫描 rootkit* 部分，我们学习了如何扫描那些讨厌的 rootkit。我们还看到了一些快速技术来检查潜在的恶意文件。了解如何审计系统非常重要，尤其是在高安全性环境中，我们也看到了如何做到这一点。最后，我们以讨论如何使用
    OpenSCAP 加固系统来结束。
- en: In the next chapter, we'll look at logging and log file security. I'll see you
    there.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将讨论日志记录和日志文件安全。我在那里见！
- en: Questions
  id: totrans-489
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: Which of the following is true about rootkits?
  id: totrans-490
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下关于 rootkit 哪项是正确的？
- en: They only infect Windows operating systems.
  id: totrans-491
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它们只会感染 Windows 操作系统。
- en: The purpose of planting a rootkit is to gain root privileges to a system.
  id: totrans-492
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 植入 rootkit 的目的是获得系统的 root 权限。
- en: An intruder must have already gained root privileges in order to plant a rootkit.
  id: totrans-493
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 入侵者必须已经获得 root 权限，才能植入 rootkit。
- en: A rootkit isn't very harmful.
  id: totrans-494
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Rootkit 不会造成很大的危害。
- en: Which of the following methods would you use to keep `maldet` updated?
  id: totrans-495
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会使用以下哪种方法来保持 `maldet` 更新？
- en: Manually create a `cron` job that runs every day.
  id: totrans-496
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 手动创建一个每天运行的 `cron` 任务。
- en: Do nothing, because `maldet` automatically updates itself.
  id: totrans-497
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么都不做，因为 `maldet` 会自动更新自己。
- en: Once a day, run the normal update command for your operating system.
  id: totrans-498
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每天运行操作系统的常规更新命令。
- en: Run the `maldet update` utility from the command line.
  id: totrans-499
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令行运行 `maldet update` 工具。
- en: Which of the following is true about the `auditd` service?
  id: totrans-500
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关于 `auditd` 服务，以下哪项是正确的？
- en: On an Ubuntu system, you'll need to stop or restart it with the `service` command.
  id: totrans-501
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 系统上，你需要使用 `service` 命令停止或重启它。
- en: On a Red Hat-type system, you'll need to stop or restart it with the `service`
    command.
  id: totrans-502
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Red Hat 类型的系统上，你需要使用 `service` 命令停止或重启它。
- en: On an Ubuntu system, it comes already installed.
  id: totrans-503
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 系统上，它已经预先安装了。
- en: On a Red Hat-type system, you'll need to install it yourself.
  id: totrans-504
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Red Hat 类型的系统上，你需要自己安装它。
- en: You need to create an auditing rule that will alert you every time a particular
    person reads or creates a file. Which of the following syscalls would you use
    in that rule?
  id: totrans-505
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要创建一个审计规则，每次某个特定人读取或创建文件时都会发出警告。你会在该规则中使用哪个 syscalls？
- en: '`openfile`'
  id: totrans-506
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`openfile`'
- en: '`fileread`'
  id: totrans-507
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`fileread`'
- en: '`openat`'
  id: totrans-508
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`openat`'
- en: '`fileopen`'
  id: totrans-509
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`fileopen`'
- en: Which file does the `auditd` service use to log auditing events?
  id: totrans-510
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`auditd` 服务使用哪个文件来记录审计事件？'
- en: '`/var/log/messages`'
  id: totrans-511
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/log/messages`'
- en: '`/var/log/syslog`'
  id: totrans-512
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/log/syslog`'
- en: '`/var/log/auditd/audit`'
  id: totrans-513
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/log/auditd/audit`'
- en: '`/var/log/audit/audit.log`'
  id: totrans-514
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/log/audit/audit.log`'
- en: You need to create custom auditing rules for `auditd`. Where would you place
    the new rules?
  id: totrans-515
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要为 `auditd` 创建自定义审计规则。你会将新规则放在哪里？
- en: '`/usr/share/audit-version_number/`'
  id: totrans-516
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/usr/share/audit-version_number/`'
- en: '`/etc/audit/`'
  id: totrans-517
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/etc/audit/`'
- en: '`/etc/audit.d/rules/`'
  id: totrans-518
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/etc/audit.d/rules/`'
- en: '`/etc/audit/rules.d/`'
  id: totrans-519
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/etc/audit/rules.d/`'
- en: You're setting up a web server for a bank's customer portal. Which of the following
    SCAP profiles might you apply?
  id: totrans-520
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你正在为银行的客户门户设置 Web 服务器。你可能应用以下哪个 SCAP 配置文件？
- en: STIG
  id: totrans-521
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: STIG
- en: NISPOM
  id: totrans-522
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: NISPOM
- en: PCI-DSS
  id: totrans-523
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: PCI-DSS
- en: Sarbanes-Oxley
  id: totrans-524
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Sarbanes-Oxley
- en: Which of the following is true about OpenSCAP?
  id: totrans-525
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关于 OpenSCAP，以下哪项是正确的？
- en: It can't remediate everything, so you'll need to do advance planning with a
    checklist before setting up a server.
  id: totrans-526
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它不能自动修复所有问题，所以在设置服务器之前，你需要做一些预先规划并使用检查清单。
- en: It can automatically remediate every problem on your system.
  id: totrans-527
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它可以自动修复系统中的每个问题。
- en: It's only available for Red Hat-type distros.
  id: totrans-528
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它仅适用于 Red Hat 类型的发行版。
- en: Ubuntu comes with a better selection of SCAP profiles.
  id: totrans-529
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ubuntu 提供了更好的 SCAP 配置文件选择。
- en: Which of the following commands would you use to generate a user authentication
    report?
  id: totrans-530
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个命令可用于生成用户认证报告？
- en: '`sudo ausearch -au`'
  id: totrans-531
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo ausearch -au`'
- en: '`sudo aureport -au`'
  id: totrans-532
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo aureport -au`'
- en: Define an audit rule, then do `sudo ausearch -au`.
  id: totrans-533
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义审计规则，然后执行 `sudo ausearch -au`。
- en: Define an audit rule, then do `sudo aureport -au`.
  id: totrans-534
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义审计规则，然后执行 `sudo aureport -au`。
- en: Which set of Rootkit Hunter options would you use to have a rootkit scan automatically
    run every night?
  id: totrans-535
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪组 Rootkit Hunter 选项可以使 rootkit 扫描每天自动运行？
- en: '`-c`'
  id: totrans-536
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`-c`'
- en: '`-c --rwo`'
  id: totrans-537
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`-c --rwo`'
- en: '`--rwo`'
  id: totrans-538
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`--rwo`'
- en: '`-c --cronjob --rwo`'
  id: totrans-539
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`-c --cronjob --rwo`'
- en: Further reading
  id: totrans-540
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'How to install and configure maldet: [https://www.servernoobs.com/how-to-install-and-configure-maldet-linux-malware-detect-lmd/](https://www.servernoobs.com/how-to-install-and-configure-maldet-linux-malware-detect-lmd/)'
  id: totrans-541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如何安装和配置 maldet: [https://www.servernoobs.com/how-to-install-and-configure-maldet-linux-malware-detect-lmd/](https://www.servernoobs.com/how-to-install-and-configure-maldet-linux-malware-detect-lmd/)'
- en: 'Symbiote: Evasive Linux rootkit malware: [https://www.theregister.com/2022/06/10/symbiote_linux_malware/](https://www.theregister.com/2022/06/10/symbiote_linux_malware/)'
  id: totrans-542
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Symbiote: 逃避的 Linux rootkit 恶意软件: [https://www.theregister.com/2022/06/10/symbiote_linux_malware/](https://www.theregister.com/2022/06/10/symbiote_linux_malware/)'
- en: 'Configuring and auditing Linux systems with `auditd` daemon: [https://linux-audit.com/configuring-and-auditing-linux-systems-with-audit-daemon/](https://linux-audit.com/configuring-and-auditing-linux-systems-with-audit-daemon/)'
  id: totrans-543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '配置和审计 Linux 系统与 `auditd` 守护进程: [https://linux-audit.com/configuring-and-auditing-linux-systems-with-audit-daemon/](https://linux-audit.com/configuring-and-auditing-linux-systems-with-audit-daemon/)'
- en: 'Monitor changes in directories with `inotifywatch`: [https://distrowatch.com/weekly.php?issue=20220905](https://distrowatch.com/weekly.php?issue=20220905)'
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '使用 `inotifywatch` 监控目录变化: [https://distrowatch.com/weekly.php?issue=20220905](https://distrowatch.com/weekly.php?issue=20220905)'
- en: 'The OpenSCAP portal: [https://www.open-scap.org/](https://www.open-scap.org/)'
  id: totrans-545
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAP 门户：[https://www.open-scap.org/](https://www.open-scap.org/)
- en: 'Practical OpenSCAP: [https://www.redhat.com/files/summit/session-assets/2016/SL45190-practical-openscap_security-standard-compliance-and-reporting.pdf](https://www.redhat.com/files/summit/session-assets/2016/SL45190-practical-openscap_security-standard-compliance-and-reporting.pdf)'
  id: totrans-546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Practical OpenSCAP：[https://www.redhat.com/files/summit/session-assets/2016/SL45190-practical-openscap_security-standard-compliance-and-reporting.pdf](https://www.redhat.com/files/summit/session-assets/2016/SL45190-practical-openscap_security-standard-compliance-and-reporting.pdf)
- en: 'Center for Internet Security (CIS) benchmarks: [https://www.cisecurity.org/cis-benchmarks/](https://www.cisecurity.org/cis-benchmarks/)'
  id: totrans-547
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Center for Internet Security (CIS) 基准：[https://www.cisecurity.org/cis-benchmarks/](https://www.cisecurity.org/cis-benchmarks/)
- en: 'Auditing the System documentation for RHEL 9: [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#doc-wrapper](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#doc-wrapper)'
  id: totrans-548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHEL 9 系统文档的审计：[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#doc-wrapper](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/auditing-the-system_security-hardening#doc-wrapper)
- en: Answers
  id: totrans-549
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 答案
- en: c
  id: totrans-550
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: b
  id: totrans-551
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: b
  id: totrans-552
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c
  id: totrans-553
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: d
  id: totrans-554
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
- en: d
  id: totrans-555
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
- en: c
  id: totrans-556
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: a
  id: totrans-557
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: a
- en: b
  id: totrans-558
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: d
  id: totrans-559
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
