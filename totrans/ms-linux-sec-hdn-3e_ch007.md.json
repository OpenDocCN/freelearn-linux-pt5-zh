["```\nGNU Privacy Guard (GPG)\nEncrypting partitions with Linux Unified Key Setup (LUKS)\n```", "```\nsudo dnf install pinentry\n```", "```\ngpg --full-generate-key\n```", "```\ngpg: /home/donnie/.gnupg/trustdb.gpg: trustdb created\ngpg: key 56B59F39019107DF marked as ultimately trusted\ngpg: directory '/home/donnie/.gnupg/openpgp-revocs.d' created\ngpg: revocation certificate stored as '/home/donnie/.gnupg/openpgp-revocs.d/BD057E0E01E664424E8B812E56B59F39019107DF.rev'\npublic and secret key created and signed.\n```", "```\nPlease select what kind of key you want:\n (1) RSA and RSA (default)\n (2) DSA and Elgamal\n (3) DSA (sign only)\n (4) RSA (sign only)\n(14) Existing key from card\nYour selection?\n```", "```\nPlease specify how long the key should be valid. \n 0 = key does not expire \n <n> = key expires in n days \n <n>w = key expires in n weeks \n <n>m = key expires in n months \n <n>y = key expires in n years \nKey is valid for? (0) \n```", "```\nGnuPG needs to construct a user ID to identify your key. \nReal name: Donald A. Tevault \nEmail address: donniet@something.net \nComment: No comment \nYou selected this USER-ID: \n \"Donald A. Tevault (No comment) <donniet@something.net>\" \nChange (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit?\nCreate a passphrase for your private key:\nYou need a Passphrase to protect your secret key. \nWe need to generate a lot of random bytes. It is a good idea to perform some other action (type on the keyboard, move the mouse, utilize the disks) during the prime generation; this gives the random number generator a better chance to gain enough entropy. \n```", "```\ngpg: /home/donnie/.gnupg/trustdb.gpg: trustdb created \ngpg: key 19CAEC5B marked as ultimately trusted \npublic and secret key created and signed. \ngpg: checking the trustdb \ngpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model \ngpg: depth: 0 valid: 1 signed: 0 trust: 0-, 0q, 0n, 0m, 0f, 1u \npub 2048R/19CAEC5B 2017-10-26 \n Key fingerprint = 8DE5 8894 2E37 08C4 5B26 9164 C77C 6944 19CA EC5B \nuid Donald A. Tevault (No comment) <donniet@something.net> \nsub 2048R/37582F29 2017-10-26\n```", "```\n[donnie@localhost ~]$ gpg --list-keys\n /home/donnie/.gnupg/pubring.gpg\n -------------------------------\n pub 2048R/19CAEC5B 2017-10-26\n uid Donald A. Tevault (No comment) <donniet@something.net>\n sub 2048R/37582F29 2017-10-26\n [donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ ls -l .gnupg/\ntotal 12\ndrwx------. 2 donnie donnie   58 Oct 26 14:53 openpgp-revocs.d\ndrwx------. 2 donnie donnie  110 Oct 26 14:53 private-keys-v1.d\n-rw-r--r--. 1 donnie donnie 1970 Oct 26 14:53 pubring.kbx\n-rw-------. 1 donnie donnie   32 Oct 26 14:43 pubring.kbx~\n-rw-------. 1 donnie donnie 1280 Oct 26 15:51 trustdb.gpg\n[donnie@localhost ~]$\n```", "```\nsudo useradd maggie\nsudo passwd maggie\n```", "```\nsudo adduser maggie\n```", "```\n[donnie@localhost ~]$ gpg -c secret_squirrel_stuff.txt\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ ls -l\n total 1748\n -rw-rw-r--. 1 donnie donnie 37 Oct 26 14:22 secret_squirrel_stuff.txt\n -rw-rw-r--. 1 donnie donnie 94 Oct 26 14:22\n secret_squirrel_stuff.txt.gpg\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ shred -u -z secret_squirrel_stuff.txt\n[donnie@localhost ~]$\n```", "```\nless secret_squirrel_stuff.txt.gpg\nShhh!!!! This file is super-secret.\nsecret_squirrel_stuff.txt.gpg (END)\n```", "```\nsudo mkdir /shared\nsudo chown donnie: /shared\nsudo chmod 755 /shared\nmv secret_squirrel_stuff.txt.gpg /shared\n```", "```\nsu - maggie\ncd /shared\n[maggie@localhost shared]$ less secret_squirrel_stuff.txt.gpg\n\"secret_squirrel_stuff.txt.gpg\" may be a binary file. See it anyway?\n```", "```\n<8C>^M^D^C^C^B<BD>2=<D3>͈u<93><CE><C9>MОOy<B6>^O<A2><AD>}Rg9<94><EB><C4>^W^E\n <A6><8D><B9><B8><D3>(<98><C4>æF^_8Q2b<B8>C<B5><DB>^]<F1><CD>#<90>H<EB><90><\n C5>^S%X [<E9><EF><C7>\n ^@y+<FC><F2><BA><U+058C>H'+<D4>v<84>Y<98>G<D7>֊\nsecret_squirrel_stuff.txt.gpg (END)\n```", "```\n[maggie@localhost shared]$ exit\n[donnie@localhost shared]$ gpg -o secret_squirrel_stuff.txt -d secret_squirrel_stuff.txt.gpg\n gpg: AES256.CFB encrypted data\n gpg: encrypted with 1 passphrase\n Shhh!!!! This file is super-secret.\n [donnie@localhost shared]$\n```", "```\ncd .gnupg\ngpg --export -a -o donnie_public-key.txt\n```", "```\ndonnie@ubuntu:~/.gnupg$ gpg --import frank_public-key.txt\ngpg: key 4CFC6990: public key \"Frank Siamese (I am a cat.) <frank@any.net>\" imported\ngpg: Total number processed: 1\ngpg: imported: 1 (RSA: 1)\ndonnie@ubuntu:~/.gnupg$\nfrank@ubuntu:~/.gnupg$ gpg --import donnie_public-key.txt\ngpg: key 9FD7014B: public key \"Donald A. Tevault <donniet@something.net>\" imported\ngpg: Total number processed: 1\ngpg:               imported: 1  (RSA: 1)\nfrank@ubuntu:~/.gnupg$\n```", "```\ndonnie@ubuntu:~$ gpg -s -e secret_stuff_for_frank.txt\n. . .\n. . .\nIt is NOT certain that the key belongs to the person named\nin the user ID.  If you *really* know what you are doing,\nyou may answer the next question with yes.\nUse this key anyway? (y/N) y\nCurrent recipients:\n2048R/CD8104F7 2017-10-27 \"Frank Siamese (I am a cat.) <frank@any.net>\"\nEnter the user ID.  End with an empty line:\ndonnie@ubuntu:~$\n```", "```\ndonnie@ubuntu:~$ ls -l\ntotal 8\n. . .\n-rw-rw-r-- 1 donnie donnie 143 Oct 27 18:37 secret_stuff_for_frank.txt\n-rw-rw-r-- 1 donnie donnie 790 Oct 27 18:39 secret_stuff_for_frank.txt.gpg\ndonnie@ubuntu:~$\n```", "```\nfrank@ubuntu:~$ gpg -d secret_stuff_for_frank.txt.gpg\n. . .\n. . .\ngpg: gpg-agent is not available in this session\ngpg: encrypted with 2048-bit RSA key, ID CD8104F7, created 2017-10-27\n      \"Frank Siamese (I am a cat.) <frank@any.net>\"\nThis is TOP SECRET stuff that only Frank can see!!!!!\nIf anyone else see it, it's the end of the world as we know it.\n(With apologies to REM.)\ngpg: Signature made Fri 27 Oct 2017 06:39:15 PM EDT using RSA key ID 9FD7014B\ngpg: Good signature from \"Donald A. Tevault <donniet@something.net>\"\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: DB0B 31B8 876D 9B2C 7F12  9FC3 886F 3357 9FD7 014B\nfrank@ubuntu:~$\n```", "```\nfrank@ubuntu:~$ cd .gnupg\nfrank@ubuntu:~/.gnupg$ gpg --edit-key donnie\ngpg (GnuPG) 1.4.20; Copyright (C) 2015 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\ngpg: checking the trustdb\ngpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model\ngpg: depth: 0  valid:   2  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 2u\npub  2048R/9FD7014B  created: 2017-10-27  expires: never       usage: SC\n                     trust: ultimate      validity: ultimate\nsub  2048R/9625E7E9  created: 2017-10-27  expires: never       usage: E\n[ultimate] (1). Donald A. Tevault <donniet@something.net>\ngpg>\n```", "```\ngpg> trust\npub  2048R/9FD7014B  created: 2017-10-27  expires: never       usage: SC\n                     trust: unknown       validity: unknown\nsub  2048R/9625E7E9  created: 2017-10-27  expires: never       usage: E\n[ unknown] (1). Donald A. Tevault <donniet@something.net>\nPlease decide how far you trust this user to correctly verify other users' keys\n(by looking at passports, checking fingerprints from different sources, etc.)\n  1 = I don't know or won't say\n  2 = I do NOT trust\n  3 = I trust marginally\n  4 = I trust fully\n  5 = I trust ultimately\n  m = back to the main menu\nYour decision? 5\nDo you really want to set this key to ultimate trust? (y/N) y\n```", "```\nfrank@ubuntu:~$ gpg -d secret_stuff_for_frank.txt.gpg\nYou need a passphrase to unlock the secret key for\nuser: \"Frank Siamese (I am a cat.) <frank@any.net>\"\n2048-bit RSA key, ID CD8104F7, created 2017-10-27 (main key ID 4CFC6990)\ngpg: gpg-agent is not available in this session\ngpg: encrypted with 2048-bit RSA key, ID CD8104F7, created 2017-10-27\n      \"Frank Siamese (I am a cat.) <frank@any.net>\"\nThis is TOP SECRET stuff that only Frank can see!!!!!\nIf anyone else see it, it's the end of the world as we know it.\n(With apologies to REM.)\ngpg: Signature made Fri 27 Oct 2017 06:39:15 PM EDT using RSA key ID 9FD7014B\ngpg: Good signature from \"Donald A. Tevault <donniet@something.net>\"\nfrank@ubuntu:~$\n```", "```\ndonnie@ubuntu:~$ gpg -s not_secret_for_frank.txt\nYou need a passphrase to unlock the secret key for\nuser: \"Donald A. Tevault <donniet@something.net>\"\n2048-bit RSA key, ID 9FD7014B, created 2017-10-27\ngpg: gpg-agent is not available in this session\ndonnie@ubuntu:~$ ls -l\n. . .\n-rw-rw-r-- 1 donnie donnie  40 Oct 27 19:30 not_secret_for_frank.txt\n-rw-rw-r-- 1 donnie donnie 381 Oct 27 19:31 not_secret_for_frank.txt.gpg\n```", "```\nfrank@ubuntu:~$ less not_secret_for_frank.txt.gpg\n```", "```\nfrank@ubuntu:~$ gpg --verify not_secret_for_frank.txt.gpg\ngpg: Signature made Fri 27 Oct 2017 07:31:12 PM EDT using RSA key ID 9FD7014B\ngpg: Good signature from \"Donald A. Tevault <donniet@something.net>\"\nfrank@ubuntu:~$\n```", "```\n[donnie@localhost ~]$ sudo lvdisplay\n  --- Logical volume ---\n  LV Path                /dev/almalinux/swap\n  LV Name                swap\n  VG Name                almalinux\n. . .\n. . .\n   --- Logical volume ---\n  LV Path                /dev/almalinux/root\n  LV Name                root\n  VG Name                almalinux\n. . .\n. . .\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo pvdisplay\n  --- Physical volume ---\n  PV Name               /dev/mapper/luks-b0acc532-5347-417e-a86e-a3ee8431fba7\n  VG Name               almalinux\n  PV Size               <19.30 GiB / not usable 2.00 MiB\n  Allocatable           yes (but full)\n  PE Size               4.00 MiB\n  Total PE              4940\n  Free PE               0\n  Allocated PE          4940\n  PV UUID               mRI75u-aVJI-uRjC-GY1O-ih7N-T3co-vssRRX\n\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo cat /etc/crypttab \nluks-b0acc532-5347-417e-a86e-a3ee8431fba7 UUID=b0acc532-5347-417e-a86e-a3ee8431fba7 none discard\n[donnie@localhost ~]$\n```", "```\n donnie@ubuntu2204-packt:~$ ls -l /dev/sd*\nbrw-rw---- 1 root disk 8,  0 Oct 27 19:33 /dev/sda\nbrw-rw---- 1 root disk 8,  1 Oct 27 19:33 /dev/sda1\nbrw-rw---- 1 root disk 8,  2 Oct 27 19:33 /dev/sda2\nbrw-rw---- 1 root disk 8,  3 Oct 27 19:33 /dev/sda3\nbrw-rw---- 1 root disk 8, 16 Oct 27 19:33 /dev/sdb\ndonnie@ubuntu2204-packt:~$\n```", "```\nsudo gdisk /dev/sdb\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo gdisk -l /dev/sdb\nGPT fdisk (gdisk) version 1.0.8\nPartition table scan:\n  MBR: protective\n  BSD: not present\n  APM: not present\n  GPT: present\n. . .\n. . .\nNumber  Start (sector)    End (sector)  Size       Code  Name\n   1            2048        41943006   20.0 GiB    8300  Linux filesystem\ndonnie@ubuntu2204-packt:~$\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo cryptsetup -v -y luksFormat /dev/sdb1\nWARNING!\n========\nThis will overwrite data on /dev/sdb1 irrevocably.\nAre you sure? (Type 'yes' in capital letters): YES\nEnter passphrase for /dev/sdb1: \nVerify passphrase: \nKey slot 0 created.\nCommand successful.\ndonnie@ubuntu2204-packt:~\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo cryptsetup luksDump /dev/sdb1\nLUKS header information\nVersion:        2\nEpoch:          3\nMetadata area:  16384 [bytes]\nKeyslots area:  16744448 [bytes]\nUUID:           e38e087a-205c-4aeb-81d5-03f03b8e8020\nLabel:          (no label)\nSubsystem:      (no subsystem)\nFlags:          (no flags)\n. . .\n. . .\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo cryptsetup luksOpen /dev/sdb1 secrets\nEnter passphrase for /dev/sdb1: \ndonnie@ubuntu2204-packt:~$\n```", "```\ndonnie@ubuntu2204-packt:~$ cd /dev/mapper\ndonnie@ubuntu2204-packt:/dev/mapper$ ls -l secrets \nlrwxrwxrwx 1 root root 7 Oct 27 19:50 secrets -> ../dm-1\ndonnie@ubuntu2204-packt:/dev/mapper$\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo dmsetup info secrets\nName:              secrets\nState:             ACTIVE\nRead Ahead:        256\nTables present:    LIVE\nOpen count:        0\nEvent number:      0\nMajor, minor:      253, 1\nNumber of targets: 1\nUUID: CRYPT-LUKS2-e38e087a205c4aeb81d503f03b8e8020-secrets\ndonnie@ubuntu2204-packt:~$\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo mkfs.xfs /dev/mapper/secrets\nmeta-data=/dev/mapper/secrets    isize=512    agcount=4, agsize=1309631 blks\n         =                       sectsz=512   attr=2, projid32bit=1\n         =                       crc=1        finobt=1, sparse=1, rmapbt=0\n         =                       reflink=1    bigtime=0 inobtcount=0\ndata     =                       bsize=4096   blocks=5238523, imaxpct=25\n         =                       sunit=0      swidth=0 blks\nnaming   =version 2              bsize=4096   ascii-ci=0, ftype=1\nlog      =internal log           bsize=4096   blocks=2560, version=2\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\nrealtime =none                   extsz=4096   blocks=0, rtextents=0\ndonnie@ubuntu2204-packt:~$\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo mkdir /secrets\ndonnie@ubuntu2204-packt:~$ sudo mount /dev/mapper/secrets /secrets/\ndonnie@ubuntu2204-packt:~$\n```", "```\ndonnie@ubuntu2204-packt:~$ mount | grep 'secrets'\n/dev/mapper/secrets on /secrets type xfs (rw,relatime,attr2,inode64,logbufs=8,logbsize=32k,noquota)\ndonnie@ubuntu2204-packt:~$\n```", "```\nluks-b0acc532-5347-417e-a86e-a3ee8431fba7 UUID=b0acc532-5347-417e-a86e-a3ee8431fba7 none discard\n```", "```\n/dev/mapper/almalinux-root /           xfs     defaults,x-systemd.device-timeout=0 0 0\nUUID=28218289-34cb-4c57-9755-379c65d580af /boot       xfs     defaults        0 0\n/dev/mapper/almalinux-swap none      swap    defaults,x-systemd.device-timeout=0 0 0\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo cryptsetup luksUUID /dev/sdb1\ne38e087a-205c-4aeb-81d5-03f03b8e8020\ndonnie@ubuntu2204-packt:~$\n```", "```\nluks-e38e087a-205c-4aeb-81d5-03f03b8e8020 UUID=e38e087a-205c-4aeb-81d5-03f03b8e8020 none\n```", "```\n/dev/mapper/luks-e38e087a-205c-4aeb-81d5-03f03b8e8020 /secrets xfs defaults 0 0\n```", "```\ndonnie@ubuntu2204-packt:~$ mount | grep 'secrets'\n/dev/mapper/luks-e38e087a-205c-4aeb-81d5-03f03b8e8020 on /secrets type xfs (rw,relatime,attr2,inode64,logbufs=8,logbsize=32k,noquota)\ndonnie@ubuntu2204-packt:~$\n```", "```\nsudo apt install ecryptfs-utils\n```", "```\nsudo adduser --encrypt-home goldie\n```", "```\necryptfs-unwrap-passphrase .ecryptfs/wrapped-passphrase\n```", "```\nsudo apt install ecryptfs-utils\n```", "```\ncharlie@ubuntu2:~$ ecryptfs-setup-private\nEnter your login passphrase [charlie]:\nEnter your mount passphrase [leave blank to generate one]:\nEnter your mount passphrase (again):\n************************************************************************\nYOU SHOULD RECORD YOUR MOUNT PASSPHRASE AND STORE IT IN A SAFE LOCATION.\n  ecryptfs-unwrap-passphrase ~/.ecryptfs/wrapped-passphrase\nTHIS WILL BE REQUIRED IF YOU NEED TO RECOVER YOUR DATA AT A LATER TIME.\n************************************************************************\n. . .\n. . .\ncharlie@ubuntu2:~$\n```", "```\ncharlie@ubuntu2:~$ ecryptfs-unwrap-passphrase .ecryptfs/wrapped-passphrase\nPassphrase:\nTurkeyLips\ncharlie@ubuntu2:~$\n```", "```\ncharlie@ubuntu2:~$ ls -la\ntotal 40\ndrwxr-xr-x 6 charlie charlie 4096 Oct 30 17:00 .\ndrwxr-xr-x 4 root root 4096 Oct 30 16:38 ..\n-rw------- 1 charlie charlie 270 Oct 30 17:00 .bash_history\n-rw-r--r-- 1 charlie charlie 220 Aug 31 2015 .bash_logout\n-rw-r--r-- 1 charlie charlie 3771 Aug 31 2015 .bashrc\ndrwx------ 2 charlie charlie 4096 Oct 30 16:39 .cache\ndrwx------ 2 charlie charlie 4096 Oct 30 16:57 .ecryptfs\ndrwx------ 2 charlie charlie 4096 Oct 30 16:57 Private\ndrwx------ 2 charlie charlie 4096 Oct 30 16:57 .Private\n-rw-r--r-- 1 charlie charlie 655 May 16 08:49 .profile\ncharlie@ubuntu2:~$\n```", "```\ndonnie@ubuntu2:/etc/pam.d$ grep 'ecryptfs' *\ncommon-auth:auth    optional    pam_ecryptfs.so unwrap\ncommon-password:password    optional    pam_ecryptfs.so\ncommon-session:session    optional    pam_ecryptfs.so unwrap\ncommon-session-noninteractive:session    optional    pam_ecryptfs.so unwrap\ndonnie@ubuntu2:/etc/pam.d$\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo mkdir /secrets2\n[sudo] password for donnie: \ndonnie@ubuntu2204-packt:~$\n```", "```\ndonnie@ubuntu2204-packt:~$ sudo mount -t ecryptfs /secrets2/ /secrets2/\nSelect key type to use for newly created files: \n 1) passphrase\n 2) tspi\nSelection: 1\nPassphrase: \nSelect cipher: \n 1) aes: blocksize = 16; min keysize = 16; max keysize = 32\n 2) blowfish: blocksize = 8; min keysize = 16; max keysize = 56\n 3) des3_ede: blocksize = 8; min keysize = 24; max keysize = 24\n 4) twofish: blocksize = 16; min keysize = 16; max keysize = 32\n 5) cast6: blocksize = 16; min keysize = 16; max keysize = 32\n 6) cast5: blocksize = 8; min keysize = 5; max keysize = 16\nSelection [aes]:\n```", "```\nEnable plaintext passthrough (y/n) [n]:\nEnable filename encryption (y/n) [n]: y\n```", "```\nFilename Encryption Key (FNEK) Signature [e339e1ebf3d58c36]:\nAttempting to mount with the following options:\n  ecryptfs_unlink_sigs\n  ecryptfs_fnek_sig=e339e1ebf3d58c36\n  ecryptfs_key_bytes=16\n  ecryptfs_cipher=aes\n  ecryptfs_sig=e339e1ebf3d58c36\n```", "```\nWARNING: Based on the contents of [/root/.ecryptfs/sig-cache.txt],\nit looks like you have never mounted with this key\nbefore. This could mean that you have typed your\npassphrase wrong.\nWould you like to proceed with the mount (yes/no)? : yes\nWould you like to append sig [e339e1ebf3d58c36] to\n[/root/.ecryptfs/sig-cache.txt]\nin order to avoid this warning in the future (yes/no)? : yes\nSuccessfully appended new sig to user sig cache file\nMounted eCryptfs\n```", "```\ncd /secrets2\nsudo vim secret_stuff.txt\ncd\nsudo umount /secrets2\ndonnie@ubuntu2204-packt:~$ ls -l /secrets2/\ntotal 12\n-rw-rw-r-- 1 donnie donnie 12288 Oct 28 19:04 ECRYPTFS_FNEK_ENCRYPTED.FXbXCS5fwxKABUQtEPlumGPaN-RGvqd13yybkpTr1eCVWVHdr-lrmi1X9Vu-mLM-A-VeqIdN6KNZGcs-\ndonnie@ubuntu2204-packt:~$\n```", "```\ndonnie@ubuntu:~$ sudo ecryptfs-setup-swap\nWARNING:\nAn encrypted swap is required to help ensure that encrypted files are not leaked to disk in an unencrypted format.\nHOWEVER, THE SWAP ENCRYPTION CONFIGURATION PRODUCED BY THIS PROGRAM WILL BREAK HIBERNATE/RESUME ON THIS SYSTEM!\nNOTE: Your suspend/resume capabilities will not be affected.\nDo you want to proceed with encrypting your swap? [y/N]: y\nINFO: Setting up swap: [/dev/sda5]\nWARNING: Commented out your unencrypted swap from /etc/fstab\nswapon: stat of /dev/mapper/cryptswap1 failed: No such file or directory\ndonnie@ubuntu:~$\n```", "```\ndonnie@donnie-VirtualBox:~$ tar xjvf veracrypt-1.25.9-setup.tar.bz2 \nveracrypt-1.25.9-setup-console-x64\nveracrypt-1.25.9-setup-console-x86\nveracrypt-1.25.9-setup-gtk3-console-x64\nveracrypt-1.25.9-setup-gtk3-gui-x64\nveracrypt-1.25.9-setup-gui-x64\nveracrypt-1.25.9-setup-gui-x86\ndonnie@donnie-VirtualBox:~$\n```", "```\ndonnie@donnie-VirtualBox:~$ ./veracrypt-1.25.9-setup-gui-x64\n```", "```\nveracrypt -c\n```", "```\ndonnie@ubuntu:~$ veracrypt -c\nVolume type:\n 1) Normal\n 2) Hidden\nSelect [1]:\nEnter volume path: /home/donnie/good_stuff\nEnter volume size (sizeK/size[M]/sizeG): 2G\nEncryption Algorithm:\n 1) AES\n 2) Serpent\n. . .\n. . .\nSelect [1]:\n. . .\n. . .\n```", "```\nFilesystem:\n 1) None\n 2) FAT\n 3) Linux Ext2\n 4) Linux Ext3\n 5) Linux Ext4\n 6) NTFS\n 7) exFAT\nSelect [2]:\n```", "```\nEnter password:\nRe-enter password:\nEnter PIM: 8891\nEnter keyfile path [none]:\nPlease type at least 320 randomly chosen characters and then press Enter:\n```", "```\ndonnie@ubuntu:~$ ls -l good_stuff\n-rw------- 1 donnie donnie 2147483648 Nov  1 17:02 good_stuff\ndonnie@ubuntu:~$\n```", "```\ndonnie@ubuntu:~$ mkdir good_stuff_dir\ndonnie@ubuntu:~$\n```", "```\ndonnie@ubuntu:~$ veracrypt good_stuff good_stuff_dir\nEnter password for /home/donnie/good_stuff:\nEnter PIM for /home/donnie/good_stuff: 8891\nEnter keyfile [none]:\nProtect hidden volume (if any)? (y=Yes/n=No) [No]:\nEnter your user password or administrator password:\ndonnie@ubuntu:~$\n```", "```\ndonnie@ubuntu:~$ veracrypt -l\n1: /home/donnie/secret_stuff /dev/mapper/veracrypt1 /home/donnie/secret_stuff_dir\n2: /home/donnie/good_stuff /dev/mapper/veracrypt2 /home/donnie/good_stuff_dir\ndonnie@ubuntu:~$\n```", "```\nopenssl req -newkey rsa:2048 -nodes -keyout donnie-domain.key-x509 -days 365 -out donnie-domain.crt\n```", "```\n[donnie@localhost ~]$ openssl rsa -aes256 -in donnie-domain.key-x509 -out donnie-domain-encrypted.key-x509 \nwriting RSA key\nEnter PEM pass phrase:\nVerifying - Enter PEM pass phrase:\n[donnie@localhost ~]$\n```", "```\nRSA keys were okay in their day, but they do have their disadvantages. (I'll cover this more in just a bit.) Elliptic Curve (EC) keys are superior in pretty much every way. So, let's now create a self-signed certificate with an EC key, instead of with an RSA key, like so:\nopenssl req -new -x509 -nodes -newkey ec:<(openssl ecparam -name secp384r1) -keyout cert.key.x509 -out cert.crt -days 3650\n```", "```\nopenssl req --out CSR.csr -new -newkey rsa:2048 -nodes -keyout server-privatekey.key\n```", "```\n[donnie@localhost ~]$ openssl req --out CSR.csr -new -newkey rsa:2048 -nodes -keyout server-privatekey.key\nGenerating a RSA private key\n. . .\n. . .\nCountry Name (2 letter code) [XX]:US\nState or Province Name (full name) []:GA\nLocality Name (eg, city) [Default City]:Saint Marys\nOrganization Name (eg, company) [Default Company Ltd]:Tevault Enterprises\nOrganizational Unit Name (eg, section) []:Education\nCommon Name (eg, your name or your server's hostname) []:www.tevaultenterprises.com\nEmail Address []:any@any.net\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:TurkeyLips\nAn optional company name []:\n```", "```\nopenssl genpkey -algorithm EC -out eckey.pem -pkeyopt ec_paramgen_curve:P-384 -pkeyopt ec_param_enc:named_curve\n```", "```\n[donnie@localhost ~]$ openssl req -new -key eckey.pem -out eckey.csr\n. . .\n. . .\n[donnie@localhost ~]$\n```", "```\nSet a Fully Qualified Domain Name (FQDN) on the server\n```", "```\nsudo hostnamectl set-hostname donnie-ca.local\n```", "```\n192.168.0.53 donnie-ca.local\n```", "```\nroot            hard    nofile          4096\nroot            soft    nofile          4096\n```", "```\nsudo dnf install 389-ds-base pki-ca\n```", "```\n sudo apt install 389-ds-base dogtag-pki\n```", "```\nsudo vim /root/instance.inf\n```", "```\nMake its contents look something like this, using your own suffix and root_password:\n# /root/instance.inf\n[general]\nconfig_version = 2\n[slapd]\nroot_password = TurkeyLips\n[backend-userroot]\nsample_entries = yes\nsuffix = dc=donnie-ca,dc=local\n```", "```\nsudo dscreate from-file /root/instance.inf\n```", "```\nsudo pkispawn\n```", "```\nsudo systemctl enable pki-tomcatd.target\nsudo shutdown -r now\n```", "```\nsudo shred -u -z /root/instance.inf\n```", "```\nsudo firewall-cmd --permanent --add-port=8443/tcp\nsudo firewall-cmd --reload\n```", "```\nsudo ufw allow 8443/tcp\n```", "```\nhttps://donnie-ca.local:8443\n```", "```\nsudo su -\ncd /root/.dogtag/pki-tomcat\nscp ca_admin_cert.p12 donnie@192.168.0.14:\nexit\n```", "```\nsudo pki-server ca-cert-chain-export --pkcs12-file pki-server.p12 --pkcs12-password-file password.txt\n```", "```\nopenssl pkcs12 -info -in pki-server.p12 -out pki-server.crt -nokeys\n```", "```\nsudo apt install apache2\n```", "```\nsudo a2ensite default-ssl.conf\nsudo a2enmod ssl\nsudo systemctl restart apache2\n```", "```\nsudo apt install sslscan\n```", "```\nsslscan 192.168.0.3\n```", "```\nSSLProtocol all -SSLv3\n```", "```\nSSLProtocol all -SSLv3 -TLSv1.2\n```", "```\nsudo systemctl restart apache2\n```", "```\nsudo dnf install httpd mod_ssl\nsudo systemctl enable --now httpd\n```", "```\nsudo firewall-cmd --permanent --add-service=https\nsudo firewall-cmd --reload\n```", "```\nsslscan 192.168.0.160\n```", "```\nsudo update-crypto-policies --show\n```", "```\nsudo update-crypto-policies --set FUTURE\n```", "```\nsudo update-crypto-policies --show\n```", "```\n[donnie@localhost ~]$ fips-mode-setup --check\nFIPS mode is enabled.\n[donnie@localhost ~]$\n```", "```\nAccepted  TLSv1.2  112 bits  ECDHE-RSA-DES-CBC3-SHA        Curve P-256 DHE 256\nAccepted  TLSv1.2  112 bits  EDH-RSA-DES-CBC3-SHA          DHE 2048 bits\nAccepted  TLSv1.2  112 bits  DES-CBC3-SHA \n```", "```\nSSLProtocol all -SSLv2 -SSLv3\nSSLCipherSuite HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA\n```", "```\nSSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1\nSSLCipherSuite HIGH:!3DES:!aNULL:!MD5:!SEED:!IDEA:!SHA\n```", "```\nsudo systemctl reload httpd\n```"]