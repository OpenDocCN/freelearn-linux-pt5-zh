- en: Configuring a Secure and Optimized Kernel
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置安全且优化的内核
- en: The kernel is the core of any operating system, be it Windows or Linux. Linux
    is technically the kernel and not the complete operating system. Being the core
    of any operating system, the kernel is installed first and usually requires no
    manual configuration. Even if there are some kernel level updates to be installed,
    on a Linux system, it can be installed as a regular application. However, in some
    situations, compiling the kernel from source with some specific changes might
    be needed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 内核是任何操作系统的核心，无论是 Windows 还是 Linux。从技术上讲，Linux 只是内核，而不是完整的操作系统。作为操作系统的核心，内核首先被安装，通常无需手动配置。即使需要安装一些内核级别的更新，在
    Linux 系统上也可以像常规应用程序一样进行安装。然而，在某些情况下，可能需要从源代码编译内核并进行特定的修改。
- en: 'However, there might be a few situations where you need to compile the kernel
    yourself, from the source. These situations include:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，可能会有一些情况需要您自己从源代码编译内核。这些情况包括：
- en: Enabling experimental features in the kernel
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用内核中的实验性功能
- en: Enabling new hardware support
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用新硬件支持
- en: Debugging the kernel
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试内核
- en: Exploring the kernel source code
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索内核源代码
- en: Before you can start building the Linux kernel, you must ensure that a working
    boot media exists for the Linux system. This can be used to boot into the Linux
    system, if the boot loader is not configured properly. You will learn how to create
    USB boot media, kernel source retrieving, configure and build a kernel, and installing
    and booting from a kernel.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在您开始构建 Linux 内核之前，必须确保已经存在用于 Linux 系统的有效启动媒体。这可以用于在引导加载程序配置不正确的情况下启动到 Linux
    系统。您将学习如何创建 USB 启动媒体、获取内核源代码、配置和构建内核，并从内核安装并启动。
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Creating USB boot media
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 USB 启动媒体
- en: Retrieving the kernel source
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取内核源代码
- en: Configuring and building the kernel
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置和构建内核
- en: Installing and booting from a kernel
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从内核安装并启动
- en: Kernel testing and debugging
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内核测试与调试
- en: Configuring the console for debugging using Netconsole
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Netconsole 配置调试控制台
- en: Debugging kernel boot
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试内核启动
- en: Kernel errors
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内核错误
- en: Checking kernel parameters using Lynis
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Lynis 检查内核参数
- en: Creating USB boot media
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 USB 启动媒体
- en: A USB boot media can be created on any USB media device that is formatted as
    ext2, ext3, or VFAT format. Also, ensure that enough free space is available on
    the device, varying from 4 GB for transferring a distribution DVD image, 700 MB
    in case of a distribution CD image, or just 10 MB to transfer a minimal boot media
    image. Learning how to create a boot media will be beneficial for readers who
    are not very experienced with Linux.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在任何格式为 ext2、ext3 或 VFAT 的 USB 媒体设备上创建 USB 启动媒体。同时，请确保设备上有足够的空闲空间，通常在 4 GB
    用于传输发行版 DVD 镜像，700 MB 用于发行版 CD 镜像，或仅 10 MB 用于传输最小启动媒体镜像。对于不太熟悉 Linux 的读者来说，学习如何创建启动媒体将非常有帮助。
- en: Getting ready
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before starting the steps, you need to have an image file of a Linux installation
    disk, which you can name as `boot.iso`, and a USB storage device, as specified
    before.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始步骤之前，您需要准备一个 Linux 安装磁盘的镜像文件，您可以将其命名为`boot.iso`，以及一个 USB 存储设备，正如之前所述。
- en: How to do it...
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'To start the procedure of creating the USB boot media, you need to perform
    the following commands as root:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始创建 USB 启动媒体的过程，您需要以 root 用户执行以下命令：
- en: 'To install Syslinux on your system, simply execute the following command:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在您的系统上安装 Syslinux，只需执行以下命令：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You need to install the Syslinux boot loader by executing the following command
    on the USB storage device:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要通过在 USB 存储设备上执行以下命令来安装 Syslinux 引导加载程序：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now create mount points each for the `boot.iso` file and the USB storage device
    by executing this command:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在通过执行以下命令为`boot.iso`文件和 USB 存储设备各创建一个挂载点：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, mount the `boot.iso` file on the mount point created for it:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将`boot.iso`文件挂载到为其创建的挂载点：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the previous command, `-o loop` option is used for creating a pseudo device
    that acts as a block-based device. It treats a file as a block device.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的命令中，`-o loop`选项用于创建一个伪设备，充当基于块的设备。它将文件视为块设备。
- en: 'Next, mount the USB storage device on the mount point created for it:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将 USB 存储设备挂载到为其创建的挂载点：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once both `boot.iso` and USB storage device are mounted, copy the Isolinux files
    from `boot.iso` to the USB storage device:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 `boot.iso` 和 USB 存储设备都已挂载，复制 `boot.iso` 中的 Isolinux 文件到 USB 存储设备：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, run the command to use the `isolinux.cfg` file from `boot.iso` as the
    `syslinux.cfg` file for the USB storage device:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，运行命令使用 `boot.iso` 文件中的 `isolinux.cfg` 文件作为 USB 存储设备的 `syslinux.cfg` 文件：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Once done with the previous command, unmount `boot.iso` and the USB storage
    device:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成前面的命令后，卸载 `boot.iso` 和 USB 存储设备：
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now reboot the system and then try to boot with the USB boot media to verify
    that you are able to boot with it.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在重新启动系统，然后尝试使用 USB 启动媒体启动，以验证您是否能从中启动。
- en: How it works...
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When you copy the required files from the `boot.iso` file to the USB storage
    media and use the `isolinux.cfg` file from `boot.iso` in the USB storage media
    as the `syslinux.cfg` file, it converts the USB storage media into a bootable
    media device that can be used to boot into the Linux system.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当您从 `boot.iso` 文件复制所需的文件到 USB 存储媒体，并将 USB 存储媒体中的 `isolinux.cfg` 文件作为 `syslinux.cfg`
    文件使用时，它将把 USB 存储设备转换为可引导的媒体设备，从而可以用来启动 Linux 系统。
- en: Retrieving the kernel source
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取内核源代码
- en: Most of the Linux distributions include the kernel sources in them. However,
    these sources may tend to be a bit out of date. Because of this, you may need
    to get the latest sources when building or customizing the kernel.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 Linux 发行版都包含内核源代码。然而，这些源代码可能有些过时。因此，您在构建或定制内核时，可能需要获取最新的源代码。
- en: Getting ready
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Most of the Linux kernel developer community uses the **Git** tool for source
    code management. Even Ubuntu has integrated Git for its own Linux kernel source
    code, hence enabling the kernel developers to interact better with the community.
    You can install the Git package using the following command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 Linux 内核开发者社区使用**Git**工具进行源代码管理。甚至 Ubuntu 也将 Git 集成到其 Linux 内核源代码中，从而使内核开发者能更好地与社区互动。您可以使用以下命令安装
    Git 包：
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: How to do it...
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The Linux kernel source code can be downloaded from various sources, and here
    we will talk about the methods used to download from these sources:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 内核源代码可以从不同的来源下载，下面我们将介绍从这些来源下载的几种方法：
- en: 'We can find the Linux source code as a complete tarball and also as an incremental
    patch at the official webpage of the Linux kernel:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以在 Linux 内核的官方网站上找到完整的 tarball 以及增量补丁的源代码：
- en: '[http://www.kernel.org](http://www.kernel.org/)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.kernel.org](http://www.kernel.org/)'
- en: It is always recommended you use the latest version, unless you have a specific
    reason to work with an older version.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 除非您有特定的原因需要使用较旧的版本，否则始终建议使用最新版本。
- en: 'Ubuntu''s kernel source can be found under Git. Each release code of the kernel
    is separately maintained on `kernel.ubuntu.com` in its own Git repository, which
    is located at:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ubuntu 的内核源代码可以在 Git 中找到。每个版本的内核代码都会在 `kernel.ubuntu.com` 上以独立的 Git 仓库进行维护，仓库位置如下：
- en: '`git://kernel.ubuntu.com/ubuntu/ubuntu-<release>.git`'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`git://kernel.ubuntu.com/ubuntu/ubuntu-<release>.git`'
- en: 'It''s located here:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 它位于这里：
- en: '`http://kernel.ubuntu.com/git-repos/ubuntu/`'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://kernel.ubuntu.com/git-repos/ubuntu/`'
- en: You can clone the repository, using Git, to get a local copy. The command will
    get modified as per the Ubuntu release you are interested in.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用 Git 克隆仓库，获取本地副本。命令会根据您感兴趣的 Ubuntu 版本进行修改。
- en: 'To obtain the precise tree, insert the following command:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取精确的树结构，请插入以下命令：
- en: '![](img/c8d530ca-60e3-40cf-961b-bc07dfe1bfe4.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c8d530ca-60e3-40cf-961b-bc07dfe1bfe4.png)'
- en: 'To download any other tree, the syntax of the command will be as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载其他树结构，命令的语法如下：
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The downloaded file will be in either GNU ZIP (`gzip`) format or `bzip2` format.
    After downloading the source file, you need to uncompress it. If the tarball is
    in `bzip2`, use the following command:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载的文件将是 GNU ZIP（`gzip`）格式或 `bzip2` 格式。下载源文件后，您需要解压它。如果压缩包是 `bzip2` 格式，请使用以下命令：
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If it is compressed GNU ZIP format, use this command:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是压缩的 GNU ZIP 格式，请使用以下命令：
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How it works...
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Using the different methods mentioned here, you are able to download the source
    code of Linux kernel. Using any option depends on the user's choice and preference.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这里提到的不同方法，您可以下载 Linux 内核的源代码。使用任何选项都取决于用户的选择和偏好。
- en: Configuring and building kernel
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置和构建内核
- en: The need to configure the kernel could arise for many reasons. You may want
    to resize the kernel to run only the necessary services or you may have to patch
    it to support new hardware not supported earlier by the kernel. It could be a
    daunting task for any system administrator and in this section, you will see how
    you can configure and build the kernel.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 配置内核的需求可能由于多种原因而产生。您可能希望调整内核的大小，仅运行必要的服务，或者您可能需要打补丁以支持内核之前不支持的新硬件。对任何系统管理员来说，这可能是一项艰巨的任务，在本节中，您将看到如何配置和构建内核。
- en: Getting ready
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'It is always recommended you have ample space for kernels in the boot partition
    in any system. You should either choose the whole disk install option or set aside
    a minimum of 3 GB disk space for boot partition. Once you are done with the installation
    of your Linux distribution and have configured the required development packages,
    enable sudo for your user account. Now update the system, before you start with
    installing any packages:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 始终建议在任何系统中为内核在启动分区中留出足够的空间。您应该选择整个磁盘安装选项，或者为启动分区分配至少 3 GB 的磁盘空间。安装完您的 Linux
    发行版并配置了所需的开发包后，为您的用户帐户启用 sudo。现在在开始安装任何软件包之前，先更新系统：
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After this, you need to install a few packages before getting started. This
    includes the packages mentioned here:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，您需要安装一些软件包才能开始。这些软件包包括此处提到的包：
- en: Latest version of `gcc`
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最新版本的`gcc`
- en: ncurses development package
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ncurses 开发包
- en: Packages needed for cross-compiling Linux kernels
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于交叉编译 Linux 内核所需的软件包
- en: Package to run make menuconfig
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于运行 make menuconfig 的包
- en: 'To do so, use the command given here:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，使用此处给出的命令：
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: These packages are used while configuring and compiling the Linux kernel on
    an `x86_64` system.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这些软件包用于在`x86_64`系统上配置和编译 Linux 内核。
- en: How to do it...
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Once you are done with the steps in the *Getting ready* section, you can move
    on to the process of configuring and building the kernel. This process will take
    a lot of time, so be prepared:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 完成*准备工作*部分的步骤后，您可以开始配置和构建内核的过程。这个过程会花费很长时间，所以请做好准备：
- en: 'Download the Linux kernel by visiting[ http://www.kernel.org](http://www.kernel.org)
    as shown in the screenshot here:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过访问[http://www.kernel.org](http://www.kernel.org)下载 Linux 内核，如此处截图所示：
- en: '![](img/9777a2d3-8ff1-4bd2-b024-1e9fa1f90d4c.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9777a2d3-8ff1-4bd2-b024-1e9fa1f90d4c.png)'
- en: 'Or you can use the following command:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者您可以使用以下命令：
- en: '[PRE14]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](img/9864d311-835c-49f0-974d-ea46271f55c6.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9864d311-835c-49f0-974d-ea46271f55c6.png)'
- en: 'When the download is completed, move to the folder where the download has been
    saved. The command to do this will be:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完成后，转到下载保存的文件夹。执行此操作的命令是：
- en: '**![](img/1151a91e-8c8d-4cea-b134-0774a069b4be.png)**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/1151a91e-8c8d-4cea-b134-0774a069b4be.png)**'
- en: 'Now extract the downloaded tar file to `/usr/src/` using the following command:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用以下命令将下载的 tar 文件提取到`/usr/src/`：
- en: '![](img/284325cd-e7c7-4e2a-a933-e49453ef86f4.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/284325cd-e7c7-4e2a-a933-e49453ef86f4.png)'
- en: 'Next, change to the folder where the files have been extracted.:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，切换到文件提取的文件夹：
- en: '![](img/8f80d916-2e50-4992-adfe-b8a0a39ae3da.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8f80d916-2e50-4992-adfe-b8a0a39ae3da.png)'
- en: 'Now run the command to configure the Linux kernel for compiling and installing
    on the system:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行命令来配置 Linux 内核，以便在系统上编译和安装：
- en: '![](img/0628c2cd-007e-406e-bf4b-f850af828070.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0628c2cd-007e-406e-bf4b-f850af828070.png)'
- en: You may have to use `sudo` before the command if your account doesn't have admin
    privileges.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的帐户没有管理员权限，可能需要在命令前加上`sudo`。
- en: 'Once the previous command is executed, a pop-up window will appear containing
    lots of menus, as shown here. Select the items of the new configuration:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行前面的命令后，将弹出一个包含许多菜单的窗口，如此处所示。选择新配置的项目：
- en: '![](img/2a73f181-5f9b-4084-9ad2-3046ea5f6611.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a73f181-5f9b-4084-9ad2-3046ea5f6611.png)'
- en: 'You need to check for the filesystems menu, as shown here:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要检查文件系统菜单，如下所示：
- en: '![](img/c1d33636-aa1c-4ace-9d9e-5058649cdb2d.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c1d33636-aa1c-4ace-9d9e-5058649cdb2d.png)'
- en: 'Under the menu, check whether `ext4` has been chosen or not, as shown in the
    screenshot. If it is not selected, you need to select it now:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在菜单下，检查是否已选择`ext4`，如截图所示。如果没有选中，您需要现在选择它：
- en: '![](img/23002b47-a21f-439a-82c2-0bd4ff72da3e.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23002b47-a21f-439a-82c2-0bd4ff72da3e.png)'
- en: 'And then provide a name and save the configuration:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后提供一个名称并保存配置：
- en: '![](img/86d05651-8a37-4e5f-bc5e-9e4c605b4c15.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/86d05651-8a37-4e5f-bc5e-9e4c605b4c15.png)'
- en: 'Now compile the Linux kernel. The compile process will take around 40 to 50
    minutes to complete, depending on the system configuration. Run the command as
    shown here:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在编译 Linux 内核。根据系统配置，编译过程大约需要 40 到 50 分钟完成。按照下面的命令运行：
- en: '[PRE15]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The output for the preceding command is as shown in the following screenshot:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令的输出如下图所示：
- en: '![](img/5070db44-4f22-466b-859f-4bc8de0e608a.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5070db44-4f22-466b-859f-4bc8de0e608a.png)'
- en: How it works...
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: You first download the Linux kernel source and then, after extracting it to
    a particular location, you configure the kernel for the compilation process.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 首先下载 Linux 内核源代码，然后将其解压到特定位置，接着配置内核以进行编译过程。
- en: Installing and booting from a kernel
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装并从内核启动
- en: After having spent a lot of time configuring and compiling the kernel, you can
    now start the process of installing the kernel to the local system.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在花费大量时间配置和编译内核后，您现在可以开始将内核安装到本地系统的过程。
- en: Getting ready
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before starting with the installation of the kernel, make sure you back up all
    your important data on the system. Also make a copy of `/boot/` onto external,
    storage which is formatted in the FAT32 filesystem. This will help repair the
    system if the installation process fails for any reason.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始安装内核之前，确保备份系统中的所有重要数据。同时，将`/boot/`目录复制到格式化为 FAT32 文件系统的外部存储中。如果安装过程由于任何原因失败，这将有助于修复系统。
- en: How to do it...
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Once the kernel is compiled, you can start following the commands here to proceed
    with installing the kernel:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦内核编译完成，您可以开始按照此处的命令继续安装内核：
- en: 'Install the drivers by running the command, if activated as modules. The command
    will copy the modules to a sub-directory of `/lib/modules`:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果作为模块启用，可以通过运行命令来安装驱动程序。该命令将把模块复制到`/lib/modules`的子目录中：
- en: '![](img/4317fad9-bc0b-4bc0-a3ee-48bb623fb200.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4317fad9-bc0b-4bc0-a3ee-48bb623fb200.png)'
- en: 'Now run the following command to install the actual kernel:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行以下命令以安装实际的内核：
- en: '[PRE16]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The preceding command will show the following output:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令将显示以下输出：
- en: '![](img/9ea1de45-8e6f-46c8-851a-5eb2af16b026.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ea1de45-8e6f-46c8-851a-5eb2af16b026.png)'
- en: This command executes `/sbin/installkernel`. The new kernel will be installed
    into `/boot/vmlinuz-{version}`. If a symbolic link already exists for `/boot/vmlinuz`,
    it will be refreshed by linking `/boot/vmlinuz` to the new kernel. The previously
    installed kernel will be available as `/boot/vmlinuz.old.` The same will happen
    for the config and `System.map` files.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令执行`/sbin/installkernel`。新内核将安装到`/boot/vmlinuz-{version}`。如果`/boot/vmlinuz`已存在符号链接，它将通过将`/boot/vmlinuz`链接到新内核来刷新。以前安装的内核将作为`/boot/vmlinuz.old`可用。对配置文件和`System.map`文件也会发生相同的情况。
- en: 'Next, copy the kernel to `/boot` directory by running the following command:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过运行以下命令将内核复制到`/boot`目录：
- en: '[PRE17]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The preceding command will show the following output:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令将显示以下输出：
- en: '![](img/deca58cc-a89d-44b4-b703-28f49ef2fef3.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/deca58cc-a89d-44b4-b703-28f49ef2fef3.png)'
- en: Now make an initial RAM disk:![](img/2ed5305c-9d31-4a41-b031-f2f1f5819135.png)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在制作初始 RAM 磁盘：![](img/2ed5305c-9d31-4a41-b031-f2f1f5819135.png)
- en: Next, we need to copy `System.map`, which contains the list of kernel symbols
    and their corresponding address. Run the given command to do this appending the
    kernel's name in the destination file:![](img/57756179-2cb7-45d8-9be4-123c6a0612ab.png)
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要复制`System.map`，它包含内核符号及其对应的地址。运行给定命令来执行此操作，并将内核的名称附加到目标文件中：![](img/57756179-2cb7-45d8-9be4-123c6a0612ab.png)
- en: Next, create a `symlink /boot/System.map` file, which will point to `/boot/System.map-YourKernelName`,
    if `/boot` is on a filesystem that supports `symlinks`:![](img/40c27f8a-0fcd-4836-9b4a-72be98718abe.png)
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建一个`symlink /boot/System.map`文件，该文件将指向`/boot/System.map-YourKernelName`，如果`/boot`所在的文件系统支持`symlinks`：![](img/40c27f8a-0fcd-4836-9b4a-72be98718abe.png)
- en: If `/boot` is on a filesystem that does not support symlinks, just run `cp /boot/System.map-YourKernelName
    /boot/System.map`
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`/boot`所在的文件系统不支持符号链接，只需运行`cp /boot/System.map-YourKernelName /boot/System.map`
- en: How it works...
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Once the kernel is configured and compiled, it can be installed on the system.
    The first command will copy the modules to a sub-directory of `/lib/modules`.
    The second command executes `/sbin/installkernel`. Also, the new kernel will be
    installed into `/boot/vmlinuz-{version}`. While doing this, if a symbolic link
    already exists for `/boot/vmlinuz`, it will get refreshed by linking `/boot/vmlinuz`
    to the new kernel. And the previously installed kernel will be available as `/boot/vmlinuz.old`.
    The same will happen for the config and `System.map` files. Once everything is
    done, we can reboot the system to boot from the new kernel:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦内核配置并编译完成，就可以安装到系统中。第一个命令将模块复制到`/lib/modules`的子目录中。第二个命令执行`/sbin/installkernel`。同时，新的内核将被安装到`/boot/vmlinuz-{version}`中。在此过程中，如果`/boot/vmlinuz`已经存在符号链接，它将被更新，指向新的内核。而之前安装的内核将作为`/boot/vmlinuz.old`保留。配置文件和`System.map`文件也会做同样的处理。完成这些操作后，我们可以重启系统，使用新的内核启动：
- en: '![](img/8e74b13e-2b3f-4eb5-ae30-49d2ca3c6184.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8e74b13e-2b3f-4eb5-ae30-49d2ca3c6184.png)'
- en: Kernel testing and debugging
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内核测试和调试
- en: An important part of any open or closed software development cycle is testing
    and debugging. And the same applies to the Linux kernel. The end goal of testing
    and debugging is to ensure that the kernel is working in the same way as earlier,
    even after installing a new kernel source code.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 任何开放或封闭的软件开发周期中，测试和调试都是重要的一部分。Linux内核也不例外。测试和调试的最终目标是确保内核在安装新的内核源代码后，仍然能够与之前的版本以相同的方式工作。
- en: Configuring console for debugging using netconsole
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用netconsole配置控制台进行调试
- en: One of the biggest issues with the Linux kernel is kernel panic. It is similar
    to the *Blue Screen of Death* for Microsoft Windows operating systems. If the
    kernel panics, it will dump a lot of information on the screen and just stay there.
    It is very difficult to trace a kernel panic if the system is rebooted as no logs
    are created for it. To solve this issue, we can use Netconsole. It is a kernel
    module that helps by logging kernel `printk` messages over UDP. This is helpful
    with debugging problems when logging on disk fails.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核的最大问题之一是内核恐慌（Kernel Panic）。它类似于微软Windows操作系统中的*蓝屏死机*（Blue Screen of Death）。如果内核发生恐慌，它将把大量信息显示在屏幕上，并保持在那里。如果系统重启，由于没有生成日志，就很难追踪内核恐慌。为了解决这个问题，我们可以使用Netconsole。它是一个内核模块，可以通过UDP记录内核的`printk`消息。当磁盘日志失败时，这对于调试问题非常有帮助。
- en: Getting ready
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Before starting with the configuration of Netconsole, you need to know the
    MAC address of the system, where the UDP packets will be sent. This system can
    be called the receiver and it may be in the same subnet or a different one. These
    two cases are described here. Let''s look at the first case, when receiver is
    in the same subnet:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始配置Netconsole之前，你需要知道要发送UDP数据包的系统的MAC地址。这个系统可以称为接收端，可能在同一子网中，也可能在不同的子网中。这里描述了这两种情况。我们先来看第一种情况，当接收端在同一子网中时：
- en: The IP address of the receiver in this example is `192.168.1.4`. We will send
    the UDP packets to this IP address using this command:![](img/e58fe079-3eec-4960-8007-f1a224a30f46.png)
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本示例中接收端的IP地址是`192.168.1.4`。我们将使用此命令将UDP数据包发送到该IP地址：![](img/e58fe079-3eec-4960-8007-f1a224a30f46.png)
- en: Now let's find the MAC address of the receiver system by executing the following
    command. Here, the IP address is of the receiver system:![](img/30f22507-aac8-4fc3-8696-295ec4590484.png)
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在通过执行以下命令，来查找接收端系统的MAC地址。这里，IP地址是接收端系统的：![](img/30f22507-aac8-4fc3-8696-295ec4590484.png)
- en: As you can see in the previous example, `90:00:4e:2f:ac:ef` is the MAC address
    we need. Let's look at the second case, when receiver is not in the same subnet.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的示例所示，`90:00:4e:2f:ac:ef`是我们需要的MAC地址。现在来看第二种情况，当接收端不在同一子网时。
- en: In this case, we need to first find the default gateway. To do so, run the command
    shown here:![](img/d6d1bcfc-a459-4073-9cf5-f56a0f53e67e.png)
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这种情况下，我们需要先找到默认网关。为此，执行下面的命令：![](img/d6d1bcfc-a459-4073-9cf5-f56a0f53e67e.png)
- en: In this case, the default gateway is `192.168.1.1`.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，默认网关是`192.168.1.1`。
- en: 'We need to find the MAC address of the default gateway. First, send a packet
    to the default gateway:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要找到默认网关的MAC地址。首先，向默认网关发送一个数据包：
- en: '![](img/40ad101a-e4b0-482a-bf4d-8fe00df53d0d.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40ad101a-e4b0-482a-bf4d-8fe00df53d0d.png)'
- en: Now let's find the MAC address:![](img/345dffb0-ced9-42e1-89dd-a97ffd388cdc.png)
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们来查找MAC地址：![](img/345dffb0-ced9-42e1-89dd-a97ffd388cdc.png)
- en: Here, `c0:3f:0e:10:c6:be` is the MAC address of the default gateway that we
    need. Now that we have the MAC address of the receiver, we can start with the
    configuration process of Netconsole.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`c0:3f:0e:10:c6:be`是我们需要的默认网关的MAC地址。现在我们已经有了接收端的MAC地址，可以开始进行Netconsole的配置过程。
- en: How to do it...
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To begin with, you need to change the kernel options at the boot time. If you
    are using GRUB as the bootloader, it will by default boot the kernel with the **quiet
    splash** option. However, you don''t want that to happen, so you need to change
    the kernel options:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要在启动时更改内核选项。如果你使用的是GRUB作为引导加载程序，它默认会以**quiet splash**选项引导内核。然而，你不希望这样发生，因此需要更改内核选项：
- en: First, create a backup of `/etc/default/grub`:![](img/5566afb3-6e7a-48dc-9ffd-7dc05e7d4e41.png)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建`/etc/default/grub`的备份：![](img/5566afb3-6e7a-48dc-9ffd-7dc05e7d4e41.png)
- en: Now, open any editor of your choice to edit `/etc/default/grub`:![](img/5c483e39-1732-4a8d-bc64-881b0fc9a18a.png)
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开你选择的任何编辑器来编辑`/etc/default/grub`：![](img/5c483e39-1732-4a8d-bc64-881b0fc9a18a.png)
- en: 'Find the line `GRUB_CMDLINE_LINUX_DEFAULT="quiet splash` and replace it with
    `GRUB_CMDLINE_LINUX_DEFAULT="debug ignore_loglevel"`:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 找到`GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"`这一行，并将其替换为`GRUB_CMDLINE_LINUX_DEFAULT="debug
    ignore_loglevel"`：
- en: '![](img/7acfcab7-3b60-4f79-932c-d606086f70fb.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7acfcab7-3b60-4f79-932c-d606086f70fb.png)'
- en: Now run the command to update GRUB accordingly:![](img/a68f99fe-9625-4ee6-9c1d-feb2241a1f6e.png)
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在运行命令以相应地更新GRUB：![](img/a68f99fe-9625-4ee6-9c1d-feb2241a1f6e.png)
- en: 'Once you are done with these commands, you need to initialize Netconsole at
    boot time. For this, we first need to know the IP address and the interface of
    the *sender* system. This can be done by using the following command:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成这些命令后，你需要在启动时初始化Netconsole。为此，首先需要知道*发送端*系统的IP地址和接口。可以通过以下命令获取：
- en: '![](img/bd1732a0-7104-4683-9428-80bce6e8925a.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bd1732a0-7104-4683-9428-80bce6e8925a.png)'
- en: You also need the IP address and MAC address of the receiver system, which we
    have already got in the *Getting ready* section.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要接收系统的IP地址和MAC地址，这些信息我们已经在*准备工作*部分获取。
- en: Now let's start initializing Netconsole. First, let's get Net­con­sole to load
    on boot by adding the mod­ule to `/etc/modules`:![](img/e6d3648c-b7ad-4054-b4c0-3dc4821d2170.png)
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们开始初始化Netconsole。首先，通过将模块添加到`/etc/modules`来让Netconsole在启动时加载：![](img/e6d3648c-b7ad-4054-b4c0-3dc4821d2170.png)
- en: 'Next, make sure that it has the proper options configured as well. For this,
    add the module options to the `/etc/modprobe.d/netconsole.conf` file and run the
    following command:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，确保它也配置了正确的选项。为此，将模块选项添加到`/etc/modprobe.d/netconsole.conf`文件中，然后运行以下命令：
- en: '![](img/c5735fb3-d161-4e38-a35e-038bde21e7b9.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5735fb3-d161-4e38-a35e-038bde21e7b9.png)'
- en: 'In the previous command, the part that starts with `netconsole` has the following
    syntax:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的命令中，以`netconsole`开头的部分具有以下语法：
- en: '[PRE18]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We have used `6666` for both the `<LOCAL_PORT>` and `<REMOTE_PORT>`.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`6666`作为`<LOCAL_PORT>`和`<REMOTE_PORT>`。
- en: Next, we need to set up the *receiver.*
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要设置*接收端*。
- en: 'Depending on which version of Linux is being used as receiver, the command
    to set up the receiver may vary:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 根据使用的Linux版本不同，设置接收端的命令可能会有所不同：
- en: '[PRE19]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Or try it without the IP address, if the previous command doesn''t work:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 或者如果之前的命令不工作，可以尝试不带IP地址的方式：
- en: '[PRE20]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: If you are using a different variant of Linux that has a different version of
    Netcat, the following error message will be printed when you try the previous
    commands:![](img/dd9ea211-32b0-49bd-8832-87a4db9cf93c.png)
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是具有不同版本Netcat的其他Linux变种，尝试之前的命令时将会显示以下错误消息：![](img/dd9ea211-32b0-49bd-8832-87a4db9cf93c.png)
- en: 'If you get the error message, you can try this command:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现错误信息，你可以尝试以下命令：
- en: '![](img/5831298f-33eb-4113-8055-efc90227018f.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5831298f-33eb-4113-8055-efc90227018f.png)'
- en: Now let the previous command keep running.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让之前的命令保持运行。
- en: 'Next, you need to check whether everything is working properly. Reboot the
    sender system and then execute the following command:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你需要检查一切是否正常工作。重启发送系统，然后执行以下命令：
- en: '![](img/47bcf300-b319-485c-926a-04435d1047ed.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/47bcf300-b319-485c-926a-04435d1047ed.png)'
- en: Now you need to check the receiver system to see whether the kernel messages
    have been received or not.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你需要检查接收系统，看看内核消息是否已收到。
- en: Once everything is done, press *Ctrl* + *C.* Then you can check for the messages
    in `~/netconsole.log`.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成所有操作后，按下*Ctrl* + *C*。然后可以查看`~/netconsole.log`中的消息。
- en: How it works...
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: To capture kernel panic messages, we configure Netconsole, which logs the messages
    over the network. To do this, we need one more system on the network, which serves
    as receiver. Firstly, we try to find the MAC address of the receiver system. Then
    we change the kernel boot options. After updating GRUB, we start initializing
    Netconsole on the sender system that we want to debug. Finally, we set up the
    receiver system to start receiving the kernel messages.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 为了捕获内核 panic 消息，我们配置 Netconsole，它通过网络记录这些消息。为此，我们需要一个额外的系统作为接收端。首先，我们尝试找到接收系统的
    MAC 地址。然后，我们更改内核启动选项。更新 GRUB 后，我们开始在发送端系统上初始化 Netconsole。最后，我们设置接收端系统开始接收内核消息。
- en: There's more...
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: If you are using a Windows system as receiver, then we can use Netcat for Windows
    as well, which is available at `http://joncraton.org/files/nc111nt.zip`.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Windows 系统作为接收端，我们也可以使用适用于 Windows 的 Netcat，下载链接为`http://joncraton.org/files/nc111nt.zip`。
- en: Download the file from the given link and extract it somewhere like `C:\Users\Tajinder\Downloads\nc`.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 从给定的链接下载文件，并将其解压到某个位置，例如`C:\Users\Tajinder\Downloads\nc`。
- en: 'Now open Command Prompt (Start | `Run` | `cmd`). Then move to the folder where
    you have extracted Netcat:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 现在打开命令提示符（开始 | `运行` | `cmd`）。然后移动到你解压 Netcat 的文件夹：
- en: '![](img/324cadb2-8bae-45d8-8650-5931b0f8cef0.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/324cadb2-8bae-45d8-8650-5931b0f8cef0.png)'
- en: 'Next, run the following command:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，运行以下命令：
- en: '![](img/b9deec73-612a-46ec-ac0e-0b5973b0fc1f.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b9deec73-612a-46ec-ac0e-0b5973b0fc1f.png)'
- en: Here, `192.168.1.3` is the same as `<RECEIVER_IP_ADDRESS>`. Let the previous
    command run and continue with the commands in step 9\. Once it's done, press *Ctrl*
    + *C*. You will find the messages in `netconsole.txt.`
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`192.168.1.3`就是`<RECEIVER_IP_ADDRESS>`。让前面的命令继续运行，然后继续执行第 9 步中的命令。一旦完成，按*Ctrl*
    + *C*。你会在`netconsole.txt`中找到消息。
- en: Debugging kernel boot
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试内核启动
- en: Sometimes your system might fail to boot due to changes within the kernel. Hence
    it is important that when creating reports about these failures, all the appropriate
    information about debugging is included. This will be useful for the kernel team
    in resolving the issue.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，由于内核的变化，你的系统可能无法启动。因此，在创建关于这些失败的报告时，包含所有调试的相关信息非常重要。这将有助于内核团队解决问题。
- en: How to do it...
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: If you are trying to capture error messages that appear during boot, then it
    is better to boot the kernel with the `quiet` and `splash` options removed. This
    helps you see the messages, if any, that appear on the screen.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尝试捕获在启动过程中出现的错误信息，那么最好在启动内核时移除`quiet`和`splash`选项。这可以帮助你看到屏幕上出现的任何信息。
- en: 'To edit boot option parameters, do the following:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 要编辑启动选项参数，请执行以下操作：
- en: Boot the machine.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动计算机。
- en: During the BIOS screen, press the *Shift *key and hold it down. You should see
    the GRUB menu after the BIOS loads:![](img/ed56ecff-eea0-4099-aedf-026449a44811.png)
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 BIOS 屏幕期间，按下*Shift*键并保持按住。BIOS 加载后，你应该看到 GRUB 菜单：![](img/ed56ecff-eea0-4099-aedf-026449a44811.png)
- en: Navigate to the kernel entry you want to boot and press *e*.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到你希望启动的内核条目并按下*e*键。
- en: Then remove the `quiet`and `splash`keywords (found in the line starting with
    `linux`).![](img/2e712f2b-4c42-48ef-a0df-2e59b3e94867.png)
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后移除`quiet`和`splash`关键字（在以`linux`开头的那一行中找到）。![](img/2e712f2b-4c42-48ef-a0df-2e59b3e94867.png)
- en: Press *Ctrl + X* to boot.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下*Ctrl + X*启动。
- en: You can see the error messages, if any, on the screen. Depending on the type
    of error messages you encounter, there are other boot options you could try. For
    example, if you notice ACPI errors, try booting with the `acpi=off`boot option.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有错误信息，你可以在屏幕上看到它们。根据你遇到的错误信息类型，可能有其他启动选项可以尝试。例如，如果你发现有 ACPI 错误，可以尝试使用`acpi=off`启动选项来启动。
- en: Kernel errors
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内核错误
- en: Kernel panic or kernel error is a term used when a Linux system has come to
    halt and seems unresponsive. When the kernel detects an abnormal situation, it
    voluntarily halts the system activity. When the Linux system detects an internal
    fatal error from which it cannot recover safely, it generates a kernel panic.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 内核 panic 或内核错误是指 Linux 系统停止运行且似乎没有响应的情况。当内核检测到异常情况时，它会自愿暂停系统活动。当 Linux 系统检测到无法安全恢复的内部致命错误时，它会生成内核
    panic。
- en: Causes of kernel errors
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内核错误的原因
- en: 'In Linux, a kernel error can be caused due to various reasons. Here we will
    discuss a few of the reasons:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 中，内核错误可能由多种原因引起。这里我们将讨论其中一些原因：
- en: '**Hardware – Machine Check Exceptions**: This type of kernel error is caused
    when a component failure is detected and reported by the hardware through an exception.
    This typically looks like this:'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬件 – 机器检查异常**：这种类型的内核错误是在硬件通过异常检测到并报告组件故障时引起的。通常，错误信息如下所示：'
- en: '[PRE21]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**Error Detection and Correction (EDAC):** If any memory chip and PCI transfer
    error is detected, the hardware mechanism reports it causing EDA errors. This
    error gets reported in `/sys/devices/system/edac/{mc/,pci}` and typically looks
    like this:'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误检测与纠正（EDAC）**：如果检测到任何内存芯片和PCI传输错误，硬件机制会报告此错误并导致EDA错误。此错误会在`/sys/devices/system/edac/{mc/,pci}`中报告，通常如下所示：'
- en: '[PRE22]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**Non-Maskable Interrupts (NMIs)**: When a standard operating system mechanism
    is unable to ignore or mask out an interrupt, it is called a **Non-Maskable Interrupt**
    (**NMI**). It is generally used for critical hardware errors. A sample NMI error
    appearing in `/var/log/messages` would look like this:'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不可屏蔽中断（NMI）**：当标准操作系统机制无法忽略或屏蔽一个中断时，就称为**不可屏蔽中断**（**NMI**）。它通常用于关键的硬件错误。在`/var/log/messages`中出现的示例NMI错误如下所示：'
- en: '[PRE23]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '**Software – The BUG() macro**: When any abnormal situation is seen indicating
    a programming error, kernel code causes this kind of kernel error. It typically
    looks like this:'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件 – BUG()宏**：当发生任何异常情况，表明存在编程错误时，内核代码会引发这种类型的内核错误。它通常如下所示：'
- en: '[PRE24]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '**Software – Pseudo-hangs**: These type of errors are commonly encountered,
    when the system appears to be hung, and could have several reasons for this kind
    of behavior such as:'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件 – 假死锁**：这种类型的错误通常出现在系统似乎挂起时，可能有多种原因导致这种行为，如：'
- en: '**Livelock**: When running a real-time kernel, if application load is too high,
    it could lead the system to a situation where it becomes unresponsive. The system
    is not completely hung, but appears to be as it is moving so slowly.'
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**死锁**：当运行实时内核时，如果应用负载过高，可能导致系统进入无法响应的状态。系统并未完全挂起，但看起来像是因为运行过慢。'
- en: 'A sample error message getting logged in `/var/log/messages`, when the system
    is frequently hung, looks like this:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统频繁挂起时，`/var/log/messages` 中记录的示例错误信息如下所示：
- en: '[PRE25]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '**Software – Out-of-Memory killer**: This type of error or panic is triggered
    when some memory needs to be released by killing a few processes, when a case
    of memory starvation occurs. This error typically looks like this:'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件 – 内存不足杀手**：当发生内存饥饿时，系统需要释放一些内存，通过杀死几个进程来触发这种错误或恐慌。此错误通常如下所示：'
- en: '[PRE26]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Whenever a kernel panic or error occurs, you may have to analyze these errors
    to diagnose and troubleshoot them. This can be done using the Kdump utility. Kdump
    can be configured using the following steps:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 每当发生内核恐慌或错误时，您可能需要分析这些错误以进行诊断和故障排除。可以使用Kdump工具来完成此操作。Kdump可以按照以下步骤进行配置：
- en: Install `kexec-tools`.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`kexec-tools`。
- en: Edit the `/etc/grub.conf` file, and insert `crashkernel=<reservered-memory-setting>` at
    the end of kernel line.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`/etc/grub.conf`文件，并在内核行的末尾插入`crashkernel=<reserved-memory-setting>`。
- en: Edit `/etc/kdump.conf` and specify the destination for sending the output of
    `kexec`, that is `vmcore`.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`/etc/kdump.conf`并指定`kexec`输出的目标位置，即`vmcore`。
- en: Discard unnecessary memory pages and compress only the ones that are needed
    by configuring the Core collector.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 丢弃不必要的内存页，仅压缩所需的内存页，通过配置Core收集器来实现。
- en: Checking kernel parameters using Lynis
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Lynis检查内核参数
- en: Any operating system is as strong as its weakest link. In the case of Linux,
    any weakness in its kernel would imply a total compromise of the system. Hence
    it is necessary to check the security configuration of the Linux kernel.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 任何操作系统都像其最弱的一环。就Linux而言，任何内核中的弱点都会导致系统的完全破坏。因此，有必要检查Linux内核的安全配置。
- en: In this topic, we will see how to use Lynis to check for kernel parameters automatically.
    Lynis has several predefined key pairs to look for in kernel configuration and
    accordingly provide advice.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在本主题中，我们将学习如何使用Lynis自动检查内核参数。Lynis有多个预定义的关键字对用于检查内核配置，并根据检查结果提供建议。
- en: Getting ready
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: To view or edit any security related parameter of Linux kernel, there is the
    `/etc/sysctl.conf` file. All the parameters are stored in this file and this is
    read during boot time. If you wish to see the available kernel parameters in this
    file, you can do so by running the `command:sysctl -a`. This command will display
    an extensive list of configuration settings. The kernel security parameters are
    also in this list. Lynis helps check the kernel security parameters in this file
    automatically, thus avoiding the hassle of checking each parameter manually. To use
    Lynis, write access to `/tmp` is needed by the user account running the tool.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看或编辑Linux内核的任何安全相关参数，可以使用`/etc/sysctl.conf`文件。所有参数都存储在此文件中，并且在启动时读取。如果你希望查看此文件中的可用内核参数，可以通过运行`command:sysctl
    -a`来实现。该命令将显示一个广泛的配置设置列表。内核安全参数也在此列表中。Lynis帮助自动检查此文件中的内核安全参数，从而避免了手动检查每个参数的麻烦。为了使用Lynis，运行工具的用户帐户需要对`/tmp`具有写访问权限。
- en: How to do it...
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Lynis is an open source security tool that helps with audits of systems running
    UNIX derivatives such as Linux, macOS, BSD, Solaris, AIX, and others.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: Lynis是一款开源安全工具，帮助审计运行UNIX衍生系统（如Linux、macOS、BSD、Solaris、AIX等）的系统。
- en: 'Here is the list of following steps:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是接下来的步骤列表：
- en: 'The first step to using Lynis is to download its package. This can be done
    from this link:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Lynis的第一步是下载它的包。你可以通过这个链接来下载：
- en: '[https://cisofy.com/downloads/lynis/](https://cisofy.com/downloads/lynis/)'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://cisofy.com/downloads/lynis/](https://cisofy.com/downloads/lynis/)'
- en: '![](img/0018eb17-54da-4764-9e45-3aae1f9de4b2.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0018eb17-54da-4764-9e45-3aae1f9de4b2.png)'
- en: Once you click on download, you will get a tarball file to save. Save it in
    any folder on your system:![](img/d11f2c79-6fdf-4952-b8f2-3601b41dfd8e.png)
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你点击下载，你将获得一个tarball文件来保存。将其保存在系统中的任何文件夹里：![](img/d11f2c79-6fdf-4952-b8f2-3601b41dfd8e.png)
- en: The next step is to extract the content from the tar file. You do this by running
    this command:![](img/8781ba0c-d30c-430b-a75f-eb54292914d6.png)
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是从tar文件中提取内容。你可以通过运行以下命令来完成：![](img/8781ba0c-d30c-430b-a75f-eb54292914d6.png)
- en: Once the extraction is complete, you will get a directory named `lynis` in the
    same directory.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦提取完成，你将在同一目录下获得一个名为`lynis`的目录。
- en: 'Move inside the `lynis` directory and list the files present inside it:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入`lynis`目录，并列出其中的文件：
- en: '![](img/52b1e1c5-4731-468c-8444-4ca5e3684091.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![](img/52b1e1c5-4731-468c-8444-4ca5e3684091.png)'
- en: Inside the `lynis` directory, among other files, you see an executable file
    again named `lynis`. Once you run this file, you will be able to see all the options
    available for using the lynis tool. So you run the tool as shown:![](img/d219f67e-c7f2-417a-9f91-85e1b48ceecc.png)
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`lynis`目录内，除了其他文件，你还会看到一个名为`lynis`的可执行文件。运行这个文件后，你将能够看到所有可用的Lynis工具选项。你可以按以下方式运行该工具：![](img/d219f67e-c7f2-417a-9f91-85e1b48ceecc.png)
- en: 'To audit the kernel parameters you use the `audit system` parameter. Once you
    run Lynis using this parameter, it will start auditing the system:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要审计内核参数，你需要使用`audit system`参数。一旦你使用该参数运行Lynis，它将开始审计系统：
- en: '![](img/643312f5-24d3-4016-a60e-1925bc5bff8b.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](img/643312f5-24d3-4016-a60e-1925bc5bff8b.png)'
- en: 'Among the results, you will also get the list of kernel parameters:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在结果中，你还将看到内核参数列表：
- en: '![](img/ba9b0b36-87b9-4504-a586-0a1e644efa3d.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ba9b0b36-87b9-4504-a586-0a1e644efa3d.png)'
- en: 'The kernel parameters will be displayed in the results, as shown here:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 内核参数将在结果中显示，如下所示：
- en: '![](img/84f24478-2d19-4430-b4a3-3e31704e657d.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84f24478-2d19-4430-b4a3-3e31704e657d.png)'
- en: Based on the OS and kernel version, the number of parameters may change. If
    any parameter is incorrectly configured, Lynis will inform you and provide suggestions.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据操作系统和内核版本，参数的数量可能会有所变化。如果任何参数配置不正确，Lynis会通知你并提供建议。
