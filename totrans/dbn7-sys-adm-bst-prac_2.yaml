- en: Chapter 2. Filesystem Layout
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 文件系统布局
- en: Some of the first decisions that must be made, even before installing Debian,
    involve deciding the best way to format the storage space for the installation.
    This includes what type of filesystem to use, how to partition it for the best
    effect, and whether and what to encrypt for security. The actual work of partitioning
    and boot code placement is handled by the Debian installer, and can be altered
    later using standard Linux bootloader and partitioning utilities. The installation
    process and the utilities are covered well by the Debian installation guide mentioned
    in the previous chapter, and the documentations for the GRUB2, fdisk, and GNU
    Parted included with the appropriate software packages.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装 Debian 之前，首先需要做出的一些决定包括如何为安装格式化存储空间。这包括选择使用哪种类型的文件系统，如何分区以获得最佳效果，以及是否加密和加密哪些内容以保证安全。分区和引导代码放置的实际工作由
    Debian 安装程序处理，之后可以使用标准的 Linux 引导加载程序和分区工具进行修改。安装过程及相关工具在上一章中提到的 Debian 安装指南中有详细介绍，GRUB2、fdisk
    和 GNU Parted 的文档也随相应软件包提供。
- en: This chapter serves as a basic introduction to the concepts of boot loading
    and disk partitioning, along with some guidelines to keep in mind when installing
    Debian or updating your boot or partitioning schemes. Do not worry if you are
    still uncertain what is best for your situation when first installing Debian.
    As we shall see, the defaults will work just fine for most cases, and the beginner
    can't really go wrong while using them when in doubt.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是关于引导加载和磁盘分区概念的基础介绍，同时也提供了一些在安装 Debian 或更新引导或分区方案时需要注意的指导原则。如果你在首次安装 Debian
    时还不确定什么方案最适合你的情况，不必担心。正如我们将看到的，默认设置对于大多数情况来说已经足够，而且对于初学者来说，在不确定的情况下使用默认设置通常不会出错。
- en: Partition tables
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分区表
- en: Each architecture has its own characteristic method of partitioning disk drives
    and placing boot code in the appropriate place. For most, this is very straightforward.
    However, the Intel architecture is undergoing changes that require some understanding
    of the boot process and disk layout.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 每种架构都有其独特的磁盘分区方法，并将引导代码放置在适当的位置。对于大多数架构来说，这是非常直接的。然而，英特尔架构正在经历一些变化，需要了解引导过程和磁盘布局。
- en: Single or multiboot
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单引导还是多重引导
- en: One of the first choices to be made when installing any Linux distribution is
    whether the system will be single or multiboot. In general, many developers run
    both Windows and Linux on the same machine. In some cases, due to licensing restrictions
    or just personal preference, they wish to use the Windows installation that came
    with their computer and boot into one or the other as needed. This is perfectly
    fine, and most bootloaders will recognize both operating systems and provide menu
    items to boot the desired one. Another option is to use Xen or similar virtualization
    software to boot both simultaneously. A third choice is to run Windows under a
    Linux **virtual machine** (**VM**) using QEMU or KVM software. Creating VMs under
    QEMU, KVM, Xen, or any other virtualization software (such as VMware), would be
    a complete book in itself. For our purpose, we will consider a VM as essentially
    equivalent to an actual hardware system, since the issues outside VM creation
    are identical.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 安装任何 Linux 发行版时，首先需要做出的选择之一是系统是单引导还是多重引导。通常，许多开发者会在同一台机器上同时运行 Windows 和 Linux。在某些情况下，由于许可证限制或个人偏好，他们希望使用电脑自带的
    Windows 安装并根据需要引导进入其中一个操作系统。这是完全可以接受的，大多数引导加载程序会识别两种操作系统，并提供菜单项以引导所需的操作系统。另一种选择是使用
    Xen 或类似的虚拟化软件同时引导两者。第三种选择是通过 QEMU 或 KVM 软件在 Linux **虚拟机** (**VM**) 中运行 Windows。在
    QEMU、KVM、Xen 或任何其他虚拟化软件（如 VMware）下创建虚拟机，将是一本完整的书。就我们的目的而言，我们将虚拟机视为与实际硬件系统基本等效，因为虚拟机创建之外的问题是相同的。
- en: Tip
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Best practice, if this is a single operating system server environment, will
    be a single-boot system. If this is a developer system that may require booting
    into an alternative operating system, use dual boot. VM generally does not require
    dual boot.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践，如果这是单一操作系统的服务器环境，应该选择单引导系统。如果这是一个开发者系统，可能需要引导进入其他操作系统，则可以使用双引导。虚拟机（VM）通常不需要双引导。
- en: BIOS versus UEFI
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BIOS 与 UEFI
- en: Up until the late 1990s, the **Basic Input/Output System**, or **BIOS**, was
    the way all Intel-based systems were booted. Its disk partitioning information
    was held in a **Master Boot Record** (**MBR**) with additional code in the first
    sector of each bootable partition. With the advent of the Microsoft-sponsored
    Secure Boot feature, and its associated boot mechanism known as the **Universal
    Extensible Firmware Interface** (**UEFI**), there is a new partitioning layout,
    and additional considerations.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 直到 1990 年代末，**基本输入输出系统**（**BIOS**）是所有基于 Intel 的系统启动的方式。它的磁盘分区信息存储在 **主引导记录**（**MBR**）中，并且每个可启动分区的第一个扇区还包含额外的代码。随着微软推出的安全启动功能以及与之相关的启动机制
    **统一可扩展固件接口**（**UEFI**）的出现，出现了新的分区布局和额外的考虑事项。
- en: Boot code under BIOS
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: BIOS 下的启动代码
- en: BIOS is the traditional boot method, and is well-supported by Debian. There
    are several choices for the placement of the boot code. Common practice is for
    it to be placed in the MBR at the beginning of the boot disk. However, if there
    are multiple operating systems already installed (especially Microsoft Windows),
    this replaces the installed bootloader with the one common to Linux. This is generally
    not a problem, since the installation and update process searches for other operating
    systems and includes the ability to boot them as an alternative in the boot menu.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: BIOS 是传统的启动方式，并且得到了 Debian 的良好支持。启动代码的放置位置有多个选择。常见做法是将其放置在启动磁盘的 MBR 开头。然而，如果已经安装了多个操作系统（特别是
    Microsoft Windows），这会将已安装的启动程序替换为 Linux 通用的启动程序。通常这不是问题，因为安装和更新过程会搜索其他操作系统，并且能够将它们作为启动菜单中的替代项。
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意事项
- en: The current bootloader for Debian on Intel is called GRUB2, although other,
    older loaders exist and may be installed as an alternative.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当前在 Intel 上用于 Debian 的启动程序是 GRUB2，尽管还有其他较旧的启动程序，可能也会被安装作为替代。
- en: However, there are occasions where the original, non-Linux bootloader is preferred.
    For example, some Windows installations won't update properly if a non-Windows
    bootloader is installed. In this case, the Linux boot code can be placed at the
    beginning of the Linux boot partition rather than the MBR at the beginning of
    the drive, where the non-Linux bootloader can usually find it and offer it as
    an alternative on its boot menu.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在某些情况下，原始的非 Linux 启动程序是首选。例如，一些 Windows 安装如果安装了非 Windows 启动程序，可能无法正确更新。在这种情况下，Linux
    启动代码可以放在 Linux 启动分区的开头，而不是硬盘的 MBR（主引导记录）处，这样非 Linux 启动程序通常可以找到它，并将其作为启动菜单中的一种选择。
- en: The problem of Windows updates when using the Linux GRUB2 bootloader is quite
    complex. The issue seems to occur primarily with major Internet Explorer version
    upgrades, and the reasons remain unclear, at least in any discussions and bug
    reports I've been able to find. Adding to the problem is the occasional report
    of inconsistent recognition of Linux boot partitions by the Windows loader. There
    seems to be no hard-and-fast guideline as to which Windows installations will
    experience problems and which will not. The only certain way to know is to try
    it, and that requires patience, good backups, and a willingness to start over
    if it doesn't work.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Linux GRUB2 启动程序时，Windows 更新的问题相当复杂。这个问题似乎主要发生在 Internet Explorer 的重大版本升级时，原因仍然不清楚，至少在我能找到的任何讨论和错误报告中都没有明确提到。更复杂的是，偶尔会出现
    Windows 启动程序无法一致地识别 Linux 启动分区的报告。似乎没有明确的指导方针来确定哪些 Windows 安装会遇到问题，哪些则不会。唯一确定的方式就是亲自尝试，而这需要耐心、良好的备份和在失败时愿意重新开始的决心。
- en: 'So, if you are planning to use a dual or multiboot layout that includes Windows,
    and you don''t have the time, patience, and determination to actually try all
    the alternatives, the answer comes down to the following practical considerations:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果你计划使用包含 Windows 的双系统或多系统启动布局，并且没有时间、耐心和决心去尝试所有的替代方案，那么答案就取决于以下一些实际的考虑因素：
- en: Can you live without a major version upgrade to Internet Explorer?
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你能没有 Internet Explorer 的重大版本升级而生活吗？
- en: Can you run Windows as a VM instead of as part of a dual or multiboot system?
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你能否将 Windows 作为虚拟机运行，而不是作为双系统或多系统的一部分？
- en: Will your Windows bootloader recognize the Linux boot partition?
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的 Windows 启动程序能否识别 Linux 启动分区？
- en: Many users never upgrade major versions of Internet Explorer, and are perfectly
    satisfied with security and feature updates to their current version. If this
    works for you, then proceed with the default placement in the MBR. If you absolutely
    must have the ability to upgrade major Internet Explorer versions, consider running
    Windows as a VM rather than as part of a dual or multiboot system. If you do not
    wish to do so (usually because of virtual hardware compatibility or licensing
    issues), then go with installing the Linux bootloader at the beginning of the
    Linux partition. Recent versions of Windows (since Vista) are pretty good about
    recognizing the Linux boot partition and adding it to the boot menu.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 许多用户从不升级 Internet Explorer 的主版本，并且对当前版本的安全性和功能更新感到完全满意。如果这种做法对你有效，那么可以继续使用 MBR
    中的默认位置。如果你绝对需要能够升级主版本的 Internet Explorer，考虑将 Windows 作为虚拟机运行，而不是作为双启动或多重启动系统的一部分。如果你不想这样做（通常是因为虚拟硬件兼容性或许可问题），那么就将
    Linux 引导加载程序安装在 Linux 分区的开头。自 Vista 以来，Windows 的最新版本通常能够很好地识别 Linux 启动分区，并将其添加到启动菜单中。
- en: Tip
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Best practice is to use the default placement in the MBR. Only if you truly
    need the original bootloader should you place the Linux boot code at the beginning
    of the Linux boot partition and, if necessary, configure the non-Linux bootloader
    to include it in the boot menu, if it doesn't do so automatically.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳做法是使用 MBR 中的默认位置。只有在你确实需要原始引导加载程序时，才将 Linux 启动代码放在 Linux 启动分区的开头，并且如果需要，配置非
    Linux 引导加载程序将其包括在启动菜单中，前提是它没有自动这样做。
- en: Boot code under UEFI
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 UEFI 下的启动代码
- en: The UEFI is a recent development by Intel and Microsoft that supports what is
    called Secure Boot, which requires all the loaded firmware to be signed or it
    won't be loaded. This is a problem for Linux, since the keys required for signing
    must, under the current GPL, be made public. This, of course, defeats the purpose.
    There are several workarounds, including some being used by Red Hat, SuSE, and
    Ubuntu, which are being discussed by the Debian developers and will probably be
    included in an update at some future point. For now, the UEFI specification allows
    Secure Boot to be disabled, and that is the recommended way to install Debian
    so that it boots under UEFI. It is also possible to switch on Legacy mode in most
    UEFI implementations, which allows the old MBR method to work as well.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: UEFI 是由英特尔和微软最近开发的一种支持所谓安全启动（Secure Boot）的技术，要求所有加载的固件必须被签名，否则将无法加载。这对 Linux
    是一个问题，因为根据当前的 GPL，签名所需的密钥必须公开。这显然会破坏安全启动的目的。有几种解决方法，包括红帽、SuSE 和 Ubuntu 所采用的一些方法，这些方法正在由
    Debian 开发者讨论，并可能在将来的某个更新中包含。目前，UEFI 规范允许禁用安全启动，这是安装 Debian 并使其在 UEFI 下启动的推荐方式。在大多数
    UEFI 实现中，也可以开启传统模式，这样就可以使用旧的 MBR 方法。
- en: Under UEFI, boot code is placed in a subdirectory in a special partition. Generally,
    this will be a subdirectory of `/EFI` in the first partition on the disk (formatted
    with the FAT32 filesystem). Generally, the boot modules and configuration files
    are placed in the `/EFI/grub` directory in the UEFI partition. It is not a good
    idea to replace the default EFI module (usually `/EFI/Boot/bootx64.efi`) by copying
    the `grubx64.efi` module over it, as some have recommended in the past. Debian
    installation generally takes care of including the GRUB loader as one of the options
    when booting, and if it isn't the default option, the boot settings menu should
    be used to set it as the default. It can also be used to add it as an option if
    the installation doesn't do this for you.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在 UEFI 下，启动代码被放置在一个特殊分区中的子目录中。通常，这将是磁盘上第一个分区中的 `/EFI` 子目录（格式化为 FAT32 文件系统）。通常，启动模块和配置文件会被放置在
    UEFI 分区中的 `/EFI/grub` 目录下。将默认的 EFI 模块（通常是 `/EFI/Boot/bootx64.efi`）替换为 `grubx64.efi`
    模块（如过去某些人推荐的那样）并不是一个好主意。Debian 安装程序通常会处理将 GRUB 加载程序作为启动选项之一，如果它不是默认选项，启动设置菜单应当用于将其设置为默认选项。如果安装程序没有为你完成这一步，也可以用它将
    GRUB 添加为启动选项。
- en: Note
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Getting into the UEFI boot settings menu usually involves holding down certain
    keys while booting the computer, very similar to the way the old BIOS menus were
    invoked. It is different for each computer model.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 进入 UEFI 启动设置菜单通常需要在启动计算机时按住某些键，这与旧 BIOS 菜单的调用方式非常相似。每个计算机型号的具体方法不同。
- en: UEFI is new to Debian 7.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: UEFI 对 Debian 7 来说是新的。
- en: Filesystem types
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统类型
- en: Selecting a filesystem format is the next major choice before installing Debian.
    The supported formats that are appropriate for a Linux installation include ext2,
    ext3, ext4, JFS, XFS, ReiserFS, and Btrfs. The first three are actually progressive
    versions of the **extended filesystem** (**ext**) developed specifically for Linux.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 选择文件系统格式是安装 Debian 之前的下一个重要决策。适合 Linux 安装的支持格式包括 ext2、ext3、ext4、JFS、XFS、ReiserFS
    和 Btrfs。前面三个实际上是为 Linux 特别开发的 **扩展文件系统**（**ext**）的逐步改进版本。
- en: ext2, ext3, and ext4
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ext2、ext3 和 ext4
- en: The ext filesystem was originally developed to overcome the limitations of the
    MINIX filesystem.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: ext 文件系统最初是为了解决 MINIX 文件系统的局限性而开发的。
- en: Note
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: MINIX was Linus Torvalds' inspiration for Linux.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: MINIX 是 Linus Torvalds 开发 Linux 的灵感来源。
- en: The **second extended filesystem** (**ext2**) improved upon it, while the **third
    extended filesystem** (**ext3**) added journaling, as well as performance improvements.
    The **fourth extended filesystem** (**ext4**) added additional features and performance
    improvements.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**第二扩展文件系统**（**ext2**）在此基础上进行了改进，而 **第三扩展文件系统**（**ext3**）则添加了日志记录功能以及性能改进。**第四扩展文件系统**（**ext4**）则增加了更多功能和性能提升。'
- en: Note
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The ability to disable journaling is one reason ext2 was sometimes used over
    ext3 for flash drives in order to reduce the write cycles.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用日志功能是 ext2 有时比 ext3 在闪存驱动器上使用的原因之一，目的是减少写入周期。
- en: Journaled File System
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志文件系统
- en: Developed by IBM for its Unix-like AIX operating system, and offered as an alternative
    to the ext and ext2 filesystems via release under the GPL, **Journaled File System**
    (**JFS**) is one of the alternatives to the current ext4\. It uses fewer resources,
    while remaining quite stable and resilient. It includes many features of Btrfs,
    and is a good choice when CPU power is limited, or with database systems that
    require synchronous writes to survive hardware failures.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 由 IBM 为其类 Unix 的 AIX 操作系统开发，并作为替代 ext 和 ext2 文件系统的选项通过 GPL 许可证发布的 **日志文件系统**（**JFS**），是当前
    ext4 的一种替代方案。它使用较少的资源，同时保持较高的稳定性和韧性。它包含了许多 Btrfs 的功能，是 CPU 性能有限或需要同步写入以应对硬件故障的数据库系统的一个不错选择。
- en: SGI's XFS File System
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SGI 的 XFS 文件系统
- en: XFS is another alternative, developed by Silicon Graphics in 1993\. It is a
    high-speed JFS, with emphasis on parallel **input/output** (**I/O**). The NASA
    Advanced Supercomputing Division uses this format on their 300+ terabyte Altix
    storage servers. Metadata operations are somewhat slower than other formats, although
    this was improved somewhat with the changes made by Red Hat. This is a good choice
    where metadata changes very little (such as few file or directory creation, move,
    or delete operations) and I/O performance is of utmost importance.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: XFS 是另一个替代方案，由硅谷图形公司（Silicon Graphics）于 1993 年开发。它是一个高速的 JFS，重点强调并行 **输入/输出**（**I/O**）。美国国家航空航天局高级超级计算部在其
    300 多 TB 的 Altix 存储服务器上使用此格式。尽管 Red Hat 对其做了一些改进，XFS 的元数据操作比其他格式稍慢，但这在一定程度上得到了改善。在元数据变动较小（如文件或目录创建、移动或删除操作较少）且
    I/O 性能至关重要的情况下，这是一个不错的选择。
- en: Reiser File System
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Reiser 文件系统
- en: '**Reiser File System** (**ReiserFS**) was intended to supplant ext3 as the
    filesystem of choice for Linux, offering improved performance. At one point, ReiserFS
    version 3 was the default format choice for SuSE Linux. Version 4 was released,
    but development waned when the company went out of business, and SuSE eventually
    decided to go back to ext3 as its default.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**Reiser 文件系统**（**ReiserFS**）旨在取代 ext3，成为 Linux 选择的文件系统，提供更好的性能。曾有一段时间，ReiserFS
    3 版是 SuSE Linux 的默认格式。版本 4 已发布，但随着公司倒闭，开发进度放缓，最终 SuSE 决定回归使用 ext3 作为默认格式。'
- en: ReiserFS offered some advantages over formats existing at the time, but it has
    fallen behind in some performance areas. It does support dynamic resizing, while
    other filesystems must be offline in order to be resized, or use a logical volume
    manager to provide virtual resizing support.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: ReiserFS 相较于当时存在的格式提供了一些优势，但在某些性能领域已落后。它支持动态调整大小，而其他文件系统则必须离线调整，或者使用逻辑卷管理器来提供虚拟调整大小支持。
- en: B-Tree File System
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: B-树文件系统
- en: '**B-Tree File System** (**Btrfs**) is the next Linux filesystem format. It
    focuses on fault-tolerance, repair, and easy administration, with the ability
    to scale up to larger storage configurations. ext-based systems can be easily
    converted to Btrfs. For the moment, Btrfs is still under heavy development, although
    only forward-compatible format changes are anticipated. Debian 7 does allow it
    to be used, but it is not yet recommended for production systems.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**B-Tree 文件系统**（**Btrfs**）是下一个 Linux 文件系统格式。它专注于容错、修复和简易管理，并具有扩展到更大存储配置的能力。基于
    ext 的系统可以轻松转换为 Btrfs。目前，Btrfs 仍在积极开发中，虽然预计只会有向前兼容的格式变化。Debian 7 已允许使用它，但目前不推荐用于生产系统。'
- en: Clustered formats
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集群格式
- en: There are various formats supported for clustered systems, including AFS and
    GFS2\. In general, they are not used for the basic system files required for booting,
    but are better suited for shared data. It is possible to set up such systems for
    booting, but this is beyond the scope of this discussion. If you are interested,
    there are a number of publications available on Linux clustering. A good starting
    point might be the Wikipedia article on clustered filesystems at [http://en.wikipedia.org/wiki/Clustered_file_system](http://en.wikipedia.org/wiki/Clustered_file_system).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于集群系统，支持多种格式，包括 AFS 和 GFS2。一般来说，它们不用于启动所需的基础系统文件，而更适合用于共享数据。虽然可以设置这样的系统进行启动，但这超出了本讨论的范围。如果你有兴趣，关于
    Linux 集群有很多相关出版物。一份好的起点可能是维基百科上关于集群文件系统的文章，链接为 [http://en.wikipedia.org/wiki/Clustered_file_system](http://en.wikipedia.org/wiki/Clustered_file_system)。
- en: Non-Linux formats
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 非 Linux 格式
- en: The Linux kernel supports many additional formats, such as Microsoft's NTFS,
    the various FAT formats, the old OS/2 HPFS, and Apple's HFS. These formats do
    not support the attributes required by a Linux system, and are thus not appropriate
    for a root filesystem. They could be used for other data should it be necessary.
    Note that these formats lack the basic Linux security attributes, although there
    is some provision for translating the attributes that do exist into their approximate
    Linux equivalents.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 内核支持许多额外的格式，例如微软的 NTFS、各种 FAT 格式、老旧的 OS/2 HPFS 以及苹果的 HFS。这些格式不支持 Linux
    系统所需的属性，因此不适合用作根文件系统。若有必要，它们可以用于其他数据。请注意，这些格式缺少基本的 Linux 安全属性，尽管它们在某些情况下有一定的机制可以将现有属性转换为大致相应的
    Linux 属性。
- en: Other Unix formats
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他 Unix 格式
- en: Many other formats are available, such as SCO's Unix BFS, QNX, and BSD's UFS.
    Although Unix-related, they are not considered appropriate for Linux root installations
    due to slight differences in attribute handling. They may work fine, but the Linux-specific
    formats generally have better performance and features.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他格式可供选择，例如 SCO 的 Unix BFS、QNX 和 BSD 的 UFS。尽管它们与 Unix 相关，但由于属性处理上的细微差异，它们并不适合用于
    Linux 根安装。虽然它们可能运行良好，但 Linux 特定的格式通常具有更好的性能和功能。
- en: Choosing a format
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择格式
- en: Generally, the default ext4 format is the best choice. In specific cases, JFS
    or XFS may provide some advantages, and if the ability to resize dynamically is
    more important than performance or scalability, and you don't want to use logical
    volumes, ReiserFS (especially version 4) might be appropriate. Btrfs should not
    be used for critical data yet, but at some point soon it will become the preferred
    format. Non-Linux formats should not be used for the basic system.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，默认的 ext4 格式是最好的选择。在特定情况下，JFS 或 XFS 可能提供一些优势；如果动态调整大小的能力比性能或可扩展性更重要，并且你不想使用逻辑卷，那么
    ReiserFS（特别是版本 4）可能是合适的选择。Btrfs 目前不应被用于关键数据，但在不久的将来，它将成为首选格式。非 Linux 格式不应用于基础系统。
- en: Partitioning
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分区
- en: 'The next decision to be made is how to partition the available storage space.
    There are the following three main considerations when deciding how to partition
    storage for a Debian system:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步需要做的决策是如何划分可用的存储空间。在为 Debian 系统决定如何划分存储时，主要有以下三个考虑因素：
- en: Efficient backup and recovery
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高效的备份与恢复
- en: Limiting space
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制空间
- en: Disk management
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘管理
- en: Partitioning for backup and recovery
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备份与恢复的分区
- en: In the past, backups were performed on full partitions. Large partitions could
    take a long time to back up, and the system could not write to the partition during
    the process. With the advent of incremental and live backups, this is no longer
    a primary consideration. Another problem was that when a disk got corrupted, recovery
    usually was limited to a single partition. There are partition repair utilities
    now that can fix most problems (though not all), and only those files that can't
    be fixed need to be recovered.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，备份是通过完整分区进行的。大型分区可能需要很长时间才能备份，而且在此过程中系统不能写入分区。随着增量备份和实时备份的出现，这已不再是主要的考虑因素。另一个问题是，当磁盘损坏时，恢复通常仅限于一个分区。现在有许多分区修复工具可以修复大部分问题（虽然并非全部），只有那些无法修复的文件才需要恢复。
- en: Still, limiting the damage and the focus of recovery can be useful and remains
    a valid consideration.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，限制损害并集中恢复焦点仍然是有用的，并且依然是一个有效的考虑因素。
- en: Space-limiting partitions
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 限制空间的分区
- en: Some administrators used partitions to limit the space available for certain
    directories. A good example is a mail spool directory. A massive spam attack can
    quickly consume large amounts of disk space. Using a separate partition for the
    spool directories will limit the total space that can be used by spool files,
    and the errors generated when no space remains alerts the administrator to the
    condition.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一些管理员使用分区来限制某些目录的可用空间。一个很好的例子是邮件队列目录。大规模的垃圾邮件攻击可以迅速占用大量磁盘空间。为队列目录使用单独的分区将限制队列文件的总空间，而当空间用尽时，生成的错误会提醒管理员这一情况。
- en: The availability of account quota systems for Linux can handle this situation
    without using partitions, but some administrators still prefer the hard limit
    of partitions.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 的账户配额系统可以在不使用分区的情况下处理这种情况，但一些管理员仍然偏好使用分区的硬限制。
- en: Disk management
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 磁盘管理
- en: Aside from backup, recovery, and damage limitation, there are administrative
    functions that may differ depending on how a disk is partitioned. In particular,
    using a single partition for an entire disk relieves an administrator from having
    to modify partition sizes if one partition fills up and more space is necessary.
    This is frequently why a single disk partition (plus swap space) is the recommendation
    for new users who are uncertain how they want to partition their drives.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 除了备份、恢复和损害限制外，根据磁盘如何分区，可能会有不同的管理功能。特别是，使用一个完整的磁盘分区可以使管理员避免在一个分区填满且需要更多空间时修改分区大小。这也是为什么单个磁盘分区（加上交换空间）常常被推荐给那些不确定如何分区的新人用户。
- en: Note
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Early BIOS systems could not boot from locations beyond the first 1024 cylinders
    of the disk. Thus, at one time, it was necessary to create a small/boot partition
    below that limit so that the system code (which could access larger areas) could
    be booted.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 早期的 BIOS 系统无法从磁盘的第 1024 个柱面之外的位置启动。因此，曾经需要在该限制以下创建一个小的/启动分区，以便系统代码（能够访问更大区域）能够启动。
- en: Logical Volume Management
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 逻辑卷管理
- en: '**Logical Volume Management**, or **LVM**, is a format pretty much exclusive
    to Linux. It is an alternative to partitions which makes space management much
    easier. Logical volumes can be resized at will, and can span multiple disks. They
    can be migrated to different disks without interrupting services (live migration).
    There are also striping and mirroring features that are similar to RAID 0 and
    RAID 1.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**逻辑卷管理**，或称**LVM**，是一个几乎专属于 Linux 的格式。它是分区的替代方案，使得空间管理更加简便。逻辑卷可以随意调整大小，并且可以跨多个磁盘扩展。它们可以在不中断服务的情况下迁移到不同的磁盘（实时迁移）。此外，它还具有类似于
    RAID 0 和 RAID 1 的条带化和镜像功能。'
- en: LVM is more complex than basic partitioning, and not commonly used except in
    large storage installations.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: LVM 比基础分区更复杂，通常只在大型存储安装中使用。
- en: Note
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Technically, LVM is a structure that overlays the physical disk partitioning.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，LVM 是一个覆盖物理磁盘分区的结构。
- en: The swap partition
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交换分区
- en: 'If available, a swap file or partition is used by Linux when memory paging
    to disk is necessary. With the advent of cheap memory, such paging is often infrequent
    with one exception: system hibernation. This is where the system is paused and
    the memory contents are written to disk prior to power off in order to allow the
    system to resume from the saved state. While this is commonly associated with
    laptop systems, servers sometimes make use of it as well.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可用，当需要将内存分页到磁盘时，Linux 会使用交换文件或交换分区。随着廉价内存的出现，这种分页操作通常不常发生，唯一的例外是：系统休眠。在这种情况下，系统暂停运行并将内存内容写入磁盘，然后关机，以便在恢复时从保存的状态继续运行。虽然这通常与笔记本电脑系统相关，但服务器有时也会使用这一功能。
- en: Swap files are single files created within an existing filesystem, while swap
    partitions are exactly that—a specially formatted disk partition. In general,
    swap files are only used when additional swap space is necessary for some reason,
    as it has all the additional overhead (metadata, journaling, allocation, and such)
    of the filesystem in which it resides.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 交换文件是在现有文件系统中创建的单一文件，而交换分区则是经过特殊格式化的磁盘分区。一般来说，交换文件仅在某些原因需要额外交换空间时使用，因为它具有所在文件系统的所有额外开销（元数据、日志、分配等）。
- en: Unless an administrator is absolutely certain a system will never need to swap
    to disk or require the ability to hibernate, a swap partition equal in size to
    the installed memory is recommended.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 除非管理员非常确定系统永远不需要交换到磁盘或不需要休眠功能，否则建议将交换分区的大小设置为已安装内存的大小。
- en: Note
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注释
- en: '**Solid-state drives** (**SSD**), so-called flash drives, were once considered
    an exception. In that the limited write cycles were considered a problem if swap
    files were placed on such a drive. However, with modern flash technology, this
    is no longer an issue, especially since the swapping has been greatly reduced
    by the large amounts of memory in current systems.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**固态硬盘**（**SSD**），即所谓的闪存驱动器，曾被认为是一个例外。因为如果将交换文件放在这样的驱动器上，有限的写入周期会被视为一个问题。然而，随着现代闪存技术的发展，这已不再是问题，特别是因为当前系统的大量内存大大减少了交换操作的需求。'
- en: Selecting a partitioning scheme
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择分区方案
- en: The single partition (plus swap space) per disk scheme is the most common nowadays,
    as it is simple to create and manage. Multiple partitions may be used in the special
    cases mentioned previously, although, in general, the quality and speed of current
    backup utilities minimizes the need for separate partitions just for backup efficiency.
    If the system has multiple disks and may require resizing or live migration in
    the event of hardware changes, then LVM should be considered.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 每个磁盘的单一分区（加交换空间）方案如今是最常见的，因为它简单易创建和管理。在之前提到的特殊情况下，可能会使用多个分区，尽管一般来说，当前备份工具的质量和速度已经将对单独分区的需求降到最低，尤其是出于备份效率考虑。
    如果系统有多个磁盘，并且在硬件更改时可能需要调整大小或进行实时迁移，则应考虑使用 LVM。
- en: In general, the Debian defaults follow best practice. This usually means a single
    root partition and a single swap partition. If the administrator wants multiple
    partitions but isn't certain of the sizes required and doesn't want to use LVM,
    the defaults for the multipartition setup are a good starting point.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，Debian 的默认设置遵循最佳实践。通常这意味着单一的根分区和单一的交换分区。如果管理员想要多个分区，但不确定需要的大小，并且不想使用 LVM，那么多分区设置的默认配置是一个不错的起点。
- en: Note
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注释
- en: An exception to accepting the single root and single swap partitions default
    is the case of disk encryption discussed later. If implemented via the Linux kernel,
    an unencrypted/boot partition is required.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 接受单根分区和单交换分区的默认设置的例外情况是后面讨论的磁盘加密。如果通过 Linux 内核实现，则需要一个未加密的/boot 分区。
- en: Encryption
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加密
- en: The final choice to be made prior to installation is whether to encrypt the
    disk contents. There are two main options, disk encryption and directory encryption.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装前需要做出的最后选择是是否加密磁盘内容。主要有两种选择：磁盘加密和目录加密。
- en: Tip
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In some countries, encryption is subject to legal restrictions. Know the laws
    in your jurisdiction!
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些国家，加密受到法律限制。请了解您所在司法管辖区的法律！
- en: Why encrypt?
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么要加密？
- en: One of the main reasons for encryption is to keep private and sensitive data
    secure from unauthorized access. Laptops, for example, are frequently stolen and
    their contents have, in some well-publicized cases, been made public or put to
    harmful or illegal uses. Servers, on the other hand, aren't usually stolen, but
    they do have multiple users, and while the Linux permissions system can prevent
    unauthorized access, there are ways for hackers to bypass it, and they are constantly
    trying. For example, if one can gain root access, either legally as a system administrator,
    or illicitly by exploiting unpatched software security vulnerabilities, read/write
    access to everything on the system is allowed. Or, if a user is not careful with
    setting permissions, access via other users may be allowed unintentionally. In
    all cases, access by anyone who does not have the proper keys can be prevented
    by encryption.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 加密的主要原因之一是为了防止未经授权的访问，从而保护私人和敏感数据的安全。例如，笔记本电脑经常被盗，且其内容在一些广为人知的案例中已经被公开或用于有害或非法的目的。另一方面，服务器通常不会被盗，但它们有多个用户，尽管
    Linux 权限系统可以防止未经授权的访问，但黑客仍然有绕过它的方法，并且他们不断尝试。例如，如果某人能够获得 root 权限，不论是作为系统管理员合法获取，还是通过利用未修补的软件安全漏洞非法获取，那么系统中的所有内容都可以被读取/写入。或者，如果用户在设置权限时不小心，可能会无意中允许其他用户访问。在所有情况下，通过加密可以防止任何没有正确密钥的人访问。
- en: Disk encryption
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 磁盘加密
- en: Disk encryption comes in several flavors. Full disk encryption, where the entire
    contents of the storage device are encrypted, is handled by hardware in the disk
    drive itself, or on the system's motherboard. This is because the code necessary
    to decrypt the disk can't really reside on the disk, since it will be in encrypted
    form and thus can't be loaded until decrypted. Since this method depends on the
    motherboard or disk software, which varies with manufacturer, it won't be covered
    here.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘加密有几种类型。完全磁盘加密，其中存储设备的所有内容都被加密，由磁盘驱动器本身或系统主板上的硬件处理。这是因为解密磁盘所需的代码不能真正存储在磁盘上，因为它将是加密的形式，无法在解密之前加载。由于这种方法依赖于主板或磁盘软件，而这些因制造商不同而有所不同，因此在此不做详细介绍。
- en: Note
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A non-hardware method does exist, using an unencrypted USB stick or other media
    to provide the boot code, but requires special steps for creating the boot media
    that won't be covered here either.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 确实存在一种非硬件的方法，即使用未加密的 USB 启动盘或其他介质来提供启动代码，但这需要特殊的步骤来创建启动介质，相关内容在此也不做介绍。
- en: Partial disk encryption, where individual partitions are encrypted, can be handled
    by Linux directly. There must be some unencrypted area from which the decryption
    software and keys can be loaded. This usually means an unencrypted boot partition,
    or booting from an unencrypted USB stick, thus getting the initial decryption
    software loaded and then chain loading from the encrypted disk. The keys themselves
    are encrypted by a password or pass phrase that is required at boot time to keep
    the keys secure.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 部分磁盘加密，其中各个分区进行加密，可以由 Linux 直接处理。必须有一些未加密的区域，从中可以加载解密软件和密钥。这通常意味着需要一个未加密的启动分区，或从未加密的
    USB 启动盘启动，从而加载初始解密软件，并从加密磁盘链式加载。密钥本身是通过密码或密码短语进行加密的，在启动时需要输入以确保密钥的安全。
- en: A special case would be encrypting the swap partition. If there is any page
    swapping, or if hibernation (suspend to disk) is used, information in memory can
    be exposed to anyone who can read the partition. For this reason, many administrators
    encrypt the swap partition.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一个特殊情况是加密交换分区。如果发生页面交换，或使用休眠（将系统挂起到磁盘），内存中的信息可能会暴露给任何能够读取该分区的人。出于这个原因，许多管理员会加密交换分区。
- en: Disk encryption is appropriate for laptops, or for separate partitions on servers
    that contain sensitive data.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘加密适用于笔记本电脑，或服务器上包含敏感数据的独立分区。
- en: Directory encryption
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目录加密
- en: An alternative to encrypting full partitions or disks is to encrypt portions
    of a filesystem, usually a directory and everything below it in the hierarchy,
    by using special features of Linux so that the encryption and decryption are handled
    automatically by the kernel or special software in the background. Thus, there
    are no implications for booting (as long as the boot directory isn't encrypted)
    and no installation issues, as it is configured after installation. Directory
    encryption is appropriate for servers containing sensitive information that resides
    in certain parts of the directory hierarchy.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种替代方法是加密文件系统的部分内容，通常是某个目录及其下属的所有内容，使用 Linux 的特殊功能，使得加密和解密由内核或后台的特殊软件自动处理。这样，就不会影响启动（只要启动目录没有被加密）也没有安装问题，因为它是在安装后进行配置的。目录加密适用于存储敏感信息并位于目录层级某些特定部分的服务器。
- en: Debian provides several packages for this type of encryption. The two most common
    are encfs and cryptsetup.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 提供了几种用于此类加密的包。最常用的两种是 encfs 和 cryptsetup。
- en: Choosing encryption
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择加密
- en: There are two primary disadvantages to disk or directory encryption. The first
    is probably the most serious; if the password is forgotten, the data is permanently
    lost and completely unrecoverable unless unencrypted backups (or encrypted backups
    where the password has not been lost) are available. The second disadvantage is
    performance. Most software encryption modules perform well, but there is no avoiding
    some overhead, even if it is minimal. Hardware encryption, such as that provided
    by the motherboard or the disk controller or drive itself, generally does not
    have significant overhead.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘或目录加密有两个主要缺点。第一个可能是最严重的；如果密码被遗忘，数据将永久丢失且完全无法恢复，除非有未加密的备份（或者备份是加密的，但密码没有丢失）。第二个缺点是性能。大多数软件加密模块表现良好，但无论如何都会有一定的开销，尽管这种开销可能是最小的。硬件加密，例如由主板或磁盘控制器或硬盘本身提供的加密，一般没有显著的开销。
- en: Tip
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Best practice is to evaluate whether the disadvantages of encryption outweigh
    the potential damage from compromised or stolen systems.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳做法是评估加密的缺点是否超过系统被破坏或盗窃可能带来的潜在损害。
- en: In general, laptops with sensitive information and systems that contain sensitive
    information with many users, or that potentially can be accessed by hackers (such
    as web servers for example, which must be publicly accessible in order to serve
    their purpose) should use directory encryption at the very least. Disk encryption,
    especially if implemented in hardware, is even better.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，包含敏感信息的笔记本电脑以及包含敏感信息并且有多个用户的系统，或者可能会被黑客访问的系统（例如必须对外公开以执行其功能的 Web 服务器），至少应使用目录加密。磁盘加密，尤其是硬件加密，效果更好。
- en: Most corporate policies require partial or full (if available) disk encryption
    on laptops, and directory encryption as a minimum on public servers.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数公司政策要求笔记本电脑进行部分或完全（如果可用）磁盘加密，并要求公共服务器至少进行目录加密。
- en: Installing Debian
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Debian
- en: The actual installation is quite straightforward, and is considered one of the
    simplest distributions for base installs. Boot up the installation disk, and answer
    the necessary questions. A help button is frequently available to provide additional
    information during the installation. Also, standard and advanced installation
    subjects (including much of what is discussed in this chapter) are covered in
    detail in the Debian installation guide for the current release, available at
    [http://www.debian.org/releases/stable/installmanual](http://www.debian.org/releases/stable/installmanual).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 实际安装过程非常简单，且被认为是最容易进行基础安装的发行版之一。启动安装盘，回答必要的问题。安装过程中通常提供帮助按钮，以便获取额外的信息。此外，标准和高级安装主题（包括本章讨论的内容）在
    Debian 当前版本的安装指南中有详细介绍，指南可在[http://www.debian.org/releases/stable/installmanual](http://www.debian.org/releases/stable/installmanual)找到。
- en: Tip
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Recommended practice is to install only the base system and use the package
    manager to install additional software after the system is up and running. However,
    it is possible during installation to select tasks which will install additional
    classes of software (such as the desktop environment which installs KDE, GNOME,
    XFCE, or LXDE, "Laptop" which installs software commonly used on laptops, and
    so on, all described in the installation guide). Doing this installs a standard
    set of additional software that suits most users' needs.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐的做法是仅安装基本系统，并在系统启动后使用包管理器安装额外的软件。但是，在安装过程中，可以选择任务来安装额外的软件类别（例如安装桌面环境，包括 KDE、GNOME、XFCE
    或 LXDE，“笔记本电脑”任务安装常用于笔记本电脑的软件等，所有这些都在安装指南中有详细描述）。这样做会安装一个标准的附加软件集，适合大多数用户的需求。
- en: Summary
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Prior to installing Debian, or any Linux distribution for that matter, an administrator
    should know whether he/she will be using single or dual/multiboot, and what his
    boot firmware is (BIOS or UEFI). It is also good to have some idea of where he/she
    will place the boot code, what filesystem types he/she will use, and some idea
    of his partitioning scheme. If unsure, the defaults offered by the Debian installer
    can be taken safely. If full disk encryption will be used, the setup depends on
    the hardware implementation and will probably need to be set up prior to installation.
    Directory encryption can be set up after the installation.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装 Debian 或任何 Linux 发行版之前，管理员应知道是否将使用单系统启动还是双系统/多系统启动，以及他/她的引导固件是 BIOS 还是 UEFI。还应该大致了解引导代码的放置位置、将使用的文件系统类型以及分区方案的一些想法。如果不确定，可以安全地采用
    Debian 安装程序提供的默认设置。如果将使用全盘加密，则设置取决于硬件实现，并且可能需要在安装之前进行设置。目录加密可以在安装后设置。
- en: Once your system is set up, the next major issue to address is installing additional
    packages, which leads us to the next chapter on package management.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您的系统设置完成，下一个重要问题是安装额外的软件包，这将引导我们进入下一章关于软件包管理的内容。
