["```\n    ~$ cd ${DEVROOT}\n    ~$ mkdir local centralized bin\n\n    ```", "```\n    ~$ cd ${DEVROOT}/centralized\n    ~$ git clone git://git.overlays.gentoo.org/proj/hardened-refpolicy.git\n\n    ```", "```\n    ~$ cd ${DEVROOT}/local\n    ~$ git init\n\n    ```", "```\n    # Substitute /home/staff/dev/selinux with your DEVROOT\n    DEVROOT=/home/staff/dev/selinux\n    # Substitute the next location with your distributions' policy checkout\n    POLICY_LOCATION=${DEVROOT}/centralized/hardened-refpolicy/\n    source ${DEVROOT}/bin/functions.sh\n    ```", "```\n    ~$ seshowif files_read_etc_files\n    interface(`files_read_etc_files',`\n     gen_require(`\n     type etc_t;\n     ')\n\n     allow $1 etc_t:dir list_dir_perms;\n     read_files_pattern($1, etc_t, etc_t)\n     read_lnk_files_pattern($1, etc_t, etc_t)\n    ')\n\n    ```", "```\nexport POLICY_LOCATION=/usr/share/selinux/devel/\n```", "```\n~$ logger \"Just a simple log event\"\n~$ tail /var/log/messages\n\n```", "```\n~# chcon -t named_conf_t /var/log/messages\n~$ logger \"Another simple log event\"\n~$ tail /var/log/messages\n~# ausearch -m avc -ts recent\n\n```", "```\n    policy_module(mylogging, 0.1)\n    gen_require(`\n      type syslogd_t;\n      type named_conf_t;\n     ')\n    # Allow writing to named_conf_t files\n    allow syslogd_t named_conf_t:file { getattr append lock ioctl open write };\n    ```", "```\n    ~$ ln –s /usr/share/selinux/devel/Makefile\n\n    ```", "```\n    ~$ make mylogging.pp\n\n    ```", "```\n    ~$ sudo –r sysadm_r –t sysadm_t -s\n\n    ```", "```\n    ~# semodule –i mylogging.pp\n\n    ```", "```\n    ~$ cd ${DEVROOT}/local\n    ~$ git add mylogging.te Makefile\n    ~$ git commit –m 'Adding mylogging.te which allows the system logger to write to the named configuration file type named_conf_t'\n\n    ```", "```\n~# semodule –l\naide  1.8.0\nalsa  1.13.0\n…\nmylogging  0.1\n…\n\n```", "```\nmodule somename 1.0;\nrequire {\n  type some_type_t;\n  type another_type_t;\n}\nallow some_type_t another_type_t:dir { read search };\n```", "```\n~$ checkmodule -M –m –o somename.mod somename.te\n~$ semodule_package –m somename.mod –o somename.pp\n\n```", "```\n    ~$ sefinddef 'file.*write'\n    define(`write_files_pattern',`\n     allow $1 $3:file write_file_perms;\n    …\n    define(`write_file_perms',`{ getattr write append lock ioctl open }')\n    …\n\n    ```", "```\n    ~$ seshowdef write_files_pattern\n    define(`write_files_pattern',`\n     allow $1 $2:dir search_dir_perms;\n     allow $1 $3:file write_file_perms;\n    ')\n\n    ```", "```\n    ~$ sefindif 'write_files_pattern.*named_conf_t'\n    contrib/bind.if: interface(`bind_write_config',`\n    contrib/bind.if:   write_files_pattern($1, named_conf_t, named_conf_t)\n\n    ```", "```\n    policy_module(mylogging, 0.2)\n    gen_require(`\n      type syslogd_t;\n    ')\n    bind_write_config(syslogd_t)\n    ```", "```\n~$ seshowif bind_write_config\ninterface(`bind_write_config',`\n gen_require(`\n type named_conf_t;\n ')\n write_files_pattern($1, named_conf_t, named_conf_t)\n allow $1 named_conf_t:file setattr_file_perms;\n')\n\n```", "```\nwrite_files_pattern(syslogd_t, named_conf_t, named_conf_t)\nallow syslogd_t named_conf_t:file setattr_file_perms;\n```", "```\n    ~$ /usr/sbin/syslog-ng --help\n    bash: /usr/sbin/syslog-ng: Permission denied\n\n    ```", "```\n    ## <summary>Local adaptation to the system logging SELinux policy</summary>\n\n    ##########################################\n    ## <summary>\n    ##    Execute the system logging daemon in the caller domain\n    ## </summary>\n    ## <desc>\n    ##   <p>\n    ##     This does not include a transition.\n    ##   </p>\n    ## </desc>\n    ## <param name=\"domain\">\n    ##    <summary>\n    ##      Domain allowed access.\n    ##    </summary>\n    ## </param>\n    #\n    interface(`logging_exec_syslog',`\n      gen_require(`\n        type syslogd_exec_t;\n      ')\n      can_exec($1, syslogd_exec_t)\n    ')\n    ```", "```\n    policy_module(mysysadm, 0.1)\n    gen_require(`\n      type sysadm_t;\n    ')\n    logging_exec_syslog(sysadm_t)\n    ```", "```\n    ~$ /usr/sbin/syslog-ng --help\n\n    ```", "```\n        ~$ ls -dZ /var/log\n        drwxr-xr-x. root root system_u:object_r:var_log_t:s0 /var/log\n\n        ```", "```\n        ~$ seinfo –tvar_log_t –x\n         var_log_t\n         file_type\n         non_security_file_type\n         mountpoint\n         non_auth_file_type\n         logfile\n\n        ```", "```\n        ~$ sefindif 'attribute logfile'\n        system/logging.if: interface(`logging_log_file',`\n        …\n\n        ```", "```\n        ~$ sestatus | grep MLS\n        Policy MLS status:    enabled\n\n        ```", "```\n~# sestatus\nSELinux status:      enabled\nSELinuxfs mount:      /sys/fs/selinux\nSELinux root directory:    /etc/selinux\nLoaded policy name:    mcs\nCurrent mode:      enforcing\nMode from config file:    enforcing\nPolicy MLS status:      enabled\nPolicy deny_unknown status:  denied\nMax kernel policy version:  28\n\n```"]