- en: Chapter 3. Configuring Your Network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The recipes we''ll be covering in this chapter are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a VLAN interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a teamed interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a bridge
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring IPv4 settings
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring your DNS resolvers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring static network routes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter will attempt to explain how to use `NetworkManager`, which is the
    default network configuration tool and daemon in RHEL 7\. It is a set of tools
    that makes networking simple and straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring your network can be hard at times, especially when using the more
    exotic configuration options in combination with well-known configuration scripts.
    The `NetworkManager` allows you to easily configure your network without needing
    to edit the configuration files manually.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can still edit the network configuration files located in `/etc/sysconfig/network-scripts`
    using your preferred editor; however, by default, `NetworkManager` does not notice
    any changes you make. You''ll need to execute the following after editing the
    files located in the preceding location:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This is not enough to apply the changes immediately. You'll need to bring down
    and up the connection or reboot the system.
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, you can edit `/etc/NetworkManager/NetworkManager.conf` and add
    `monitor-connection-files=yes` to the `[main]` section. This will cause `NetworkManager`
    to pick up the changes and apply them immediately.
  prefs: []
  type: TYPE_NORMAL
- en: Within these recipes, you will get an overview on how to configure your network
    using the `NetworkManager` tools (`nmcli` and `nmtui`) and kickstart files.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a VLAN interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VLANs are isolated broadcast domains that run over a single physical network.
    They allow you to segment a local network and also to "stretch" a LAN over multiple
    physical locations. Most enterprises implement this on their network switching
    environment, but in some cases, the tagged VLANs reach your server.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to configure a VLAN, we need an established network connection on the
    local network interface.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For the sake of ease, our physical network interface is called `eth0`. The VLAN's
    ID is 1, and the IPv4 address is `10.0.0.2`, with a subnet mask of `255.0.0.0`
    and a default gateway of `10.0.0.1`.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the VLAN connection with nmcli
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'With `nmcli`, we need to first create the connection and then activate it.
    Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a VLAN interface using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, via this command, activate the connection:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Check your network connection, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here is an example output of the preceding commands:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Creating the VLAN connection with nmcli](img/00015.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Creating the VLAN connection with nmtui
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `nmtui` tool is a text user interface to `NetworkManager` and is launched
    by executing the following in a terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This will bring up the following text-based interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the VLAN connection with nmtui](img/00016.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Navigation is done using the *Tab* and arrow keys, and the selection is done
    by pressing the *Enter* key. Now, you need to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Edit a connection** and select **<OK>**. The following screen will appear:![Creating
    the VLAN connection with nmtui](img/00017.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, select **<Add>** and the **VLAN** option. Confirm by Selecting **<Create>**:![Creating
    the VLAN connection with nmtui](img/00018.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the requested information in the following form and commit by selecting
    **<OK>**:![Creating the VLAN connection with nmtui](img/00019.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your new **VLAN** interface will now be listed in the connections list:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the VLAN connection with nmtui](img/00020.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Creating the VLAN connection with kickstart
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s explore what you need to add to your `kickstart` script in order to
    achieve the same result as in the preceding section:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Look for the configuration parameters within your `kickstart` file with the
    following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Replace it with the following configuration parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The command line to create a VLAN with `nmcli` is pretty basic as it uses default
    values for every piece of information that is missing. To make sure that everything
    is created to your wishes, it is wise to also use `con-name` and `ifname`. These
    will respectively name your connection and the device you''re creating. Take a
    look at the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: This will create the `vlan.1` connection with `eth0` as the parent and `eth0.1`
    as the target device.
  prefs: []
  type: TYPE_NORMAL
- en: As with `nmcli` and `nmtui`, you can name your VLAN connection in `kickstart`;
    you only need to specify the `--interfacename` option. If you cannot find any
    previous network configuration in your `kickstart` file, just add the code to
    your `kickstart` file.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `nmcli` tool lacks a man page, but execute the following command for for
    more options to create VLAN connections:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'For more `kickstart` information on networks, check the following URL: [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html).'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a teamed interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Interface teaming, interface bonding, and link aggregation are all the same.
    It was already implemented in the kernel by way of the `bonding` driver. The team
    driver provides a different mechanism (from bonding) to team multiple network
    interfaces into a single logical one.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To set up a teamed interface, we'll need more than one network interface.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For the sake of ease, our physical network interfaces are called `eth1` and
    `eth2`. The IPv4 address for the team interface is `10.0.0.2`, with a subnet mask
    of `255.0.0.0` and a default gateway of `10.0.0.1`.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the teamed interface using nmcli
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Using this approach, we''ll need to create the team connection and two team
    slaves and activate the connection, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the following command line to create the team connection:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add `eth1` to the team by executing the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, add `eth2` to the team by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Bring the team up, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Finally, check your network connections through the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here''s an example output of the preceding commands:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Creating the teamed interface using nmcli](img/00021.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Creating the teamed interface using nmtui
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s fire up `nmtui` and add a connection through the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: First, create a team connection by selecting **<Add>**:![Creating the teamed
    interface using nmtui](img/00022.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the requested information in the following form and click on **<Add>**
    for every interface to add:![Creating the teamed interface using nmtui](img/00023.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, select **<Add>** within team slaves to add an interface by filling out
    the form and selecting **<OK>**. Repeat this for every physical interface:![Creating
    the teamed interface using nmtui](img/00024.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, select **<OK>** to create the team interface:![Creating the teamed interface
    using nmtui](img/00025.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your new team interface will now be listed in the connections list, as shown
    in the following screenshot:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Creating the teamed interface using nmtui](img/00026.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Creating the teamed interface with kickstart
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Open your `kickstart` file with your favorite editor and perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Look for the network configuration parameters within your `kickstart` file
    by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, add the following configuration parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Teaming comes with runners—a way of load-sharing backup methods that you can
    assign to your team:'
  prefs: []
  type: TYPE_NORMAL
- en: '**active-backup**: In this, one physical interface is used, while the others
    are kept as backup'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**broadcast**: In this, data is transmitted over all physical interfaces''
    selectors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**LACP**: This implements `802.3ad` Link Aggregation Control Protocol'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**loadbalance**: This performs active Tx load balancing and uses a BPF-based
    Tx port'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**round-robin**: The data is transmitted over all physical interfaces in turn'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These can also be defined upon creation using either of the presented options
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: nmcli
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Add `team.config "{\"runner\":{\"name\": \"activebackup\"}}"` to your command
    to create your team interface, and substitute `activebackup` with the runner that
    you wish to use.'
  prefs: []
  type: TYPE_NORMAL
- en: nmtui
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Fill out the JSON configuration field for the team interface with `{"runner":
    {"name": "activebackup"}}`, and substitute `activebackup` with the runner that
    you wish to use.'
  prefs: []
  type: TYPE_NORMAL
- en: '![nmtui](img/00027.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: kickstart
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Add `--teamconfig="{\"runner\":{\"name\": \"activebackup\"}}"` to your team
    device line, and substitute `activebackup` with the runner that you wish to use.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The options provided to create the team interface are bare bones using `nmcli`.
    If you wish to add a connection and interface name, use `con-name` and `ifname`,
    respectively, in this way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'The same is true for adding the team slaves, except for `ifname`, which is
    required to specify the correct interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For more information on the networking team daemon and "runners", refer to
    the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Understanding_the_Network_Teaming_Daemon_and_the_Runners.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Understanding_the_Network_Teaming_Daemon_and_the_Runners.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information on using `nmcli` to create team interfaces, take a look
    at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Configure_a_Network_Team_Using-the_Command_Line.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Configure_a_Network_Team_Using-the_Command_Line.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information on using `nmtui` to create team interfaces, follow this
    link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Configure_a_Network_Team_Using_the_Text_User_Interface_nmtui.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Configure_a_Network_Team_Using_the_Text_User_Interface_nmtui.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information on creating team interfaces in kickstart scripts, the
    following link will be useful:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a bridge
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A network bridge is a logical device that forwards traffic between connected
    physical interfaces based on MAC addresses. This kind of bridge can be used to
    emulate a hardware bridge in virtualization applications, such as KVM, to share
    the NIC with multiple virtual NICs.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To bridge two physical networks, we need two network interfaces. Your physical
    interfaces should never be configured with any address as the bridge will be configured
    with the IP address(es).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For the sake of ease, the physical network interfaces we will bridge are `eth1`
    and `eth2`. The IPv4 address will be `10.0.0.2` with a subnet mask of `255.0.0.0`
    and a default gateway of `10.0.0.1`.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a bridge using nmcli
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Make sure that you activate the bridge after configuring the bridge and interfaces!
    Here are the steps that you need to perform for this:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, create the bridge connection via the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add `eth1` to the bridge, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, add `eth2` to the bridge using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Activate the bridge by executing the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, check your network connection by running the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here is an example output of the preceding commands:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Creating a bridge using nmcli](img/00028.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Creating a bridge using nmtui
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Launch `nmtui` and select **Edit a connection**. After this, follow these steps
    to create a bridge using `nmtui`:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a bridge connection by selecting **<Add>** and **Bridge** from the connection
    list and then click on **<Create>**:![Creating a bridge using nmtui](img/00029.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fill out the presented form with the required information:![Creating a bridge
    using nmtui](img/00030.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, add the two network interfaces by selecting **<Add>** and providing the
    requested information for each interface:![Creating a bridge using nmtui](img/00031.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, select **<OK>** to create the bridge:![Creating a bridge using nmtui](img/00032.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your new bridge will now be listed in the connections list:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a bridge using nmtui](img/00033.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Creating a bridge with kickstart
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Edit your `kickstart` file with your favorite editor through the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Look for the configuration parameters within your `kickstart` file using this
    command line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, add the following configuration parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The options provided to create the bridge are bare bones using `nmcli`. If
    you wish to add a connection and interface name, use `con-name` and `ifname`,
    respectively, in this way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The same is true for adding the bridge slaves, except for `ifname`, which is
    required to specify the correct interface:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For more information on creating network bridges using `nmcli`, go to the following
    URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Network_Bridging_Using_the_NetworkManager_Command_Line_Tool_nmcli.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Network_Bridging_Using_the_NetworkManager_Command_Line_Tool_nmcli.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information on creating network bridges using `nmtui`, go to this
    website:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/ch-Configure_Network_Bridging.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/ch-Configure_Network_Bridging.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information on kickstart and bridging, go to the following website:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring IPv4 settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Changing your IP addresses is pretty straightforward in the old `ifcfg`-style
    files, and it's actually pretty simple using `NetworkManager` tools as well.
  prefs: []
  type: TYPE_NORMAL
- en: As kickstart is only used to set up a system, it is not relevant to go in depth
    into this matter in this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's change our current IPv4 address and gateway for `eth1` to `10.0.0.3`/`8`,
    with `10.0.0.2` as the default gateway.
  prefs: []
  type: TYPE_NORMAL
- en: Setting your IPv4 configuration using nmcli
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the ipv4 information by executing the following command line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, run the following to verify the information:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here is an example output of the preceding commands:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Setting your IPv4 configuration using nmcli](img/00034.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Setting your IPv4 configuration using nmtui
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `nmtui` tool takes a bit more work, but the end result remains the same.
    Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Start `nmtui`, select the interface that you wish to modify, and click on **<Edit...>**:![Setting
    your IPv4 configuration using nmtui](img/00035.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, modify the IPv4 configuration to your liking and click on **<OK>**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Managing IPv6 ip addresses is as straightforward as configuring your IPv4 counterparts.
  prefs: []
  type: TYPE_NORMAL
- en: 'The options you need to use in kickstart to set your ip address and gateway
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--ip`: This is used to set the system''s IPv4 address'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--netmask`: This is used for the subnet mask'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--gateway`: This is used to set the IPv4 gateway'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring your DNS resolvers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DNS servers are stored in `/etc/resolv.conf`. You can also manage this file
    using `NetworkManager`.
  prefs: []
  type: TYPE_NORMAL
- en: As with the previous recipe, and for the same reasons, this recipe won't go
    into the `kickstart` options.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s set the DNS resolvers for `eth1` to point to Google''s public DNS servers:
    `8.8.8.8` and `8.8.4.4`.'
  prefs: []
  type: TYPE_NORMAL
- en: Setting your DNS resolvers using nmcli
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the DNS servers via the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, use the following command to check your configuration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here is an example output of the preceding commands:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Setting your DNS resolvers using nmcli](img/00036.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Setting your DNS resolvers using nmtui
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `nmtui` tool requires a bit more work to set the DNS resolvers, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Start `nmtui`, select the interface that you wish to modify, and click on **<Edit...>**:![Setting
    your DNS resolvers using nmtui](img/00037.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `nmcli` tool supports adding multiple DNS servers by separating them with
    a semicolon. Using a blank value (`""`) will remove all the DNS servers for this
    connection.
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, you can set the DNS search domains for your environment. When using
    `nmcli`, you'll need to specify the `ipv4.dns-search` property.
  prefs: []
  type: TYPE_NORMAL
- en: Kickstart will allow you to specify the DNS servers using the `--nameserver`
    option for each DNS server. If you do not wish to specify any DNS servers, use
    `--nodns`. Unfortunately, there is no native way to set the DNS domain search
    using `kickstart`. You will have to use `nmcli`, for example, in the `%post` section
    of your `kickstart` script.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Be careful when setting DNS configurations for multiple network interfaces.
    `NetworkManager` adds all your nameservers to your `resolv.conf` file, but libc
    may not support more than six nameservers.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring static network routes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In some cases, it is required to set static routes on your system. As static
    routes are not natively supported in `kickstart`, this is not covered in this
    recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Add static routes to both the `192.168.0.0`/`24` and `192.168.1.0`/`24` networks
    via `10.0.0.1`.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring static network routes using nmcli
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here''s what you need to do:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the route using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, execute the following command line to verify the configuration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here is an example output of the preceding commands:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Configuring static network routes using nmcli](img/00038.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Configuring network routes using nmtui
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here are the steps for this recipe:'
  prefs: []
  type: TYPE_NORMAL
- en: Launch `nmtui`, select the interface that you wish to modify the static routes
    for, and click on **<Edit...>**:![Configuring network routes using nmtui](img/00039.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, select **<Edit...>** next to the **IPv4 Configuration – Routing** entry
    and enter your routes. Select **<OK>** to confirm:![Configuring network routes
    using nmtui](img/00040.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, click on **<OK>** to confirm the changes and save them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
