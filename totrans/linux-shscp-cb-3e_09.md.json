["```\n    $ du  FILENAME1 FILENAME2 ..\n\n```", "```\n    $ du file.txt\n\n```", "```\n    $ du -a DIRECTORY\n\n```", "```\n    $  du -a test\n 4  test/output.txt\n 4  test/process_log.sh\n 4  test/pcpu.sh\n 16  test\n\n```", "```\n    $ du test\n 16  test\n\n```", "```\n    du -h FILENAME\n\n```", "```\n    $ du -h test/pcpu.sh\n 4.0K  test/pcpu.sh\n # Multiple file arguments are accepted\n\n```", "```\n    # du -h DIRECTORY\n $ du -h hack/\n 16K  hack/\n\n```", "```\n    $ du -c FILENAME1 FILENAME2..\n du -c process_log.sh pcpu.sh\n 4  process_log.sh\n 4  pcpu.sh\n 8  total\n\n```", "```\n    $ du  -c DIRECTORY\n $ du -c test/\n 16  test/\n 16  total\n\n```", "```\n $ du -c *.txt\n # Wildcards\n\n```", "```\n    $ du -sh /usr/bin\n 256M   /usr/bin\n\n```", "```\n        $ du -b FILE(s)\n\n```", "```\n        $ du -k FILE(s)\n\n```", "```\n        $ du -m FILE(s)\n\n```", "```\n        $ du -B BLOCK_SIZE FILE(s)\n\n```", "```\n        $ du pcpu.sh\n 4  pcpu.sh\n $ du -b pcpu.sh\n 439 pcpu.sh\n $ du -k pcpu.sh\n 4  pcpu.sh\n $ du -m pcpu.sh\n 1  pcpu.sh\n $ du -B 4 pcpu.sh\n 1024  pcpu.sh\n\n```", "```\n        $ du --exclude \"WILDCARD\" DIRECTORY\n\n```", "```\n        # Excludes all .txt files from calculation\n $ du --exclude \"*.txt\" *\n # Exclude temp.txt from calculation\n $ du --exclude \"temp.txt\" *\n\n```", "```\n        $ ls *.txt >EXCLUDE.txt\n        $ ls *.odt >>EXCLUDE.txt\n # EXCLUDE.txt contains a list of all .txt and .odt files. \n $ du --exclude-from EXCLUDE.txt DIRECTORY\n\n```", "```\n    $ du --max-depth 2 DIRECTORY\n\n```", "```\n    $ du -ak SOURCE_DIR | sort -nrk 1 | head\n\n```", "```\n    $ du -ak /home/slynux | sort -nrk 1 | head -n 4\n 50220 /home/slynux\n 43296 /home/slynux/.mozilla\n 43284 /home/slynux/.mozilla/firefox\n 43276 /home/slynux/.mozilla/firefox/8c22khxc.default\n\n```", "```\n    $ find . -type f -exec du -k {} \\; | sort -nrk 1 | head\n\n```", "```\n    $ df -h\n Filesystem            Size  Used Avail Use% Mounted on\n /dev/sda1             9.2G  2.2G  6.6G  25% /\n none                  497M  240K  497M   1% /dev\n none                  502M  168K  501M   1% /dev/shm\n none                  502M   88K  501M   1% /var/run\n none                  502M     0  502M   0% /var/lock\n none                  502M     0  502M   0% /lib/init/rw\n none                  9.2G  2.2G  6.6G  25%   \n    /var/lib/ureadahead/debugfs\n\n```", "```\n    $ df -h /home/user\n Filesystem            Size  Used Avail Use% Mounted on\n /dev/md1              917G  739G  133G  85% /raid1\n\n```", "```\n        $ time APPLICATION\n\n```", "```\n        $ time ls\n test.txt\n next.txt\n real    0m0.008s\n user    0m0.001s\n sys     0m0.003s\n\n```", "```\n        $ /usr/bin/time -o output.txt COMMAND\n\n```", "```\n        $ /usr/bin/time -a -o output.txt COMMAND\n\n```", "```\n        $ /usr/bin/time -f \"FORMAT STRING\" COMMAND\n\n```", "```\n        $ /usr/bin/time -f \"Time: %U\" -a -o timing.log uname\n Linux\n\n```", "```\n        $ /usr/bin/time -f \"Time: %U\" uname> command_output.txt   \n        2>time.log\n $ cat time.log\n Time: 0.00\n $ cat command_output.txt\n Linux\n\n```", "```\n        $ /usr/bin/time -f \"Max: %M K\\nPage size: %Z bytes\" \\                      \n          ls>   \n        /dev/null\n Max: 996 K\n Page size: 4096 bytes\n\n```", "```\n        $ who\n slynux   pts/0   2010-09-29 05:24 (slynuxs-macbook-pro.local)\n slynux   tty7    2010-09-29 07:08 (:0) \n\n```", "```\n $ w\n 07:09:05 up  1:45,  2 users,  load average: 0.12, 0.06, 0.02\n USER     TTY     FROM    LOGIN@   IDLE  JCPU PCPU WHAT\n slynux   pts/0   slynuxs 05:24  0.00s  0.65s 0.11s sshd: slynux \n slynux   tty7    :0      07:08  1:45m  3.28s 0.26s bash\n\n```", "```\n        $ users\n slynux slynux slynux hacker\n\n```", "```\n        $ users | tr ' ' '\\n' | sort | uniq\n slynux\n hacker\n\n```", "```\n        $ uptime\n 21:44:33 up 6 days, 11:53, 8 users, load average: 0.09, 0.14,   \n        0.09\n\n```", "```\n       $ uptime | sed 's/.*up \\(.*\\),.*users.*/\\1/'\n\n```", "```\n $ last\n        aku1  pts/3   10.2.1.3   Tue May 16 08:23 - 16:14  (07:51)    \n        cfly  pts/0   cflynt.com Tue May 16 07:49   still logged in   \n        dgpx  pts/0   10.0.0.5   Tue May 16 06:19 - 06:27  (00:07)    \n        stvl  pts/0   10.2.1.4   Mon May 15 18:38 - 19:07  (00:29)\n\n```", "```\n        $ last USER\n\n```", "```\n        $ last reboot\n reboot   system boot  2.6.32-21-generi Tue Sep 28 18:10 - 21:48    \n        (03:37)\n reboot   system boot  2.6.32-21-generi Tue Sep 28 05:14 - 21:48    \n        (16:33)\n\n```", "```\n        # lastb\n test     tty8         :0               Wed Dec 15 03:56 - 03:56    \n        (00:00) \n slynux   tty8         :0               Wed Dec 15 03:55 - 03:55    \n        (00:00)\n\n```", "```\n        # lastb -F\n hacker   tty0       1.2.3.4          Sat Jan 7 11:50:53 2017 -  \n        Sat Jan 7 11:50:53 2017 (00:00)\n\n```", "```\n#!/bin/bash\n#Name: pcpu_usage.sh\n#Description: Script to calculate cpu usage by processes for 1 hour\n\n#Change the SECS to total seconds to monitor CPU usage.\n#UNIT_TIME is the interval in seconds between each sampling\n\nSECS=3600\nUNIT_TIME=60\n\nSTEPS=$(( $SECS / $UNIT_TIME ))\n\necho Watching CPU usage... ;\n\n# Collect data in temp file\n\nfor((i=0;i<STEPS;i++))\ndo\n ps -eocomm,pcpu | egrep -v '(0.0)|(%CPU)' >> /tmp/cpu_usage.$$\n sleep $UNIT_TIME\ndone\n\n# Process collected data\necho\necho CPU eaters :\n\ncat /tmp/cpu_usage.$$ | \\\nawk '\n{ process[$1]+=$2; }\nEND{ \n for(i in process)\n {\n printf(\"%-20s %s\\n\",i, process[i]) ;\n }\n\n }' | sort -nrk 2 | head\n\n#Remove the temporary log file\nrm /tmp/cpu_usage.$$\n\n```", "```\n$ ./pcpu_usage.sh\nWatching CPU usage...\nCPU eaters :\nXorg        20\nfirefox-bin   15\nbash        3\nevince      2\npulseaudio    1.0\npcpu.sh         0.3\nwpa_supplicant  0\nwnck-applet     0\nwatchdog/0      0\nusb-storage     0\n\n```", "```\n    $ watch COMMAND\n\n```", "```\n    $ watch ls\n\n```", "```\n    $ watch 'df /home'\n\n```", "```\n    # list only directories\n $ watch 'ls -l | grep \"^d\"'\n\n```", "```\n    # Monitor the output of ls -l every of 5 seconds\n $ watch -n 5 'ls -l'\n\n```", "```\n    $ watch -d 'COMMANDS'\n\n # Highlight new network connections for 30 seconds\n $ watch -n 30 -d 'ss | grep ESTAB'\n\n```", "```\n    #/bin/bash\n #Filename: watchdir.sh\n #Description: Watch directory access\n path=$1\n #Provide path of directory or file as argument to script\n\n $ inotifywait -m -r -e create,move,delete $path  -q \n\n```", "```\n    $ ./watchdir.sh .\n ./ CREATE new\n ./ MOVED_FROM new\n ./ MOVED_TO news\n ./ DELETE news\n\n```", "```\n        $ logger LOG_MESSAGE\n\n```", "```\n        $ logger This is a test log line\n\n $ tail -n 1 /var/log/messages\n Sep 29 07:47:44 slynux-laptop slynux: This is a test log line\n\n```", "```\n        $ logger -t TAG This is a message\n\n $ tail -n 1 /var/log/messages\n Sep 29 07:48:42 slynux-laptop TAG: This is a message\n\n```", "```\n        # cat /etc/rsyslog.d/myConfig\n local7.* /var/log/local7\n # cd /etc/init.d\n # ./syslogd restart\n # logger -p local7.info A line to be placed in /var/log/local7\n\n```", "```\n        $ logger -f /var/log/source.log\n\n```", "```\n$ cat /etc/logrotate.d/program \n/var/log/program.log { \nmissingok \nnotifempty \nsize 30k \n  compress \nweekly \n  rotate 5 \ncreate 0600 root root \n} \n\n```", "```\n#!/bin/bash\n#Filename: intruder_detect.sh\n#Description: Intruder reporting tool with auth.log input\nAUTHLOG=/var/log/auth.log\n\nif [[ -n $1 ]];\nthen\n AUTHLOG=$1\n echo Using Log file : $AUTHLOG\nfi\n\n# Collect the failed login attempts\nLOG=/tmp/failed.$$.log\ngrep \"Failed pass\" $AUTHLOG > $LOG\n\n# extract the users who failed\nusers=$(cat $LOG | awk '{ print $(NF-5) }' | sort | uniq)\n\n# extract the IP Addresses of failed attempts\nip_list=\"$(egrep -o \"[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\" $LOG | sort | uniq)\"\n\nprintf \"%-10s|%-3s|%-16s|%-33s|%s\\n\" \"User\" \"Attempts\" \"IP address\" \\       \n    \"Host\" \"Time range\"\n\n# Loop through IPs and Users who failed.\n\nfor ip in $ip_list;\ndo\n for user in $users;\n do\n # Count attempts by this user from this IP\n\n attempts=`grep $ip $LOG | grep \" $user \" | wc -l`\n\n if [ $attempts -ne 0 ] \n then\n first_time=`grep $ip $LOG | grep \" $user \" | head -1 | cut -c-16`\n time=\"$first_time\"\n if [ $attempts -gt 1 ] \n then\n last_time=`grep $ip $LOG | grep \" $user \" | tail -1 | cut -c-16`\n time=\"$first_time -> $last_time\"\n fi\n HOST=$(host $ip 8.8.8.8 | tail -1 | awk '{ print $NF }' )\n printf \"%-10s|%-3s|%-16s|%-33s|%-s\\n\" \"$user\" \"$attempts\" \"$ip\"\\     \n          \"$HOST\" \"$time\";\n fi\n done\ndone\n\nrm $LOG\n\n```", "```\nUsing Log file : secure\nUser |Attempts|IP address|Host        |Time range\npi   |1  |10.251.90.93   |3(NXDOMAIN) |Jan  2 03:50:24 \nroot |1  |10.56.180.82   |2(SERVFAIL) |Dec 26 04:31:29 \nroot |6  |10.80.142.25   |example.com |Dec 19 07:46:49  -> Dec 19 07:47:38 \n\n```", "```\n    sshd[21197]: Failed password for bob1 from 10.83.248.32 port 50035 \n\n```", "```\n#!/bin/bash \n#Filename: disklog.sh \n#Description: Monitor disk usage health for remote systems \n\nlogfile=\"diskusage.log\" \n\nif [[ -n $1 ]] \nthen \n  logfile=$1 \nfi \n\n   # Use the environment variable or modify this to a hardcoded value \nuser=$USER \n\n#provide the list of remote machine IP addresses  \nIP_LIST=\"127.0.0.1 0.0.0.0\" \n# Or collect them at runtime with nmap \n# IP_LIST=`nmap -sn 192.168.1.2-255 | grep scan | grep cut -c22-` \n\nif [ ! -e $logfile ] \nthen \n  printf \"%-8s %-14s %-9s %-8s %-6s %-6s %-6s %s\\n\" \\\n    \"Date\" \"IP address\" \"Device\" \"Capacity\" \"Used\" \"Free\" \\\n    \"Percent\" \"Status\" > $logfile\nfi \n ( \nfor ip in $IP_LIST; \ndo \n ssh $user@$ip 'df -H' | grep ^/dev/ > /tmp/$$.df \n\n while read line; \n do \n cur_date=$(date +%D) \n printf \"%-8s %-14s \" $cur_date $ip \n echo $line | \\\n     awk '{ printf(\"%-9s %-8s %-6s %-6s %-8s\",$1,$2,$3,$4,$5); }' \n\n pusg=$(echo $line | egrep -o \"[0-9]+%\") \n pusg=${pusg/\\%/}; \n if [ $pusg -lt 80 ]; \n then \n echo SAFE \n else \n echo ALERT \n fi \n\n done< /tmp/$$.df \ndone \n\n) >> $logfile\n\n```", "```\n00 10 * * * /home/path/disklog.sh /home/user/diskusg.log \n\n```", "```\n$ ./disklog.sh\n\n```", "```\n01/18/17 192.168.1.6    /dev/sda1   106G    53G    49G     52%     SAFE\n01/18/17 192.168.1.6    /dev/md1    958G  776G   159G     84%     ALERT\n\n```", "```\n#!/bin/bash \n#Filename: active_users.sh \n#Description: Reporting tool to find out active users \n\nlog=/var/log/wtmp \n\nif [[ -n $1 ]]; \nthen \n  log=$1 \nfi \n\nprintf \"%-4s %-10s %-10s %-6s %-8s\\n\" \"Rank\" \"User\" \"Start\" \\ \n \"Logins\" \"Usage hours\" \n\nlast -f $log | head -n -2   > /tmp/ulog.$$ \n\ncat /tmp/ulog.$$ |  cut -d' ' -f1 | sort | uniq> /tmp/users.$$ \n\n( \nwhile read user; \ndo \n  grep ^$user /tmp/ulog.$$ > /tmp/user.$$ \n  minutes=0 \n\n  while read t  \n  do \n    s=$(echo $t | awk -F: '{ print ($1 * 60) + $2 }') \n    let minutes=minutes+s \n  done< <(cat /tmp/user.$$ | awk '{ print $NF }' | tr -d ')(') \n\n  firstlog=$(tail -n 1 /tmp/user.$$ | awk '{ print $5,$6 }') \n  nlogins=$(cat /tmp/user.$$ | wc -l)  \n  hours=$(echo \"$minutes / 60.0\" | bc) \n\n  printf \"%-10s %-10s %-6s %-8s\\n\"  $user \"$firstlog\" $nlogins $hours \ndone< /tmp/users.$$  \n\n) | sort -nrk 4 | awk '{ printf(\"%-4s %s\\n\", NR, $0) }'  \nrm /tmp/users.$$ /tmp/user.$$ /tmp/ulog.$$ \n\n```", "```\n$ ./active_users.sh\nRank User       Start      Logins Usage hours\n1    easyibaa   Dec 11     531    349\n2    demoproj   Dec 10     350    230\n3    kjayaram   Dec 9      213    55\n4    cinenews   Dec 11     85     139\n5    thebenga   Dec 10     54     35\n6    gateway2   Dec 11     52     34\n7    soft132    Dec 12     49     25\n8    sarathla   Nov 1      45     29\n9    gtsminis   Dec 11     41     26\n10   agentcde   Dec 13     39     32\n\n```", "```\n# powertop\n\n```", "```\nPowerTOP 2.3  Overview  Idle stats  Frequency stats  Device stats  Tunable\n\nSummary: 1146.1 wakeups/sec,  0.0 GPU ops/secs, 0.0 VFS ops/sec and 73.0% C  Usage Events/s Category Description\n407.4 ms/s 258.7 Process /usr/lib/vmware/bin/vmware\n64.8 ms/s 313.8 Process /usr/lib64/firefox/firefox\n\n```", "```\n    # powertop --html\n\n```", "```\n        # iotop -o\n\n```", "```\n        # iotop -b -n 2\n\n```", "```\n       # iotop -p PID\n\n```", "```\n # fsck /dev/sdb3\n fsck from util-linux 2.20.1\n e2fsck 1.42.5 (29-Jul-2012)\n HDD2 has been mounted 26 times without being checked, check forced.\n Pass 1: Checking inodes, blocks, and sizes\n Pass 2: Checking directory structure\n Pass 3: Checking directory connectivity\n Pass 4: Checking reference counts\n Pass 5: Checking group summary information\n HDD2: 75540/16138240 files (0.7% non-contiguous),      \n        48756390/64529088 blocks\n\n```", "```\n        # fsck -A\n\n```", "```\n        # fsck -a /dev/sda2\n\n```", "```\n # fsck -AN\n fsck from util-linux 2.20.1\n [/sbin/fsck.ext4 (1) -- /] fsck.ext4 /dev/sda8\n [/sbin/fsck.ext4 (1) -- /home] fsck.ext4 /dev/sda7\n [/sbin/fsck.ext3 (1) -- /media/Data] fsck.ext3 /dev/sda6\n\n```", "```\n    apt-get install smartmontools\n\n```", "```\n    yum install smartmontools\n\n```", "```\n    $ smartctl -a /dev/sda\n\n```", "```\n smartctl 5.43 2012-06-30 r3573 [x86_64-linux-2.6.32-  \n    642.11.1.el6.x86_64] (local build)\n Copyright (C) 2002-12 by Bruce Allen,    \n    http://smartmontools.sourceforge.net\n\n === START OF INFORMATION SECTION ===\n Device Model:     WDC WD10EZEX-00BN5A0\n Serial Number:    WD-WCC3F1HHJ4T8\n LU WWN Device Id: 5 0014ee 20c75fb3b\n Firmware Version: 01.01A01\n User Capacity:    1,000,204,886,016 bytes [1.00 TB]\n Sector Sizes:     512 bytes logical, 4096 bytes physical\n Device is:        Not in smartctl database [for details use: -P    \n    showall]\n ATA Version is:   8\n ATA Standard is:  ACS-2 (unknown minor revision code: 0x001f)\n Local Time is:    Mon Jan 23 11:26:57 2017 EST\n SMART support is: Available - device has SMART capability.\n SMART support is: Enabled\n ...\n\n```", "```\nID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  \n    WHEN_FAILED RAW_VALUE\n\n 9 Power_On_Hours          0x0032   087   087   000    Old_age   Always       \n     -       9823\n\n12 Power_Cycle_Count       0x0032   100   100   000    Old_age   Always\n     -       11\n\n194 Temperature_Celsius     0x0022   113   109   000    Old_age   Always\n     -       30\n\n```", "```\nSMART Error Log Version: 1\nNo Errors Logged\n\nSMART Self-test log structure revision number 1\n\nNum  Test_Description    Status                  Remaining  LifeTime(hours)  \n        LBA_of_first_error\n# 1  Extended offline    Completed without error       00%      9825   \n        - \n\n```", "```\n$ smartctl -t [long][short] DEVICE\n\n$ smartctl -t long /dev/sda\n\nsmartctl 5.43 2012-06-30 r3573 [x86_64-linux-2.6.32-642.11.1.el6.x86_64] (local build)\nCopyright (C) 2002-12 by Bruce Allen, http://smartmontools.sourceforge.net\n\n=== START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===\nSending command: \"Execute SMART Extended self-test routine immediately in off-line mode\".\nDrive command \"Execute SMART Extended self-test routine immediately in off-line mode\" successful.\nTesting has begun.\nPlease wait 124 minutes for test to complete.\nTest will complete after Mon Jan 23 13:31:23 2017\n\nUse smartctl -X to abort test.\n\n```", "```\n    $ hdparm -I DEVICE\n $ hdparm -I /dev/sda\n\n```", "```\n/dev/sda:\n\nATA device, with non-removable media\n Model Number:       WDC WD10EZEX-00BN5A0 \n Serial Number:      WD-WCC3F1HHJ4T8\n Firmware Revision:  01.01A01\n Transport:          Serial, SATA 1.0a, SATA II Extensions, SATA Rev 2.5, SATA Rev 2.6, SATA Rev 3.0\nStandards:\n Used: unknown (minor revision code 0x001f) \n Supported: 9 8 7 6 5 \n Likely used: 9\nConfiguration:\n Logical  max current\n cylinders 16383 16383\n heads  16 16\n sectors/track 63 63\n --\n CHS current addressable sectors:   16514064\n LBA    user addressable sectors:  268435455\n LBA48  user addressable sectors: 1953525168\n Logical  Sector size:                   512 bytes\n Physical Sector size:                  4096 bytes\n device size with M = 1024*1024:      953869 MBytes\n device size with M = 1000*1000:     1000204 MBytes (1000 GB)\n cache/buffer size  = unknown\n Nominal Media Rotation Rate: 7200\n\n...\nSecurity: \n Master password revision code = 65534\n supported\n not enabled\n not locked\n not frozen\n not expired: security count\n supported: enhanced erase\n 128min for SECURITY ERASE UNIT. 128min for ENHANCED SECURITY ERASE UNIT. \nLogical Unit WWN Device Identifier: 50014ee20c75fb3b\n NAA  : 5\n IEEE OUI : 0014ee\n Unique ID : 20c75fb3b\nChecksum: correct\n\n```", "```\n# hdparm -t /dev/sda\nTiming buffered disk reads: 486 MB in  3.00 seconds = 161.86 MB/sec\n\n# hdparm -T /dev/sda\nTiming cached reads:   26492 MB in  1.99 seconds = 13309.38 MB/sec\n\n```"]