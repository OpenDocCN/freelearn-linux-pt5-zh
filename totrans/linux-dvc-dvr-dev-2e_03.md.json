["```\nCONFIG_MODULES=y\n```", "```\nCONFIG_MODULE_UNLOAD=y\n```", "```\nMODULE_FORCE_UNLOAD=y\n```", "```\n#include <linux/module.h>\n#include <linux/init.h>\nstatic int __init helloworld_init(void) {\n    pr_info(\"Hello world initialization!\\n\");\n    return 0;\n}\nstatic void __exit helloworld_exit(void) {\n    pr_info(\"Hello world exit\\n\");\n}\nmodule_init(helloworld_init);\nmodule_exit(helloworld_exit);\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"John Madieu <john.madieu@gmail.com>\");\nMODULE_DESCRIPTION(\"Linux kernel module skeleton\");\n```", "```\n#define __init      __section(.init.text)\n#define __exit      __section(.exit.text)\n```", "```\nMODULE_INFO(my_field_name, \"What easy value\");\n```", "```\n    MODULE_AUTHOR(\"John Madieu <john.madieu@foobar.com>\");\n    MODULE_AUTHOR(\"Lorem Ipsum <l.ipsum@foobar.com>\");\n    ```", "```\nmake -C $KERNEL_SRC M=$(shell pwd) [target]\n```", "```\nobj-<X> := <module_name>.o\n```", "```\nobj-$(CONFIG_MYMODULE) += mymodule.o\n```", "```\n<module_name>-y := <file1>.o <file2>.o\n```", "```\nobj-m := foo.o bar.o\n```", "```\nobj-m := foo.o bar.o\nfoo-y := foo1.o foo2.o . . .\nbar-y := bar1.o bar2.o bar3.o . . .\n```", "```\nobj-m := 8123.o\n8123-y := 8123_if.o 8123_pci.o 8123_bin.o\n```", "```\nccflags-y := -I$(src)/include\nccflags-y += -I$(src)/src/hal/include\nldflags-y := -T$(src)foo_sections.lds\n```", "```\nobj-<X> += somedir/\n```", "```\n# kbuild part of makefile\nobj-m := helloworld.o\n#the following is just an example\n#ldflags-y := -T foo_sections.lds\n# normal makefile\nKERNEL_SRC ?= /lib/modules/$(shell uname -r)/build\nall default: modules\ninstall: modules_install\nmodules modules_install help clean:\n    $(MAKE) -C $(KERNEL_SRC) M=$(shell pwd) $@\n```", "```\nsudo apt update\nsudo apt install linux-headers-$(uname -r)\n```", "```\n$ make\nmake -C /lib/modules/ 5.11.0-37-generic/build \\\n    M=/home/john/driver/helloworld modules\nmake[1]: Entering directory '/usr/src/linux-headers- 5.11.0-37-generic'\n  CC [M]  /media/jma/DATA/work/tutos/sources/helloworld/helloworld.o\n  Building modules, stage 2.\n  MODPOST 1 modules\n  CC      /media/jma/DATA/work/tutos/sources/helloworld/helloworld.mod.o\n  LD [M]  /media/jma/DATA/work/tutos/sources/helloworld/helloworld.ko\nmake[1]: Leaving directory '/usr/src/linux-headers- 5.11.0-37-generic'\n```", "```\n$ ls\nhelloworld.c  helloworld.ko  helloworld.mod.c  helloworld.mod.o  helloworld.o  Makefile  modules.order  Module.symvers\n```", "```\n$ sudo insmod  helloworld.ko\n$ sudo rmmod helloworld\n$ dmesg\n[...]\n[308342.285157] Hello world initialization!\n[308372.084288] Hello world exit\n```", "```\nmake ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-\n```", "```\nmake ARCH=aarch64 CROSS_COMPILE=aarch64-linux-gnu-\n```", "```\nconfig PACKT_MYCDEV\n    tristate \"Our packtpub special Character driver\"\n    default m\n    help\n      Say Y here to support /dev/mycdev char device.\n      The /dev/mycdev is used to access packtpub.\n```", "```\nobj-$(CONFIG_PACKT_MYCDEV)   += mychardev.o\n```", "```\nCONFIG_PACKT_MYCDEV=m\n```", "```\nCONFIG_PACKT_MYCDEV=y\n```", "```\nmodule_param(name, type, perm);\n```", "```\n#include <linux/moduleparam.h>\n[...]\nstatic char *mystr = \"hello\";\nstatic int myint = 1;\nstatic int myarr[3] = {0, 1, 2};\nmodule_param(myint, int, S_IRUGO);\nmodule_param(mystr, charp, S_IRUGO);\nmodule_param_array(myarr, int,NULL, S_IWUSR|S_IRUSR);\nMODULE_PARM_DESC(myint,\"this is my int variable\");\nMODULE_PARM_DESC(mystr,\"this is my char pointer variable\");\nMODULE_PARM_DESC(myarr,\"this is my array of int\");\nstatic int foo()\n{\n    pr_info(\"mystring is a string: %s\\n\",\n             mystr);\n    pr_info(\"Array elements: %d\\t%d\\t%d\",\n             myarr[0], myarr[1], myarr[2]);\n    return myint;\n}\n```", "```\n# insmod hellomodule-params.ko mystring=\"packtpub\" myint=15 myArray=1,2,3\n```", "```\n$ modinfo ./helloworld-params.ko \nfilename:       /home/jma/work/tutos/sources/helloworld/./helloworld-params.ko\nlicense:      GPL\nauthor:       John Madieu <john.madieu@gmail.com>\nsrcversion:   BBF43E098EAB5D2E2DD78C0\ndepends:        \nvermagic:     4.4.0-93-generic SMP mod_unload modversions \nparm:         myint:this is my int variable (int)\nparm:         mystr:this is my char pointer variable (charp)\nparm:         myarr:this is my array of int (array of int)\n```", "```\necho 0 > /sys/module/usbcore/parameters/authorized_default\n```", "```\n[initial command line ...] my_module.param=value\n```", "```\ninsmod /path/to/mydrv.ko\n```", "```\nmodprobe mydrv\n```", "```\nalias usb:v0403pFF1Cd*dc*dsc*dp*ic*isc*ip*in* ftdi_sio\nalias usb:v0403pFF18d*dc*dsc*dp*ic*isc*ip*in* ftdi_sio\nalias usb:v0403pDAFFd*dc*dsc*dp*ic*isc*ip*in* ftdi_sio\nalias usb:v0403pDAFEd*dc*dsc*dp*ic*isc*ip*in* ftdi_sio\nalias usb:v0403pDAFDd*dc*dsc*dp*ic*isc*ip*in* ftdi_sio\nalias usb:v0403pDAFCd*dc*dsc*dp*ic*isc*ip*in* ftdi_sio\n[...]\n```", "```\n#This line is a comment\nuio\niwlwifi\n```", "```\nrmmod -f mymodule\n```", "```\nmodeprobe -r mymodule\n```", "```\n$ lsmod\nModule                  Size  Used by\nbtrfs                1327104  0\nblake2b_generic        20480  0\nxor                    24576  1 btrfs\nraid6_pq              114688  1 btrfs\nufs                    81920  0\n[...]\n```", "```\n$ cat /proc/modules \nbtrfs 1327104 0 - Live 0x0000000000000000\nblake2b_generic 20480 0 - Live 0x0000000000000000\nxor 24576 1 btrfs, Live 0x0000000000000000\nraid6_pq 114688 1 btrfs, Live 0x0000000000000000\nufs 81920 0 - Live 0x0000000000000000\nqnx4 16384 0 - Live 0x0000000000000000\n```", "```\n#define  EPERM    1    /* Operation not permitted */\n#define  ENOENT   2    /* No such file or directory */\n#define  ESRCH    3    /* No such process */\n#define  EINTR    4    /* Interrupted system call */\n#define  EIO      5    /* I/O error */\n#define  ENXIO    6    /* No such device or address */\n#define  E2BIG    7    /* Argument list too long */\n#define  ENOEXEC  8    /* Exec format error */\n#define  EBADF    9    /* Bad file number */\n#define  ECHILD   10   /* No child processes */\n#define  EAGAIN   11   /* Try again */\n#define  ENOMEM   12   /* Out of memory */\n#define  EACCES   13   /* Permission denied */\n#define  EFAULT   14   /* Bad address */\n#define  ENOTBLK  15   /* Block device required */\n#define  EBUSY    16   /* Device or resource busy */\n#define  EEXIST   17   /* File exists */\n#define  EXDEV    18   /* Cross-device link */\n#define  ENODEV   19   /* No such device */\n[...]\n```", "```\ndev = init(&ptr);\nif(!dev)\n    return –EIO\n```", "```\n#include <errno.h>  /* to access errno global variable */\n#include <string.h>\n[...]\nif(wite(fd, buf, 1) < 0) {\n    printf(\"something gone wrong! %s\\n\", strerror(errno));\n}\n[...]\n```", "```\nret = 0;\nptr = kmalloc(sizeof (device_t));\nif(!ptr) {\n        ret = -ENOMEM\n        goto err_alloc;\n}\ndev = init(&ptr);\nif(!dev) {\n        ret = -EIO\n        goto err_init;\n}\nreturn 0;\nerr_init:\n        free(ptr);\nerr_alloc:\n        return ret;\n```", "```\nif (ops1() != ERR) {\n    if (ops2() != ERR) {\n        if (ops3() != ERR) {\n            if (ops4() != ERR) {\n```", "```\nif (ops1() == ERR) // ||\n    goto error1;   // ||\nif (ops2() == ERR) // ||\n    goto error2;   // ||\nif (ops3() == ERR) // ||\n    goto error3;   // ||\nif (ops4() == ERR) // VV\n    goto error4;\nerror5:\n[...]\nerror4:\n[...]\nerror3:\n[...]\nerror2:\n[...]\nerror1:\n[...]\n```", "```\nvoid *ERR_PTR(long error);\nlong IS_ERR(const void *ptr);\nlong PTR_ERR(const void *ptr);\n```", "```\nstatic struct iio_dev *indiodev_setup(){\n    [...]\n    struct iio_dev *indio_dev;\n    indio_dev = devm_iio_device_alloc(&data->client->dev,\n                                      sizeof(data));\n    if (!indio_dev)\n        return ERR_PTR(-ENOMEM);\n    [...]\n    return indio_dev;\n}\nstatic int foo_probe([...]){\n    [...]\n    struct iio_dev *my_indio_dev = indiodev_setup();\n    if (IS_ERR(my_indio_dev))\n        return PTR_ERR(data->acc_indio_dev);\n    [...]\n}\n```", "```\ncat /proc/sys/kernel/printk\n4        4         1        7\n```", "```\necho <level> > /proc/sys/kernel/printk\n```", "```\n#define pr_fmt(fmt) KBUILD_MODNAME \": \" fmt\n```", "```\n#define pr_fmt(fmt) \"%s: \" fmt, __func__\n```", "```\n#define pr_fmt(fmt) \"Bluetooth: \" fmt\n```", "```\n$ dmesg | grep Bluetooth\n[ 3.294445] Bluetooth: Core ver 2.22\n[ 3.294458] Bluetooth: HCI device and connection manager initialized\n[ 3.294460] Bluetooth: HCI socket layer initialized\n[ 3.294462] Bluetooth: L2CAP socket layer initialized\n[ 3.294465] Bluetooth: SCO socket layer initialized\n[...]\n```"]