- en: Local Authentication in Linux
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux中的本地认证
- en: 'In this chapter, we will discuss the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下内容：
- en: User authentication and logging
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户认证与日志记录
- en: Limiting login capabilities of users
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制用户的登录能力
- en: Disabling username/password logins
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用用户名/密码登录
- en: Monitoring user activity using acct
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用acct监控用户活动
- en: Login authentication using a USB device and PAM
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用USB设备和PAM进行登录认证
- en: Defining user authorization controls
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义用户授权控制
- en: Access management using IDAM
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用IDAM进行访问管理
- en: User authentication and logging
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户认证与日志记录
- en: One of the major parts of user authentication is to monitor the users of the
    system. There are various ways to keep a track of all the successful and failed
    login attempts made by a user in Linux.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用户认证的一个重要部分是监控系统用户。Linux提供了多种方法来追踪用户的成功与失败的登录尝试。
- en: Getting ready
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Linux system maintains a log of all login attempts by different accounts in
    the system. These logs are all located at `/var/log/`:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Linux系统会记录系统中所有账户的登录尝试。这些日志都位于`/var/log/`目录下：
- en: '![](img/1c7049f0-1ff1-4296-b8d6-a235846c9c11.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1c7049f0-1ff1-4296-b8d6-a235846c9c11.png)'
- en: How to do it...
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Linux has many ways to help an administrator to view the logs, both through
    graphical and command-line methods:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Linux有许多方法帮助管理员查看日志，既有图形界面方法，也有命令行方法：
- en: 'If we want to check the incorrect login attempts for a particular user, like
    root for instance, we can do so by using this command:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想检查某个特定用户（例如root）的错误登录尝试，可以使用以下命令：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**![](img/de98a228-391c-45ed-a560-bd0904c5a103.png)**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/de98a228-391c-45ed-a560-bd0904c5a103.png)**'
- en: 'To see the log using the Terminal, we use the `dmesg` command. This command
    displays the buffer of the Linux kernel''s message stored in memory, as shown
    here:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用终端查看日志，我们可以使用`dmesg`命令。此命令显示存储在内存中的Linux内核消息缓冲区，如下所示：
- en: '![](img/83101ba7-3b2c-406f-b643-b2a565459761.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/83101ba7-3b2c-406f-b643-b2a565459761.png)'
- en: 'If we wish to filter the preceding output to show only the logs related to
    USB devices, we can do so by using `grep`:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望过滤前面的输出，仅显示与USB设备相关的日志，可以使用`grep`来实现：
- en: '![](img/6dd12dce-a46f-4a0a-ae66-a8438d401336.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6dd12dce-a46f-4a0a-ae66-a8438d401336.png)'
- en: 'Instead of viewing all the logs, if we wish to view only the 10 most recent
    logs in a particular log file, the command will be as follows:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们不想查看所有日志，而只查看特定日志文件中的10条最新日志，可以使用以下命令：
- en: '![](img/4d5d7bfa-0417-4dd0-ba3b-881471cf2c26.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d5d7bfa-0417-4dd0-ba3b-881471cf2c26.png)'
- en: In the preceding command, the `-n` option is used to specify the number of lines
    to be shown.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的命令中，`-n`选项用于指定要显示的行数。
- en: 'If we wish to see the most recent login attempts for a user account, use `last`:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望查看用户账户的最新登录尝试，可以使用`last`命令：
- en: '![](img/4a3dea49-0f04-466c-bcf3-a953c1701a55.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4a3dea49-0f04-466c-bcf3-a953c1701a55.png)'
- en: The `last` command displays `var/log/wtmp` in a formatted way.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`last`命令以格式化的方式显示`var/log/wtmp`日志。'
- en: 'If we want to see the last time each user logged in to the system, we can use
    the `lastlog` command:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想查看每个用户最后一次登录系统的时间，可以使用`lastlog`命令：
- en: '![](img/5bf77f57-19b7-45cc-8cc0-315b0db07065.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5bf77f57-19b7-45cc-8cc0-315b0db07065.png)'
- en: How it works...
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何工作...
- en: Linux has different files for logging different types of details. Using the
    commands shown here, we are able to view those logs and see the details. Every
    command gives us a different type of details.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Linux有不同的文件来记录不同类型的日志。通过这里展示的命令，我们可以查看这些日志并获取详细信息。每个命令提供了不同类型的细节。
- en: Limiting login capabilities of users
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制用户的登录能力
- en: As a Linux system administrator, you may want to restrict access to a Linux
    system for specified users or groups. In this section, we will learn how to use
    two files, `/etc/securetty` and `/etc/security/access.conf`, to restrict user
    access.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名Linux系统管理员，你可能希望限制特定用户或组对Linux系统的访问。在本节中，我们将学习如何使用`/etc/securetty`和`/etc/security/access.conf`这两个文件来限制用户访问。
- en: Getting ready
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: All the steps given here have been tried on an Ubuntu system; however, you can
    follow these on any other Linux distribution also.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这里提供的所有步骤已在Ubuntu系统上进行了测试；然而，你也可以在任何其他Linux发行版上执行这些步骤。
- en: How to do it...
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s learn how to edit the two files mentioned before to apply different
    restrictions to user access on a Linux system:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何编辑前面提到的两个文件，以对Linux系统上的用户访问进行不同的限制：
- en: 'First, we will check the content of the `/etc/securetty` file using the `more`
    command:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将使用`more`命令检查`/etc/securetty`文件的内容：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/b36bb05d-9d64-4752-8220-e3553130bac4.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b36bb05d-9d64-4752-8220-e3553130bac4.png)'
- en: As we can see in the preceding screenshot, the file specifies the Terminals
    on which root is allowed to log in.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的截图中看到的，文件指定了允许root登录的终端。
- en: 'Now, edit the file using any editor of your choice and comment the `tty1` entry
    as shown here:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用你选择的任何编辑器编辑文件，并按图所示注释掉`tty1`项：
- en: '![](img/0fdb046e-c84f-4634-ac2b-02d67dea3b58.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0fdb046e-c84f-4634-ac2b-02d67dea3b58.png)'
- en: Save and exit the editor after making the changes mentioned in the preceding
    step.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成前述步骤并进行更改后，保存并退出编辑器。
- en: 'Now, switch to Terminal `tty1` by running the command `chvt 1`. If we try to
    log in as root now, we will get the following result:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过运行命令`chvt 1`切换到`tty1`终端。如果我们现在尝试以root身份登录，将会得到以下结果：
- en: '![](img/7f5d0adc-fad1-4e8c-9fdb-10916b3b17e1.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f5d0adc-fad1-4e8c-9fdb-10916b3b17e1.png)'
- en: We can see that access was denied to the root account by the system. If we wish
    to still get root privileges, we have to first log in as a normal user and then
    use the `sudo` or `su` command.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到系统已拒绝root账户的访问。如果我们仍然希望获取root权限，我们必须首先以普通用户身份登录，然后使用`sudo`或`su`命令。
- en: 'From the same Terminal, when we try to log in from a normal user account, we
    get logged in as seen here:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从同一个终端，当我们尝试以普通用户账户登录时，登录结果如图所示：
- en: '![](img/c8d32cf8-411d-48bc-80f2-6010176269e3.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c8d32cf8-411d-48bc-80f2-6010176269e3.png)'
- en: We have already seen how to use the `/etc/securetty` file to specify access
    for the root account from any Terminal. Now, let's see how to allow or deny access
    to specific users.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经看到如何使用`/etc/securetty`文件来指定从任何终端进行root账户访问。现在，让我们来看一下如何允许或拒绝特定用户的访问。
- en: The first thing to do is to modify the `/etc/pam.d/login` file and add the `pam_access.so`
    module. This will allow `pam` to scan the `/etc/security/access.conf` file and
    check for the rules defined by us.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一件事是修改`/etc/pam.d/login`文件，并添加`pam_access.so`模块。这将允许`pam`扫描`/etc/security/access.conf`文件并检查我们定义的规则。
- en: 'So we open `etc/pam.d/login`, find the line that states `#account required
    pam_access.so`, and remove the `#` to un-comment the line:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们打开`etc/pam.d/login`，找到那行写着`#account required pam_access.so`的内容，去掉`#`以取消注释该行：
- en: '![](img/b674ec31-6c4b-4b60-b51b-cbd4c81b578f.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b674ec31-6c4b-4b60-b51b-cbd4c81b578f.png)'
- en: 'Next, we will define a rule in `/etc/security/access.conf`. Open the file in
    any editor and define a rule according to the following syntax:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将在`/etc/security/access.conf`中定义一个规则。使用任何编辑器打开该文件，并根据以下语法定义规则：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If we want to deny access to the root account from Terminal `tty1` we use the
    following rule:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要拒绝root账户从`tty1`终端的访问，可以使用以下规则：
- en: '![](img/3ab12ffd-eeef-427c-8a69-0f1afc46580c.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ab12ffd-eeef-427c-8a69-0f1afc46580c.png)'
- en: 'To deny access to `user1` we use the following rule:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要拒绝`user1`的访问，我们使用以下规则：
- en: '![](img/9c027ee8-22eb-4bbe-80e4-e1a1a12b32d6.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9c027ee8-22eb-4bbe-80e4-e1a1a12b32d6.png)'
- en: 'If we want to specify multiple usernames in the same rule, we can do it as
    shown in this rule:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要在同一规则中指定多个用户名，可以像下面这个规则一样操作：
- en: '![](img/a1afaef3-efab-4ae4-9c96-3b79185305d7.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a1afaef3-efab-4ae4-9c96-3b79185305d7.png)'
- en: How it works...
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Linux uses `/etc/securetty` to specify from which Terminal root access is possible.
    So, when we make changes in this file, root access from a specific Terminal also
    gets affected.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Linux使用`/etc/securetty`来指定哪些终端可以进行root访问。因此，当我们在该文件中进行更改时，特定终端的root访问也会受到影响。
- en: 'Similarly, the `/etc/security/access.conf` file is used by `pam` to check if
    Terminal access is allowed for a particular user or not. The rules defined in
    this file follow this syntax:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`/etc/security/access.conf`文件被`pam`用来检查是否允许特定用户的终端访问。该文件中定义的规则遵循以下语法：
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here, `permission` refers to denying or allowing a rule and is denoted by the
    `-` or `+` sign.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`permission`指的是拒绝或允许规则，并由`-`或`+`符号表示。
- en: Users refers to a list of login names.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Users指的是一个登录用户名的列表。
- en: Origins refers to the source from which access is being allowed or denied.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Origins指的是允许或拒绝访问的来源。
- en: Disabling username/password logins
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 禁用用户名/密码登录
- en: One major role of a system administrator is to configure and manage users and
    groups on a Linux system. It also involves the task of checking the login capabilities
    for all users and disabling them if required.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 系统管理员的一个重要职责是配置和管理Linux系统中的用户和组。这也涉及到检查所有用户的登录能力，并在必要时禁用它们。
- en: Getting ready
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: All the steps given here have been tried on an Ubuntu system; however, you can
    follow these on any other Linux distribution also.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这里给出的所有步骤都在Ubuntu系统上进行了尝试；然而，你也可以在任何其他Linux发行版上按照这些步骤进行操作。
- en: How to do it...
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Here, we will discuss how the login capabilities of users can be restricted
    on a Linux system:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将讨论如何在Linux系统上限制用户的登录能力：
- en: 'We can restrict the access of a user account by changing the login shell of
    the account to a special value in the `/etc/passwd` file. Let''s check the details
    of an account, `user1` as an example, in the `/etc/passwd` file, as shown here:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过在`/etc/passwd`文件中将帐户的登录shell更改为特殊值来限制用户帐户的访问。让我们以`user1`帐户为例，在`/etc/passwd`文件中检查详细信息，如下所示：
- en: '![](img/0a7031f2-9218-4f60-b6ae-b03e7c7e29f8.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a7031f2-9218-4f60-b6ae-b03e7c7e29f8.png)'
- en: 'In these details, the final value for the `user1` account is set to `/bin/bash`.
    At present, we can log in from the `user1` account. Now, if we want to change
    the shell of the user account we wish to restrict, we can do so as shown here:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这些详细信息中，`user1`帐户的最终值设置为`/bin/bash`。目前，我们可以从`user1`帐户登录。现在，如果我们要更改希望限制的用户帐户的shell，我们可以像这样做：
- en: '![](img/12951079-090c-4d03-8ecf-4b4111ffd749.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/12951079-090c-4d03-8ecf-4b4111ffd749.png)'
- en: 'If we try to log in from user 1 now, we get the following error:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们现在尝试从用户1登录，我们会收到以下错误：
- en: '**![](img/946c4bf0-402c-4362-8343-a4e5d7415daf.png)**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/946c4bf0-402c-4362-8343-a4e5d7415daf.png)**'
- en: 'Another way of restricting access to users is by using the `/etc/shadow` file.
    If we check the details of this file using the `cat` command, we get the result
    shown here:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 限制用户访问的另一种方式是使用`/etc/shadow`文件。如果我们使用`cat`命令检查此文件的详细信息，我们将得到以下结果：
- en: '**![](img/a752604c-69a8-4f9d-be48-b50421db82cf.png)**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/a752604c-69a8-4f9d-be48-b50421db82cf.png)**'
- en: The details show the hashed password for the `user3` account (the one starting
    with ... $6$wI1akgI4...).
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 详细信息显示了`user3`帐户的哈希密码（以... $6$wI1akgI4...开头）。
- en: 'Now to lock the account `user3` the command will be as follows:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要锁定`user3`帐户，命令如下：
- en: '[PRE4]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/62aafc31-ffa0-4b3d-bcc4-6f5a667e445c.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/62aafc31-ffa0-4b3d-bcc4-6f5a667e445c.png)'
- en: Let's check the details in the `/etc/shadow` file again for the `user3` account.
    We see that the hashed password has been made invalid by preceding it with a `!`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次查看`/etc/shadow`文件中`user3`帐户的详细信息。我们看到哈希密码已通过添加`!`而变为无效。
- en: '[PRE5]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**![](img/65e83945-ff4d-42c2-94b5-f249764630b0.png)**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/65e83945-ff4d-42c2-94b5-f249764630b0.png)**'
- en: 'To unlock the account again, the command is as follows:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要再次解锁帐户，命令如下：
- en: '[PRE6]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If we wish to check whether the account was already locked or not, we can do
    so by using this command:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要检查帐户是否已被锁定，可以使用此命令进行检查：
- en: '**![](img/7455f7c6-70ab-4e6b-9284-15562b112e22.png)**'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/7455f7c6-70ab-4e6b-9284-15562b112e22.png)**'
- en: As we can see in the output, the `user1` account is locked, which is denoted
    by `L` in the second field of the details, while `user2` is not locked, as it
    shows `P` in the details.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在输出中看到的，`user1`帐户已被锁定，第二字段的细节显示为`L`，而`user2`没有被锁定，因为细节中显示为`P`。
- en: 'The process to lock or unlock an account can also be done using the `usermod`
    command. To lock the account using `usermod`, the command will be as follows:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 锁定或解锁帐户的过程也可以使用`usermod`命令完成。要使用`usermod`锁定帐户，命令如下：
- en: '[PRE7]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**![](img/69598742-5811-449f-89dd-445fd03b1b66.png)**'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/69598742-5811-449f-89dd-445fd03b1b66.png)**'
- en: 'Once locked, if we try to log in from that account, we get the following error:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦锁定，如果我们尝试从该帐户登录，我们会收到以下错误：
- en: '**![](img/4cf74ec9-8847-4e3a-9676-8d1749221fac.png)**'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/4cf74ec9-8847-4e3a-9676-8d1749221fac.png)**'
- en: 'And to unlock the account using `usermod`, the command will be as follows:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用`usermod`解锁帐户，命令如下：
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**![](img/e3b09297-33fe-42b3-bfe4-4f0639737f7e.png)**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/e3b09297-33fe-42b3-bfe4-4f0639737f7e.png)**'
- en: How it works...
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: For every account in Linux, the user account details are stored in the `/etc/passwd`
    and `/etc/shadow` files. These details specify how the user account will act.
    When we are able to change the details for any user account in these files, we
    are able to change the behavior of the user account.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Linux中的每个帐户，用户帐户详细信息存储在`/etc/passwd`和`/etc/shadow`文件中。这些详细信息指定用户帐户的行为。当我们能够更改这些文件中任何用户帐户的详细信息时，我们能够更改用户帐户的行为。
- en: In the preceding section, we have seen how to modify these files to "lock" or
    "unlock" the user account.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部分中，我们已经看到如何修改这些文件以“锁定”或“解锁”用户帐户。
- en: Monitoring user activity using acct
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用acct监控用户活动
- en: '**Acct** is an open source application which helps in monitoring user activity
    on a Linux system. It runs in the background and tracks all the activities of
    the users, and also maintains a track of the resources being used.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**Acct**是一个开源应用程序，可以帮助监控Linux系统上的用户活动。它在后台运行，跟踪用户的所有活动，并记录正在使用的资源。'
- en: Getting ready
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'To use the `acct` commands, we first need to install the package on our Linux
    system by using this command:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`acct`命令，我们首先需要通过以下命令在 Linux 系统上安装该软件包：
- en: '[PRE9]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**![](img/90f5bf3d-0655-4b40-ab10-5977261028b4.png)**'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/90f5bf3d-0655-4b40-ab10-5977261028b4.png)**'
- en: 'In case the preceding method doesn''t work properly, we can download the package
    manually by visiting this link:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前述方法无法正常工作，我们可以访问此链接手动下载软件包：
- en: '[http://packages.ubuntu.com/precise/admin/acct](http://packages.ubuntu.com/precise/admin/acct)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://packages.ubuntu.com/precise/admin/acct](http://packages.ubuntu.com/precise/admin/acct)'
- en: 'After downloading the package, we need to extract it into a directory somewhere,
    like we did on the desktop:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 下载软件包后，我们需要将其解压到某个目录中，就像我们在桌面上所做的那样：
- en: '![](img/0a52a7cd-e853-485d-8f54-8ab5a6cd22a0.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a52a7cd-e853-485d-8f54-8ab5a6cd22a0.png)'
- en: 'Then, move into the directory:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，进入该目录：
- en: '![](img/1712e431-5fe1-404c-b1c9-74413c2ed50b.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1712e431-5fe1-404c-b1c9-74413c2ed50b.png)'
- en: 'Next run the script to configure the package:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来运行脚本来配置该软件包：
- en: '![](img/cc3b79a1-ed6c-43e8-914c-8ff1f0485e37.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc3b79a1-ed6c-43e8-914c-8ff1f0485e37.png)'
- en: 'Once the configuration is complete, next we run the `make` command:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完成后，接下来运行`make`命令：
- en: '![](img/56a7cc00-99f7-4194-a118-30798147c8cf.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/56a7cc00-99f7-4194-a118-30798147c8cf.png)'
- en: 'Then, run the `make install` command:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行`make install`命令：
- en: '![](img/365db1da-ef10-4117-8283-86dfdd12e28a.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/365db1da-ef10-4117-8283-86dfdd12e28a.png)'
- en: Once successfully done, it will install the package on your Linux system.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦成功完成，它将把软件包安装到你的 Linux 系统上。
- en: How to do it...
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The acct package has different commands for monitoring process activities:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: acct 包有不同的命令来监控进程活动：
- en: 'Based on a particular user login and logout from a wtmp file, if we wish to
    check the total connect time, we can use the `ac` command:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据特定用户从 wtmp 文件中登录和注销的情况，如果我们希望检查总连接时间，可以使用`ac`命令：
- en: '![](img/aa2a8e2e-7fe4-4ecc-81aa-87c0119a7c17.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa2a8e2e-7fe4-4ecc-81aa-87c0119a7c17.png)'
- en: 'If we wish to print the total login time day-wise, we will use the `-d` option
    with the "ac" command:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望按天打印总登录时间，可以在“ac”命令中使用`-d`选项：
- en: '![](img/1cb7cb36-1355-4159-883a-abbeca8f5cf4.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1cb7cb36-1355-4159-883a-abbeca8f5cf4.png)'
- en: 'To print the total login time user-wise, we use this command:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要打印按用户统计的总登录时间，我们使用以下命令：
- en: '![](img/45c4b839-36a4-46e2-ae8f-3d0998faa416.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/45c4b839-36a4-46e2-ae8f-3d0998faa416.png)'
- en: 'If we wish to check the login time only for a particular user, we use this
    command:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们只希望检查特定用户的登录时间，可以使用以下命令：
- en: '![](img/2f5ec9f6-c1f6-40b9-b68c-7c69b4be25e1.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2f5ec9f6-c1f6-40b9-b68c-7c69b4be25e1.png)'
- en: 'We can also see the previously executed commands for all users, or a particular
    user, by using the `lastcomm` command:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以通过使用`lastcomm`命令查看所有用户或特定用户之前执行的命令：
- en: '![](img/78a25715-1803-4452-a36a-9a9e5f3c59f1.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/78a25715-1803-4452-a36a-9a9e5f3c59f1.png)'
- en: How it works...
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: To monitor the system, we first install the acct package on the system. For
    a few other Linux distributions, the package to be used would be `psacct`, if
    `acct` is not compatible.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 为了监控系统，我们首先需要在系统上安装 acct 包。对于其他一些 Linux 发行版，如果`acct`不兼容，可以使用`psacct`包。
- en: Once the tool is installed and running, it starts maintaining a log of the activities
    on the system. We can then watch these logs using the commands discussed in the
    preceding section.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦工具安装并运行，它会开始维护系统活动日志。我们可以使用前面讨论的命令来查看这些日志。
- en: Login authentication using a USB device and PAM
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 USB 设备和 PAM 进行登录认证
- en: When a Linux user wants to secure the system, the most common method is always
    using their login password. However, we know this method is not very reliable
    as there are many methods to hack a traditional password. To increase the security
    level, we can use a USB device like an authentication token, which will be used
    to log in to the system.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个 Linux 用户想要保护系统安全时，最常见的方法通常是使用他们的登录密码。然而，我们知道这种方法并不非常可靠，因为有许多方法可以破解传统的密码。为了提高安全性，我们可以使用像身份验证令牌这样的
    USB 设备，用于登录系统。
- en: Getting ready
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: To follow these steps, we need to have a USB storage device and **Pluggable
    Authentication Modules** (**PAM**) downloaded on the Linux system. Most Linux
    systems have PAM in the form of precompiled packages, which can be accessed from
    the relevant repository.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行这些步骤，我们需要一个 USB 存储设备，并且在 Linux 系统上下载 **可插拔认证模块**（**PAM**）。大多数 Linux 系统以预编译软件包的形式提供
    PAM，可以从相关的软件仓库中获取。
- en: How to do it...
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'By using any type of USB storage device and PAM, we can create the authentication
    token:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用任何类型的 USB 存储设备和 PAM，我们可以创建身份验证令牌：
- en: 'To start with, we first need to install the packages required for PAM USB authentication.
    To do so, we run this command:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要安装PAM USB认证所需的包。为此，我们运行以下命令：
- en: '[PRE10]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**![](img/8900ebd5-14b1-4eb9-9219-6f9e861f41a7.png)**'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/8900ebd5-14b1-4eb9-9219-6f9e861f41a7.png)**'
- en: Once the packages are installed, we have to configure the USB device to use
    PAM authentication. To do so, we can either use a command, or else we can edit
    the `/etc/pamusb.conf` file.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完软件包后，我们必须配置USB设备以使用PAM认证。为此，我们可以使用命令，或者编辑`/etc/pamusb.conf`文件。
- en: 'To use the command method, first connect the USB device, and after that execute
    this command:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 若要使用命令方法，首先连接USB设备，然后执行以下命令：
- en: '[PRE11]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](img/6d19d713-34fb-412e-80e0-1bacc5b1540a.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d19d713-34fb-412e-80e0-1bacc5b1540a.png)'
- en: In the preceding command, `usb-device` is the name given to the USB device we
    are using. This name can be anything you choose.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的命令中，`usb-device`是我们正在使用的USB设备的名称。这个名称可以是你选择的任何名称。
- en: 'When the `pamusb-conf` command is used, it automatically discovers the USB
    device, which also includes multiple partitions. When the command completes its
    execution, it adds an XML code block to the `/etc/pamusb.conf` file, defining
    our USB device:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pamusb-conf`命令时，它会自动发现USB设备，包含多个分区。当命令执行完成后，它会在`/etc/pamusb.conf`文件中添加一个XML代码块，定义我们的USB设备：
- en: '![](img/dd645efe-3898-4405-96dd-cb9850bed3cd.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd645efe-3898-4405-96dd-cb9850bed3cd.png)'
- en: 'Next, we define our USB device:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们定义我们的USB设备：
- en: '[PRE12]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**![](img/a5fefc96-57ce-405f-a41c-0bb62c9c2de7.png)**'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/a5fefc96-57ce-405f-a41c-0bb62c9c2de7.png)**'
- en: If the user already exists, it will be added to the PAM configuration.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户已存在，它将被添加到PAM配置中。
- en: 'The previous command adds the definition of the `pam_usb` user to the `/etc/pamusb.conf`
    file:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令将`pam_usb`用户的定义添加到`/etc/pamusb.conf`文件中：
- en: '![](img/a5bb09ee-0418-40b4-a97d-87bbf8f93483.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a5bb09ee-0418-40b4-a97d-87bbf8f93483.png)'
- en: 'Now, we will configure PAM to add the `pam_usb` module in the system authentication
    process. For this, we will edit the `/etc/pam.d/common-auth` file and add this
    line:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将配置PAM，在系统认证过程中添加`pam_usb`模块。为此，我们将编辑`/etc/pam.d/common-auth`文件，并添加以下行：
- en: '**![](img/81034e61-4054-4a7c-aa26-20b451d9b71b.png)**'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/81034e61-4054-4a7c-aa26-20b451d9b71b.png)**'
- en: This will make the system-wide PAM library aware of the `pam_usb` module.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使系统范围的PAM库识别`pam_usb`模块。
- en: The `required` option specifies that the correct password is necessary, while
    the `sufficient` option means that this can also authenticate the user. In the
    preceding configuration, we have used `sufficient` for the usb-device authentication,
    but `required` for the default password.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`required`选项指定需要正确的密码，而`sufficient`选项表示这也可以认证用户。在前面的配置中，我们使用`sufficient`进行USB设备认证，但对默认密码使用`required`。'
- en: In case the USB device defined for `user1` is not present in the system, the
    user will need to enter the correct password. To force the user to have both authentication
    routines in place before granting access to the system, change `sufficient` to
    `required`.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统中未定义`user1`的USB设备，用户需要输入正确的密码。为了在授予系统访问权限之前强制用户完成两个认证流程，请将`sufficient`更改为`required`。
- en: 'Now, we will try to switch to `user1`:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将尝试切换到`user1`：
- en: '![](img/90d9486f-c9b7-4662-ad5d-04fa27ac846c.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90d9486f-c9b7-4662-ad5d-04fa27ac846c.png)'
- en: When asked for, connect usb-device. If the correct USB token device is connected,
    the login will complete, otherwise it will give an error.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 当被要求时，连接usb-device。如果连接了正确的USB令牌设备，登录将完成，否则会出现错误。
- en: 'If any errors appear, such as the one shown here, it could be possible that
    the path of the USB device was not added properly:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果出现任何错误，比如此处显示的错误，可能是因为USB设备的路径未正确添加：
- en: '[PRE13]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In such a situation, add the USB device's full path to `/etc/pmount.allow`.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，将USB设备的完整路径添加到`/etc/pmount.allow`。
- en: 'Now, run the command to check how the USB device partition has been listed
    in the filesystem:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行该命令检查USB设备分区如何在文件系统中列出：
- en: '[PRE14]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**![](img/7a8020bc-9339-42fe-b14a-8d496e951c5c.png)**'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/7a8020bc-9339-42fe-b14a-8d496e951c5c.png)**'
- en: In our case, the partition has been listed as `/dev/sdb1`.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，分区已列为`/dev/sdb1`。
- en: Now, add a line into the `/etc/pmount.allow` file to solve the error.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在`/etc/pmount.allow`文件中添加一行，以解决该错误。
- en: 'The configuration that we have done in `/etc/pam.d/common-auth` up to now means
    that if the USB device is not connected, the user will still be able to log in
    with the correct password. If we wish to force the user to also use the USB device
    for login, then change `sufficient` to `required`, as shown here:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们目前在 `/etc/pam.d/common-auth` 中所做的配置意味着，如果 USB 设备未连接，用户仍然可以使用正确的密码登录。如果我们希望强制用户在登录时也使用
    USB 设备，则将 `sufficient` 改为 `required`，如下所示：
- en: '![](img/1b9019e4-1dde-4e22-94eb-74ff4acf9dc9.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1b9019e4-1dde-4e22-94eb-74ff4acf9dc9.png)'
- en: 'If the user now tries to log in, they will have to enter the correct password
    as well as insert the USB device:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果用户现在尝试登录，他们将需要输入正确的密码并插入 USB 设备：
- en: '![](img/fa64e912-955e-4127-94e3-650238ac112f.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fa64e912-955e-4127-94e3-650238ac112f.png)'
- en: 'Now, remove the USB device and try to log in again with the correct password:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，移除 USB 设备并尝试使用正确的密码再次登录：
- en: '![](img/9f09639a-50ba-4341-aa79-0a53f3f46e3e.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9f09639a-50ba-4341-aa79-0a53f3f46e3e.png)'
- en: How it works...
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Once we install the required `pam-usb` package, we edit the configuration file
    to add our USB device, which we want to use as an authentication token. After
    that, we add the user account to be used. And then, we make the changes in the
    `/etc/pam.d/common-auth` file to specify how the USB authentication should work,
    and whether it is always required to log in.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们安装了所需的 `pam-usb` 包，我们编辑配置文件以添加我们的 USB 设备，将其作为认证令牌使用。之后，我们添加需要使用的用户账户。然后，我们在
    `/etc/pam.d/common-auth` 文件中做更改，以指定 USB 认证如何工作，并且是否始终需要进行登录。
- en: There's more...
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: We have seen how to use a USB device to authenticate user login. Apart from
    this, we can also use the USB device to trigger an event, every time it is disconnected
    or connected from/to the system.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看过如何使用 USB 设备来验证用户登录。除此之外，我们还可以利用 USB 设备触发事件，每次它从系统中断开或连接时都会发生此事件。
- en: 'Let modify the XML code in `/etc/pamusb.conf` to add event code for the user
    definition:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们修改 `/etc/pamusb.conf` 中的 XML 代码，以便为用户定义添加事件代码：
- en: '**![](img/88992947-410f-4e95-83fc-31d1262c5411.png)**'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](img/88992947-410f-4e95-83fc-31d1262c5411.png)**'
- en: Due to the preceding modification, whenever the user disconnects the USB device,
    the screen will get locked. Similarly, when the user again connects the USB device,
    the screen will get unlocked.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 由于前面的修改，每当用户断开 USB 设备时，屏幕将被锁定。类似地，当用户再次连接 USB 设备时，屏幕将解锁。
- en: Defining user authorization controls
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义用户授权控制
- en: Defining user authorization on a computer mainly deals with deciding the activities
    that a user may or may not be allowed to do. This could include activities such
    as executing a program or reading a file.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机上定义用户授权主要是决定用户可以或不能执行的操作。这可能包括执行程序或读取文件等活动。
- en: Since the `root` account has all privileges, authorization controls mainly deal
    with allowing or disallowing root access to user accounts.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 `root` 账户拥有所有权限，授权控制主要是决定是否允许用户账户访问 `root` 权限。
- en: Getting ready
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备开始
- en: To see how user authorization works, we need a user account to try the commands
    on. So, we create few user accounts, `user1` and `user2`, to try the commands.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看用户授权如何工作，我们需要一个用户账户来尝试这些命令。所以，我们创建了几个用户账户，`user1` 和 `user2`，来执行这些命令。
- en: How to do it...
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In this section, we will go through various controls that can be applied on
    user accounts:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍可以应用于用户账户的各种控制：
- en: 'Suppose we have two user accounts, `user1` and `user2`. We log in from `user2`
    and then try to run a command, `ps`, as `user1`. In a normal scenario, we get
    this result:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们有两个用户账户，`user1` 和 `user2`。我们从 `user2` 登录，然后尝试以 `user1` 身份运行命令 `ps`。在正常情况下，我们会得到以下结果：
- en: '![](img/31598865-2f78-43c8-bac4-259d88cfb5a2.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](img/31598865-2f78-43c8-bac4-259d88cfb5a2.png)'
- en: 'Now, edit the `/etc/sudoers` file and add this line:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，编辑 `/etc/sudoers` 文件并添加这一行：
- en: '[PRE15]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'After saving the changes in `/etc/sudoers`, again try to run the `ps` command
    from `user2` as `user1`:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `/etc/sudoers` 中保存更改后，再尝试从 `user2` 以 `user1` 身份运行 `ps` 命令：
- en: '![](img/4016a147-99df-414a-896b-7d550093e70e.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4016a147-99df-414a-896b-7d550093e70e.png)'
- en: 'Now, if we want to run the same command again from `user2` as `user1`, but
    without being asked for the password, we can do this by editing the `/etc/sudoers`
    file as shown here:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们希望从 `user2` 以 `user1` 身份再次运行相同的命令，但不要求输入密码，我们可以通过编辑 `/etc/sudoers` 文件来实现，方法如下：
- en: '![](img/6bc486cc-080b-4642-b906-6078cdd1f065.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6bc486cc-080b-4642-b906-6078cdd1f065.png)'
- en: 'Now, when we run the `ps` command from `user2` as `user1`, we see that it does
    not ask for a password anymore:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当我们以`user1`身份从`user2`运行`ps`命令时，我们看到它不再要求输入密码：
- en: '![](img/d6d60eb7-8f3c-4950-9e9f-5eea2a690544.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d6d60eb7-8f3c-4950-9e9f-5eea2a690544.png)'
- en: Now that we have seen how to run a command without being asked for the password,
    the major concern of the system administrator will be that `sudo` should always
    prompt for a password.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经看到如何在不要求输入密码的情况下运行命令，系统管理员的主要关注点将是`sudo`始终提示输入密码。
- en: 'To make `sudo` always prompt for a password for the `user1` user account on
    the system, edit the `/etc/sudoers` file and add this line:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使`user1`用户帐户在系统上始终提示输入密码，请编辑`/etc/sudoers`文件并添加以下行：
- en: '[PRE16]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](img/b1474717-f0a3-4c1b-83f4-7ffa26345518.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1474717-f0a3-4c1b-83f4-7ffa26345518.png)'
- en: 'Now, if `user1` tries to run any command, they will be always prompted for
    the password:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果`user1`尝试运行任何命令，系统将始终提示输入密码：
- en: '![](img/b8e002a8-f79e-4d58-8157-557309a47cd1.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b8e002a8-f79e-4d58-8157-557309a47cd1.png)'
- en: 'Now, let''s suppose we want to give the `user1` account permission to change
    the password of `user2` and `user3`. Edit the `/etc/sudoers` file and add this
    line:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，假设我们要授予`user1`帐户更改`user2`和`user3`密码的权限。编辑`/etc/sudoers`文件并添加以下行：
- en: '![](img/e703e55d-d309-465e-a622-2b869c5cf631.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e703e55d-d309-465e-a622-2b869c5cf631.png)'
- en: 'Now, log in from `user1` and let''s try to change the passwords of the `user2`
    and `user3` accounts:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，从`user1`登录，让我们尝试更改`user2`和`user3`帐户的密码：
- en: '![](img/54a92e48-fdd8-4861-a135-dd51ddbe5de3.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![](img/54a92e48-fdd8-4861-a135-dd51ddbe5de3.png)'
- en: How it works...
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Using the `sudo` command and the `/etc/sudoers` file, we make the required changes
    to execute the tasks as required.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`sudo`命令和`/etc/sudoers`文件，我们进行必要的更改，以按要求执行任务。
- en: We edit the file to allow permission to execute a program as another user. We
    also add the `NOPASSWD` option to execute the program without being asked for
    a password. We then add the required line so that `sudo` always prompts for a
    password.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编辑文件以允许以其他用户身份执行程序。我们还添加了`NOPASSWD`选项，以便在执行程序时不要求输入密码。然后我们添加所需的行，以便`sudo`始终提示输入密码。
- en: Next, we will see how to authorize a user account to change the password for
    other user accounts.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看到如何授权用户帐户更改其他用户帐户的密码。
- en: Access Management using IDAM
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 IDAM 进行访问管理
- en: In today's world, a single Linux system may be used by various users locally
    or remotely. It becomes essential to manage the access of these users to protect
    sensitive and confidential information that should be accessible to only a few
    authenticated users.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在今天的世界中，一个 Linux 系统可能被多个本地或远程用户使用。管理这些用户的访问权限变得至关重要，以保护那些仅应由少数经过身份验证的用户访问的敏感和机密信息。
- en: IDAM, or Identity and Access Management, tools can help a system administrator
    to manage the identity and access of various users easily.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: IDAM（身份和访问管理）工具可以帮助系统管理员轻松管理各种用户的身份和访问权限。
- en: Getting ready
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: To get going with the installation and configuration of WSO2 Identity Server,
    we need any Linux distribution on which the Java environment is setup.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始安装和配置 WSO2 Identity Server，我们需要任何已设置 Java 环境的 Linux 发行版。
- en: 'Here, we will see how to set up the Java environment:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将看到如何设置 Java 环境：
- en: 'Before installing the JDK, we shall install a package related to Python as
    part of the dependency. The command to do this is as follows:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装 JDK 之前，我们需要安装一个与 Python 相关的包作为依赖项。执行此操作的命令如下：
- en: '![](img/9fc871bf-6954-4f0b-9380-4e3a3a8e49f8.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9fc871bf-6954-4f0b-9380-4e3a3a8e49f8.png)'
- en: 'Now, to install Oracle JDK, the official version distributed by Oracle, we
    will have to update the system''s package repository and add Oracle''s PPA. To
    do this, we run the following command:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要安装 Oracle JDK，即 Oracle 官方版本，我们需要更新系统的包仓库并添加 Oracle 的 PPA。为此，我们运行以下命令：
- en: '![](img/9d4c51b0-a263-4fb9-991e-0fbf09e1b638.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9d4c51b0-a263-4fb9-991e-0fbf09e1b638.png)'
- en: 'Now, install the stable version of Java by running the following command:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过运行以下命令安装 Java 的稳定版本：
- en: '![](img/d0ff03fa-ecd0-49eb-97f6-ce157a795de6.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d0ff03fa-ecd0-49eb-97f6-ce157a795de6.png)'
- en: 'Once the installation completes, the next step is to set the `JAVA_HOME` environment
    variable. To do this, edit the `/etc/environment` file using any editor and add
    the following lines:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，下一步是设置`JAVA_HOME`环境变量。为此，使用任何编辑器编辑`/etc/environment`文件并添加以下行：
- en: '![](img/0eab836c-596e-498c-9faa-4fa9e5782003.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0eab836c-596e-498c-9faa-4fa9e5782003.png)'
- en: 'To test if the environment variable has been set properly or not, execute the
    following command:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了测试环境变量是否已正确设置，可以执行以下命令：
- en: '![](img/2df13433-9315-4415-9b0d-0b8a6a5aa27d.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2df13433-9315-4415-9b0d-0b8a6a5aa27d.png)'
- en: We can see the path that has been set in the previous steps.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到在前面的步骤中设置的路径。
- en: How to do it...
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Once we are done with the installation and configuration of the JDK on our
    system, we can proceed with the installation and configuration of WSO Identity
    and Access Management Server:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统上完成JDK的安装和配置后，我们可以继续安装和配置WSO身份和访问管理服务器：
- en: 'To begin with, download the WSO2 package from the link given here: [https://wso2.com/identity-and-access-management/install/download/?type=ubuntu](https://wso2.com/identity-and-access-management/install/download/?type=ubuntu)'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，从以下链接下载WSO2包：[https://wso2.com/identity-and-access-management/install/download/?type=ubuntu](https://wso2.com/identity-and-access-management/install/download/?type=ubuntu)
- en: 'Next, create a directory, `/var/wso2`, and unpack the downloaded package into
    this directory:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建一个目录`/var/wso2`，并将下载的包解压到此目录中：
- en: '![](img/b8d28b0e-d2af-463d-ab3c-585058393356.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b8d28b0e-d2af-463d-ab3c-585058393356.png)'
- en: 'To extract the package, run this command:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了提取包，运行以下命令：
- en: '[PRE17]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once the extraction process is complete, we can check the files inside the
    directory:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提取过程完成后，我们可以检查目录中的文件：
- en: '![](img/c4ff6390-daf8-48bc-9806-daccb0978130.png)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c4ff6390-daf8-48bc-9806-daccb0978130.png)'
- en: 'Next, we can change the configuration in the `carbon.xml` file if we wish to
    configure our server to launch using FQDN instead of `localhost`. To do this,
    edit the `carbon.xml` file located at `[INSTALL_DIR]/repository/conf/carbon.xml`:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，如果我们希望配置服务器使用FQDN而不是`localhost`启动，我们可以更改`carbon.xml`文件中的配置。为此，编辑位于`[INSTALL_DIR]/repository/conf/carbon.xml`的`carbon.xml`文件：
- en: '![](img/55c1c105-ab33-4966-b409-570d8da78dc6.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![](img/55c1c105-ab33-4966-b409-570d8da78dc6.png)'
- en: 'Make the changes to `<HostName>` to replace localhost with your system''s FQDN:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 修改`<HostName>`，将localhost替换为系统的FQDN：
- en: '![](img/7725e6fb-bbe5-4b52-bb7d-b964c9635675.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7725e6fb-bbe5-4b52-bb7d-b964c9635675.png)'
- en: 'Now, we can launch WSO2 Identity Server. To do so, we run the following command:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以启动WSO2身份服务器。为此，运行以下命令：
- en: '![](img/15e94b56-b57a-479d-85b0-9228d7a53efc.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/15e94b56-b57a-479d-85b0-9228d7a53efc.png)'
- en: 'Once the server starts running successfully, it will display a line similar
    to `WSO2 Carbon started in 463 sec`, as shown in the following output:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦服务器成功启动，它会显示类似于`WSO2 Carbon started in 463 sec`的行，如下所示：
- en: '![](img/5589b794-1147-44e2-8b81-29b880a4c50a.png)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5589b794-1147-44e2-8b81-29b880a4c50a.png)'
- en: 'Once the server is up and running, we can access it through the browser. The
    default configuration to access the server is always via HTTPS ad on port `9443`:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦服务器启动并运行，我们可以通过浏览器访问它。访问服务器的默认配置始终是通过HTTPS并使用端口`9443`：
- en: '![](img/0a153856-b2cb-4bf4-90a8-0a0ae8922f89.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a153856-b2cb-4bf4-90a8-0a0ae8922f89.png)'
- en: On the sign-in page, use the default username `admin` and the default password
    `admin` to log in.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在登录页面，使用默认用户名`admin`和默认密码`admin`进行登录。
- en: Once logged in, we can use it to add users and roles for those users.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，我们可以用它来添加用户和角色。
- en: The Linux administrator can now use WSO2 IS to manage identities and perform
    access management.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: Linux管理员现在可以使用WSO2 IS来管理身份并执行访问管理。
- en: How it works...
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: WSO2 Identity Server is an open source IAM product. It specializes in access
    management, access control, identity governance administration, API security,
    and many other features.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: WSO2身份服务器是一个开源的IAM产品，专注于访问管理、访问控制、身份治理管理、API安全等众多功能。
