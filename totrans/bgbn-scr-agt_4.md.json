["```\nsudo apt-get install gnupg gnupg-curl\n\n```", "```\ncat /proc/sys/kernel/random/entropy_avail\n\n```", "```\nHRNGDEVICE=/dev/hwrng\n\n```", "```\n/etc/init.d/rng-tools start\n\n```", "```\nPlease select what kind of key you want:\n (1) RSA and RSA (default)\n (2) DSA and Elgamal\n (3) DSA (sign only)\n (4) RSA (sign only)\nYour selection? 1\nRSA keys may be between 1024 and 4096 bits long.\nWhat keysize do you want? (2048) 4096\nRequested keysize is 4096 bits\nPlease specify how long the key should be valid.\n 0 = key does not expire\n <n>  = key expires in n days\n <n>w = key expires in n weeks\n <n>m = key expires in n months\n <n>y = key expires in n years\nKey is valid for? (0) 1y\nKey expires at Sat 06 Jun 2015 10:07:07 PM UTC\nIs this correct? (y/N) y\n\nYou need a user ID to identify your key; the software constructs the user ID\nfrom the Real Name, Comment and Email Address in this form:\n \"Heinrich Heine (Der Dichter) <heinrichh@duesseldorf.de>\"\n\nReal name: Tyrone Slothrop\nEmail address: tyrone.slothrop@yoyodyne.com\nComment:\nYou selected this USER-ID:\n \"Tyrone Slothrop <tyrone.slothrop@yoyodyne.com>\"\n\nChange (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O\nYou need a Passphrase to protect your secret key.\n\nWe need to generate a lot of random bytes. It is a good idea to perform some other action (type on the keyboard, move the mouse, utilize the disks) during the prime generation; this gives the random number generator a better chance to gain enough entropy.\n......+++++\n..+++++\n\ngpg: key 0xABD9088171345468 marked as ultimately trusted\npublic and secret key created and signed.\n\ngpg: checking the trustdb\ngpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model\ngpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u\ngpg: next trustdb check due at 2015-06-06\npub   4096R/0xABD9088171345468 2014-06-06 [expires: 2015-06-06]\n Key fingerprint = CBF9 1404 7214 55C5 C477  B688 ABD9 0881 7134 5468\nuid                 [ultimate] Tyrone Slothrop <tyrone.slothrop@yoyodyne.com>\nsub   4096R/0x9DB8B6ACC7949DD1 2014-06-06 [expires: 2015-06-06]\n\ngpg --gen-key  320.62s user 0.32s system 51% cpu 10:23.26 total\n\n```", "```\ndefault-key 0xABD9088171345468\n\n```", "```\ngpg --send-keys 0xABD9088171345468\n\n```", "```\ngpg --output revocation-certificate.asc --gen-revoke 0xABD9088171345468\n\nsec  4096R/0xABD9088171345468 2014-06-06 Tyrone Slothrop <tyrone.slothrop@yoyodyne.com>\n\nCreate a revocation certificate for this key? (y/N) y\nPlease select the reason for the revocation:\n 0 = No reason specified\n 1 = Key has been compromised\n 2 = Key is superseded\n 3 = Key is no longer used\n Q = Cancel\n(Probably you want to select 1 here)\nYour decision? 0\nEnter an optional description; end it with an empty line:\n>\nReason for revocation: No reason specified\n(No description given)\nIs this okay? (y/N) y\n\nYou need a passphrase to unlock the secret key for\nuser: \"Tyrone Slothrop <tyrone.slothrop@yoyodyne.com>\"\n4096-bit RSA key, ID 0xABD9088171345468, created 2014-06-06\n\nASCII armored output forced.\nRevocation certificate created.\n\nPlease move it to a medium which you can hide away; if Mallory gets access to this certificate he can use it to make your key unusable.\nIt is smart to print this certificate and store it away, just in case your media become unreadable.  But have some caution:  The print system of your machine might store the data and make it available to others!\n\n```", "```\ngit clone https://github.com/jbdatko/beagle-bone-for-secret-agents.git\n\n```", "```\nsudo ./upload.sh keypad_cryptocape.cpp.hex\n\n```", "```\nsudo apt-get install libtspi-dev\n\n```", "```\ngcc keypad.c -o getgpgpin -ltspi\n\n```", "```\nsudo apt-get install tpm-tools\n\n```", "```\ndmesg | grep TPM\n\n```", "```\n[    5.370109] tpm_i2c_atmel 1-0029: Issuing TPM_STARTUP\n\n```", "```\nps aux | grep tcsd\n\n```", "```\ntss  799  0.0  0.1  11492   980 ?  Ss Jun08 0:00 /usr/sbin/tcsd\n\n```", "```\ntpm_takeownership -z -l debug\n\n```", "```\nTspi_Context_Create success\nEnter owner password:\nConfirm password:\nTspi_Context_Connect success\nTspi_Context_GetTpmObject success\nTspi_GetPolicyObject success\nTspi_Policy_SetSecret success\nTspi_Context_CreateObject success\nTspi_GetPolicyObject success\nTspi_Policy_SetSecret success\nTspi_TPM_TakeOwnership success\ntpm_takeownership succeeded\nTspi_Context_CloseObject success\nTspi_Context_FreeMemory success\nTspi_Context_Close success\n\n```", "```\ncat /sys/class/misc/tpm0/device/pcrs | grep PCR-09\n\n```", "```\nPCR-09:00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\n```", "```\n54321\n(Line 53, extend_pcr)  Create a Context\n returned 0x00000000\\. Success.\n(Line 55, extend_pcr)  Connect to TPM\n returned 0x00000000\\. Success.\n(Line 59, extend_pcr)  GetTPM Handle\n returned 0x00000000\\. Success.\n(Line 62, extend_pcr)  Owner Policy\n returned 0x00000000\\. Success.\n36987(Line 73, extend_pcr)  extend\n returned 0x00000000\\. Success.\n\n```", "```\ncat /sys/class/misc/tpm0/device/pcrs | grep PCR-09\n\n```", "```\nPCR-09:2B 1E 41 10 EB A0 91 9E B4 89 0E 04 83 0B 70 C5 C2 AA 23 44\n\n```", "```\ntpm_sealdata -p 9 -i secring.gpg -o secring.gpg.tpm -z -l debug\n\n```", "```\ntpm_unsealdata -i secring.gpg.tpm -o deleteme -z\n\n```", "```\nsudo apt-get install secure-delete\n\n```", "```\nramfs    /mnt/ramdisk ramfs nodev,nosuid,noexec,nodiratime,size=1M,uid=1000,gid=1002   0 0\n\n```", "```\nln -s /mnt/ramdisk/secring.gpg ~/.gnupg/secring.gpg\n\n```", "```\nupdate-rc.d tpm_gpg defaults\n\n```"]