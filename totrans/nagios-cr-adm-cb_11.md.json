["```\ndefine host {\n    use        linux-server\n    host_name  ithaca.naginet\n    alias      ithaca\n    address    10.128.0.21\n}\n```", "```\n    # cd /usr/local/nagios/etc/objects\n\n    ```", "```\n    define command {\n        command_name  check_dummy\n        command_line  $USER1$/check_dummy $ARG1$ $ARG2$\n    }\n    ```", "```\n    # vi ithaca.naginet.cfg\n\n    ```", "```\n    define service {\n        use                     generic-service\n        host_name               ithaca.naginet\n        service_description     BACKUP\n     active_checks_enabled   0\n     passive_checks_enabled  1\n     check_command           check_dummy!1!\"Unwanted active check!\"\n    }\n    ```", "```\n    # /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg\n    # /etc/init.d/nagios restart\n\n    ```", "```\n[<timestamp>] PROCESS_SERVICE_CHECK_RESULT;<host_name>;<service_description>;<service_status>;<plugin_output>\n```", "```\n[1348806599] PROCESS_SERVICE_CHECK_RESULT;ithaca.naginet;BACKUP;0;Nightly backups were successful\n```", "```\n# CHECK=\"[`date +%s`] PROCESS_SERVICE_CHECK_RESULT;ithaca.naginet;BACKUP;0;Nightly backups were successful\"\n# echo $CHECK >>/usr/local/nagios/var/rw/nagios.cmd\n\n```", "```\n    $ cd\n    $ wget http://downloads.sourceforge.net/project/nagios/nsca-2.x/nsca-2.7.2/nsca-2.7.2.tar.gz\n\n    ```", "```\n    $ tar -xzf nsca-2.7.2.tar.gz\n\n    ```", "```\n    $ cd nsca-2.7.2\n    $ ./configure\n    $ make\n\n    ```", "```\n    # cp src/nsca /usr/local/nagios/bin\n    # cp sample-config/nsca.cfg /usr/local/nagios/etc\n\n    ```", "```\n    # vi /usr/local/nagios/etc/nsca.cfg\n\n    ```", "```\n    password=yV3aa6S2o\n    ```", "```\n    # /usr/local/nagios/bin/nsca -c /usr/local/nagios/etc/nsca.cfg --single\n\n    ```", "```\n    $ cd\n    $ wget http://downloads.sourceforge.net/project/nagios/nsca-2.x/nsca-2.7.2/nsca-2.7.2.tar.gz\n    $ tar -xzf nsca-2.7.2.tar.gz\n    $ cd nsca-2.7.2\n    $ ./configure\n    $ make\n\n    ```", "```\n    # mkdir -p /usr/local/bin /usr/local/etc\n    # cp src/send_nsca /usr/local/bin\n    # cp sample-config/send_nsca.cfg /usr/local/etc\n\n    ```", "```\n    # vi /usr/local/etc/send_nsca.cfg\n\n    ```", "```\n    password=yV3aa6S2o\n    ```", "```\n    # CHECK=\"ithaca.naginet\\tBACKUP\\t0\\tBackup was successful, this check submitted by NSCA\\n\"\n    # echo -en $CHECK | send_nsca -c /usr/local/etc/send_nsca.cfg -H olympus.naginet\n    1 data packet(s) sent to host successfully.\n\n    ```", "```\n<host_name>\\t<service_description>\\t<check_result>\\t<check_output>\\n\n```", "```\nithaca.naginet\\tBACKUP\\t0\\tBackup was successful, this check submitted by NSCA\\n\n```", "```\ndefine service {\n    use                     generic-service\n    host_name               ithaca.naginet\n    service_description     BACKUP\n    active_checks_enabled   0\n    passive_checks_enabled  1\n check_freshness         1\n freshness_threshold     86400\n    check_command           check_dummy!1!\"No backups have run for 24 hours\"\n}\n```", "```\n$ host 10.128.0.27\n27.0.128.10.in-addr.arpa domain name pointer crete.naginet.\n$ dig -x 10.128.0.27 +short\ncrete.naginet.\n\n```", "```\n    # mkdir -p /usr/local/nagios/libexec/eventhandlers\n    # cp /usr/local/src/nagios/contrib/eventhandlers/submit_check_result /usr/local/nagios/libexec/eventhandlers\n\n    ```", "```\n    # cd /usr/local/nagios/etc/objects\n\n    ```", "```\n    # vi crete.naginet.cfg\n\n    ```", "```\n    define host {\n        use        linux-server\n        host_name  crete.naginet\n        alias      crete\n        address    10.128.0.21\n    }\n    ```", "```\n    define service {\n        use                     generic-service\n        host_name               crete.naginet\n        service_description     TRAP\n     is_volatile             1\n        check_command           check-host-alive\n     active_checks_enabled   0\n     passive_checks_enabled  1\n        max_check_attempts      1\n        contact_groups          admins\n    }\n    ```", "```\n    # /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg\n    # /etc/init.d/nagios restart\n\n    ```", "```\n    # /usr/local/nagios/libexec/eventhandlers/submit_check_result crete.naginet TRAP 0 \"Everything working\"\n\n    ```", "```\n    traphandle default /usr/sbin/snmptt\n    disableAuthorization yes\n    donotlogtraps yes\n    ```", "```\n    # /etc/init.d/snmpd restart\n\n    ```", "```\n    dns_enable = 1\n    ```", "```\n    net_snmp_perl_enable = 1\n    ```", "```\n    EVENT linkDown .1.3.6.1.6.3.1.1.5.3 \"Status Events\" Normal\n    FORMAT Link down on interface $1\\.  Admin state: $2\\.  Operational state: $3\n    EXEC /usr/local/nagios/libexec/eventhandlers/submit_check_result $r TRAP 1 \"linkDown for interface $1\"\n    SDESC\n    A linkDown trap signifies that the SNMP entity, acting in\n    an agent role, has detected that the ifOperStatus object for\n    one of its communication links is about to enter the down\n    state from some other state (but not from the notPresent\n    state).  This other state is indicated by the included value\n    of ifOperStatus.\n    EDESC\n    ```", "```\n    # snmptrap -v 1 -c public olympus.naginet .1.3.6.1.6.3.1.1.5.3 localhost 2 0 '' .1.3.6.1.2.1.2.2.1.1.1 i 1\n\n    ```", "```\n    [1348914096] EXTERNAL COMMAND: PROCESS_SERVICE_CHECK_RESULT;crete.naginet;TRAP;1;linkDown for interface 1\n    [1348914100] PASSIVE SERVICE CHECK: crete.naginet;TRAP;1;linkDown for interface 1\n    [1348914100] SERVICE ALERT: crete.naginet;TRAP;WARNING;HARD;3;linkDown for interface 1\n    [1348914100] SERVICE NOTIFICATION: nagiosadmin;crete.naginet;TRAP;WARNING;notify-service-by-email;linkDown for interface 1\n\n    ```", "```\n    # cd /usr/local/nagios/etc/objects\n    # vi commands.cfg\n\n    ```", "```\n    define command {\n        command_name    record_host_data\n        command_line    /usr/bin/printf \"%b\" \"$LONGDATETIME$: $HOSTSTATE$ (attempt $HOSTATTEMPT$)\\n\" >>/usr/local/nagios/var/states-$HOSTNAME$.log\n    }\n    ```", "```\n    define host {\n        use            linux-server\n        host_name      delphi.naginet\n        alias          delphi\n        address        10.128.0.26\n     event_handler  record_host_data\n    }\n    ```", "```\n    # /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg\n    # /etc/init.d/nagios restart\n\n    ```", "```\nSat Sept 29 23:53:54 NZST 2012: DOWN (attempt 1)\nSat Sept 29 23:54:04 NZST 2012: DOWN (attempt 2)\nSat Sept 29 23:54:14 NZST 2012: DOWN (attempt 3)\nSat Sept 29 23:57:14 NZST 2012: UP (attempt 1)\n\n```", "```\ndefine service {\n    use                  generic-service\n    host_name            crete.naginet\n    service_description  PING\n    check_command        check_ping!100,10%!200,20%\n event_handler        record_service_data\n}\n```", "```\ndefine command {\n    command_name    record_service_data\n    command_line    /usr/bin/printf \"%b\" \"$LONGDATETIME$: $SERVICESTATE$ (attempt $SERVICEATTEMPT$)\\n\" >>/usr/local/nagios/var/states-$HOSTNAME$-$SERVICEDESC$.log\n}\n```", "```\nglobal_host_event_handler=record_host_data\nglobal_service_event_handler=record_service_data\n```", "```\n    $ cd\n    $ wget http://downloads.sourceforge.net/project/nagiosgraph/nagiosgraph/1.4.4/nagiosgraph-1.4.4.tar.gz\n\n    ```", "```\n    $ tar -xzf nagiosgraph-1.4.4.tar.gz\n    $ cd nagiosgraph-1.4.4\n\n    ```", "```\n    # ./install.pl --check-prereq\n    checking required PERL modules\n     Carp...1.11\n     CGI...3.43\n     Data::Dumper...2.124\n     File::Basename...2.77\n     File::Find...1.14\n     MIME::Base64...3.08\n     POSIX...1.17\n     RRDs...1.4003\n     Time::HiRes...1.9719\n    checking optional PERL modules\n     GD...2.39\n    checking nagios installation\n     found nagios at /usr/local/nagios/bin/nagios\n    checking web server installation\n     found apache at /usr/sbin/apache2\n\n    ```", "```\n    # apt-get install librrds-perl libgd-gd2-perl\n\n    ```", "```\n    # ./install.pl --install\n    ...Destination directory (prefix)? [/usr/local/nagiosgraph]\n    Location of configuration files (etc-dir)? [/usr/local/nagiosgraph/etc]\n    Location of executables? [/usr/local/nagiosgraph/bin]\n    Location of CGI scripts? [/usr/local/nagiosgraph/cgi]\n    Location of documentation (doc-dir)? [/usr/local/nagiosgraph/doc]\n    Location of examples? [/usr/local/nagiosgraph/examples]\n    Location of CSS and JavaScript files? [/usr/local/nagiosgraph/share]\n    Location of utilities? [/usr/local/nagiosgraph/util]\n    Location of state files (var-dir)? [/usr/local/nagiosgraph/var]\n    Location of RRD files? [/usr/local/nagiosgraph/var/rrd]\n    Location of log files (log-dir)? [/usr/local/nagiosgraph/var]\n    Path of log file? [/usr/local/nagiosgraph/var/nagiosgraph.log]\n    Path of CGI log file? [/usr/local/nagiosgraph/var/nagiosgraph-cgi.log]\n    URL of CGI scripts? [/nagiosgraph/cgi-bin]\n    URL of CSS file? [/nagiosgraph/nagiosgraph.css]\n    URL of JavaScript file? [/nagiosgraph/nagiosgraph.js]\n    Path of Nagios performance data file? [/tmp/perfdata.log]\n    URL of Nagios CGI scripts? [/nagios/cgi-bin]\n    username or userid of Nagios user? [nagios]\n    username or userid of web server user? [www-data]\n    Modify the Nagios configuration? [n]\n    Modify the Apache configuration? [n]\n    ...\n\n    ```", "```\n    # cd /usr/local/nagios/etc\n\n    ```", "```\n    # process nagios performance data using nagiosgraph\n    process_performance_data=1\n    service_perfdata_file=/tmp/perfdata.log\n    service_perfdata_file_template=$LASTSERVICECHECK$||$HOSTNAME$||$SERVICEDESC$||$SERVICEOUTPUT$||$SERVICEPERFDATA$\n    service_perfdata_file_mode=a\n    service_perfdata_file_processing_interval=30\n    service_perfdata_file_processing_command=process-service-perfdata-for-nagiosgraph\n\n    ```", "```\n    # cd /usr/local/nagios/etc/objects\n\n    ```", "```\n    # command to process nagios performance data for nagiosgraph\n    define command {\n     command_name process-service-perfdata-for-nagiosgraph\n     command_line /usr/local/nagiosgraph/bin/insert.pl\n    }\n\n    ```", "```\n    Include /usr/local/nagiosgraph/etc/nagiosgraph-apache.conf\n    ```", "```\n    # /usr/local/apache/bin/apachectl configtest\n    # /usr/local/apache/bin/apachectl restart\n    # /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg\n    # /etc/init.d/nagios restart\n\n    ```", "```\n    define service {\n        name        nagiosgraph\n        action_url  /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$\n        register    0\n    }\n    ```", "```\n    define service {\n     use                   generic-service,nagiosgraph\n        host_name             corinth.naginet\n        service_description   PING\n        check_command         check_ping!100,10%!200,20%\n    }\n    ```", "```\n    # /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg\n    # /etc/init.d/nagios restart\n\n    ```", "```\nPING OK - Packet loss = 0%, RTA = 174.19 ms\n```", "```\naction_url  /nagiosgraph/cgi-bin/show.cgi?host=corinth.naginet&service=PING\n```", "```\n# cp nagiosgraph-1.4.4/share/graph.gif /usr/local/nagios/share/images/action.gif\n\n```", "```\n$ ./configure --enable-event-broker\n$ make\n# make install\n\n```", "```\n    $ wget http://downloads.sourceforge.net/project/nagios/ndoutils-1.x/ndoutils-1.5.2/ndoutils-1.5.2.tar.gz\n\n    ```", "```\n    $ tar -xzf ndoutils-1.5.2.tar.gz\n    $ cd ndoutils-1.5.2\n\n    ```", "```\n    $ ./configure\n    $ make\n\n    ```", "```\n    *** Configuration summary for ndoutils 1.5.2 06-08-2012 ***:\n    General Options:\n    -------------------------\n    NDO2DB user:    nagios\n    NDO2DB group:   nagios\n    Review the options above for accuracy.  If they look okay,\n    type 'make' to compile the NDO utilities.\n\n    ```", "```\n    mysql> CREATE DATABASE nagios;\n    Query OK, 1 row affected (0.10 sec)\n    mysql> CREATE USER 'ndo'@'localhost' IDENTIFIED BY 'mPYxbAYqa';\n    Query OK, 0 rows affected (0.62 sec)\n    mysql> GRANT ALL ON nagios.* TO 'ndo'@'localhost';\n    Query OK, 0 rows affected (0.02 sec)\n\n    ```", "```\n    $ cd db\n    $ ./installdb -u ndo -p mPYxbAYqa -h localhost -d nagios\n    ** Creating tables for version 1.5.2\n     Using mysql.sql for installation...\n    ** Updating table nagios_dbversion\n    Done!\n\n    ```", "```\n    DBD::mysql::db do failed: Table 'nagios.nagios_dbversion' doesn't exist at ./installdb line 51.\n    ```", "```\n    # cd ..\n    # cp src/ndomod-3x.o /usr/local/nagios/bin/ndomod.o\n\n    ```", "```\n    # cp config/ndomod.cfg-sample /usr/local/nagios/etc/ndomod.cfg\n\n    ```", "```\n    # chown nagios.nagios /usr/local/nagios/etc/ndomod.cfg\n    # chmod 0600 /usr/local/nagios/etc/ndomod.cfg\n\n    ```", "```\n    # vi /usr/local/nagios/etc/nagios.cfg\n\n    ```", "```\n    broker_module=/usr/local/nagios/bin/ndomod.o config_file=/usr/local/nagios/etc/ndomod.cfg\n    event_broker_options=-1\n    ```", "```\n    # cp src/ndo2db-3x /usr/local/nagios/bin/ndo2db\n\n    ```", "```\n    # cp config/ndo2db.cfg-sample /usr/local/nagios/etc/ndo2db.cfg\n\n    ```", "```\n    # chown nagios.nagios /usr/local/nagios/etc/ndo2db.cfg\n    # chmod 0600 /usr/local/nagios/etc/ndo2db.cfg\n\n    ```", "```\n    # vi /usr/local/nagios/etc/ndo2db.cfg\n\n    ```", "```\n    db_host=localhost\n    db_port=3306\n    db_name=nagios\n    db_user=ndo\n    db_pass=mPYxbAYqa\n    ```", "```\n    # /usr/local/nagios/bin/ndo2db -c /usr/local/nagios/etc/ndo2db.cfg\n    # ps -e | grep '[n]do2db'\n    32285 ? 00:00:00 ndo2db\n    # pgrep ndo2db\n    32285\n\n    ```", "```\n    # /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg\n    # /etc/init.d/nagios restart\n\n    ```", "```\n$ mysql --user=ndo --password --database=nagios\nmysql> select count(1) from nagios_services;\n+----------+\n| count(1) |\n+----------+\n|       54 |\n+----------+\n1 row in set (0.00 sec)\n\n```", "```\n    mysql> SELECT start_time, long_output FROM nagios_notifications ORDER BY start_time DESC LIMIT 10;\n\n    ```", "```\n    mysql> SELECT entry_time, comment_data FROM nagios_commenthistory ORDER BY entry_time DESC LIMIT 10;\n\n    ```", "```\n    mysql> SELECT COUNT(1) FROM nagios_hoststatus WHERE current_state = 0;\n\n    ```", "```\n    mysql> SELECT display_name FROM nagios_hosts JOIN nagios_hoststatus USING (host_object_id) WHERE scheduled_downtime_depth > 0;\n\n    ```", "```\n    mysql> SELECT nagios_hosts.display_name, COUNT(service_id) FROM nagios_hosts LEFT JOIN nagios_services ON nagios_hosts.host_object_id = nagios_services.host_object_id GROUP BY nagios_hosts.host_object_id;\n\n    ```", "```\n#!/usr/bin/env perl\n\n# Enforce Perl best practices\nuse strict;\nuse warnings;\n\n# Import database modules\nuse DBI;\nuse DBD::mysql;\n\n# Get connection to database\nmy $nagios = DBI->connect(\n    'dbi:mysql:dbname=nagios;host=localhost',\n    'ndo',\n    'mPYxbAYqa'\n) or die \"Could not connect to database\";\n\n# Define an SQL query to run\nmy $query = q{\n    SELECT\n        notification_id, start_time, name1, long_output\n    FROM\n        nagios_notifications\n    JOIN\n        nagios_objects USING (object_id)\n    ORDER BY\n        start_time DESC\n    LIMIT\n        10\n};\n\n# Execute query and retrieve notifications\nmy $notifications = $nagios->selectall_hashref(\n    $query,\n    'notification_id'\n) or die 'Could not retrieve notifications';\n\n# Print each notification\nforeach my $id (keys %{$notifications}) {\n    my $notification = $notifications->{$id};\n    printf {*STDOUT} \"%s - %s: %s\\n\",\n        $notification->{start_time},\n        $notification->{name1},\n        $notification->{long_output};\n}\n\n# Exit successfully\nexit 0;\n```", "```\n$ chmod +x latest-notifications.pl\n$ ./latest-notifications.pl\n2012-10-06 10:11:27 - blog: PING OK - Packet loss = 0%, RTA = 160.31 ms\n2012-10-06 10:48:17 - athens: PING OK - Packet loss = 0%, RTA = 155.82 ms\n2012-10-06 14:08:17 - athens: PING WARNING - Packet loss = 16%, RTA = 171.79 ms\n2012-10-06 14:13:17 - athens: PING OK - Packet loss = 0%, RTA = 164.39 ms\n2012-10-06 10:56:17 - athens: PING CRITICAL - Packet loss = 28%, RTA = 164.65 ms\n2012-10-06 10:38:17 - athens: PING CRITICAL - Packet loss = 28%, RTA = 166.10 ms\n2012-10-06 10:06:27 - blog: PING WARNING - Packet loss = 16%, RTA = 163.72 ms\n2012-10-06 13:39:27 - blog: PING WARNING - Packet loss = 16%, RTA = 163.78 ms\n2012-10-06 13:44:27 - blog: PING OK - Packet loss = 0%, RTA = 167.10 ms\n2012-10-06 13:29:27 - blog: PING CRITICAL - Packet loss = 28%, RTA = 159.55 ms\n\n```", "```\n<?php\n// Get connection to database\n$nagios = new PDO(\n    'mysql:host=localhost;dbname=nagios',\n    'ndo',\n    'mPYxbAYqa'\n);\n// Define an SQL query to run\n$query = '\n    SELECT\n        start_time, name1, long_output\n    FROM\n        nagios_notifications\n    JOIN\n        nagios_objects\n    USING\n        (object_id)\n    ORDER BY\n        start_time DESC\n    LIMIT\n        10\n';\n// Retrieve all the notifications as objects\n$statement = $nagios->prepare($query);\n$statement->setFetchMode(PDO::FETCH_OBJ);\n$statement->execute();\n// Read the notifications into an array\nfor ($notifications = array(); $notification = $statement->fetch(); ) {\n    $notifications[] = $notification;\n}\n// Send an RSS header rather than an HTML one\nheader(\"Content-Type: application/rss+xml; charset=utf-8\");\necho '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n?>\n<rss version=\"2.0\">\n    <channel>\n        <title>\n            Latest Nagios Core Notifications\n        </title>\n        <link>\n            http://olympus.naginet/nagios/\n        </link>\n        <description>\n            The ten most recent notifications from Nagios Core\n        </description>\n<? foreach ($notifications as $notification): ?>\n        <item>\n            <description>\n                <?= htmlspecialchars($notification->name1); ?>: <?= htmlspecialchars($notification->long_output) ?>\n            </description>\n            <pubDate>\n                <?= htmlspecialchars(date('r', strtotime($notification->start_time))) ?>\n            </pubDate>\n        </item>\n<? endforeach; ?>\n    </channel>\n</rss>\n```", "```\n# apt-get install apache2 libapache2-mod-php5 libgd2-xpm libgd2-xpm-dev php5 php5-gd php5-mysql php5-sqlite graphviz sqlite3\n\n```", "```\n# yum install php php-gd php-gettext php-mbstring php-mysql php-pdo php-sqlite php-xml graphviz graphviz-gd graphviz-php\n\n```", "```\n    $ wget http://downloads.sourceforge.net/project/nagvis/NagVis1.7/nagvis-1.7.1.tar.gz\n\n    ```", "```\n    $ tar -xzf nagvis-1.7.1.tar.gz\n    $ cd nagvis-1.7.1\n\n    ```", "```\n    # ./install.sh\n\n    ```", "```\n    -- Checking paths --\n    Please enter the path to the nagios base directory [/usr/local/nagios]:\n     nagios path /usr/local/nagios  found\n    Please enter the path to NagVis base [/usr/local/nagvis]:\n\n    ```", "```\n    -- Checking prerequisites --\n    PHP 5.3                                  found\n     PHP Module: gd 5.3                     found\n     PHP Module: mbstring compiled_in       found\n     PHP Module: gettext compiled_in        found\n     PHP Module: session compiled_in        found\n     PHP Module: xml compiled_in            found\n     PHP Module: pdo compiled_in            found\n     Apache mod_php                         found\n    Graphviz 2.26                            found\n     Graphviz Module dot 2.26.3             found\n     Graphviz Module neato 2.26.3           found\n     Graphviz Module twopi 2.26.3           found\n     Graphviz Module circo 2.26.3           found\n     Graphviz Module fdp 2.26.3             found\n    SQLite 3.7                               found\n\n    ```", "```\n    -- Checking Backends. (Available: mklivestatus,ndo2db,ido2db,merlinmy) --\n    Do you want to use backend mklivestatus? [y]: n\n    Do you want to use backend ndo2db? [n]: y\n    Do you want to use backend ido2db? [n]: n\n    Do you want to use backend merlinmy? [n]: n\n     /usr/local/nagios/bin/ndo2db (ndo2db)  found\n\n    ```", "```\n    -- Trying to detect Apache settings --\n    Please enter the web path to NagVis [/nagvis]:\n    Please enter the name of the web-server user [www-data]:\n    Please enter the name of the web-server group [www-data]:\n    create Apache config file [y]:\n\n    ```", "```\n    -- Summary --\n    NagVis home will be:           /usr/local/nagvis\n    Owner of NagVis files will be: www-data\n    Group of NagVis files will be: www-data\n    Path to Apache config dir is:  /etc/apache2/conf.d\n    Apache config will be created: yes\n    Installation mode:             install\n    Do you really want to continue? [y]:\n\n    ```", "```\n    # apache2ctl configtest\n    # apache2ctl restart\n\n    ```", "```\n    # vi /usr/local/nagvis/etc/nagvis.ini.php\n\n    ```", "```\n    ; hostname for NDO-db\n    dbhost=\"localhost\"\n    ; portname for NDO-db\n    dbport=3306\n    ; database name for NDO-db\n    dbname=\"nagios\"\n    ; username for NDO-db\n    dbuser=\"ndo\"\n    ; password for NDO-db\n    dbpass=\"mPYxbAYqa\"\n    ; prefix for tables in NDO-db\n    dbprefix=\"nagios_\"\n    ; instance name for tables in NDO-db\n    dbinstancename=\"default\"\n    ```"]