["```\n$ dd if=/dev/zero of=junk.data bs=1M count=1\n1+0 records in\n1+0 records out\n1048576 bytes (1.0 MB) copied, 0.00767266 s, 137 MB/s\n\n```", "```\n$ cat A.txt\napple\norange\ngold\nsilver\nsteel\niron\n\n$ cat B.txt\norange\ngold\ncookies\ncarrot\n\n$ sort A.txt -o A.txt ; sort B.txt -o B.txt\n\n```", "```\n        $ comm A.txt B.txt \n apple\n carrot\n cookies\n gold\n iron\n orange\n silver\n steel\n\n```", "```\n        $ comm A.txt B.txt -1 -2\n gold\n orange\n\n```", "```\n        $ comm A.txt B.txt  -3\n apple\n carrot\n cookies\n iron\n silver\n steel\n\n```", "```\n        apple\n carrot\n cookies\n iron\n silver\n steel\n\n```", "```\n        $ comm A.txt B.txt  -3 | tr -d '\\t'\n apple\n carrot\n cookies\n iron\n silver\n steel\n\n```", "```\n                $ comm A.txt B.txt -2 -3\n\n```", "```\n                $ comm A.txt B.txt -1 -3\n\n```", "```\n    $> cat C.txt\n pear\n orange\n silver\n mithral\n\n```", "```\n    $> sort B.txt C.txt | comm - A.txt\n apple\n carrot\n cookies\n gold\n iron\n mithral\n orange\n pear\n silver\n steel\n\n```", "```\n        $ echo \"hello\" > test ; cp test test_copy1 ; cp test test_copy2;\n $ echo \"next\" > other;\n # test_copy1 and test_copy2 are copy of test\n\n```", "```\n        #!/bin/bash \n        #Filename: remove_duplicates.sh \n        #Description: Find and remove duplicate files and \n        # keep one sample of each file.\n        ls -lS --time-style=long-iso | awk 'BEGIN { \n          getline; getline; \n          name1=$8; size=$5 \n        } \n        { \n           name2=$8; \n           if (size==$5) \n        { \n           \"md5sum \"name1 | getline; csum1=$1; \n           \"md5sum \"name2 | getline; csum2=$1; \n           if ( csum1==csum2 ) \n           { \n              print name1; print name2 \n            } \n        }; \n\n        size=$5; name1=name2; \n        }' | sort -u > duplicate_files \n\n         cat duplicate_files | xargs -I {} md5sum {} | \\ \n         sort | uniq -w 32 | awk '{ print $2 }' | \\ \n         sort -u > unique_files \n\n         echo Removing..  \n         comm duplicate_files unique_files -3 | tee /dev/stderr | \\\n               xargs rm \n         echo Removed duplicates files successfully.\n\n```", "```\n        $ ./remove_duplicates.sh\n\n```", "```\n        total 16\n -rw-r--r-- 1 slynux slynux 5 2010-06-29 11:50 other\n -rw-r--r-- 1 slynux slynux 6 2010-06-29 11:50 test\n -rw-r--r-- 1 slynux slynux 6 2010-06-29 11:50 test_copy1\n -rw-r--r-- 1 slynux slynux 6 2010-06-29 11:50 test_copy2\n\n```", "```\n      \"cmd\"| getline\n\n```", "```\n    -rw-r--r-- 1 slynux users  2497  2010-02-28 11:22 bot.py\n drwxr-xr-x 2 slynux users  4096  2010-05-27 14:31 a.py\n -rw-r--r-- 1 slynux users  539   2010-02-10 09:11 cl.pl\n\n```", "```\n    ------rwt , ------rwT\n\n```", "```\n    $ chmod u=rwx g=rw o=r filename\n\n```", "```\n    $ chmod o+x filename\n\n```", "```\n    $ chmod a+x filename\n\n```", "```\n    $ chown user.group filename\n\n```", "```\n    $ chown slynux.users test.sh\n\n```", "```\n    $ chmod a+t directory_name\n\n```", "```\n    $ chmod 777 . -R\n\n```", "```\n    $ chown user.group . -R\n\n```", "```\n    $ chmod +s executable_file\n # chown root.root executable_file\n # chmod +s executable_file\n $ ./executable_file\n\n```", "```\n        # chattr +i file\n\n```", "```\n        rm file\n rm: cannot remove `file': Operation not permitted\n\n```", "```\n        chattr -i file\n\n```", "```\n        $ touch filename\n\n```", "```\n        for name in {1..100}.txt \n        do \n          touch $name \n        done \n\n```", "```\n      $ touch -d \"Fri Jun 25 20:50:14 IST 1999\" filename\n\n```", "```\n        $ ln -s target symbolic_link_name\n\n```", "```\n        $ ln -l -s /var/www/ ~/web\n\n```", "```\n        $ ls -l ~/web\n lrwxrwxrwx 1 slynux slynux 8 2010-06-25 21:34 web -> /var/www\n\n```", "```\n        $ ls -l | grep \"^l\"\n\n```", "```\n        $ find . -type l -print\n\n```", "```\n        $ readlink web\n /var/www\n\n```", "```\n        $ file filename\n\n $ file /etc/passwd\n /etc/passwd: ASCII text\n\n```", "```\n        $ file -b filename\n ASCII text\n\n```", "```\n     #!/bin/bash \n     # Filename: filestat.sh \n\n     if [ $# -ne 1 ]; \n     then \n       echo \"Usage is $0 basepath\"; \n       exit \n     fi \n     path=$1 \n\n     declare -A statarray; \n\n     while read line; \n     do \n       ftype=`file -b \"$line\" | cut -d, -f1` \n       let statarray[\"$ftype\"]++; \n\n     done < (find $path -type f -print) \n\n     echo ============ File types and counts ============= \n     for ftype in \"${!statarray[@]}\"; \n     do \n       echo $ftype :  ${statarray[\"$ftype\"]} \n     done \n\n```", "```\n        $ ./filestat.sh /home/slynux/temp\n\n```", "```\n        $ ./filetype.sh /home/slynux/programs\n ============ File types and counts =============\n Vim swap file : 1\n ELF 32-bit LSB executable : 6\n ASCII text : 2\n ASCII C program text : 10\n\n```", "```\nwhile read line; \ndo something \ndone < filename \n\n```", "```\n    $ file a.out -b\n ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV),\n    dynamically linked (uses shared libs), for GNU/Linux 2.6.15, not\n    stripped\n\n```", "```\n    done <<< \"`find $path -type f -print`\"\n\n```", "```\n        $ dd if=/dev/zero of=loobackfile.img bs=1G count=1\n 1024+0 records in\n 1024+0 records out\n 1073741824 bytes (1.1 GB) copied, 37.3155 s, 28.8 MB/s\n\n```", "```\n        $ mkfs.ext4 loopbackfile.img\n\n```", "```\n        $ file loobackfile.img\n loobackfile.img: Linux rev 1.0 ext4 filesystem data,   \n        UUID=c9d56c42-   \n        f8e6-4cbd-aeab-369d5056660a (extents) (large files) (huge files)\n\n```", "```\n        # mkdir /mnt/loopback\n # mount -o loop loopbackfile.img /mnt/loopback\n\n```", "```\n        # losetup /dev/loop1 loopbackfile.img\n # mount /dev/loop1 /mnt/loopback\n\n```", "```\n        # umount mount_point\n\n```", "```\n        # umount /mnt/loopback\n\n```", "```\n        # umount /dev/loop1\n\n```", "```\n    # losetup /dev/loop1 loopback.img\n # fdisk /dev/loop1\n\n```", "```\n    # losetup -o 32256 /dev/loop2 loopback.img\n\n```", "```\n    # kpartx -v -a diskimage.img \n add map loop0p1 (252:0): 0 114688 linear /dev/loop0 8192\n add map loop0p2 (252:1): 0 15628288 linear /dev/loop0 122880\n\n```", "```\n    # mount /dev/mapper/loop0p1 /mnt/disk1\n\n```", "```\n    # kpartx -d diskimage.img \n loop deleted : /dev/loop0\n\n```", "```\n    # mkdir /mnt/iso\n # mount -o loop linux.iso /mnt/iso\n\n```", "```\n    $ sync\n\n```", "```\n    # cat /dev/cdrom > image.iso\n\n```", "```\n    # dd if=/dev/cdrom of=image.iso\n\n```", "```\n    $ mkisofs -V \"Label\" -o image.iso source_dir/ \n\n```", "```\n    # isohybrid image.iso\n\n```", "```\n    # dd if=image.iso of=/dev/sdb1 \n\n```", "```\n    # cat image.iso >> /dev/sdb1\n\n```", "```\n    # cdrecord -v dev=/dev/cdrom image.iso\n\n```", "```\n -speed SPEED \n\n```", "```\n      # cdrecord -v dev=/dev/cdrom image.iso -speed 8\n\n```", "```\n      # cdrecord -v dev=/dev/cdrom image.iso -multi\n\n```", "```\n    $ eject\n\n```", "```\n    $ eject -t\n\n```", "```\n         this is the original text \n         line2 \n         line3 \n         line4 \n         happy hacking ! \n\n```", "```\n       this is the original text  \n       line2 \n       line4 \n       happy hacking !  \n       GNU is not UNIX \n\n```", "```\n        $ diff version1.txt version2.txt \n 3d2\n <line3\n 6c5\n > GNU is not UNIX\n\n```", "```\n        $ diff -u version1.txt version2.txt\n --- version1.txt  2010-06-27 10:26:54.384884455 +0530 \n +++ version2.txt  2010-06-27 10:27:28.782140889 +0530 \n @@ -1,5 +1,5 @@ \n this is the original text \n line2\n -line3\n line4 \n happy hacking ! \n -\n +GNU is not UNIX\n\n```", "```\n        $ diff -u version1.txt version2.txt > version.patch\n\n```", "```\n        $ patch -p1 version1.txt < version.patch\n patching file version1.txt\n\n```", "```\n        $ patch -p1 version1.txt < version.patch \n patching file version1.txt\n Reversed (or previously applied) patch detected!  Assume -R? [n] y\n #Changes are reverted.\n\n```", "```\n    $ diff -Naur directory1 directory2\n\n```", "```\n        $ head file\n\n```", "```\n        $ cat text | head\n\n```", "```\n        $ head -n 4 file\n\n```", "```\n        $ head -n -M file \n\n```", "```\n        $ seq 11 | head -n -5\n 1\n 2\n 3\n 4\n 5\n 6\n\n```", "```\n      $ seq 100 | head -n 5\n\n```", "```\n      $ tail file\n\n```", "```\n      $ cat text | tail\n\n```", "```\n      $ tail -n 5 file\n\n```", "```\n      $ tail -n +(M+1)\n\n```", "```\n      $ seq 100 | tail -n +6 \n\n```", "```\n    $ tail -f growing_file\n\n```", "```\n    # tail -f /var/log/messages\n\n```", "```\n    $ dmesg | tail -f\n\n```", "```\n    $ PID=$(pidof Foo)\n $ tail -f file --pid $PID\n\n```", "```\n        $ PID=$(pidof gedit)\n $ tail -f file.txt --pid $PID\n\n```", "```\n        $ ls -d */\n\n```", "```\n        $ ls -F | grep \"/$\"\n\n```", "```\n        $ ls -l | grep \"^d\"\n\n```", "```\n         $ find . -type d -maxdepth 1 -print\n\n```", "```\n        ~ $ pushd /var/www\n\n```", "```\n        /var/www $ pushd /usr/src\n\n```", "```\n        $ dirs\n /usr/src /var/www ~ /usr/share /etc\n 0           1              2  3              4 \n\n```", "```\n        $ pushd +3\n\n```", "```\n        $ popd\n\n```", "```\n    /var/www $  cd /usr/src\n/usr/src $ # do something\n\n```", "```\n    /usr/src $ cd -\n\n```", "```\n    /var/www $ cd -\n\n```", "```\n      $ wc -l file\n\n```", "```\n      $ cat file | wc -l\n\n```", "```\n      $ wc -w file\n $ cat file | wc -w\n\n```", "```\n      $ wc -c file\n $ cat file | wc -c\n\n```", "```\n      echo -n 1234 | wc -c\n 4\n\n```", "```\n      $ wc file\n 1435   15763  112200\n\n```", "```\n      $ wc file -L\n 205\n\n```", "```\n    $ tree ~/unixfs\n unixfs/\n |-- bin\n |   |-- cat\n |   `-- ls\n |-- etc\n |   `-- passwd\n |-- home\n |   |-- pactpub\n |   |   |-- automate.sh\n |   |   `-- schedule\n |   `-- slynux\n |-- opt\n |-- tmp\n `-- usr\n 8 directories, 5 files\n\n```", "```\n      $ tree path -P PATTERN # Pattern should be wildcard in single    \n      quotes\n\n```", "```\n      $ tree PATH -P '*.sh' # Replace PATH with a directory path\n |-- home\n |   |-- packtpub\n |   |   `-- automate.sh\n\n```", "```\n      $ tree path -I PATTERN\n\n```", "```\n      $ tree -h\n\n```", "```\n    $ tree PATH -H http://localhost -o out.html\n\n```", "```\nffmpeg -i FILE.mp4 -acodec libmp3lame OUTPUTFILE.mp3\n\n```", "```\n$ cat stills2mpg.sh\necho $* | tr ' ' '\\n' >files.txt mencoder mf://@files.txt -mf fps=24 -ovc lavc \\ -lavcopts vcodec=msmpeg4v2 -noskip -o movie.mpg\n\n```", "```\n./stills2mpg.sh file1.jpg file2.jpg file3.jpg ...\n\n```", "```\n./stills2mpg.sh *.jpg\n\n```", "```\n$> makePan.sh\n# Invoke as: \n# sh makePan.sh OriginalImage.jpg prefix width height xoffset yoffset # Clean out any old data\nrm -f tmpFiles\n# Create 200 still images, stepping through the original xoffset and yoffset\n# pixels at a time\nfor o in `seq 1 200`\n do\n x=$[ $o+$5 ]\n convert -extract $3x$4+$x+$6 $1 $2_$x.jpg\n echo $2_$x.jpg >> tmpFiles\ndone\n#Stitch together the image files into a mpg video file\nmencoder mf://@tmpFiles -mf fps=30 -ovc lavc -lavcopts \\  \n        vcodec=msmpeg4v2 -noskip -o $2.mpg\n\n```"]