- en: Chapter 3. Installing an Operating System
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章 安装操作系统
- en: Having a Cubieboard is only useful if you can actually use it and eventually
    develop and/or play with it. The preinstalled OS might or might not be adequate
    for this. Very often, Android is preinstalled on these devices, as the SoC used
    is usually found in Android devices, and the manufacturer mostly or only supports
    it. While BSD or Minix are also operating systems that are being developed by
    various developers, this book will limit itself to Linux as an operating system.
    The first few sections of this chapter will dig a little deeper into the concepts
    for educational purposes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有一个Cubieboard只有在你能够实际使用并最终开发和/或玩弄它时才有意义。预装的操作系统可能足够，也可能不够。通常，这些设备上预装的是Android，因为所使用的SoC通常出现在Android设备中，且制造商大多或仅支持它。虽然BSD或Minix也是由不同开发者开发的操作系统，但本书将仅限于Linux作为操作系统。本章的前几节将为教育目的深入探讨相关概念。
- en: 'This chapter will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Finding out where the SoC chip decides to boot from
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找出SoC芯片决定从哪个地方启动
- en: The difference between an OS image and a clean install
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统镜像与干净安装的区别
- en: Downloading and installing Fedora
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并安装Fedora
- en: Booting the freshly installed OS from an SD card
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从SD卡启动新安装的操作系统
- en: The basic concepts on using Fedora and connecting to a wired network
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Fedora并连接有线网络的基本概念
- en: Maintaining Fedora via the Package Manager
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过软件包管理器维护Fedora
- en: Booting the Cubieboard
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动Cubieboard
- en: While it might seem natural that the system simply boots, there is a lot more
    to it. The Allwinner series of SoCs has something called a **Boot Read Only Memory**
    (**BROM**). The BROM is really a small program embedded into the chip itself that
    always gets executed first. This program has a few drivers for a minimal set of
    hardware to ensure that it is small and simple.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管看起来系统只是简单地启动了，但实际情况远不止如此。Allwinner系列的SoC有一个叫做**Boot Read Only Memory**（**BROM**）的东西。BROM实际上是一个嵌入到芯片中的小程序，它总是首先执行。这个程序包含了一些驱动程序，用于支持最小集的硬件，以确保其小巧简洁。
- en: First, the BROM will try to find a valid bootloader on the first SD card, also
    called the MMC slot. If nothing is found there, the NAND is checked for a valid
    bootloader. Again, if nothing is found there, the second MMC slot is checked.
    If nothing is found there either, the first SPI bus is probed for an SPI memory
    flash chip and checked for a valid bootloader. Finally, if all of the preceding
    methods fail, the FEL mode is entered. The FEL mode is a recovery mode where it
    is possible to upload a piece of code over a USB connection and execute it. This
    can be useful to recover a board when it fails to boot and the first MMC slot
    is not available to boot from. The FEL mode does not have to be initiated. One
    might wonder why two MMC slots are being probed. Sometimes, manufacturers include
    an embedded MMC chip, or eMMC, in their design, which unlike an SD or MMC card
    looks like a regular chip, similar to a NAND flash chip, but behaves and looks
    like an MMC card. By probing the two MMC slots, you can have a board that uses
    an eMMC chip on the board while still having the first MMC slot available for
    use cases such as boot recovery. The Cubietruck is available with various combinations
    of these storage options.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，BROM会尝试在第一个SD卡中查找有效的引导加载程序，这个SD卡也叫做MMC插槽。如果那里没有找到有效的引导加载程序，就会检查NAND是否有有效的引导加载程序。同样，如果那里也没有找到，就会检查第二个MMC插槽。如果那里也没有找到，则会探测第一个SPI总线是否有SPI内存闪存芯片，并检查是否有有效的引导加载程序。最后，如果前面的所有方法都失败了，就会进入FEL模式。FEL模式是一种恢复模式，可以通过USB连接上传一段代码并执行它。这对于在启动失败且第一个MMC插槽无法启动时恢复板子非常有用。FEL模式不需要手动启动。有人可能会疑惑为什么要探测两个MMC插槽。有时，制造商会在设计中集成一个嵌入式MMC芯片，或者eMMC，它与SD或MMC卡不同，外观看起来像常规芯片，类似于NAND闪存芯片，但行为和外观像MMC卡。通过探测两个MMC插槽，可以使板子使用eMMC芯片，同时仍然有第一个MMC插槽可供像启动恢复这样的用例使用。Cubietruck有多种这些存储选项的组合。
- en: OS image installation background
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作系统镜像安装背景
- en: Many sites and forums on the Internet speak of firmware or ROMs when talking
    about an installation for an embedded device. It all sounds very mysterious initially,
    but this is far from the truth. A ROM is nothing more than a full disk image,
    which, in turn, can be written to storage, which the board can boot from. The
    name *ROM* is derived from the fact that the data used to be stored in a ROM chip.
    Many of the OS images that can be found for Allwinner development boards are tailored
    to a very specific board. This is not surprising, as the chip used might be the
    same on a range of boards, but certain attached peripherals might be completely
    different; one board may have different memory chips for example. Another board
    might not have an onboard flash and rely completely on the secondary MMC slot
    for its OS. It is almost impossible to have a single disk image that works on
    all these different combinations of hardware, and thus a clean installation sounds
    like quite a sensible approach. While distributions are slowly starting to support
    the ARM-based systems, it is still not easy to have a common installer that can
    install the distribution to any ARM-based board. To bridge these worlds, a few
    linux-sunxi community members and Red Hat employees have developed a hybrid installation
    of Fedora, where a generic image is downloaded, configured, and finally launched
    in the installer.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 许多网站和论坛在讨论嵌入式设备的安装时会提到固件或ROM。这一切听起来一开始非常神秘，但事实远非如此。ROM不过是一个完整的磁盘映像，而这个映像可以写入存储设备，板子可以从中启动。*ROM*这个名称来源于数据曾经存储在ROM芯片中的事实。许多为Allwinner开发板提供的操作系统镜像都针对非常特定的开发板量身定制。这并不令人惊讶，因为所使用的芯片可能在多个开发板中是相同的，但某些附加外设可能完全不同；例如，一个开发板可能使用不同的内存芯片。另一个开发板可能没有板载闪存，完全依赖于第二个MMC槽来存储操作系统。几乎不可能有一个单一的磁盘镜像能够适用于所有这些不同硬件组合，因此干净的安装看起来是一个相当合理的方式。虽然一些发行版正在慢慢开始支持基于ARM的系统，但要有一个通用的安装程序能够安装到任何基于ARM的开发板上，仍然并不容易。为了连接这些世界，少数linux-sunxi社区成员和Red
    Hat员工开发了一种混合安装方案，Fedora的这个版本可以下载、配置，最后在安装程序中启动。
- en: Getting and preparing Fedora
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取和准备Fedora
- en: There have been several releases of Fedora for the A10, A10S, A13, and A20 series
    of SoCs. As this book focuses on the most recent version, Fedora 20-r1, the latest
    version is recommended. Additionally, if fails, Fedora 20-r1 can be written to
    an SD card, which can be used as a recovery boot disk. The first step in this
    endeavor is to download this disk image. About 2 GB of free disk space is required.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Fedora已经为A10、A10S、A13和A20系列的SoC发布了多个版本。由于本书重点介绍的是最新版本，Fedora 20-r1，因此推荐使用最新版本。另外，如果失败了，可以将Fedora
    20-r1写入SD卡，这张卡可以作为恢复启动盘。此项工作的第一步是下载该磁盘镜像。大约需要2 GB的空闲磁盘空间。
- en: Fedora for this chapter can be downloaded from the Packt Publishing website
    in the **Help & Support** section of the book's **Support** page.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的Fedora可以从Packt Publishing网站的本书**支持**页面中的**帮助与支持**部分下载。
- en: The next few steps assume that there is a Linux computer available. If this
    is not the case, the preinstalled OS on the Cubieboard can also be used; while
    a little bit trickier, it should be quite possible. If the preinstalled OS is
    Android, then a terminal application will be required that might not be installed.
    Do note that on Mac OSX, the device path names will be different. Finally, a virtual
    machine can also be used, but a detailed explanation of that is out of the scope
    of this book.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几个步骤假设你有一台Linux电脑。如果没有的话，也可以使用Cubieboard上预装的操作系统；虽然稍微复杂一点，但应该完全可以实现。如果预装的操作系统是Android，则需要一个可能未安装的终端应用程序。需要注意的是，在Mac
    OSX上，设备路径名会有所不同。最后，也可以使用虚拟机，但对虚拟机的详细说明超出了本书的范围。
- en: Tip
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Mac OSX uses device nodes that are similar to Linux but slightly different.
    For example, the second partition on an inserted USB stick can be called at `/dev/sdb2`
    on Linux, where on OSX however, this would translate to `/dev/disk2s2`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Mac OSX使用的设备节点与Linux类似，但略有不同。例如，插入的USB闪存驱动器的第二个分区在Linux中通常会显示为`/dev/sdb2`，而在OSX中则会显示为`/dev/disk2s2`。
- en: Writing the OS image to the SD card
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将操作系统镜像写入SD卡
- en: First, the image needs to be written to a microSD card that is at least 4 GiB
    in size.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，镜像需要写入一个至少4 GiB大小的microSD卡。
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The next few steps will delete all the content on the SD card.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几个步骤将删除SD卡上的所有内容。
- en: The microSD card should be connected to the PC. If there is no card reader available,
    a USB to microSD card reader can be used instead. The `xzcat` command is used
    to decompress the downloaded `xz-compressed` archive onto the SD card.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: microSD 卡应连接到 PC。如果没有读卡器，可以使用 USB 转 microSD 读卡器。`xzcat` 命令用于将下载的 `xz-compressed`
    压缩包解压到 SD 卡上。
- en: 'In the following example, it is assumed that the microSD card is inserted into
    a USB card reader and has been assigned the device node, `/dev/sdd`. It is up
    to the reader to determine the proper device node on the system, but `dmesg` or
    one of the installed graphical disk utilities can provide an answer here. An example
    output with the SD card found on the device node `/dev/sdd` is as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，假设 microSD 卡已插入 USB 卡读卡器，并已分配设备节点 `/dev/sdd`。设备节点的确定需要由读者自行判断，但可以通过 `dmesg`
    或其中一个已安装的图形磁盘工具来获得答案。以下是一个示例输出，显示 SD 卡在设备节点 `/dev/sdd` 上找到：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This command might require root privileges; to do so, prefix `dmesg` with `sudo`.
    The filename used here should match the file downloaded. A cache-flush via the
    `sync` command is forced upon successful completion. Flushing the cache is important
    so that we know all the data that has actually been written to the SD card and
    it is not held up in the cache. This process might take quite a while—10 minutes
    is commonly reported commonly reported. The following command is an example of
    writing the image to an SD card and flushing the cache:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令可能需要 root 权限；为此，请在 `dmesg` 前加上 `sudo`。此处使用的文件名应与下载的文件匹配。成功完成后，将强制执行 `sync`
    命令进行缓存刷新。刷新缓存很重要，这样我们才能确保所有数据都已实际写入 SD 卡，而不会停留在缓存中。这个过程可能会花费相当长的时间——通常需要 10 分钟。以下命令是一个示例，演示如何将镜像写入
    SD 卡并刷新缓存：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Writing the OS image should be possible on Linux, OSX, the BSDs, Solaris, and
    many modern POSIX-based systems. On Windows, a little more care is required. A
    program such as 7-Zip can be used to decompress the image, and an image writer
    such as WinDD can be used instead.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux、OSX、BSD、Solaris 以及许多现代 POSIX 系统上，应该能够编写操作系统镜像。在 Windows 上，则需要稍加注意。可以使用如
    7-Zip 之类的程序来解压镜像，使用像 WinDD 这样的镜像写入工具来代替。
- en: When done, remove the USB device and reinsert it to force re-reading of the
    SD card's partition table. Opening a file manager will, in most cases, show the
    newly created partitions on the SD card, one named `u-boot` and the other `rootfs`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，拔出 USB 设备并重新插入，以强制重新读取 SD 卡的分区表。在大多数情况下，打开文件管理器将显示 SD 卡上新创建的分区，一个名为 `u-boot`，另一个名为
    `rootfs`。
- en: Writing the bootloader
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写引导加载程序
- en: 'The bootloader is very device-specific and can even vary between production
    runs of the same board. This is because the memory initialization is performed
    by the bootloader and thus can be different. To do this, a setup script is preinstalled
    in addition to several bootloaders and several kernels for the various generations
    of SoCs. This script needs to be executed from the partition labeled `u-boot`
    on the microSD card. If the currently running OS mounts the partitions automatically,
    the `mount` command can be used to find the mount point, as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 引导加载程序是非常特定于设备的，甚至在同一板卡的生产批次之间也可能有所不同。这是因为内存初始化由引导加载程序执行，因此可能有所不同。为此，除了多个引导加载程序和多个内核外，设置脚本会预安装在不同代
    SoC 的系统上。此脚本需要从 microSD 卡上的 `u-boot` 分区执行。如果当前操作系统自动挂载分区，可以使用 `mount` 命令来查找挂载点，如下所示：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the preceding example, the microSD card is mounted on `/media/u-boot`, and
    the setup script should be run from there. This path should be adjusted as needed.
    The following is an example showing a sample output of the available boards. The
    bootloader is being installed using the Cubietruck. It may be required to prefix
    the command with `bash` to force `bash` to execute the script.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，microSD 卡挂载在 `/media/u-boot`，设置脚本应从那里运行。此路径应根据需要进行调整。以下是一个示例，显示可用板卡的示例输出。引导加载程序正在使用
    Cubietruck 安装。可能需要在命令前加上 `bash`，以强制 `bash` 执行脚本。
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If no Linux system is available, the setup script should be able to run from
    within the native Android. However, an ADB or a terminal application will be required.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有可用的 Linux 系统，设置脚本应能够在原生 Android 环境中运行。但是，这需要 ADB 或终端应用程序的支持。
- en: 'This will now provide a list of supported boards. Find the exact board being
    used, and run the command again with the selected board as the parameter. Note
    that only a small selection will be displayed, as shown in the following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这将提供一个受支持板卡的列表。找到正在使用的确切板卡，并使用所选板卡作为参数再次运行命令。注意，只会显示一个小范围的选项，如下图所示：
- en: '![Writing the bootloader](img/1572OS_03_01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![写入引导加载程序](img/1572OS_03_01.jpg)'
- en: 'After setting up the board, unmount the microSD card followed by a sync to
    ensure all the data is written properly. Let us take a look at the following command:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 设置好板卡后，卸载microSD卡并进行同步，以确保所有数据已正确写入。让我们看一下以下命令：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Depending on the environment that this script is being run on, a graphical
    version can be launched instead; the idea, however, is identical: choose the correct
    board and the script will write the image to the correct place.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 根据运行此脚本的环境，可以启动图形版本；然而，思路是相同的：选择正确的板卡，脚本会将镜像写入正确的位置。
- en: Finishing the operating system installation
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 完成操作系统安装
- en: 'Connect a monitor, USB keyboard, and USB mouse, and insert the microSD card
    into the Cubieboard. Each board has a default output configured upon the first
    boot. For many headless boards, this will be the HDMI port. For tablets or systems
    with LCD screens, it will be the LCD screen. While not strictly required, connecting
    the UART, as mentioned in the previous chapter, can be helpful in case things
    go wrong, as shown in the following screenshot:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 连接显示器、USB键盘和USB鼠标，并将microSD卡插入Cubieboard。每个板卡在第一次启动时都有默认的输出配置。对于许多无头板卡，这将是HDMI端口。对于带有LCD屏幕的平板或系统，这将是LCD屏幕。虽然并非严格要求，但连接UART，如前一章所述，可能会有帮助，以防出现问题，如下图所示：
- en: '![Finishing the operating system installation](img/1572OS_03_02.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![完成操作系统安装](img/1572OS_03_02.jpg)'
- en: 'Applying power will boot the device, and after a few minutes and a few intentional
    reboots to resize the partition on the SD card, the Fedora installer should pop
    up. If there is no output on the monitor, refer to [Appendix D](apd.html "Appendix D. Troubleshooting
    the Common Pitfalls"), *Troubleshooting the Common Pitfalls*. Also, refer to the
    following screenshot to see Fedora''s first graphical installer screen:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 施加电源将启动设备，经过几分钟以及几次有意的重启来调整SD卡上的分区大小后，Fedora安装程序应该会弹出。如果显示器没有输出，参见[附录 D](apd.html
    "附录 D. 排除常见问题"), *排除常见问题*。此外，参见以下截图查看Fedora的第一个图形化安装界面：
- en: '![Finishing the operating system installation](img/1572OS_03_03.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![完成操作系统安装](img/1572OS_03_03.jpg)'
- en: 'If a mouse or, at least, a keyboard is connected, various parameters for the
    system can be set up. Verify that at least the time zone is correct, and set up
    a password for the root user. Also, a new user should be created for regular use
    of the system, as shown in the following screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果连接了鼠标，或者至少连接了键盘，可以设置系统的各种参数。验证时区是否正确，并为root用户设置密码。此外，应为常规使用创建一个新用户，如下图所示：
- en: '![Finishing the operating system installation](img/1572OS_03_04.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![完成操作系统安装](img/1572OS_03_04.jpg)'
- en: 'After creating a user and finishing the installation and a short reboot, a
    login screen should appear, allowing the newly created user to log in. It is now
    possible to log in to the desktop, as you can see in the following screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建用户并完成安装及短暂重启后，应该会出现登录屏幕，允许新创建的用户登录。现在可以登录到桌面，如下图所示：
- en: '![Finishing the operating system installation](img/1572OS_03_05.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![完成操作系统安装](img/1572OS_03_05.jpg)'
- en: 'The desktop environment that will be encountered is called **Xfce4**, where
    the letters only have a historic meaning, and the number indicates the version.
    Version 4 has been in active development since 2003\. Xfce4 is a very lightweight
    desktop environment and is the default for Fedora on ARM to keep the strain light
    on the available system resources. Xfce4 might ask the new user a question or
    two on how the desktop should appear, but the default settings should work fine
    and were used in this example as well. Feel free to explore this new desktop,
    launch some applications, or just browse the Internet. Refer to the following
    screenshot to see the default desktop:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 将要遇到的桌面环境称为**Xfce4**，其中字母仅具有历史意义，数字表示版本号。版本4自2003年以来一直在积极开发。Xfce4是一个非常轻量级的桌面环境，并且是Fedora在ARM架构上的默认桌面环境，以便在系统资源有限的情况下保持较轻的负担。Xfce4可能会向新用户询问几个关于桌面外观的问题，但默认设置通常能够正常工作，并且在本示例中也使用了这些设置。可以随意探索这个新的桌面，启动一些应用程序，或者只是浏览互联网。请参见以下截图查看默认桌面：
- en: '![Finishing the operating system installation](img/1572OS_03_06.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![完成操作系统安装](img/1572OS_03_06.jpg)'
- en: Precautionary measures for installing updates
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装更新的预防措施
- en: While there is a perfectly usable desktop environment now, one of the very common
    tasks is to keep the OS up-to-date and thus secure. Fedora comes with a graphical
    frontend to the Yum command-line tool called **Yum Extender**. Before going there,
    however, a warning needs to be issued. At this point, Fedora, like all other distributions,
    does not officially support the Allwinner range of SoCs. This has one major drawback
    when updating the OS. The updater, be it Yum or Yum Extender, will also try to
    update the kernel and bootloader configuration.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然现在有一个完全可用的桌面环境，但其中一个非常常见的任务是保持操作系统的最新和安全。Fedora配备了Yum命令行工具的图形化前端，称为**Yum Extender**。然而，在使用它之前，需要发出一个警告。此时，Fedora和所有其他发行版一样，并不正式支持Allwinner系列的SoC。这在更新操作系统时有一个主要的缺点。更新工具，无论是Yum还是Yum
    Extender，都将尝试更新内核和引导加载器配置。
- en: 'At the time of writing this book, the Fedora 20-r1 release will try to update
    the kernel and bootloader configuration, causing an unbootable device. However,
    it can easily be fixed by inserting the SD card into a working system and running
    the `select-device.sh` script as before. To prevent this corruption, edit the
    file at the `/etc/yum.conf` location, and add the following line to that file,
    which will force Yum to ignore any kernel updates:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写本书时，Fedora 20-r1版本将尝试更新内核和引导加载器配置，导致设备无法启动。然而，通过将SD卡插入一个正常工作的系统并像以前一样运行`select-device.sh`脚本，这个问题可以很容易地解决。为了防止这种损坏，编辑`/etc/yum.conf`位置的文件，并向该文件添加以下行，强制Yum忽略任何内核更新：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The kernel exclusion should be added to any recent release of Fedora because
    it might not be applicable to the later versions.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 应该在Fedora的任何新版本中添加内核排除，因为它可能不适用于后续版本。
- en: Tip
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Since the kernel and bootloader live in their own partition, not having the
    `u-boot` partition mounted can avoid the need to update the bootloader and kernel.
    In the next chapter, the reader will be able to edit his/her `fstab` file without
    any difficulty.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由于内核和引导加载器存在于各自的分区中，因此未挂载`u-boot`分区可以避免需要更新引导加载器和内核。在下一章中，读者将能够轻松编辑其`fstab`文件。
- en: Maintaining the OS and installing updates
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维护操作系统并安装更新
- en: 'As mentioned before, the Yum Extender can be used conveniently from the GUI
    to update the system or install new packages. The Yum Extender can be found under
    the **Administration** tab in **Applications Menu**, as shown in the following
    screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，可以方便地通过图形用户界面使用Yum Extender来更新系统或安装新软件包。Yum Extender可以在**应用程序菜单**的**管理**标签下找到，如下图所示：
- en: '![Maintaining the OS and installing updates](img/1572OS_03_07.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![维护操作系统并安装更新](img/1572OS_03_07.jpg)'
- en: 'As the Yum Extender is an administrator''s application, the current user will
    have to authorize its use. Assuming this, the user will be granted administrative
    privileges. The first user of the system will have these privileges. Refer to
    the following screenshot for a view of **Yum Extender**:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Yum Extender是一个管理员应用程序，因此当前用户需要授权其使用。假设这一点，用户将获得管理员权限。系统的第一个用户将拥有这些权限。请参见以下截图查看**Yum
    Extender**：
- en: '![Maintaining the OS and installing updates](img/1572OS_03_08.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![维护操作系统并安装更新](img/1572OS_03_08.jpg)'
- en: Clicking on the **Select All** button followed by **Apply** will start installing
    all the new updates to the system. Depending on the `speed` class of the SD card,
    this can take a long time. While preparing the illustrations for this chapter
    on an 8 GB class 4 SD card, the process took 5 minutes short of 6 hours. Thus,
    it is recommended to use at least a class 10 or a better SD card. While using
    the OS, a class 4 card, even though slow, is usable however.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**全选**按钮，然后点击**应用**将开始安装所有新的系统更新。根据 SD 卡的`速度`等级，这个过程可能需要很长时间。在为本章准备插图时，我使用的是一个
    8GB 4 类 SD 卡，整个过程花费了 5 分钟少于 6 小时。因此，建议使用至少 10 类或更高级别的 SD 卡。虽然 4 类卡比较慢，但在使用操作系统时仍然是可以用的。
- en: Tip
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It might be wise to hold out updating the SD card for a Friday evening, for
    example, where the process can take all weekend without bothering anybody.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 比如，你可以考虑在周五晚上更新 SD 卡，因为这个过程可能会占用整个周末时间而不会打扰到任何人。
- en: If a warning, as illustrated in the following screenshot, appears during the
    update process, it is safe to accept it. It is a notification to import a missing
    GPG key. In this case, it was sanctioned by the Fedora project as can be seen
    in the e-mail address used. This message may come up early in the update process,
    in the first 10 minutes or so.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在更新过程中出现如下截图所示的警告，接受它是安全的。这是一个导入缺失 GPG 密钥的通知。在这种情况下，它已经得到了 Fedora 项目的批准，正如可以从所用电子邮件地址看到的那样。这个消息可能会在更新过程的前
    10 分钟左右出现。
- en: '![Maintaining the OS and installing updates](img/1572OS_03_09.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![维护操作系统和安装更新](img/1572OS_03_09.jpg)'
- en: Adding more software to the OS
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向操作系统添加更多软件
- en: Installing additional software is very easy thanks to Package Managers that
    have been present in Linux distributions for years. The Yum Extender can not only
    be used to update the OS, but also to add new software to the system, as seen
    in the following screenshot, which demonstrates Firefox being installed. Optionally,
    the command-line version, yum, can be used instead.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Linux 发行版中的软件包管理器已经存在多年，安装额外的软件变得非常容易。Yum Extender 不仅可以用于更新操作系统，还可以向系统中添加新软件，正如下图所示，这里演示了安装
    Firefox。你也可以选择使用命令行版本的 yum。
- en: '![Adding more software to the OS](img/1572OS_03_10.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![向操作系统添加更多软件](img/1572OS_03_10.jpg)'
- en: Summary
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Having gone through this chapter, you should have no problem creating a fresh
    SD card with a full Xfce4-based Fedora operating system. Also, keeping it up-to-date
    and adding new software should not be a problem at all. All thanks to a hybrid-disk
    image of Fedora!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本章内容后，你应该能够顺利创建一个全新的基于 Xfce4 的 Fedora 操作系统 SD 卡。此外，保持系统更新和添加新软件也不会有问题。这一切要归功于
    Fedora 的混合磁盘映像！
- en: The next chapter will do an installation in a more in-depth fashion manually
    and focus more on a command line-based interface, as this is often used on server
    setups, embedded systems, and so on. An entire installation will be performed
    manually from scratch to learn how to create a customized system.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将更深入地手动安装操作系统，并重点介绍基于命令行的界面，因为它通常用于服务器设置、嵌入式系统等。整个安装过程将从零开始进行，以学习如何创建定制化的系统。
