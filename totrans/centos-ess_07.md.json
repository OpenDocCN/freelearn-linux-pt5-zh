["```\n$ cd coreos-essentials-book/chapter7/Production_Cluster\n$ ls\ncloud-config \ncreate_cluster_workers.sh \nfleet \nfiles \ncreate_cluster_control.sh \ninstall_fleetctl_and_scripts.sh\nsettings\n\n```", "```\n    $ ./create_cluster_control.sh\n\n    ```", "```\n    $ ./create_cluster_workers.sh\n\n    ```", "```\n    $ ./install_fleetctl_and_scripts.sh\n\n    ```", "```\n    $ cd ~/coreos-prod-gce/bin\n    $ ./set_cluster_access.sh\n\n    ```", "```\n$ cd ~/coreos-prod-gce/fleet\n$ fleetctl start website1.service\n\n```", "```\n$ cd coreos-essentials-book/chapter7/Test_Staging_Cluster/\n$ ./install_website1_2_dbuilder.sh\n\n```", "```\n    $ cat Dockerfile:\n    FROM nginx:latest\n    ## add website code\n    ADD website1 /usr/share/nginx/html\n    EXPOSE 80\n\n    ```", "```\n    $ cat build.sh\n    docker build --rm -t 10.200.4.1:5000/website1 .\n\n    ```", "```\n    $ cat push.sh\n    docker push 10.200.4.1:5000/website1\n\n    ```", "```\n$ cd ~/coreos-prod-gce\n\n```", "```\n$ ./deploy_2_production_website1.sh\n\n```", "```\n$ cat deploy_2_production_website1.sh\n#!/bin/bash\n# Build docker container for website1\n# and release it\n\nfunction pause(){\nread -p \"$*\"\n}\n\n# Test/Staging cluster\n## Fetch GC settings\n# project and zone\nproject=$(cat ~/coreos-tsc-gce/settings | grep project= | head -1 | cut -f2 -d\"=\")\nzone=$(cat ~/coreos-tsc-gce/settings | grep zone= | head -1 | cut -f2 -d\"=\")\ncbuilder1=$(gcloud compute instances list --project=$project | grep -v grep | grep tsc-registry-cbuilder1 | awk {'print $5'})\n\n# create a folder on docker builder\necho \"Entering dbuilder docker container\"\nssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  core@$cbuilder1 \"/usr/bin/docker exec docker-builder /bin/bash -c 'sudo mkdir -p /data/website1 && sudo chmod -R 777 /data/website1'\"\n\n# sync files from staging to docker builder\necho \"Deploying code to docker builder server !!!\"\nssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no core@$cbuilder1 '/usr/bin/docker exec docker-builder rsync -e \"ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\" -avzW --delete core@10.200.3.1:/home/core/share/nginx/html/ /data/website1'\n# change folder permisions to 755\nssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  core@$cbuilder1 \"/usr/bin/docker exec docker-builder /bin/bash -c 'sudo chmod -R 755 /data/website1'\"\n\necho \"Build new docker image and push to registry!!!\"\nssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no core@$cbuilder1 \"/usr/bin/docker exec docker-builder /bin/bash -c 'cd /data && ./build.sh && ./push.sh'\"\n##\n\n# Production cluster\n## Fetch GC settings\n# project and zone\nproject2=$(cat ~/coreos-prod-gce/settings | grep project= | head -1 | cut -f2 -d\"=\")\n\n# Get servers IPs\ncontrol1=$(gcloud compute instances list --project=$project2 | grep -v grep | grep prod-control1 | awk {'print $5'})\nweb1=$(gcloud compute instances list --project=$project2 | grep -v grep | grep prod-web1 | awk {'print $5'})\nweb2=$(gcloud compute instances list --project=$project2 | grep -v grep | grep prod-web2 | awk {'print $5'})\n\necho \"Pull new docker image on web1\"\nssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no core@$web1 docker pull 10.200.4.1:5000/website1\necho \"Pull new docker image on web2\"\nssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no core@$web2 docker pull 10.200.4.1:5000/website1\n\necho \"Restart fleet unit\"\n# restart fleet unit\nssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no core@$control1 fleetctl stop website1.service\nssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no core@$control1 fleetctl start website1.service\n#\nsleep 5\necho \" \"\necho \"List Production cluster fleet units\"\nssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no core@$control1 fleetctl list-units\n\necho \" \"\necho \"Finished !!!\"\npause 'Press [Enter] key to continue...'\n\n```"]