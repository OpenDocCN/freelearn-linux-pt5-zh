["```\n$ ps\nPID TTY       TIME CMD\n1220 pts/0    00:00:00 bash\n1242 pts/0    00:00:00 ps\n\n```", "```\n$ ps -f\nUID        PID  PPID  C STIME TTY          TIME CMD\nslynux    1220  1219  0 18:18 pts/0    00:00:00 -bash\nslynux    1587  1220  0 18:59 pts/0    00:00:00 ps -f\n\n```", "```\n$ ps -e | head -5\nPID TTY    TIME CMD\n1 ?        00:00:00 init\n2 ?        00:00:00 kthreadd\n3 ?        00:00:00 migration/0\n4 ?        00:00:00 ksoftirqd/0\n\n```", "```\n$ ps -eo comm,pcpu | head -5\nCOMMAND          %CPU\ninit             0.0\nkthreadd         0.0\nmigration/0      0.0\nksoftirqd/0      0.0\n\n```", "```\n$ ps e\n\n```", "```\n$ ps -eo pid,cmd  e | tail -n 1\n1238 -bash USER=slynux LOGNAME=slynux HOME=/home/slynux PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nMAIL=/var/mail/slynux SHELL=/bin/bash SSH_CLIENT=10.211.55.2 49277 22 SSH_CONNECTION=10.211.55.2 49277 10.211.55.4 22 SSH_TTY=/dev/pts/0 \n\n```", "```\n00 10 * * * /usr/bin/windowapp\n\n```", "```\n00 10 * * * DISPLAY=:0 /usr/bin/windowapp\n\n```", "```\nDISPLAY=0\n00 10 * * * /usr/bin/windowapp\n\n```", "```\n$ ps -u clif f | grep -A2 xterm | head -3\n15281  ?      S     0:00 xterm \n15284 pts/20  Ss+   0:00 \\_ bash\n15286 pts/20  S+    0:18 \\_ ssh 192.168.1.2\n\n```", "```\n$ ps [OPTIONS] --sort -paramter1,+parameter2,parameter3..\n\n```", "```\n$ ps -eo comm,pcpu --sort -pcpu | head -5\nCOMMAND         %CPU\nXorg             0.1\nhald-addon-stor  0.0\nata/0            0.0\nscsi_eh_0        0.0\n\n```", "```\n$ ps -eo comm,pid,pcpu,pmem | grep bash\nbash             1255  0.0  0.3\nbash             1680  5.5  0.3\n\n```", "```\n # display user and percent cpu usage for processes with real user\n # and effective user of root\n $ ps -u root -U root -o user,pcpu\n\n```", "```\n $ ps -t TTY1, TTY2 ..\n\n```", "```\n $ ps -t pts/0,pts/1\n PID TTY          TIME CMD\n 1238 pts/0    00:00:00 bash\n 1835 pts/1    00:00:00 bash\n 1864 pts/0    00:00:00 ps\n\n```", "```\n $ ps -Lf\n UID  PID  PPID  LWP  C  NLWP  STIME  TTY  TIME     \n        CMD\n user 1611 1     1612 0  2     Jan16  ?    00:00:00    \n        /usr/lib/gvfs/gvfsd\n\n```", "```\n$ ps -eLf --sort -nlwp | head -5\nUID        PID  PPID   LWP  C NLWP STIME TTY  TIME     \n     CMD\nroot       647     1   647  0   64 14:39 ?    00:00:00 \n     /usr/sbin/console-kit-daemon --no-daemon\nroot       647     1   654  0   64 14:39 ?    00:00:00 \n     /usr/sbin/console-kit-daemon --no-daemon\nroot       647     1   656  0   64 14:39 ?    00:00:00 \n     /usr/sbin/console-kit-daemon --no-daemon\nroot       647     1   657  0   64 14:39 ?    00:00:00 \n     /usr/sbin/console-kit-daemon --no-daemon\n\n```", "```\n        $ which ls\n /bin/ls\n\n```", "```\n $ echo $PATH /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\n\n```", "```\n        $ export PATH=$PATH:/opt/bin\n # /opt/bin is added to PATH\n\n```", "```\n        $ whereis ls\n ls: /bin/ls /usr/share/man/man1/ls.1.gz\n\n```", "```\n        $ whatis ls\n ls (1)    - list directory contents\n\n```", "```\n        $ file FILENAME\n\n```", "```\n        $file /etc/passwd\n /etc/passwd: ASCII text\n $ file /bin/ls\n /bin/ls: ELF 32-bit LSB executable, Intel 80386, version 1   \n        (SYSV), dynamically linked (uses shared libs), for GNU/Linux    \n        2.6.15, stripped\n\n```", "```\n $ ps -C COMMAND_NAME\n\n```", "```\n $ ps -C COMMAND_NAME -o pid=\n\n```", "```\n $ ps -C bash -o pid=\n 1255\n 1680\n\n```", "```\n $ pgrep bash\n 1255\n 1680\n\n```", "```\n $ pgrep COMMAND -d DELIMITER_STRING\n $ pgrep bash -d \":\"\n 1255:1680\n\n```", "```\n $ pgrep -u root,slynux COMMAND\n\n```", "```\n $ pgrep -c COMMAND\n\n```", "```\n $ uptime\n 12:40:53 up  6:16,  2 users,  load average: 0.00, 0.00, 0.00\n\n```", "```\n    $ top\n top - 18:37:50 up 16 days, 4:41,7 users,load average 0.08 0.05 .11\n Tasks: 395 total,  2 running, 393 sleeping, 0 stopped 0 zombie\n\n```", "```\n        $ kill -l\n SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP\n ...\n\n```", "```\n        $ kill PROCESS_ID_LIST\n\n```", "```\n        $ kill -s SIGNAL PID\n\n```", "```\n        $ kill -s SIGKILL PROCESS_ID\n\n```", "```\n        $ kill -9 PROCESS_ID\n\n```", "```\n    $ killall process_name\n\n```", "```\n    $ killall -s SIGNAL process_name\n\n```", "```\n    $ killall -9 process_name\n\n```", "```\n    $ killall -9 gedit\n\n```", "```\n    $ killall -u USERNAME process_name\n\n```", "```\n    $ pkill process_name\n $ pkill -s SIGNAL process_name\n\n```", "```\n    trap 'signal_handler_function_name' SIGNAL LIST\n\n```", "```\n#/bin/bash \n#Filename: sighandle.sh \n#Description: Signal handler  \n\nfunction handler() \n{ \n  echo Hey, received signal : SIGINT \n} \n\n# $$ is a special variable that returns process ID of current  \n# process/script \n\necho My process ID is $$ \n\n#handler is the name of the signal handler function for SIGINT signal \ntrap 'handler' SIGINT \n\nwhile true; \ndo \n  sleep 1 \ndone \n\n```", "```\n    $ kill -s SIGINT PROCESS_ID\n\n```", "```\n    $> who\n user1    pts/0    2017-01-16 13:56 (:0.0)\n user1    pts/1    2017-01-17 08:35 (:0.0)\n\n```", "```\n    # cd /etc/xinet.d\n # vi ntalk\n # cd /etc/init.d\n #./xinetd restart\n\n```", "```\n    $ write USERNAME [device]\n\n```", "```\n    $ echo \"Log off now. I'm rebooting the system\" | write user1 pts/3\n\n```", "```\n    $ talk user2@workstation2.example.com\n\n```", "```\n    [Waiting for your party to respond]\n\n```", "```\n    Message from Talk_Daemon@workstation1.example.com\n talk: connection requested by user1@workstation.example.com\n talk: respond with talk user1@workstation1.example.com\n\n```", "```\n    I need to reboot the database server.\n How much longer will your processing take?\n ---------------------------------------------\n 90% complete. Should be just a couple more minutes.\n\n```", "```\n    $ cat message | wall\n\n```", "```\n    $ wall < message\n Broadcast Message from slynux@slynux-laptop\n (/dev/pts/1) at 12:54 ...\n\n This is a message\n\n```", "```\n    # enable receiving messages\n $ mesg y\n # disable receiving messages\n $ mesg n\n\n```", "```\n        $ readlink /proc/4295/exe\n /bin/bash\n\n```", "```\n        $ hostname\n\n```", "```\n        $ uname -n\n server.example.com\n\n```", "```\n        $ uname -a\n server.example.com 2.6.32-642.11.1.e16.x86_64 #1 SMP Fri Nov 18   \n        19:25:05 UTC 2016 x86_64 x86_64 GNU/Linux\n\n```", "```\n        $ uname -r\n 2.6.32-642.11.1.e16.x86_64\n\n```", "```\n        $ uname -m\n x86_64\n\n```", "```\n        $ cat /proc/cpuinfo\n processor     : 0\n vendor_id     : GenuineIntel\n cpu family    : 6\n model         : 63\n model name    : Intel(R)Core(TM)i7-5820K CPU @ 3.30GHz\n ...\n\n```", "```\n        $ cat /proc/cpuinfo | sed -n 5p\n Intel(R)CORE(TM)i7-5820K CPU @ 3.3 GHz\n\n```", "```\n        $ cat /proc/meminfo\n MemTotal:     32777552 kB\n MemFree:      11895296 kB \n Buffers:        634628 kB\n ...\n\n```", "```\n        $ cat /proc/meminfo  | head -1\n MemTotal:        1026096 kB\n\n```", "```\n        $ cat /proc/partitions\n major minor  #blocks  name\n 8        0 976762584 sda\n 8        1    512000 sda1\n 8        2 976248832 sda2\n ...\n\n```", "```\n        $ sudo fdisk -l\n\n```", "```\n        $ sudo lshw\n description: Computer\n product: 440BX\n vendor: Intel\n ...\n\n $ sudo dmidecode\n SMBIOS 2.8 present\n 115 structures occupying 4160 bytes.\n Table at 0xDCEE1000.\n\n BIOS Information\n Vendor: American Megatrends Inc\n ...\n\n```", "```\n        02 * * * * /home/slynux/test.sh\n\n```", "```\n        00 5,6,7 * * /home/slynux/test.sh\n\n```", "```\n        00 */2 * * 0 /home/slynux/script.sh\n\n```", "```\n        00 02 * * * /sbin/shutdown -h\n\n```", "```\n        $ crontab -e\n 02 02 * * * /home/slynux/script.sh\n\n```", "```\n                $ crontab task.cron\n\n```", "```\n                $ crontab<<EOF\n 02 * * * * /home/slynux/script.sh\n EOF\n\n```", "```\n    http_proxy=http://192.168.0.3:3128\n MAILTO=user@example.com\n 00 * * * * /home/slynux/download.sh\n\n```", "```\n    00 * * * * http_proxy=http:192.168.0.2:3128;   \n    /home/sylinux/download.sh\n\n```", "```\n    @reboot command\n\n```", "```\n    $ crontab -l\n 02 05 * * * /home/user/disklog.sh\n\n```", "```\n    # crontab -l -u slynux\n 09 10 * * * /home/slynux/test.sh\n\n```", "```\n    $ crontab -r\n\n```", "```\n    # crontab -u slynux -r\n\n```", "```\n    first last~Street~City, State~Country~Phone~\n\n```", "```\n    Joe User~123 Example Street~AnyTown, District~1-123-123-1234~\n\n```", "```\n    function  addr {\n grep $1 $HOME/etc/addr.txt | sed 's/~/\\n/g'\n }\n\n```", "```\n    $ addr Joe\n Joe User\n 123 Example Street \n AnyTown District\n 1-123-123-1234\n\n```", "```\n CREATE TABLE tablename (field1 type1, field2 type2,...); \n\n```", "```\n CREATE TABLE book (title STRING, author STRING); \n\n```", "```\n INSERT INTO table (columns) VALUES (val1, val2,...); \n\n```", "```\n INSERT INTO book (title, author) VALUES ('Linux Shell Scripting \n Cookbook', 'Clif Flynt'); \n\n```", "```\n SELECT fields FROM table WHERE test; \n\n```", "```\n SELECT title FROM book WHERE title like '%Shell%'; \n\n```", "```\n    apt-get install sqlite3 libsqlite3-dev\n\n```", "```\n    yum install sqlite sqlite-devel\n\n```", "```\n    sqlite3 databaseName\n\n```", "```\n    # Create a books database\n $ sqlite3 books.db\n sqlite> CREATE TABLE books (title string, author string);\n sqlite> INSERT INTO books (title, author) VALUES ('Linux Shell      \n    Scripting Cookbook', 'Clif Flynt');\n sqlite> SELECT * FROM books WHERE author LIKE '%Flynt%';\n Linux Shell Scripting Cookbook|Clif Flynt\n\n```", "```\n    $> dbaddr.sh init\n $> dbaddr.sh insert 'Joe User' '123-1234' 'user@example.com'\n $> dbaddr.sh query name Joe\n Joe User\n 123-1234\n user@example.com\n\n```", "```\n    #!/bin/bash\n    # Create a command based on the first argument\n\n    case $1 in\n      init )\n        cmd=\"CREATE TABLE address \\\n          (name string, phone string, email string);\" ;;\n      query )\n        cmd=\"SELECT name, phone, email FROM address \\\n          WHERE $2 LIKE '$3';\";;\n      insert )\n        cmd=\"INSERT INTO address (name, phone, email) \\\n          VALUES ( '$2', '$3', '$4' );\";;\n    esac\n\n    # Send the command to sqlite3 and reformat the output\n\n    echo $cmd | sqlite3 $HOME/addr.db | sed 's/|/\\n/g'\n\n```", "```\n$> mysql -user=root -password=PASSWORD\n\nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 44\nServer version: 10.0.29-MariaDB-0+deb8u1 (Debian)\n\nCopyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMariaDB [(none)]> CREATE DATABASE test1;\nQuery OK, 1 row affected (0.00 sec)\nMariaDB [(none)]> use test1;\n\n```", "```\n#!/bin/bash \n#Filename: create_db.sh \n#Description: Create MySQL database and table \n\nUSER=\"user\" \nPASS=\"user\" \n\nmysql -u $USER -p$PASS <<EOF 2> /dev/null \nCREATE DATABASE students; \nEOF \n\n[ $? -eq 0 ] && echo Created DB || echo DB already exist  \nmysql -u $USER -p$PASS students <<EOF 2> /dev/null \nCREATE TABLE students( \nid int, \nname varchar(100), \nmark int, \ndept varchar(4) \n); \nEOF \n\n[ $? -eq 0 ] && echo Created table students || \\\n    echo Table students already exist  \n\nmysql -u $USER -p$PASS students <<EOF \nDELETE FROM students; \nEOF \n\n```", "```\n#!/bin/bash \n#Filename: write_to_db.sh \n#Description: Read from CSV and write to MySQLdb \n\nUSER=\"user\" \nPASS=\"user\" \n\nif [ $# -ne 1 ]; \nthen \n  echo $0 DATAFILE \n  echo \n  exit 2 \nfi \n\ndata=$1 \n\nwhile read line; \ndo \n\n  oldIFS=$IFS \n  IFS=, \n  values=($line) \n  values[1]=\"\\\"`echo ${values[1]} | tr ' ' '#' `\\\"\" \n  values[3]=\"\\\"`echo ${values[3]}`\\\"\" \n\n  query=`echo ${values[@]} | tr ' #' ', ' ` \n  IFS=$oldIFS \n\n  mysql -u $USER -p$PASS students <<EOF \nINSERT INTO students VALUES($query); \nEOF \n\ndone< $data \necho Wrote data into DB \n\n```", "```\n#!/bin/bash \n#Filename: read_db.sh \n#Description: Read from the database \n\nUSER=\"user\" \nPASS=\"user\" \n\ndepts=`mysql -u $USER -p$PASS students <<EOF | tail -n +2 \nSELECT DISTINCT dept FROM students; \nEOF` \n\nfor d in $depts; \ndo \n\necho Department : $d \n\nresult=\"`mysql -u $USER -p$PASS students <<EOF \nSET @i:=0; \nSELECT @i:=@i+1 as rank,name,mark FROM students WHERE dept=\"$d\" ORDER BY mark DESC; \nEOF`\" \n\necho \"$result\" \necho \n\ndone \n\n```", "```\n1,Navin M,98,CS\n2,Kavya N,70,CS\n3,Nawaz O,80,CS\n4,Hari S,80,EC\n5,Alex M,50,EC\n6,Neenu J,70,EC\n7,Bob A,30,EC\n8,Anu M,90,AE\n9,Sruthi,89,AE\n10,Andrew,89,AE\n\n```", "```\n$ ./create_db.sh \nCreated DB\nCreated table students\n\n$ ./write_to_db.sh studentdat.csv\nWrote data into DB\n\n$ ./read_db.sh \nDepartment : CS\nrank  name  mark\n1  Navin M  98\n2  Nawaz O  80\n3  Kavya N  70\n\nDepartment : EC\nrank  name  mark\n1  Hari S  80\n2  Neenu J 70\n3  Alex M  50\n4  Bob A   30\n\nDepartment : AE\nrank  name  mark\n1  Anu M    90\n2  Sruthi   89\n3  Andrew   89\n\n```", "```\n#!/bin/bash \n#Filename: user_adm.sh \n#Description: A user administration tool \n\nfunction usage() \n{ \n  echo Usage: \n  echo Add a new user \n  echo $0 -adduser username password \n  echo \n  echo Remove an existing user \n  echo $0 -deluser username \n  echo \n  echo Set the default shell for the user \n  echo $0 -shell username SHELL_PATH \n  echo \n  echo Suspend a user account \n  echo $0 -disable username \n  echo \n  echo Enable a suspended user account \n  echo $0 -enable username \n  echo \n  echo Set expiry date for user account \n  echo $0 -expiry DATE  \n  echo \n  echo Change password for user account \n  echo $0 -passwd username \n  echo \n  echo Create a new user group \n  echo $0 -newgroup groupname \n  echo \n  echo Remove an existing user group \n  echo $0 -delgroup groupname \n  echo \n  echo Add a user to a group \n  echo $0 -addgroup username groupname \n  echo \n  echo Show details about a user \n  echo $0 -details username \n  echo \n  echo Show usage \n  echo $0 -usage \n  echo \n\n  exit \n} \n\nif [ $UID -ne 0 ]; \nthen \n  echo Run $0 as root. \n  exit 2 \nfi \n\ncase $1 in \n\n  -adduser) [ $# -ne 3 ] && usage ; useradd $2 -p $3 -m ;;  \n  -deluser) [ $# -ne 2 ] && usage ; deluser $2 --remove-all-files;; \n  -shell)    [ $# -ne 3 ] && usage ; chsh $2 -s $3 ;; \n  -disable) [ $# -ne 2 ] && usage ; usermod -L $2 ;;  \n  -enable) [ $# -ne 2 ] && usage ; usermod -U $2  ;; \n  -expiry) [ $# -ne 3 ] && usage ; chage $2 -E $3 ;; \n  -passwd) [ $# -ne 2 ] && usage ; passwd $2 ;; \n  -newgroup) [ $# -ne 2 ] && usage ; addgroup $2 ;; \n  -delgroup) [ $# -ne 2 ] && usage ; delgroup $2 ;; \n  -addgroup) [ $# -ne 3 ] && usage ; addgroup $2 $3 ;; \n  -details) [ $# -ne 2 ] && usage ; finger $2 ; chage -l $2 ;; \n  -usage) usage ;; \n  *) usage ;; \nesac \n\n```", "```\n# ./user_adm.sh -details test\nLogin: test                 Name: \nDirectory: /home/test                 Shell: /bin/sh\nLast login Tue Dec 21 00:07 (IST) on pts/1 from localhost\nNo mail.\nNo Plan.\nLast password change          : Dec 20, 2010\nPassword expires          : never\nPassword inactive         : never\nAccount expires             : Oct 10, 2010\nMinimum number of days between password change    : 0\nMaximum number of days between password change    : 99999\nNumber of days of warning before password expires  : 7\n\n```", "```\n        useradd USER -p PASSWORD -m\n\n```", "```\n        deluser USER --remove-all-files\n\n```", "```\n        chsh USER -s SHELL\n\n```", "```\n        chage -E DATE\n\n```", "```\n        passwd USER\n\n```", "```\n        addgroup GROUP\n\n```", "```\n        addgroup USER GROUP\n -delgroup\n\n```", "```\n        delgroup GROUP\n\n```", "```\n    $ convert INPUT_FILE OUTPUT_FILE\n\n```", "```\n    $ convert file1.jpg file1.png\n\n```", "```\n    $ convert imageOrig.png -resize WIDTHxHEIGHT imageResized.png\n\n```", "```\n    $ convert photo.png -resize 1024x768 wallpaper.png\n\n```", "```\n    $ convert image.png -resize WIDTHx image.png\n\n```", "```\n    $ convert image.png -resize 1024x image.png\n\n```", "```\n    $ convert image.png -resize \"50%\" image.png\n\n```", "```\n#!/bin/bash \n#Filename: image_help.sh \n#Description: A script for image management \n\nif [ $# -ne 4 -a $# -ne 6 -a $# -ne 8 ]; \nthen \n  echo Incorrect number of arguments \n  exit 2 \nfi \n\nwhile [ $# -ne 0 ]; \ndo \n\n  case $1 in \n  -source) shift; source_dir=$1 ; shift ;; \n  -scale) shift; scale=$1 ; shift ;; \n  -percent) shift; percent=$1 ; shift ;; \n  -dest) shift ; dest_dir=$1 ; shift ;; \n  -ext) shift ; ext=$1 ; shift ;; \n  *) echo Wrong parameters; exit 2 ;; \n  esac; \n\ndone \n\nfor img in `echo $source_dir/*` ; \ndo \n  source_file=$img \n  if [[ -n $ext ]]; \n  then \n    dest_file=${img%.*}.$ext \n  else \n    dest_file=$img \n  fi \n\n  if [[ -n $dest_dir ]]; \n  then \n    dest_file=${dest_file##*/} \n    dest_file=\"$dest_dir/$dest_file\" \n  fi \n\n  if [[ -n $scale ]]; \n  then \n    PARAM=\"-resize $scale\" \n  elif [[ -n $percent ]];   then \n    PARAM=\"-resize $percent%\"  \n  fi \n\n  echo Processing file : $source_file \n  convert $source_file $PARAM $dest_file \n\ndone \n\n```", "```\n$ ./image_help.sh -source sample_dir -percent 20%\nProcessing file :sample/IMG_4455.JPG\nProcessing file :sample/IMG_4456.JPG\nProcessing file :sample/IMG_4457.JPG\nProcessing file :sample/IMG_4458.JPG\n\n```", "```\n$ ./image_help.sh -source sample_dir -scale 1024x\n\n```", "```\n# newdir is the new destination directory\n$ ./image_help.sh -source sample -scale 50% -ext png -dest newdir\n\n```", "```\n    $ xwd >step1.xwd\n\n```", "```\n    $ import -window root screenshot.png\n\n```", "```\n    $ import screenshot.png\n\n```", "```\n    $ import -window window_id screenshot.png\n\n```", "```\n    apt-get install screen\n\n```", "```\n        screen -r -d\n\n```", "```\n        screen -r -d PID\n\n```"]