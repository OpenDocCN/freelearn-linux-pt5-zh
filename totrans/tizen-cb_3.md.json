["```\n    <access origin=\"http://google.com\" subdomains=\"true\"></access>\n    ```", "```\n    <access origin=\"*\" subdomains=\"true\"></access>\n    ```", "```\nsudo apt-add-repository ppa:cordova-ubuntu/ppa \nsudo apt-get update \nsudo apt-get install cordova-cli\n\n```", "```\nnpm install -g cordovaRun the command below to install the latest version of PhoneGap:\nnpm install -g phonegap\n\n```", "```\ngit clone git://git.apache.org/cordova-tizen.git\n```", "```\nCordova run android\n\n```", "```\n    <a id=\"myBtn\" href=\"#\" data-role=\"button\">Button 1</a>\n    ```", "```\n    <div data-role=\"fieldcontain\">\n      <label for=\"name\">Text:</label>\n      <input type=\"text\" name=\"txt\" id=\"txt\" value=\"\"  />\n    </div>\n    ```", "```\n    <select id=\"SwitchBtn\" data-role=\"slider\">\n      <option value=\"off\">Off</option>\n      <option value=\"on\">On</option>\n    </select>\n    ```", "```\n    <div>\n      <input type=\"date\" name=\"datePicker\" id=\"datePicker\" data-format=\"dd MMM yyyy\" />\n    </div>\n    ```", "```\nfinal Button button = (Button) findViewById(R.id.myBtn);\nbutton.setOnClickListener(new View.OnClickListener() {\n  public void onClick(View v) {\n    //do something\n  }\n});\n```", "```\n$('#myBtn').bind( \"click\", function(event, ui) {\n  //do something\n});\n```", "```\n    sudo apt-get install perl python git build-essential libqt4-dev \"^libxcb.*\" libx11-xcb-dev libxkbcommon-dev libglu1-mesa-dev libxrender-dev libdbus-1-dev libfontconfig1-dev libfreetype6-dev libatspi2.0-dev flex bison gperf libicu-dev libcups2-dev libxslt-dev ruby libsqlite3-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libssl-dev libpulse-dev libasound2-dev libgtk2.0-dev libpng12-dev libjpeg8-dev libjpeg-dev chrpath\n    ```", "```\n    sudo apt-get update\n    sudo apt-get install gbs\n    ```", "```\n    git clone -b alpha6 git://gitorious.org/tizenbuildtools/tizenbuildtools.git\n    cd tizenbuildtools\n    git checkout v_alpha6.2\n    ```", "```\n    cd desktop\n    MAKE_THREADS=4 ./downloadAndBuildAll.sh\n    ```", "```\n    cd ../emulator\n    ./prepare_developer_tools.sh\n    ```", "```\n    cd ../mobile\n    ./prepare_developer_tools.sh\n    ```", "```\n    chmod u+x ./qt-creator-linux-...run\n    ./qt-creator-linux-...run\n    ```", "```\n    cd ../qtcreator\n    export PATH=$HOME/dev/src/tizenbuildtools/desktop/qt5hostInstall/bin:$PATH\n    QTC_BUILD=$HOME/qtcreator-3.0.1 ./build_and_deploy_tizen_plugin.sh\n    ```", "```\n    tizen {\n      tizen_shared.files = shared/res\n      CONFIG += TIZEN_STANDALONE_PACKAGE\n      TIZEN_BUNDLED_QT_LIBS=Qt5Core Qt5DBus Qt5Qml Qt5Quick Qt5Widgets Qt5Gui Qt5Network\n      load(tizen_app)\n    }\n    ```", "```\n    extern \"C\" int OspMain(int argc, char *argv[]) {\n      return main(argc, argv);\n    }\n    ```", "```\n./emulator-x86 --skin-args <skin options> --qemu-args <QEMU options>\n```", "```\n    QUnit.test( \"Tizen Test 1\", function( assert ) {\n      assert.ok( 1 == \"1\", \"1 is 1\" );\n    });\n\n    QUnit.test( \"Tizen Test 2\", function( assert ) {\n      assert.equal( 0, 0, \"0 is 0\" );\n      assert.notEqual( 2, 1, \"2 is not 1\" );\n    });\n    ```", "```\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n        <title>QUnit Tests</title>\n    ```", "```\n      <meta name=\"viewport\" content=\"width=device-width,user-scalable=no\"/>\n      <link rel=\"stylesheet\" href=\"tests/qunit-1.14.0.css\">\n    </head>\n    <body>\n      <div id=\"qunit\"></div>\n      <div id=\"qunit-fixture\"></div>\n      <script src=\"img/qunit-1.14.0.js\"></script>\n      <script src=\"img/tests.js\"></script>\n    </body>\n    </html>\n    ```", "```\n    <content src=\"img/tests.html\"/>\n    ```", "```\nQUnit.test( \"Tizen Test 1\", function( assert ) {\n  assert.ok( 1 === \"1\", \"1 is 1\" );\n});\n```", "```\n    sudo apt-get update\n    sudo apt-get install git\n\n    ```", "```\n    yum install git-core\n\n    ```", "```\n    zypper install git\n\n    ```", "```\n    ssh-keygen\n\n    ```", "```\n    Host tizen review.tizen.org\n    Hostname review.tizen.org\n    IdentityFile ~/.ssh/id_rsa\n    User <username>\n    Port 29418\n    ```", "```\n    ssh tizen\n\n    ```", "```\n    **** Welcome to Gerrit Code Review ****\n\n    ```", "```\n    git config --global user.name <First_Name Last_Name>\n\n    ```", "```\n    git config --global user.email \"<Email>\"\n\n    ```", "```\n    sudo vim /etc/apt/sources.list\n\n    ```", "```\n    deb http://download.tizen.org/tools/latest-release/Ubuntu_14.04/ /\n\n    ```", "```\n    sudo apt-get update\n\n    ```", "```\n    sudo apt-get install gbs mic\n\n    ```", "```\nsudo apt-get update\nsudo apt-get upgrade\n\n```", "```\nsudo apt-get install <package>Replace <package> with the name of the package or the list of packages separated by space if you want to upgrade more than one package. For example, if you have already installed GBS run sudo apt-get install gbs to get its version up to date.\n\n```", "```\n    sudo zypper addrepo http://download.tizen.org/tools/latest-release/openSUSE_13.1/ tools\n\n    ```", "```\n    sudo zypper refresh\n\n    ```", "```\n    sudo zypper install gbs mic\n\n    ```", "```\nsudo zypper refresh\nsudo zypper update <package>\n\n```", "```\n    sudo wget -O /etc/yum.repos.d/tools.repo http://download.tizen.org/tools/latest-release/Fedora_20/tools.repo\n\n    ```", "```\n    sudo yum makecache\n\n    ```", "```\n    sudo yum install gbs mic\n\n    ```", "```\nsudo yum makecache\nsudo yum update <Package>\n\n```", "```\n    mkdir ~/bin/\n    PATH=~/bin:$PATH\n\n    ```", "```\n    cd ~/bin/\n    wget http://commondatastorage.googleapis.com/git-repo-downloads/repo\n    sudo chmod a+x ~/bin/repo\n\n    ```", "```\n    mkdir ~/tizen\n    cd ~/tizen\n\n    ```", "```\n    repo init -u ssh://<user>@review.tizen.org:29418/scm/manifest -b tizen -m common.xml\n    repo sync\n\n    ```", "```\n    [general]\n    tmpdir=/var/tmp/\n    profile = profile.tizen3.0_common\n    work_dir=.\n\n    [repo.tizen3.0_x86]\n    url=${work_dir}/pre-built/toolchain-x86/\n\n    [repo.tizen3.0_arm]\n    url=${work_dir}/pre-built/toolchain-arm/\n\n    [profile.tizen3.0_common]\n    repos=repo.tizen3.0_x86,repo.tizen3.0_arm\n    buildconf=${work_dir}/scm/meta/build-config/build.conf\n    ```", "```\n    # For wayland ia32\n    # buildconf=${work_dir}/scm/meta/build-config/build-ia32-wayland.conf\n    # For emulator32 wayland\n    # buildconf=${work_dir}/scm/meta/build-config/build-emulator32-wayland.conf\n    # For wayland x86_64\n    # buildconf=${work_dir}/scm/meta/build-config/build-x86_64-wayland.conf\n    # For wayland arm32\n    # buildconf=${work_dir}/scm/meta/build-config/build-arm-wayland.conf\n    # For wayland arm64\n    # buildconf=${work_dir}/scm/meta/build-config/build-arm64-wayland.conf\n    ```", "```\n        gbs build -A i586 --threads=4 --clean-once\n        ```", "```\n        accel_pkgs=\"bash,bzip2-libs,c-ares,cmake,coreutils,diffutils,eglibc,elfutils-libelf,elfutils-libs,elfutils,fdupes,file,findutils,gawk,gmp,gzip,libacl,libattr,libcap,libcurl,libfile,libgcc,liblua,libstdc++,make,mpc,mpfr,ncurses-libs,nodejs,nspr,nss-softokn-freebl,nss,openssl,patch,popt,rpm-build,rpm-libs,rpm,sed,sqlite,tar,xz-libs,zlib,binutils,gcc\"\n        gbs build -A armv7l --threads=4 --clean-once --exclude=${accel_pkgs},filesystem,aul,libmm-sound,libtool\n\n        ```", "```\n    wget http://download.tizen.org/releases/2.2.1/tizen-2.2.1/builddata/image-configs/RD-PQ-REF.ks\n\n    ```", "```\n    gbs createimage â€“ks-file=RD-PQ-REF.ks\n\n    ```", "```\nsudo apt-get update\nsudo apt-get install lthor\n\n```", "```\n    sudo ./lthor <Tizen image>\n\n    ```", "```\n    USB port is detected: /dev/ttyACM0\n\n    line 328: failed to read signature bytes\n    line 603: handshake failed\n    line 922: failed to open port (null)\n\n    ```", "```\n    USB port is detected : /dev/ttyACM0\n\n    port open error!!\n    : Device or resource busy\n    line 954: failed to open port (null)\n\n    ```", "```\nsudo apt-get purge modemmanager\n\n```", "```\n    sudo mv /usr/share/dbus-1/system-services/org.freedesktop.ModemManager.service ~/org.freedesktop.ModemManager.service\n\n    ```", "```\n    sudo stop modemmanager\n    sudo killall modem-manager\n\n    ```", "```\n    tar -xvzf hw_accel.tar.gz\n\n    ```", "```\n    sdb -d root on\n    sdb -d push libdrm-exynos-gem-*.rpm /home/\n    sdb -d push libump-*.rpm /home/\n    sdb -d push opengl-es-mali400mp-*.rpm /home/\n\n    ```", "```\n    sdb -d shell\n    cd /home/\n\n    ```", "```\n    rpm -e --nodeps opengl-es-virtual-drv\n\n    ```", "```\n    rpm -ivh --force *.rpm\n\n    ```", "```\n    sync\n    reboot\n\n    ```", "```\nsudo apt-get install bmap-tools\n\n```", "```\n    umount /dev/sdX*\n\n    ```", "```\n    bmaptool <Tizen> /dev/sdX\n\n    ```", "```\n    bzcat <Tizen image> | dd of=<storage> bs=512k oflag=sync conv=sparse\n\n    ```", "```\n    sudo apt-get update\n    sudo apt-get install gcc-4.7-arm-linux-gnueabihf ncurses-dev uboot-mkimage build-essential git\n\n    ```", "```\n    mkdir sunxi/\n    cd sunxi/\n    git clone -b sunxi https://github.com/linux-sunxi/u-boot-sunxi.git\n\n    ```", "```\n    cd u-boot-sunxi/\n\n    ```", "```\n    make a20-olinuxino_micro CROSS_COMPILE=arm-linux-gnueabihf-\n\n    ```", "```\n    cd ..\n    git clone https://github.com/linux-sunxi/linux-sunxi\n\n    ```", "```\n    cd linux-sunxi/\n    make ARCH=arm <defconfig>\n\n    ```", "```\n    make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j4 INSTALL_MOD_PATH=out modules\n    make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j4 INSTALL_MOD_PATH=out modules_install\n\n    ```", "```\n    sudo fdisk /dev/sd<X>\n\n    ```", "```\n    Command (m for help): p \n\n    Disk /dev/sdc: 4026 MB, 4026531840 bytes\n\n    ```", "```\n    Command (m for help):  d\n    Partition number (1-4): 1\n\n    ```", "```\n    Command (m for help): x\n    Expert command (m for help): h\n    Number of heads (1-256, default 30): 255\n    Expert command (m for help): s\n    Number of sectors (1-63, default 29): 63\n    Warning: setting sector offset for DOS compatibility\n    Expert command (m for help): c\n    Number of cylinders (1-1048576, default 2286): <cylinders> \n\n    ```", "```\n    Expert command (m for help): r\n    Command (m for help): n\n    Command action\n    e extended\n    p primary partition (1-4)\n    p\n    Partition number (1-4): 1\n    First cylinder (1-123, default 1):\n    Using default value 1\n    Last cylinder or +size or +sizeM or +sizeK (1-123, default 123): +64M (see note above)\n    Command (m for help): n\n    Command action\n    e extended\n    p primary partition (1-4)\n    p\n    Partition number (1-4): \n    2\n    First cylinder (10-123, default 10):\n    Using default value 10\n    Last cylinder or +size or +sizeM or +sizeK (10-123, default 123):\n    Using default value 123\n\n    ```", "```\n    Command (m for help): t\n    Partition number (1-4): 1\n    Hex code (type L to list codes): c\n    Changed system type of partition 1 to c (W95 FAT32 (LBA))\n    * You have to format 1st partitions with vfat32 filesystem.\n    Command (m for help): a\n    Partition number (1-4): 1\n\n    ```", "```\n    Command (m for help): w\n    The partition table has been altered!\n\n    Calling ioctl() to re-read partition table.\n\n    ```", "```\n    sudo mkfs.vfat -F 32 -n boot /dev/sd<X>1\n    sudo mkfs.ext4 -L rootfs /dev/sd<X>2\n    sudo mkfs.ext4 -L data /dev/sd<X>3\n    sudo mkfs.ext4 -L UMS /dev/sd<X>4\n\n    ```", "```\n    umount /dev/sd\n    <X>*\n    dd if=u-boot-sunxi/u-boot-sunxi-with-spl.bin of=/dev/sd<X> bs=1024 seek=8\n\n    ```", "```\n    mkdir /mnt/sd1\n    mount /dev/sd<X>1 /mnt/sd1\n    cp linux-sunxi/arch/arm/boot/uImage /mnt/sd1\n    cp script.bin /mnt/sd1\n    sync\n    umount /dev/sd<X>1\n\n    ```", "```\n    umount /dev/sd<X>*\n\n    ```", "```\n    sudo dd if=/dev/<image> of=/dev/sd<X><N> bs=1024 count=1\n\n    ```", "```\n    console=tty0\n    loglevel=5\n    extraargs=console=ttyS0,115200 disp.screen0_output_type=3 disp.screen0_output_mode=EDID:800x480p33 hdmi.audio=EDID:0\n\n    ```", "```\n    adb shell\n\n    ```", "```\n    mkdir /sdcard/nanda\n    mount -t vfat /dev/block/nanda /sdcard/nanda\n\n    ```", "```\n    adb pull /sdcard/nanda/script.bin .\n\n    ```", "```\n    git clone https://github.com/linux-sunxi/sunxi-tools.git\n\n    ```", "```\n    make bin2fex\n\n    ```", "```\n    ./bin2fex script.bin > script.fex\n\n    ```"]