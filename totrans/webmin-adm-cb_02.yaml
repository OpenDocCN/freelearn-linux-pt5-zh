- en: Chapter 2. User Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Webmin user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a Webmin group with access to specific modules and options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allowing users to log in to Webmin with the system credentials
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating Webmin users based on system accounts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling who is currently using Webmin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a system user account
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Modifying a user's UID and other information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Temporarily disabling a user account
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating and editing a system group
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing a user's password
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exporting users and importing them into another system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Usermin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Webmin's user management features are quite sophisticated. You can use Webmin
    to manage users and groups on your system, decide which of them have access to
    Webmin, and which modules they will be allowed to see. You can also create special
    Webmin-only users, who will not have regular accounts on your system, but will
    still be able to access selected Webmin modules.
  prefs: []
  type: TYPE_NORMAL
- en: If you're the main administrator of a system, you can set up Webmin to allow
    other administrators to modify only selected parts of your system's configuration.
    For instance, you can allow sub-administrators to configure the Apache web server
    but not to change other settings. This particular workflow is so common, in fact,
    that a sibling product to Webmin called Usermin was developed to allow non-administrators
    access to a Webmin-like environment through which they can access databases, configure
    web hosts, set up `cron` jobs, and read local mail.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Webmin distinguishes between two types of users:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Unix users** (**system users**) are standard users of your system. They are
    usually able to log in to your system through the console or over SSH.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Webmin users** are accounts specific to Webmin itself. These type of users
    can log in to Webmin but may have no ability to log in to your system otherwise.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any system user can be given the status of Webmin user. You can also configure
    Webmin to add and delete Webmin accounts whenever a system user is added or removed.
    It's up to you to decide what will suit your situation best—keeping Webmin user
    accounts separate from system accounts or keeping them synchronized.
  prefs: []
  type: TYPE_NORMAL
- en: Another important concept to keep in mind is a **Webmin group**. Similar to
    system groups, these are groups of users with specific privileges. You can decide
    which modules are available to all members of a Webmin group. In general, if you
    have more then one user with the same privileges, you should assign them to a
    group and then assign module permissions to the group instead of assigning them
    individually to each user. This will make future management easier to handle.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Webmin user
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The simplest way to grant someone access to Webmin is to create a Webmin user
    account for him/her. You can regulate which IPs the user will be allowed to log
    in from and even at what times during the week the access will be open. During
    account creation, you can specify what modules the user will have access to or
    which group he/she will belong to.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will create a new user with access to only one module.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will create a new user account with a single-use password, which the user
    will have to change after the first login. In order to use this one-time password,
    we need to enable a feature in Webmin. Perform the following steps to set the
    password expiry policy:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Webmin** | **Webmin Configuration** | **Authentication**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the **Password expiry policy** option to **Prompt users with expired passwords
    to enter a new one**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Webmin's server process will restart; wait for a few seconds before continuing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to create a new Webmin user:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the **Webmin** | **Webmin Users** screen, and click **Create a new
    Webmin user**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the user creation screen, specify a username, a password, and the real name
    of the user. You can set any random long string for the password, as we expect
    the user to change it. Note the password somewhere, so that we can use it later.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Strong passwords** are long strings of characters randomly selected from
    a large alphabet. If you use all alphanumeric characters (a-z, A-Z, and 0–9) then
    each character adds approximately 6 bits of entropy to the strength of the password.
    This means that for a 128-bit password you''d need a 22-character string, for
    a 256-bit strength you''d need 43 characters, and so on. You can generate a pseudo-random
    password using a simple Perl one-liner such as:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you wish to use a truly random password generated by a quantum mechanical
    white noise generator, visit GRC''s Ultra High Security Passwords page:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://www.grc.com/passwords.htm](https://www.grc.com/passwords.htm)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Check the **Force change at next login** option:![How to do it...](img/5849OS_02_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Security and limits options** section, set **Inactivity logout time**
    to `30` minutes and **Minimum password length** to `10` letters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Available Webmin modules** section, check the box next to **Read User
    Mail** module in the **Servers** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Create** button to create the account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Webmin keeps its own database of user accounts, separate from the system user
    list. The list of accounts is kept by default in the `miniserv.users` file at
    `/etc/webmin/`. Information about which modules each account has access to is
    stored in the `webmin.acl` file at `/etc/webmin/` (**acl** stands for **access
    control list**).
  prefs: []
  type: TYPE_NORMAL
- en: When a user tries to log into Webmin, it checks those files to determine whether
    the login information provided is correct, if the account is active, and which
    modules the user has access to. Based on this information, Webmin logs the user
    in and creates an interface for him/her.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Webmin provides additional features, which make account administration easier.
    For instance, if you find that you need to create a few similar accounts, you
    can create one and clone it. If you want to preview what Webmin looks like to
    a particular user, you can switch to that user's account without the need to know
    their password.
  prefs: []
  type: TYPE_NORMAL
- en: Clone a Webmin user
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In order to clone an already existing user account, go to **Webmin** | **Webmin
    Users**, and click the username of the user you would like to clone. At the bottom
    of the **Edit Webmin User** screen, you will find a button marked **Clone**. If
    you click on it, you will be brought to an account creation page with options
    prefilled based on settings of the user you cloned.
  prefs: []
  type: TYPE_NORMAL
- en: Switch to user
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to check what options Webmin makes available to a particular user,
    you can go to **Webmin** | **Webmin Users**, click on the username, and then click
    the **Switch to User** button at the bottom of the screen. After you are finished
    testing, you will need to log out and log in again as yourself if this user does
    not have access to the **Webmin Users** module.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the next recipe, *Creating a Webmin group with access to specific modules
    and options*, we will go into more detail about granting users access to specific
    module options.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a Webmin group with access to specific modules and options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Webmin users should be organized into groups. If you have more then one user
    whom you would like to equip with the same privileges, creating a group is the
    way to go. Webmin provides very granular permissions, which you can grant to each
    group. You can set the following three types of permissions:'
  prefs: []
  type: TYPE_NORMAL
- en: Specify which Webmin modules are available to a group
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set global permissions, which apply to all modules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set module-level access control settings, specifying which options of each module
    will be available
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Permissions for an individual account can be configured with the same level
    of granularity.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this recipe, we will create a Webmin group with access limited to viewing
    log files from the `/var/log` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: To create a new Webmin group, navigate to **Webmin** | **Webmin Users**, and
    click **Create a new Webmin group**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Name the new group `log_viewers`, and supply a group description.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Available Webmin modules** section, select only **System Logs**, and
    click **Create**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the group is created, we can specify more detailed permissions. Go back
    to **Webmin** | **Webmin Users**, and click the name of the new group in the **Webmin
    Groups** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will notice that the names of modules in the **Available Webmin modules**
    section are now links. Click the **System Logs** link to bring up the access control
    configuration for this module.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set permissions, as shown in the following screenshot, to grant read-only access
    to the logs from `/var/log` and no other module permission:![How to do it...](img/5849OS_02_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that full access to this module allows users to view any file as a log.
    This could give users unauthorized access to other files on your system.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: You can reset module permissions to full access by clicking on the **Reset To
    Full Access** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Let''s verify that the new group permissions work as expected:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a new user for testing according to the *Creating a Webmin user*recipe.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Assign him/her to the group by selecting `log_viewers` in the **Member of group**
    list.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the **Edit Webmin User** screen for this new user, and click the **Switch
    to User** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will see Webmin as the new user would see it, and you should have access
    limited to the **System Logs** module, within which you should only be able to
    view logs from `/var/log`.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'By default, Webmin keeps information about existing groups in the `webmin.groups`
    file at `/etc/webmin/`. Information about module-specific permissions is stored
    in **access control list** (**ACL**) files. Each module has its own directory
    in `/etc/webmin`, containing a separate ACL file for each group and user. For
    instance, a group of ACL files for a module named `module_name` and a group named
    `group_name` would be stored at: `/etc/webmin/module_name/group_name.gacl`. A
    similar file for a user named `user_name` would be stored in the `user_name.acl`
    file at `/etc/webmin/module_name/`. Webmin inspects these files whenever a user
    accesses a module and determines which options to make available to them.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The exact structure of each ACL file is specific to its individual module; it
    may also change when upgrading Webmin to a new version. Editing these files manually
    requires familiarity with the module's internal code, so it's probably best to
    edit permissions through Webmin's interface.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In addition to module-specific access permissions, Webmin also allows you to
    specify global permissions, which modify the behavior of all modules.
  prefs: []
  type: TYPE_NORMAL
- en: Permissions for all modules
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In order to set Webmin-wide permissions for a group, go to **Webmin** | **Webmin
    Users**, click the name of the group, and open the **Permissions for all modules**
    section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, you can set which files will be visible in Webmin''s file chooser when
    a module requires the user to select a file, which users and groups will be visible
    in their chooser widgets, and other global options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Permissions for all modules](img/5849OS_02_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can create a Webmin account for each user you wish to assign to a group,
    but you can also set up Webmin to create accounts automatically for all members
    of a system group and assign them to a Webmin group. See the recipe, *Creating
    Webmin users based on existing system user* *accounts*, for more information.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allowing users to log in to Webmin with the system credentials
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Webmin''s default settings don''t allow regular system users to log in to Webmin,
    but at least one user is allowed to log in after installation. Depending on the
    settings included in your Webmin package, that may be any of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The root user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Users with unrestricted root access via `sudo` (specifically those with an `ALL=(ALL)
    ALL` rule)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The user created during manual Webmin installation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this recipe, we will allow all users of a Unix group to log in to Webmin
    with limited permissions.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We need to begin by creating a standard Webmin account, which will be shared
    by all system users we grant access to. Refer to the recipe, *Creating a Webmin
    user,* for instructions, and create a Webmin account, named `webmin_user`, for
    instance, with specific permissions.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to allow members of a system group to log in to Webmin:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the **Webmin** | **Webmin Users** | **Configure Unix User Authentication**
    screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Allow Unix users listed below to login** radio button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the options to allow **Members of group** users to log in as the Webmin
    user you created for this purpose.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If your standard user were named `webmin_user`, your screen would resemble the
    following screenshot:![How to do it...](img/5849OS_02_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Save** button to save your settings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From now on, all Unix users belonging to the `users` group will be able to log
    in to Webmin and have the same privileges as the Webmin user you selected.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If we use the preceding configuration, Webmin will verify login credentials
    against the **pluggable authentication module** (**PAM**) service configured on
    your system. In its basic setup, PAM will verify credentials against those stored
    in the standard system files (`/etc/passwd` and `/etc/shadow`).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If PAM is set up differently on your system, the login information may be validated
    by an external service such as LDAP, NIS, Kerberos, Active Directory, or looked
    up in a SQL database. By default, Webmin uses your system's common configuration
    (`system-auth` or `common-auth`), but it can use its own separate settings.
  prefs: []
  type: TYPE_NORMAL
- en: Webmin also checks which system groups the authenticating user belongs to. If
    any of those groups are listed in Webmin's configuration or the user account is
    individually listed as allowed, the user will be logged in as if using the associated
    Webmin account.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order to allow the users with unrestricted access via `sudo` to log in to
    Webmin as `root`, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Webmin** | **Webmin Users** | **Configure Unix User Authentication**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the box **Allow users who can run all commands via sudo to login as root**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating Webmin users based on system accounts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In previous recipes, we talked about creating Webmin users and allowing system
    users to log in as a chosen Webmin account. You may choose to have a more direct,
    one-to-one correspondence between Webmin and system accounts. You can achieve
    this by creating Webmin accounts for selected existing users and setting up account
    synchronization for users added in the future.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, we will create a Webmin account for each system user. All new
    Webmin accounts will be assigned to a Webmin group. Before we begin, set up a
    Webmin group following the recipe, *Creating a Webmin group with access to specific
    modules and options*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Our first step will be to create Webmin accounts for existing system users:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Webmin** | **Webmin Users** | **Convert Unix To Webmin Users**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the users you would like to add to Webmin.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Webmin group to assign them to.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Convert Now**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Webmin accounts for all selected users should now be created. You can inspect
    them on the **Webmin Users** screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'The second step is to instruct Webmin to create accounts automatically for
    all newly created system users:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Webmin** | **Webmin Users** | **Configure Unix User Synchronization**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the boxes to create and delete Webmin accounts when system accounts are
    created and deleted.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Also, select the **Set password for new users to Unix authentication** option:![How
    to do it...](img/5849OS_02_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Webmin group you would like new users to be added to, and click **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From now on, every new system account will be associated with an automatically
    created Webmin account.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Please note that Webmin will not synchronize accounts created at the command
    line or by editing system configuration files directly. Only system accounts created
    through Webmin will receive associated Webmin accounts.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Webmin inspects your system configuration files (`/etc/passwd` and `/etc/group`)
    to find a list of system users and creates corresponding Webmin accounts based
    on your selection.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In reality, Webmin doesn't read the `passwd` file directly, but instead uses
    a system call such as `getpwent` to inspect your system's password database. This
    means that account information may also be read from a database or external services
    such as NIS or LDAP.
  prefs: []
  type: TYPE_NORMAL
- en: If you set up user synchronization, Webmin adds an additional step to its user
    creation functionality, which automatically sets up a new Webmin account for each
    new system user.
  prefs: []
  type: TYPE_NORMAL
- en: Controlling who is currently using Webmin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Webmin keeps a log of all the actions performed by users. You can inspect a
    list of currently open user sessions, check what actions were performed during
    a session, or close a session, forcing the user to be logged out.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform these steps to check which users are currently logged into Webmin:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Webmin** | **Webmin Users**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **View Login Sessions** icon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To view the actions performed by the user in this session, click the **View
    logs** link next to any session.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can close any session, except your own, and force the user to log in again.
    To do this, click the link in the **Session ID** column. The next time this user
    clicks a link or submits a form, he/she will be asked to log in again.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Whenever a user logs in, Webmin creates a session for him/her. A session consists
    of a specific ID and associated information about who the owner of the session
    is and whether the session is active.
  prefs: []
  type: TYPE_NORMAL
- en: The session ID is passed to the user's browser in a secure cookie, thanks to
    which Webmin can identify subsequent requests coming in from the same user. This
    identifier is stored in Webmin's log files to group together actions performed
    by the user during the time between logging in and logging out. You can search
    Webmin's log for actions associated with any session.
  prefs: []
  type: TYPE_NORMAL
- en: If you choose to end a session, Webmin deletes its identifier from the list
    of active sessions. When the user makes another request to Webmin, the session
    identifier passed by the cookie will no longer be recognized, and the user will
    have to log in again, creating a new session.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a system user account
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Creating user accounts in Unix is a multistep process: you need to add user
    data to system configuration files, create a home directory, copy template files
    to that directory, and set ownership of those files to the new user. Webmin automates
    this process for you.'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In addition, if you set up synchronization, a Webmin account will also be created
    for the new user. Refer to the recipe, *Creating Webmin users based on existing
    system accounts*, for more information about account synchronization.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will create a new user account with a single-use password, which the user
    will have to change to after the first login. In order to allow the user to change
    the password through Webmin, go to **Webmin** | **Webmin Configuration** | **Authentication**,
    and set the **Password expiry policy** option to **Prompt users with expired passwords
    to enter a new one**.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to create a system user account:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **System** | **Users and Groups**, and click **Create a new user**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Provide basic account information: **Username**and**Real name**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set **User ID** and **Home directory** to **Automatic**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the user's default shell to `/bin/bash`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For **Password**, select **Normal Password**, and type in a long, random string
    into the textbox. Save this string. In **Password Options**, answer **Yes** to
    the **Force change at next login?** question.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Take a look at the recipe, *Creating a Webmin user*, for a note about generating
    strong passwords.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Leave the primary group in **Group Membership** with system default settings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answer **Yes** to the questions about creating a home directory and copying
    template files in the **Upon Creation** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Also answer **Yes** to the **Create user in other modules?** question.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Create**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Send the user his/her new username and password. The user will be asked to change
    the password after the first login.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Quite a bit is happening here; let's go through it step by step.
  prefs: []
  type: TYPE_NORMAL
- en: We are asking Webmin to create an account for the user whose real name we specified.
    The user will be able to log in using the username we provided. We told Webmin
    to generate **User ID** and **Home directory** automatically. The UID will be
    the first available integer higher than 500 or 1,000, depending on the system.
    The home directory will be placed in `/home/` and named as the username.
  prefs: []
  type: TYPE_NORMAL
- en: We set the user's shell to `/bin/bash`, which is the default user shell on most
    modern Linux distributions. If your users prefer to use a different shell, such
    as `ksh`, `zsh`, or `fish`, you can set it here after its package is installed.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you wish to prevent the user from logging into the system console (or over
    SSH and FTP), you can set the shell to `/bin/false`. This will prevent shell access
    but will allow the user to use other system services that don't require Unix user
    authentication, such as e-mail or Webmin.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we created a one-time password for the user. The user will be forced to
    change it after the first login regardless of whether he/she logs in through the
    console or Webmin.
  prefs: []
  type: TYPE_NORMAL
- en: During account creation, we need to assign the user to a primary group. On some
    systems, the default group will be named `users`; other systems will create a
    private group for the new user, named the same as the user. It's up to you as
    the system's administrator to decide how you wish to use these groups.
  prefs: []
  type: TYPE_NORMAL
- en: Because we answered **Yes** to questions about setting up the home directory,
    Webmin took care of it for us and created the new user's directory with all the
    required files.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, by answering **Yes** to the question about creating the user account
    in other modules, we told Webmin to make information about the new account available
    to other parts of Webmin. Thanks to this, the new user will be available in configuration
    settings of other modules (for instance, file sharing).
  prefs: []
  type: TYPE_NORMAL
- en: Modifying a user's UID and other information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Modifying basic information about an existing user is usually quite simple.
    The exception to this rule is the change of a user's UID. This is sometimes necessary
    if a user has accounts on two different Unix systems and both systems have to
    identify him/her as the same person. A typical example of this situation is sharing
    files over NFS as we will discuss in [Chapter 6](ch06.html "Chapter 6. Managing
    Files on Your System"), *Managing Files on Your System*.
  prefs: []
  type: TYPE_NORMAL
- en: Changing a UID requires an update of file ownership of all files belonging to
    that user. This can be quite tedious, but Webmin does the job for us.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps for modifying a user''s UID:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **System** | **Users and Groups**, and click the username link of
    the account you want to edit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next page, you will be able to edit all the basic user information, including
    the username, ID, home directory location, chosen default shell program, primary
    and secondary system groups, and so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change **User ID** to a different value.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Upon Save** section, answer **All files** to the **Change user ID on
    files?** question.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can limit the update to **Home directory** if you are sure that the user
    owns files only in his/her home directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Limiting file updates to the user's home directory will speed things up, but
    any files belonging to the user but located in other directories will become orphaned.
    If a new user is later created with the leftover UID, these files may unexpectedly
    change hands and belong to the new user. Choose this option only if you're sure
    that the user doesn't own any files outside of the home directory.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use the same method to change the GID of the user's primary group.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Webmin updates the user's system data with the information you provide. It then
    scans the disk in search of files that belong to the user and updates the file
    owner's UID.
  prefs: []
  type: TYPE_NORMAL
- en: Temporarily disabling a user account
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If a person stops using your system, it's often a good idea not to delete their
    account, but rather to disable it. Perhaps you need to preserve data for forensic
    purposes, the user would need access to your system again in the future or is
    the owner of files on your system, which you don't want to delete or leave orphaned.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Disabling a user account through Webmin is very easy. Perform the following
    steps to do so:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **System** | **Users and Groups**, and click the username link of
    the account you want to edit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next page, check the box labeled **Login temporarily disabled**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: You can re-enable the account by following the same procedure. Just uncheck
    the **Login temporarily disabled** box, and hit **Save**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To disable a user account, Webmin updates the `/etc/shadow` file, which stores
    hashed user passwords. The password hash for the selected user is prepended with
    an exclamation point (`!`). This invalidates the hash and makes the password unusable,
    so the user can no longer log in. Removing the exclamation point re-enables the
    account.
  prefs: []
  type: TYPE_NORMAL
- en: Creating and editing a system group
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Creating and editing system groups through Webmin is very simple; just follow
    the steps outlined.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s start by creating a group as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **System** | **Users and Groups**, and click through to the **Local
    Groups** tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Create a new group**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next page, you will be asked to specify basic group information. Set
    **Group name** to a chosen name, and leave **Group ID** set to **Automatic**.
    Ignore the password fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can now add any user you choose to the group by moving them from the left
    to the right column of the **Users** widget.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Create** to finish and create the group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can now edit the group by performing the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go back to **System** | **Users and Groups**, and click the **Local Groups**
    tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the group's link in the **Group name** column.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be brought to a screen with a form similar to the one used to create
    a group, with one difference. If you now change a group's ID, you can tell Webmin
    to update files on the system with the new ID of the group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Save** button to save changes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Depending on which operating system you're using, Webmin will either directly
    modify system files that store information about groups (`/etc/group`, `/etc/gshadow`),
    or use a dedicated utility to update group information (such as the `dscl`—Directory
    Service command-line utility on OS X).
  prefs: []
  type: TYPE_NORMAL
- en: When you change a group's GID, Webmin will also scan your filesystem and update
    all the files owned by the group with its new GID.
  prefs: []
  type: TYPE_NORMAL
- en: Changing a user's password
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When a user forgets his/her password, he/she will contact you as the system's
    administrator and request a password reminder. For security reasons, passwords
    are stored on your system only in the form of cryptographic hashes, not plain
    text. Because of this, you cannot send passwords to users, but you can reset a
    password and send the new one to the user. The best practice in such a case is
    to make the new password usable only once, allowing the user to log in, but requesting
    that he/she immediately change it to a password of his/her own choice.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will describe how to reset a user's password to a one-time
    value.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In order to use single-use passwords in Webmin, we need to enable this feature.
    Go to **Webmin** | **Webmin Configuration** | **Authentication**, and set the
    **Password expiry policy** option to **Prompt users with expired passwords to
    enter a new one**.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to change the user''s password:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **System** | **Users and Groups**, and click the username link of
    the account you want to change the password for.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Password** section, choose **Normal password**, and enter a long, random
    string of characters. Make a note of this string, as we will send it to the user
    as a one-time login password afterward.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Take a look at the recipe, *Creating a Webmin user*, for a note about generating
    strong passwords.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Password Options** section, answer **Yes** to the **Force change at
    next login?** question.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Save** to commit changes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Send the new single-use password to the user.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Webmin modifies your system's passwords file (`/etc/shadow`), updating the user's
    stored password hash with the new string we provided.
  prefs: []
  type: TYPE_NORMAL
- en: Your system also stores the information about when the password was last changed.
    Webmin changes this setting to 0 (equivalent to January 1, 1970). This causes
    your system to request a password change next time the user logs in. Webmin also
    respects this setting and will ask the user to change the password when he/she
    logs into Webmin. Note the steps described in the *Getting ready* section.
  prefs: []
  type: TYPE_NORMAL
- en: Exporting users and importing them into another system
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you're setting up another server for your organization, you may need to
    recreate accounts of multiple users on the new system. Webmin's user management
    module has the ability to export data about existing user accounts to a special
    **batch file**, which you can then import into any other system that also runs
    Webmin. This allows you to recreate multiple accounts quickly and easily.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, we will export selected users from one system (source) and import
    them into a second system (destination).
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start by exporting users as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: On your source system, navigate to **System** | **Users and Groups**, and click
    the link marked **Export to batch file**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set **Batch file format** to **Standard passwd and shadow files**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that you should use an export format compatible with the destination operating
    system. Use the **Standard** format if you're exporting to Linux, but use the
    BSD, Mac OS, or AIX specific formats if you're exporting to those systems. Always
    test on a small number of users' accounts before importing a large batch.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Set **Batch file destination** to **Display in browser**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set **Users to export** to **Only users**, and click the ellipsis (**...**)
    at the end of the line.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A new user-chooser window will pop up, in which you can select the names of
    accounts you want to export.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select accounts by clicking their usernames on the left-hand side of the screen.
    If you make a mistake, you can remove an account by clicking its name listed among
    **Selected Users** on the right-hand side of the screen. After you make your selection,
    click **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Back in the **Export Batch File** screen, click **Export Now**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The resultant batch file will be displayed as text in your browser; copy this
    to your clipboard or save it to a local file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can now import the accounts on another machine.
  prefs: []
  type: TYPE_NORMAL
- en: On your destination system, navigate to **System** | **Users and Groups**, and
    click on the link marked **Run batch file**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set **Batch data source** to **Text in box**, and paste the exported batch file
    content into the provided text area.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Answer **Yes** to the following questions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Create, modify or delete users in other modules?**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Create home directories for created users?**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Copy files to home directories of created users?**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Passwords are already encrypted?**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Your screen should resemble the following screenshot:![How to do it...](img/5849OS_02_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Execute batch** to import the accounts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Webmin uses a simple but powerful file format to describe its operations on
    users and groups. Each line in this file describes a single operation, which may
    be either `create`, `modify`, or `delete`. Fields in each line are separated by
    colon characters (`:`), similar to the format of the Unix user file (`/etc/passwd`).
    The first field is the name of the operation, the second field contains the name
    of the user or group we want to perform the operation on, and the following fields
    contain additional data.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a brief explanation of the format for Webmin''s batch files:'
  prefs: []
  type: TYPE_NORMAL
- en: Webmin's batch file format for operations on users
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Webmin''s batch instructions are written as text with one operation described
    in each line. The following standard format is used in operations on system users
    in Linux:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The fields used in Webmin''s batch instructions are similar to fields stored
    in standard Unix system files. Following are various fields used in Webmin''s
    batch instruction:'
  prefs: []
  type: TYPE_NORMAL
- en: '`username`: This is the username of the account we want to perform our operation
    on (for example, `archer`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`oldusername` and `newusername`: These fields are used in a **modify** operation.
    The username field is used twice in case we want to change its value. The first
    instance is the current username, and the second is the value we want to change
    it to. You can leave `newusername` blank if you don''t want to make a change.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`passwd`: This is the password that may already be encrypted into a hash or
    provided in plain text (for example, `myVeryLongPassword123456789`). If this field
    contains just an `x` character, the account will be locked.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`uid`: This is the user ID represented as a number (for example, `500`). If
    this field is left empty, Webmin will assign an ID automatically.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`gid`: This is the ID of the user''s primary group (for example, `500`). If
    this field is left empty in a `create` operation, Webmin will automatically create
    a new group named the same as the user.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`realname`: This is the real name of the user (for example, `Sterling Archer`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`homedir`: This is the home directory of the user (for example, `/home/archer`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`shell`: This is the user''s default shell program (for example, `/bin/bash`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`min`: This is the minimum number of days until the system allows the user
    to change his/her password. You can set this to `0` to remove this limitation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`max`: This is the maximum number of days after which the system will force
    the user to change his/her password. Set this to `0` to remove this feature.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`warn`: This is the number of days before the password expires, during which
    the user will be warned about the upcoming password change.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`inactive`: This is the number of days after the password expires, during which
    the user will still be able to log in and change the password. After this time
    passes, the user will not be able to log in.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`expire`: This is the date when the password will expire, expressed as the
    number of days since January 1, 1970.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: If you're performing the `modify` operation, you can leave all fields empty,
    except for the ones you want to change.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Webmin's batch file format for operations on groups
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following format is used in operations on system groups:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The following fields are used:'
  prefs: []
  type: TYPE_NORMAL
- en: '`groupname`: This is the name of the group we want to perform an operation
    on (for example, `users`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`oldgroupname` and `newgroupname`: These fields are used in a **modify** operation.
    The group name field is used twice in case we want to change its value. The first
    instance is the current name of the group, and the second is the value we want
    to set it to.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`passwd`: Group passwords are not in common use. They may be used to password-restrict
    a user''s ability to add himself or herself to a group. Set this field to an asterisk
    or exclamation point (`*` or `!`) to disable this functionality.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`gid`: This is the group''s ID (for example, `100`). If this field is left
    empty, Webmin will set it automatically to the next available value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`member`: This is the username of a user account that should be a member of
    this group (for example, `archer`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Webmin's batch file format can be used to perform operations on both system
    users and groups. This functionality is not limited to exporting and importing
    data between systems. Batch files can also be used to quickly modify or delete
    multiple accounts.
  prefs: []
  type: TYPE_NORMAL
- en: Export and import system groups
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In order to export a list of system groups from one system to another, you can
    follow this recipe, but when you navigate to **System** | **Users and Groups**,
    switch to the **Local Groups** tab before performing the import and export.
  prefs: []
  type: TYPE_NORMAL
- en: Batch update user accounts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s say you find yourself in a situation that calls for a change in all
    system user accounts. Let''s also say, for example, that we decide to switch the
    default shell program of all accounts to `zsh`. In order to do that, you should
    prepare a batch file with the following line for each user, where `username` is
    substituted by the username of each account:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Next, navigate to **System** | **Users and Groups**; click on the link marked
    **Run batch file**, provide your batch file, and execute it. This will update
    all user accounts with the new default shell program.
  prefs: []
  type: TYPE_NORMAL
- en: The same method can be used to update the values of any standard account field.
  prefs: []
  type: TYPE_NORMAL
- en: Batch delete user accounts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you need to delete a large number of users, you can create a batch file
    with the following line for each user, where `username` is substituted by the
    name of each user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: We run the file in the same way as described previously.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use the same method to delete multiple groups; just use group names
    instead of a username, and switch to the **Local Groups** tab before executing
    the batch file.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can find more information about using Webmin''s batch formats on its wiki:
    [http://doxfer.webmin.com/Usermin/Introduction](http://doxfer.webmin.com/Usermin/Introduction).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Usermin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you would like to make the basic functionality of your system available
    to its users through an interface similar to Webmin, you can use Webmin''s companion
    product called Usermin. This environment is just as easy to use as Webmin and
    provides a number of features that do not require administrative privileges:'
  prefs: []
  type: TYPE_NORMAL
- en: Reading e-mails
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up mail forwarding and auto-replies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up scheduled e-mails
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing passwords
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Executing system commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Opening an SSH session in the browser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring Apache virtual hosts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring MySQL or PostgreSQL databases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up CRON jobs or scheduled command execution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Installation of Usermin is very simple and using it is analogous to using Webmin.
    The main difference is that you connect over a different port; the default port
    for Usermin is 20000.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start by installing Usermin:'
  prefs: []
  type: TYPE_NORMAL
- en: If you've installed Webmin from its repository, follow the recipe, *Installing
    software packages* from [Chapter 1](ch01.html "Chapter 1. Setting Up Your System"),
    *Setting Up Your System*, and install the package called `usermin`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: If you've installed Webmin from a package file instead of a repository, navigate
    to **Un-used Modules** | **Usermin Configuration**, and click on the button marked
    **Install Usermin** package.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After installing the package, click **Refresh Modules** in Webmin's sidebar
    menu and reload Webmin.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After installation, Usermin will be automatically activated. The usage of Usermin
    is analogous to the way you use Webmin. Usermin''s default port is 20000, so you
    can connect to it using your web browser and the following address; just substitute
    the words `webmin.host` with the IP address or domain name of your server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: You can now log in as any user of your system and explore Usermin's features.
  prefs: []
  type: TYPE_NORMAL
- en: Usermin's configuration is done through Webmin and is available in the **Webmin**
    | **Usermin Configuration** module. Notice that this screen is similar to Webmin's
    main settings screen. Configuration options are analogous but limited to the features
    of Usermin.
  prefs: []
  type: TYPE_NORMAL
- en: 'First of all, let''s decide which of our users will have access to Usermin:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Webmin** | **Usermin Configuration** | **Allowed Users and Groups**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Usermin login access control** section, select **Only allow listed
    users**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can now provide a list of usernames of users whom you wish to grant access
    to Usermin. If you want to add all members of a group, add the group name to the
    list preceded by an `@` sign, that is, `@groupname`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Second, let''s decide which Usermin modules to make available:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Webmin** | **Usermin Configuration** | **Available Modules**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the boxes next to each module that you wish to make available to users.
    If you're not sure what a module does, it's probably best to leave it unavailable
    until you decide you need it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In order to configure options specific to each module, navigate to **Webmin**
    | **Usermin Configuration** | **Usermin Module Configuration**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the name of the module and set its options.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be able to set modules' global options (**Global module configuration**
    tab) and default values, which the user will be able to override (**Default user
    preferences** tab).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Usermin is a companion package to Webmin, which is installed by default in the
    directory, `/usr/share/usermin`. It functions in much the same way as Webmin,
    but is focused on providing access to basic functions that don't require root
    privileges.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Because Usermin''s functionality is similar to Webmin''s, you can refer to
    other recipes in this book to get an idea about its usage and configuration. In
    particular, take a look at the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Setting Up Your System"), *Setting Up Your
    System*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running
    an Apache Web Server*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 9,](ch09.html "Chapter 9. Running a MySQL Database Server") *Running
    a MySQL Database Server*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Running a PostgreSQL Database Server"),
    *Running a PostgreSQL Database Server*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can find more information about Usermin online at the following URL: [http://doxfer.webmin.com/Usermin/Introduction](http://doxfer.webmin.com/Usermin/Introduction)'
  prefs: []
  type: TYPE_NORMAL
