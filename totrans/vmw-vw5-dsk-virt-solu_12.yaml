- en: Chapter 12. VMware View 5.1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At the launch of this book, VMware View 5.0 was being superseded by the VMware
    View 5.1 release, and despite being a .1 release, the VMware View team added a
    significant number of features that improve the VMware View performance, scalability,
    and user experience.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter splits the new features into five main areas as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User experience and client
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Management and administration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Persona management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Platform features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The platform feature enhancements in VMware View 5.1 are focused on making the
    storage requirements less dramatic. As a significant portion of this book has
    been dedicated to streamlining and optimizing the storage requirements, the improvements
    in VMware View 5.1 are quite welcome.
  prefs: []
  type: TYPE_NORMAL
- en: Content-Based Read Cache (also known as View Storage Accelerator)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Content-Based Read Cache (CBRC)** feature is native to VMware vSphere
    5 and is managed by VMware View. CBRC helps to address some of the typical VDI
    performance bottlenecks, as well as help to decrease the overall storage cost
    for VDI.
  prefs: []
  type: TYPE_NORMAL
- en: CBRC is a RAM-based caching solution on a given ESXi host that helps to reduce
    the number of read I/Os issued to the storage subsystem. By reducing the number
    of read I/Os issued to the storage subsystem, improved scalability of the storage
    subsystem and overall performance can be realized. CBRC is completely transparent
    to the guest OS (vDesktop).
  prefs: []
  type: TYPE_NORMAL
- en: 'VMware announced that during their tests with CBRC, there was an approximate
    reduction of boot storm as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 80 percent of peak IOPS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 45 percent of average IOPS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 65 percent of peak throughput
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 25 percent of average throughput
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are significant savings of the storage subsystem and should be carefully
    considered during a VMware View design. It should be noted that CBRC is a feature
    for read I/Os only.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two components of the cache as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**In-memory cache:** This is configured by the administrator and has a fixed
    maximum size of 2 GB and default memory reservation of 400 MB'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dynamic cache:** It loads blocks on demand and manages the cache based on
    access patterns of the various blocks on the VMDK'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A digest/metadata table that is maintained on disk for each VMDK disk on the
    host. The metadata holds information about the various blocks on the VMDK. It
    can be imagined as a hash table with each hash entry pointing to a particular
    block.
  prefs: []
  type: TYPE_NORMAL
- en: Putting the preceding two components together, if there is a read request to
    a particular block on the VMDK, a hash value is computed, and the in-memory cache
    is checked to see if the block is present. If it is not present, the hash table
    is accessed and the appropriate block is loaded into the in-memory cache. If the
    block is already in the in-memory cache, it is returned back to the user.
  prefs: []
  type: TYPE_NORMAL
- en: '![Content-Based Read Cache (also known as View Storage Accelerator)](img/1124EN_12_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The additional memory taken up by CBRC itself is treated as a **regression**
    as far as memory consumption goes. As memory requirements are not as high for
    CBRC for steady state workload, vSphere characterizes and reduces memory consumption.
  prefs: []
  type: TYPE_NORMAL
- en: CBRC will benefit VDI environments without intelligent arrays and cache management.
    However, for arrays with read or read/write cache management, CBRC will also help
    to reduce I/O latency in the storage fabric. As read I/Os are served from in-host
    RAM, there is no requirement to go out to the network to retrieve data blocks.
    Additionally, data blocks are retrieved to the guest in terms of microseconds,
    instead of milliseconds.
  prefs: []
  type: TYPE_NORMAL
- en: '![Content-Based Read Cache (also known as View Storage Accelerator)](img/1124EN_12_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding diagram highlights the direct access the ESXi host has to its
    memory, where the CBRC resides. If data must be retrieved from a typical storage
    array, the request must traverse any paths to have the request fulfilled. The
    I/O performance improvement delivered by CBRC is clearly noticed by end users
    while using their desktops. However, it should be duly noted that the majority
    of I/Os during a steady-state workload are write I/Os, not read I/Os.
  prefs: []
  type: TYPE_NORMAL
- en: View Storage Accelerator allows host caching of OS Disks and user-persistent
    disks on linked clone desktops; and administrators also have the ability to specify
    how often the cache metadata should be regenerated.
  prefs: []
  type: TYPE_NORMAL
- en: CBRC storage sizing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When View Storage Accelerator is enabled (OS Disk, or OS and persistent disk),
    a per-VMDK digest file is created to store hash information about the VMDK blocks.
  prefs: []
  type: TYPE_NORMAL
- en: 'The estimated size of each digest file is roughly:'
  prefs: []
  type: TYPE_NORMAL
- en: 5 MB per 1 GB of the VMDK size when hash collision detection is Off (default
    value)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 12 MB per 1 GB of the VMDK size when hash collision detection is On
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![CBRC storage sizing](img/1124EN_12_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows the existence of the CBRC digest files in a given
    datastore.
  prefs: []
  type: TYPE_NORMAL
- en: '![CBRC storage sizing](img/1124EN_12_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Within VMware vCenter's task pane, the creation of a virtual disk digest will
    also be displayed.
  prefs: []
  type: TYPE_NORMAL
- en: The digest file creation for a large replica disk can take a reasonable amount
    of time and IOPS, therefore it is recommended not to run the operation, create
    new desktop pools, or recompose existing pools during production hours.
  prefs: []
  type: TYPE_NORMAL
- en: As an example, a 25 GB Windows VM replica will consume about 125 MB of storage
    space for the digest file. For snapshots (deltas) or persistent disks, a snapshot
    is created for the digest file as well. If a VMDK is cloned, the digest file is
    copied.
  prefs: []
  type: TYPE_NORMAL
- en: Due to the fact that Windows-based desktops will have a significant percentage
    of identical blocks between them, it is safe to assume that performance gains
    can be realized when using CBRC with full desktop clones. At the time of writing,
    however, full desktop clones were not supported by CBRC.
  prefs: []
  type: TYPE_NORMAL
- en: For 5 GB persistent disks, the digest file will be approximately 24 MB.
  prefs: []
  type: TYPE_NORMAL
- en: Host memory sizing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: CBRC uses a RAM cache to manage the cached disk blocks. The per-VMDK digest
    file is also loaded in the memory.
  prefs: []
  type: TYPE_NORMAL
- en: CBRC should not be enabled under memory-overcommit environments. If a host is
    memory overcommitted and CBRC is enabled, the memory pressure is increased as
    CBRC also uses memory for the cache. In such cases, the host could experience
    increased swapping and the overall host performance could be impacted. In this
    scenario, enabling CBRC could actually make the performance worse.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot is a graph demonstrating the moment when CBRC with
    512 MB cache is enabled on the host:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Host memory sizing](img/1124EN_12_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As CBRC consumes host memory as part of its architecture, host disk swap and
    performance degradation can be mitigated by reducing VM density on the hosts themselves.
    A more favorable approach is to size the hosts appropriately to include the additional
    RAM required to support the CBRC functionality.
  prefs: []
  type: TYPE_NORMAL
- en: For each VMDK digest created, approximately 24 MB of RAM is consumed in addition
    to the defined CBRC cache. As an example, if only one system disk is being hashed
    and the host cache is 500 MB, then 500 MB + 24 MB = total of 524 MB memory will
    be used.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to remember that it is possible to create digests for system
    and persistent disks as well.
  prefs: []
  type: TYPE_NORMAL
- en: In another example, if 64 VMs were in use, there would be 64 persistent disks,
    plus 1 replica disk. In this case, we would have 65 VMDK to be hashed. Assuming
    that host cache is using 2 GB RAM (maximum size), then 2048 MB + (65 * 24 MB)
    = total of 3.5 GB memory will be used.
  prefs: []
  type: TYPE_NORMAL
- en: Managing CBRC
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In VMware View, CBRC is under the **Host Caching** tab of **vCenter Server**
    configuration. It is possible to enable and define the total amount of RAM cache
    assigned for the host. Each host may have a different cache size, although it
    is recommended to maintain consistency across the vSphere cluster.
  prefs: []
  type: TYPE_NORMAL
- en: '![Managing CBRC](img/1124EN_12_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: During the desktop pool creation process, administrators may define that the
    pool should use CBRC, the types of disks to have the digest file created for,
    and how often the digest file should be regenerated.
  prefs: []
  type: TYPE_NORMAL
- en: '![Managing CBRC](img/1124EN_12_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The following options are exposed through `/config/CBRCFilter/intOpts` and
    is visible through the VMware vSphere Client Advanced Configuration. VMware View
    has built-in capabilities to manage the following options, and it''s recommended
    not to manually modify any of these items:'
  prefs: []
  type: TYPE_NORMAL
- en: '`/config/CBRC/intOpts/DCacheMemReserved:` Memory consumed by CBRC data cache
    (in MB).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/config/CBRC/intOpts/DCacheSize:` Size of CBRC data cache (in MB). This cannot
    be changed if **CBRC.Enable** is set to **1**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/config/CBRC/intOpts/DigestJournalBootInterval:` Interval (in minutes) for
    which Digest Journal is temporarily disabled to avoid interfering with the boot
    process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/config/CBRC/intOpts/Enable:` Enable Content-Based Read Cache.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It is important to note that View Storage Accelerator is not supported under
    certain conditions, including:'
  prefs: []
  type: TYPE_NORMAL
- en: With View Composer APIs for Array Integration, which is a Tech Preview feature
    of View 5.1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For use with desktops with the Local Mode feature turned on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When VMware View replica tiering is enabled.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: View Composer Array Integration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**View Composer Array Integration (VCAI)** is a Tech Preview feature in VMware
    View 5.1, which allows administrators to take advantage of the storage-native
    snapshot feature within the normal administrative workflow of VMware View and
    View Composer.'
  prefs: []
  type: TYPE_NORMAL
- en: VCAI integrates with **Network-attached storage (NAS)** partner's native cloning
    capabilities using **vSphere vStorage APIs for Array Integration (VAAI)**. VCAI
    speeds up provisioning of linked clone virtual desktops in automated pools, helping
    to offload CPU consumption and network bandwidth.
  prefs: []
  type: TYPE_NORMAL
- en: '![View Composer Array Integration](img/1124EN_12_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It is recommended to read *VMware End-User Computing Blog* at [http://blogs.vmware.com/euc/2012/05/view-composer-array-integration-tech-preview.html.](http://blogs.vmware.com/euc/2012/05/view-composer-array-integration-tech-preview.html.)
  prefs: []
  type: TYPE_NORMAL
- en: Support 32 (up from 8) hosts in a cluster on NAS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Until VMware View 5.1, any vSphere cluster supporting VMware View deployments
    with linked clones would only allow for clusters with a maximum of 8 hosts. The
    reason behind the limitation is a VMFS limit on the number of hosts that can concurrently
    execute I/O operations against a single file; the replica disk.
  prefs: []
  type: TYPE_NORMAL
- en: This was never much of an issue when talking about NFS exports; however, the
    limitation was hardcoded into View Composer the tool responsible for creating
    the linked clones.
  prefs: []
  type: TYPE_NORMAL
- en: With VMware View 5.1, this limitation has been removed and View Composer will
    support a cluster with 32 hosts if the underlying storage filesystem and protocol
    is NFS. This change completely modifies the architecture of many VMware View deployments
    with NFS-based clusters. As this was a late addition to the book, its increased
    in-host support (from 8 to 32) for NFS will be addressed in a future blog post
    or addendum.
  prefs: []
  type: TYPE_NORMAL
- en: Standalone View Composer Server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: VMware View Composer is the software responsible for creating linked clones
    and may now be installed in a server other than vCenter Server. This move is aiming
    towards a highly scalable VMware View architecture.
  prefs: []
  type: TYPE_NORMAL
- en: '![Standalone View Composer Server](img/1124EN_12_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows the configuration tab where a standalone View
    Composer Server can be configured. This is ideal for large environments where
    the resilience and performance of both the VMware vCenter Server(s) and VMware
    View Composer Server(s) must be protected.
  prefs: []
  type: TYPE_NORMAL
- en: Customizable disposable disk drive letter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'VMware View 5.1 has added the ability to specify the drive letter for disposable
    disks. In the past, the disposable disk would utilize the first available drive
    letter in the desktop. VMware View can still autoselect the drive letter by leaving
    the **Drive letter** option set to **Auto** mode, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Customizable disposable disk drive letter](img/1124EN_12_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows the configuration tab for the disposable disk
    drive letter.
  prefs: []
  type: TYPE_NORMAL
- en: User experience and client features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VMware View 5.1 has a large number of improvements that directly affect the
    user experience. Both VMware View and Teradici PCoIP continue to evolve with every
    release. Comparing the end user experience of VMware View 4.x and VMware View
    5.1 shows a very significant improvement.
  prefs: []
  type: TYPE_NORMAL
- en: VMware View 5.1 delivers enhancement in several user experience and client areas,
    including Local Mode and USB redirection.
  prefs: []
  type: TYPE_NORMAL
- en: 'The enhancements for VMware View Local Mode are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Multi-monitor support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disk I/O performance improvements and reduced deduplication I/O cost
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NAT support for DNS over TCP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Local Mode disk consistency validations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtual Hardware Version 8 support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved NAT, DNS resolution performance, link state propagation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One click to send the *Ctrl* + *Alt* + *Delete* keystrokes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automation Support for Point-of-Sale operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data integrity and security hardening
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'VMware also reworked the USB stack for Windows clients with VMware View 5.1\.
    The enhancements for USB are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Broader device support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New filtering mechanism for better management of devices on Client, configurable
    via Group Policies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multi-platform support for USB View Client
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New filtering mechanism for better management of devices on Agent, allowing
    blocking of unwanted devices and blocking of devices that are forwarded by other
    means (for example, keyboards/smartcards), configurable via Group Policies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The device driver for a device no longer needs to be installed on the client
    machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are also a small number of enhancements for PCoIP. These enhancements
    include reduction in CPU utilization to decode PCoIP frames on the client side,
    ultimately improving the protocol performance.
  prefs: []
  type: TYPE_NORMAL
- en: Management and administration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While VMware View has proven to be relatively easy to manage and administer,
    there have been definite areas for improvement, including basic UI features such
    as right-click. In VMware View 5.1, there are several improvements to the UI and
    management of VMware View.
  prefs: []
  type: TYPE_NORMAL
- en: UI enhancements and localization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The user interface in VMware View 5.1 has a new look and feel; it's sleeker
    and faster. VMware View has also been localized to five different foreign languages
    (French, German, Japanese, Korean, and Simplified Chinese).
  prefs: []
  type: TYPE_NORMAL
- en: '![UI enhancements and localization](img/1124EN_12_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: A new right-click functionality has been added to the user interface to help
    streamline the process of managing desktop pools, entitlements, and desktops.
  prefs: []
  type: TYPE_NORMAL
- en: '![UI enhancements and localization](img/1124EN_12_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Support of pre-created Active Directory Machine Accounts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The ability to utilize pre-created Active Directory computer objects is a great
    addition for organizations that need to create their own Active Directory computer
    accounts due to security guidelines, or because of automation processes in place
    to ensure that Active Directory objects are created upon the user joining the
    organization, as an example.
  prefs: []
  type: TYPE_NORMAL
- en: '![Support of pre-created Active Directory Machine Accounts](img/1124EN_12_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows the configuration tab for allowing the use of
    pre-existing Active Directory computer accounts.
  prefs: []
  type: TYPE_NORMAL
- en: VMware vCenter and View Composer Advanced Settings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The VMware View user interface now allows administrators to specify the maximum
    concurrent number of provisioning and maintenance operations. Previously, only
    power and vCenter concurrent operations were available for configuration via the
    user interface.
  prefs: []
  type: TYPE_NORMAL
- en: It is recommended not to change the default settings in the production environment
    as it could affect the user experience; this is because an environment under heavy
    provisioning or maintenance tasks could generate significant IOPS, impacting all
    of the current users.
  prefs: []
  type: TYPE_NORMAL
- en: '![VMware vCenter and View Composer Advanced Settings](img/1124EN_12_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows the configuration tab for specifying advanced
    operation maximums.
  prefs: []
  type: TYPE_NORMAL
- en: Phone home
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is an opt-in option during install time for anonymous VMware View usage
    statistics collection. All data is made anonymous and untraceable, and phone home
    will collect information on versions, features used, system architecture choices,
    and deployment scale.
  prefs: []
  type: TYPE_NORMAL
- en: VMware aims to use this information to provide better support and more enhancements
    to the most popular features. In addition, VMware believes that this data collection
    will allow for better alignment of View product R&D priorities to match the customer
    use out in the field.
  prefs: []
  type: TYPE_NORMAL
- en: '![Phone home](img/1124EN_12_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows the configuration tab for enabling phone-home
    support (Participate **anonymously in the user experience improvement program)**.
  prefs: []
  type: TYPE_NORMAL
- en: Persona management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Persona management has also received enhancement in VMware View 5.1\. While
    many organizations will continue to use third-party solutions such as Liquidware
    Labs ProfileUnity, the native persona management in VMware View is starting to
    evolve into a more acceptable solution. The enhancements in View 5.1 to persona
    management include:'
  prefs: []
  type: TYPE_NORMAL
- en: Allowing virtual profile management of physical machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A one-time Windows XP to Windows 7 migration capability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware View Persona Management now offers profile support on physical machines
    to help a user's transition from physical to VMware View desktops. As mentioned
    earlier in this book, extracting the user profile from a vDesktop (as is typical
    in a non-persistent solution) allows for an easier migration from a physical desktop
    to a vDesktop.
  prefs: []
  type: TYPE_NORMAL
- en: During a physical to virtual migration, the administrator can first install
    View Persona Management on the physical desktop, and when the user uses a virtual
    desktop with persona management enabled, user data and settings are automatically
    synchronized.
  prefs: []
  type: TYPE_NORMAL
- en: VMware also provides support for a one-time Windows XP to Windows 7 migration.
  prefs: []
  type: TYPE_NORMAL
- en: Security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Security was a big topic addressed in VMware View 5.1, including security hardening
    and fixes. Security is a big driver for many organizations to adopt VDI. The continued
    improvements in the security area of the product highlight VMware''s commitment
    to highly-secured environments. The release of View 5.1 includes the following
    security enhancements:'
  prefs: []
  type: TYPE_NORMAL
- en: Support for multiple two-factor authentication with RADIUS Support, including
    vendors such as RSA SecurID, VASCO DIGIPASS, SMS Passcode, SafeNet, and others.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VMware View Administrator session timeout:** The session timeout option was
    always there, but now it is an option that can be configured by the administrator.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SSL certificate security enhancements:** VMware View 5.1 now alerts when
    self-signed certificates are used. Administrators will have to validate the use
    of self-signed certificates. VMware recommends that trusted **certification authority
    (CA)** services should be used.![Security](img/1124EN_12_16.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The preceding screenshot shows the configuration tab for enabling the VMware
    View Administrator **Session timeout**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Security](img/1124EN_12_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows an error generated from using self-signed certificates.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VMware continues to evolve the View product through acquisition, internal R&D,
    customer feedback, support from partners such as Teradici, and involvement from
    the community. As this book was already completed and in the final publishing
    process when View 5.1 was released, the authors felt it was important to have
    an overview of the new content. For additional reading, please refer to the blogs
    [http://myvirtualcloud.net/](http://myvirtualcloud.net/) and [http://www.thinkvirt.com/](http://www.thinkvirt.com/).
  prefs: []
  type: TYPE_NORMAL
