- en: Chapter 11. Running Web Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章. 运行 Web 应用程序
- en: 'In this chapter, we will cover the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Generating dynamic pages using CGI
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 CGI 生成动态页面
- en: Installing PHP
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 PHP
- en: Changing PHP configuration settings
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改 PHP 配置设置
- en: Displaying PHP errors while debugging
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试时显示 PHP 错误
- en: Logging in PHP
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 PHP 中记录日志
- en: Installing WordPress on your server
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的服务器上安装 WordPress
- en: Installing Drupal on your server
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的服务器上安装 Drupal
- en: Installing a Django-based application using `mod_wsgi`
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `mod_wsgi` 安装基于 Django 的应用程序
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Internet sites may be roughly divided into two categories: static and dynamic.
    When a web server hosts a static site, its role is very limited. The server waits
    for incoming requests, maps every request to a file on its disk, and sends contents
    of the file as its response. All pages of such a site have to be prepared ahead
    of time, and they don''t change automatically between visits. The functionality
    of such sites may seem limited, but they do have a number of advantages. Since
    the server doesn''t do any computational work, static sites can be very fast and
    can serve large numbers of requests. Such sites are also easy to index by search
    engines. The fact that a site is static does not mean that it can''t be interactive.
    JavaScript components allow the browser to provide the user with a graphical interface,
    through which he or she may interact with our website. In the end though, if the
    user provides us with information we would like to store, we will need a dynamic
    component to process incoming data.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网网站大致可以分为两类：静态网站和动态网站。当 Web 服务器托管静态网站时，其角色非常有限。服务器等待传入的请求，将每个请求映射到磁盘上的文件，并将文件的内容作为响应发送。此类网站的所有页面必须提前准备好，并且在访问之间不会自动更改。此类网站的功能看起来可能有限，但它们确实有许多优点。由于服务器不进行任何计算工作，静态网站可以非常快速，并且可以处理大量请求。此类网站也容易被搜索引擎索引。静态网站并不意味着它不能具有互动性。JavaScript
    组件允许浏览器为用户提供图形界面，用户可以通过这个界面与我们的网站互动。然而，如果用户提供我们希望存储的信息，我们将需要一个动态组件来处理传入的数据。
- en: On a dynamic website, incoming requests are not mapped directly to files on
    a disk; instead, they are handed over to programs that process each request and
    produce a response. Processing usually involves interacting with a database to
    look up or store information; the response is generated on the fly and may be
    different each time. Dynamic websites are an essential component of the modern
    Internet, and Apache is a server that can host most available dynamic technologies.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在动态网站上，传入的请求不会直接映射到磁盘上的文件；相反，它们会交给程序处理，每个请求都会生成一个响应。处理通常涉及与数据库交互以查找或存储信息；响应是即时生成的，并且每次可能不同。动态网站是现代互联网的一个重要组成部分，而
    Apache 是一个可以托管大多数可用动态技术的服务器。
- en: In [Chapter 8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running
    an Apache Web Server*, we demonstrated how Webmin can help you set up a web server
    to host static websites. In this chapter, we will dive into topics related to
    various dynamic website solutions. We will start with CGI, the classic way to
    serve dynamic websites using programs written in any language. To illustrate the
    point, we will demonstrate how to set up a simple dynamic website powered by a
    Bash script. We will then proceed to demonstrate how more efficient language-specific
    technologies can be hosted. Most of this chapter is focused on the PHP language,
    but the final recipe demonstrates how applications written in Python may be hosted
    using the Apache module `mod_wsgi`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第8章](ch08.html "第8章. 运行 Apache Web 服务器")中，*运行 Apache Web 服务器*，我们展示了 Webmin
    如何帮助您设置 Web 服务器来托管静态网站。在本章中，我们将深入探讨与各种动态网站解决方案相关的话题。我们将从 CGI 开始，这是通过使用任何语言编写的程序来提供动态网站的经典方法。为了说明这一点，我们将演示如何设置一个由
    Bash 脚本驱动的简单动态网站。接下来，我们将展示如何托管更高效的特定语言技术。本章的大部分内容都集中在 PHP 语言上，但最后的示例演示了如何使用 Apache
    模块 `mod_wsgi` 托管用 Python 编写的应用程序。
- en: Generating dynamic pages using CGI
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CGI 生成动态页面
- en: Since the earliest days of the World Wide Web, it was possible to generate web
    pages dynamically using a standard method called the **Common Gateway Interface**
    (**CGI**). With the use of CGI, an Apache web server can generate dynamic content
    by executing any program installed on the same machine as long as that program
    generates the text of a properly formatted HTTP response. The main advantage of
    this method is its universality, as CGI scripts may be written in any programming
    language. In this recipe, we will demonstrate how to write a simple Hello World
    script in the shell scripting language, Bash, but the same principles would apply
    to any other programming language.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 自万维网（World Wide Web）最早期以来，使用一种标准方法叫做 **公共网关接口**（**CGI**）生成动态网页是可能的。通过使用 CGI，Apache
    Web 服务器可以通过执行安装在同一台机器上的任何程序来生成动态内容，只要该程序生成格式正确的 HTTP 响应文本。这种方法的主要优点是其普适性，因为 CGI
    脚本可以用任何编程语言编写。在本食谱中，我们将演示如何用 shell 脚本语言 Bash 编写一个简单的 Hello World 脚本，但相同的原理也适用于任何其他编程语言。
- en: The main disadvantage of the CGI protocol is the fact that the web server must
    invoke a new process for each incoming request. This solution does not scale very
    well and is therefore applicable to low traffic sites only. The other disadvantage
    of using CGI directly is that the protocol is very basic and parsing of incoming
    requests has to be done manually by your scripts.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: CGI 协议的主要缺点是 Web 服务器必须为每个传入请求启动一个新进程。这个解决方案的扩展性较差，因此仅适用于低流量的网站。使用 CGI 的另一个缺点是该协议非常基础，传入请求的解析必须由您的脚本手动完成。
- en: Basic CGI is superseded by technologies that do not require a new process to
    be invoked for every incoming request but have a component loaded into memory,
    ready to process requests. These solutions are usually language specific and may
    come as Apache modules, for instance `mod_perl`, `mod_php` or `mod_python`. Some
    of these technologies are described in subsequent recipes in this chapter.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 基本 CGI 已被不需要为每个传入请求启动新进程，而是将一个组件加载到内存中，随时准备处理请求的技术所取代。这些解决方案通常是语言特定的，并且可能作为
    Apache 模块提供，例如 `mod_perl`、`mod_php` 或 `mod_python`。本章后续的食谱中会描述其中的一些技术。
- en: The method described in this recipe is still suitable for small tasks. If you
    have a web server and wish to return a simple status page but don't want the overhead
    (and potential security risks) associated with installing a technology such as
    PHP, you could use this basic method of generating dynamic web pages.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱中描述的方法仍然适用于小型任务。如果您有一个 Web 服务器并希望返回一个简单的状态页面，但又不想安装像 PHP 这样的技术所带来的开销（和潜在的安全风险），您可以使用这种基本的方法生成动态网页。
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: CGI scripts are regular programs from the perspective of your Unix system, and
    they have access to the underlying machine with the same privileges as the web
    server process. If a CGI script accepts user input, great care should be taken
    to verify and clean up incoming data. Mistakes in input handling often become
    security vulnerabilities, which can be exploited.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Unix 系统的角度来看，CGI 脚本是常规程序，它们具有与 Web 服务器进程相同的权限，可以访问底层机器。如果 CGI 脚本接受用户输入，应格外小心，验证并清理传入的数据。输入处理中的错误常常会成为安全漏洞，并可能被利用。
- en: Getting ready
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe involves the configuration of an Apache web server. Information
    about installing and configuring Apache can be found in [Chapter 8](ch08.html
    "Chapter 8. Running an Apache Web Server"), *Running an Apache Web Server*.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱涉及 Apache Web 服务器的配置。有关安装和配置 Apache 的信息，请参见 [第 8 章](ch08.html "第 8 章. 运行
    Apache Web 服务器")，*运行 Apache Web 服务器*。
- en: Checking what user and group Apache is running as
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查 Apache 正在作为哪个用户和组运行
- en: 'The Apache web server accesses your system as a special user, usually called
    `apache`, `www-data`, `wwwrun`, `httpd`, or something similar. In order to complete
    this recipe, you''ll need to know the username and group of this Apache user.
    This can be easily checked through Webmin, as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Web 服务器作为一个特殊用户访问您的系统，通常被称为 `apache`、`www-data`、`wwwrun`、`httpd` 或类似的名称。为了完成本食谱，您需要知道该
    Apache 用户的用户名和组名。这可以通过 Webmin 轻松检查，步骤如下：
- en: Navigate to **Servers** | **Apache Webserver** | **Global configuration**.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **服务器** | **Apache Web 服务器** | **全局配置**。
- en: Click on the **User and Group** icon. You will see the following screen:![Checking
    what user and group Apache is running as](img/5849_11_01.jpg)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **用户和组** 图标。您将看到以下屏幕：![检查 Apache 正在作为哪个用户和组运行](img/5849_11_01.jpg)
- en: The Apache username will be displayed in the **Run as Unix user** field and
    the group in the **Run as Unix group** field. Both values are set to `www-data`
    in the preceding image. Make a note of your system's configuration.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Apache用户名将在**以Unix用户身份运行**字段中显示，组名将在**以Unix组身份运行**字段中显示。前面截图中的这两个值都设置为`www-data`。请记下系统的配置。
- en: How to do it...
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: This recipe will consist of two sections. First, we'll create a CGI script and
    then the Apache configuration needed to display the web page it generates.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将分为两部分。首先，我们将创建一个CGI脚本，然后配置Apache以显示它生成的网页。
- en: 'Follow these steps to create a CGI-compatible shell script:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建一个兼容CGI的Shell脚本：
- en: Create the directory that will contain your web-accessible CGI scripts, for
    instance, in `/usr/lib/cgi-bin`.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个目录来存放你的Web可访问CGI脚本，例如，在`/usr/lib/cgi-bin`中。
- en: Tip
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It is not a good idea to store CGI scripts in the `DocumentRoot` directory from
    which regular HTML pages are served. Incorrect configuration of the server could
    expose the source code of your scripts, run scripts that should not be executed,
    or make the directory writeable, which would constitute a serious security vulnerability.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将CGI脚本存放在`DocumentRoot`目录中并不推荐，因为该目录通常用于提供常规HTML页面。不正确的服务器配置可能会暴露脚本的源代码，运行不应执行的脚本，或使目录可写，这将导致严重的安全漏洞。
- en: 'Create a shell script file named `/usr/lib/cgi-bin/hello.sh`. Enter the following
    code in this file:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`/usr/lib/cgi-bin/hello.sh`的Shell脚本文件。在该文件中输入以下代码：
- en: '[PRE0]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Set the group owner of the script to the name of the group that Apache runs
    as. If Apache runs as `www-data` on your system, you can do this by executing
    the following command:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将脚本的组所有者设置为Apache运行时使用的组名。如果Apache在你的系统上以`www-data`身份运行，你可以通过执行以下命令来完成：
- en: '[PRE1]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Allow the group read and execute privileges to the file, full access to the
    owner, and no access to other users. You can do this by executing the following
    command:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许该文件的组具有读取和执行权限，所有者具有完全访问权限，其他用户则没有权限。你可以通过执行以下命令来完成：
- en: '[PRE2]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Information about manipulating files and changing ownership and permissions
    can be found in the *Manage files and directories on the server* recipe in [Chapter
    6,](ch06.html "Chapter 6. Managing Files on Your System") *Managing Files on Your
    System*.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关操作文件、改变所有权和权限的更多信息，请参见[第6章](ch06.html "第6章 管理系统上的文件") *管理系统上的文件*中的*管理服务器上的文件和目录*。
- en: 'Follow these steps to create the Apache configuration:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建Apache配置：
- en: Navigate to **Servers** | **Apache Webserver**.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**服务器** | **Apache Web服务器**。
- en: Click on the icon of the virtual server you wish to configure or click on **Default
    Server**.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击你想要配置的虚拟服务器图标，或者点击**默认服务器**。
- en: Click on the **CGI Programs** icon.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**CGI程序**图标。
- en: Create a CGI directory alias by setting the **From** value to `/cgi-bin/` and
    the **To** value to `/usr/lib/cgi-bin/`:![How to do it...](img/5849_11_02.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将**从**值设置为`/cgi-bin/`，将**到**值设置为`/usr/lib/cgi-bin/`来创建CGI目录别名：![如何操作...](img/5849_11_02.jpg)
- en: Click the **Save** button.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮。
- en: Under **Create Per-Directory, Files or Location Options**, select **Directory**
    and create a configuration for the path, `/usr/lib/cgi-bin`.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**创建每目录、文件或位置选项**下，选择**目录**，并为路径`/usr/lib/cgi-bin`创建配置。
- en: Click the icon for the directory, `/usr/lib/cgi-bin`.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击目录图标，`/usr/lib/cgi-bin`。
- en: Click the **Document Options** icon.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**文档选项**图标。
- en: Under **Directory options**, choose **Selected below..**, set **Execute CGI
    programs** to **Yes**, and set all other options to **No**.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**目录选项**下，选择**以下选项**，将**执行CGI程序**设置为**是**，并将其他所有选项设置为**否**。
- en: Under **Options file can override..**, set **Selected below...** and leave all
    checkboxes unmarked. Consider the following screenshot:![How to do it...](img/5849_11_03.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选项文件可以覆盖..**下，选择**以下选项**，并保持所有复选框未选中。参考以下截图：![如何操作...](img/5849_11_03.jpg)
- en: Click the **Save** button.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮。
- en: Click the **Access Control** icon.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**访问控制**图标。
- en: 'Under **Restrict access**, select **Allow then deny** and set only one entry,
    as follows: **Action** to **Allow** and **Condition** to **All requests**. Consider
    the following screenshot:![How to do it...](img/5849_11_04.jpg)'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**限制访问**下，选择**先允许后拒绝**，并只设置一条规则，如下所示：**动作**设置为**允许**，**条件**设置为**所有请求**。参考以下截图：![如何操作...](img/5849_11_04.jpg)
- en: Click the **Save** button.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮。
- en: Tip
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You may wish to restrict access to specific client IPs if the presented data
    must not be made public. The location can also be protected with a password.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果呈现的数据不应公开，您可能希望限制特定客户端IP的访问权限。该位置也可以通过密码保护。
- en: Click the **Apply Changes** link.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用更改**链接。
- en: To see the result, navigate to the URL, `http://your-server/cgi-bin/hello.sh`,
    where `your-server` is the IP or domain name of your Apache server machine.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看结果，请访问网址`http://your-server/cgi-bin/hello.sh`，其中`your-server`是您的Apache服务器机器的IP地址或域名。
- en: You should see a webpage with the words, **Hello World**, and the current date.
    Your shell script executed by Apache through the common gateway interface generated
    this text dynamically.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能看到一个网页，显示**Hello World**和当前日期。通过常见网关接口（CGI）由Apache执行的您的Shell脚本动态生成了这段文本。
- en: How it works...
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When a browser requests a URL with a path matching `/cgi-bin/hello.sh`, Apache
    recognizes it as an alias to the script, `/usr/lib/cgi-bin/hello.sh`. Apache prepares
    an execution environment in which various request parameters, such as HTTP headers
    and the query string, are set as environment variables and then executes the script
    in this environment. The body of the request is passed to the script over the
    standard input stream.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当浏览器请求一个与`/cgi-bin/hello.sh`路径匹配的网址时，Apache会将其识别为指向脚本`/usr/lib/cgi-bin/hello.sh`的别名。Apache准备一个执行环境，其中包括诸如HTTP头部和查询字符串等请求参数作为环境变量，并在该环境中执行脚本。请求的主体通过标准输入流传递给脚本。
- en: 'The script we wrote creates the HTTP response, which will be sent back to the
    browser. The response consists of two parts: headers and the response body. We
    send only one header informing the browser that `Content-type` for our response
    is `text/plain`. This tells the browser that the response should be displayed
    as text rather than downloaded as a file. We then send an empty line to end the
    headers section and proceed to send the response body, which consists of the words,
    "Hello World!", and the current date.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编写的脚本生成了HTTP响应，并将其发送回浏览器。响应由两部分组成：头部和响应体。我们只发送一个头部，告知浏览器我们的响应`Content-type`是`text/plain`。这告诉浏览器应该将响应显示为文本，而不是下载为文件。然后，我们发送一个空行来结束头部部分，接着发送响应体，内容是“Hello
    World!”和当前日期。
- en: 'The Apache configuration we created informs the server that all requests to
    paths starting with `/cgi-bin/` should be treated as aliases to files in the directory,
    `/usr/lib/cgi-bin/`. We also informed Apache to execute scripts found in the directory
    and to allow access from all clients. This is equivalent to creating the following
    configuration fragment:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建的Apache配置告知服务器，所有以`/cgi-bin/`开头的路径请求应被视为`/usr/lib/cgi-bin/`目录下文件的别名。我们还告知Apache执行该目录中的脚本，并允许所有客户端访问。这相当于创建了以下配置片段：
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: All CGI scripts must be executable and the Apache user must have the ability
    to run them in order to use them. To achieve this, we gave the file to a group
    that Apache belongs to and assigned read and execute permissions to this group.
    Assigning permissions in this way allows Apache to run the script but not modify
    it. If the Apache user were able to modify CGI scripts, a compromised server could
    be used as a means of taking control of the server.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 所有CGI脚本必须是可执行的，且Apache用户必须有运行它们的权限才能使用它们。为此，我们将文件交给Apache所属的组，并为该组分配了读取和执行权限。通过这种方式分配权限允许Apache运行脚本，但不能修改它。如果Apache用户能够修改CGI脚本，受损的服务器可能会被用作控制服务器的手段。
- en: There's more...
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Programs running over the CGI can output data as described earlier, but they
    can also read incoming headers and content of submitted forms. The CGI protocol
    was standardized and is described in the *RFC3875* document, which can be found
    at [http://tools.ietf.org/html/rfc3875](http://tools.ietf.org/html/rfc3875).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 通过CGI运行的程序可以输出如前所述的数据，但它们还可以读取传入的头部和提交表单的内容。CGI协议已标准化，并在*RFC3875*文档中描述，您可以在[http://tools.ietf.org/html/rfc3875](http://tools.ietf.org/html/rfc3875)找到该文档。
- en: Displaying incoming request headers
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示传入请求头部
- en: 'Incoming HTTP request headers and many other useful pieces of information described
    by the CGI protocol are available to the script as environment variables. In order
    to display them, you could use the `printenv` command, as in the following script:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 通过CGI协议描述的传入HTTP请求头部以及许多其他有用的信息都可以作为环境变量提供给脚本。为了显示它们，您可以使用`printenv`命令，如以下脚本所示：
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Displaying incoming request body
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示传入请求主体
- en: 'The incoming request body (which contains, for example, values of `HTTP POST`
    forms) is passed to the script over the standard input stream. In order to display
    the body of the request, you could add the following code to your script:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 传入的请求体（例如，包含 `HTTP POST` 表单值）会通过标准输入流传递给脚本。为了显示请求体的内容，你可以在脚本中添加以下代码：
- en: '[PRE5]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: See also
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'We can also refer to the following sections:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以参考以下章节：
- en: The *Installing Apache on your system* recipe in [Chapter 8](ch08.html "Chapter 8. Running
    an Apache Web Server"), *Running an Apache Web Server*
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第 8 章](ch08.html "第 8 章. 运行 Apache 网络服务器") 中的 *在系统上安装 Apache* 食谱，*运行 Apache
    网络服务器*'
- en: The *Creating a virtual host* recipe in [Chapter 8](ch08.html "Chapter 8. Running
    an Apache Web Server"), *Running an Apache Web Server*
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第 8 章](ch08.html "第 8 章. 运行 Apache 网络服务器") 中的 *创建虚拟主机* 食谱，*运行 Apache 网络服务器*'
- en: The *Setting options for directories, files, and locations* recipe in [Chapter
    8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running an Apache Web
    Server*
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第 8 章](ch08.html "第 8 章. 运行 Apache 网络服务器") 中的 *为目录、文件和位置设置选项* 食谱，*运行 Apache
    网络服务器*'
- en: The *Installing PHP* recipe in this chapter
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中的 *安装 PHP* 食谱
- en: The *Installing a Django-based application using mod_wsgi* recipe in this chapter
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中的 *使用 mod_wsgi 安装基于 Django 的应用程序* 食谱
- en: Installing PHP
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 PHP
- en: PHP is currently among the most popular programming languages for the Web. Many
    of the largest and most popular sites are powered by software written in PHP,
    including Facebook, Yahoo!, Wikipedia, and Wordpress.com. PHP started as a set
    of simple tools for designing dynamic personal home pages, but it quickly grew
    in popularity and evolved into a modern, object-oriented programming language.
    The open source community that grew around the language created many useful libraries
    and added support for multiple platforms, databases, and so on.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 目前是 Web 上最流行的编程语言之一。许多最大和最受欢迎的网站都由 PHP 编写的软件提供支持，包括 Facebook、Yahoo!、Wikipedia
    和 Wordpress.com。PHP 起初是一组用于设计动态个人主页的简单工具，但它迅速流行起来，并发展成为一种现代的面向对象编程语言。围绕这门语言成长起来的开源社区创建了许多有用的库，并增加了对多平台、数据库等的支持。
- en: PHP is quite powerful, yet very easy to use. Deployment of a PHP application
    usually boils down to placing source code files in a directory on a server. It's
    also very easy to start programming with PHP—its code can be embedded directly
    within standard HTML. PHP makes programming for the Web very simple by abstracting
    away details of the HTTP protocol. For example, form values are available directly
    as data structures inside scripts, simple functions allow headers to be read and
    written, support for cookies and user sessions is built in, and so on.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 功能强大且易于使用。部署 PHP 应用程序通常只需将源代码文件放置在服务器上的某个目录中。使用 PHP 编程也非常简单——其代码可以直接嵌入到标准
    HTML 中。通过抽象 HTTP 协议的细节，PHP 使 Web 编程变得非常简单。例如，表单值可以直接作为数据结构传递给脚本，简单的函数可以读取和写入头信息，内建对
    cookies 和用户会话的支持，等等。
- en: PHP's ease of use may in fact be too great as it has allowed many to develop
    for the Web without fully understanding its underlying protocol. If you find a
    PHP application ready to install on your server, make sure to read its reviews
    to make sure it doesn't pose any serious security or stability issues.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 的易用性实际上可能过于出色，它使得许多人能够在不了解其底层协议的情况下进行 Web 开发。如果你找到一个可以在服务器上安装的 PHP 应用程序，请确保阅读其评论，以确保它不会带来严重的安全或稳定性问题。
- en: In this recipe, we will demonstrate how to install PHP and then write and deploy
    a simple Hello World script.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱将演示如何安装 PHP，然后编写并部署一个简单的 Hello World 脚本。
- en: Getting ready
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe involves the configuration of an Apache web server. Information
    about installing and configuring Apache can be found in [Chapter 8](ch08.html
    "Chapter 8. Running an Apache Web Server"), *Running an Apache Web Server*.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱涉及配置 Apache 网络服务器。有关安装和配置 Apache 的信息，请参阅[第 8 章](ch08.html "第 8 章. 运行 Apache
    网络服务器")，*运行 Apache 网络服务器*。
- en: How to do it...
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to install PHP and verify that it works on your system:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤安装 PHP 并验证其在系统上的工作状态：
- en: Follow the instructions in the *Installing software packages* recipe in [Chapter
    1](ch01.html "Chapter 1. Setting Up Your System"), *Setting Up Your System*, and
    install the PHP package for your system. The package may simply be named `php`
    or `php5`.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照 [第 1 章](ch01.html "第 1 章. 设置系统")，*设置系统* 中的 *安装软件包* 食谱中的说明，安装适合你系统的 PHP 包。该包可能仅被命名为
    `php` 或 `php5`。
- en: Navigate to **Servers** | **Apache Webserver** | **Global configuration**.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入**服务器** | **Apache Web服务器** | **全局配置**。
- en: Click the **Configure Apache Modules** icon.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**配置Apache模块**图标。
- en: Mark the checkbox next to the `php5` module and click the **Enable Selected
    Modules** button.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 勾选`php5`模块旁边的复选框，然后点击**启用选定模块**按钮。
- en: Tip
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The **Configure Apache Modules** screen may not be present in your system. If
    you installed PHP from a package, then in all likelihood, it enabled the module
    for you already. Follow the rest of this recipe to test that.
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**配置Apache模块**屏幕可能在你的系统中不存在。如果你是通过包安装PHP，那么很可能模块已经为你启用了。按照本教程的其余部分进行测试。'
- en: Navigate to **Servers** | **Apache Webserver**.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入**服务器** | **Apache Web服务器**。
- en: Click the icon of the virtual server you wish to configure, or the default server.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击你希望配置的虚拟服务器的图标，或者点击默认服务器。
- en: Click the **Document Options** icon and note what the document root directory
    of the server is.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**文档选项**图标并注意服务器的文档根目录在哪里。
- en: Create a file named `hello.php` in the document root directory.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档根目录中创建一个名为`hello.php`的文件。
- en: 'Enter the following code into this `hello.php` file:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`hello.php`文件中输入以下代码：
- en: '[PRE6]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: To see the result, navigate to the URL, `http://your-server/hello.php`, where
    `your-server` is the IP or domain name of your Apache server machine. You should
    see a web page with the words **Hello World!** generated by PHP.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看结果，访问URL`http://your-server/hello.php`，其中`your-server`是你的Apache服务器机器的IP地址或域名。你应该看到一个显示**Hello
    World!**的网页，这是由PHP生成的。
- en: Tip
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you end up seeing the PHP code instead of Hello World!, you will have to
    enable the PHP module manually. Take a look at the *How it works section* for
    information about instructions that you'll have to add to the Apache configuration
    file, and read your package's documentation for directions.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到PHP代码而不是Hello World!，你需要手动启用PHP模块。查看*它是如何工作的*部分，了解你需要在Apache配置文件中添加的指令，并阅读你包的文档获取相关指导。
- en: How it works...
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: Practically all server OS distributions offer a PHP package for installation
    from their repositories. There are a few different ways to install PHP, and it's
    a good idea to install the standard system package as this will ensure that it
    is optimized for your version of Apache and will be kept up to date by package
    maintainers.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有的服务器操作系统发行版都提供从其仓库中安装PHP包。安装PHP有几种不同的方式，建议安装标准系统包，因为这样可以确保其针对你的Apache版本进行了优化，并且会被包维护者保持最新。
- en: 'Installation of the package not only places PHP executables and documentation
    on your disk but also modifies configuration of the Apache web server. Introduced
    changes include the following:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 安装包不仅将PHP可执行文件和文档放在你的磁盘上，还会修改Apache Web服务器的配置。引入的更改包括以下内容：
- en: 'A line that loads the PHP interpreter module when Apache starts, such as this:'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一行代码，当Apache启动时加载PHP解释器模块，如下所示：
- en: '[PRE7]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Lines that instruct Apache to pass PHP files to the interpreter, such as this:'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指示Apache将PHP文件传递给解释器的行，如下所示：
- en: '[PRE8]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Or
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或
- en: '[PRE9]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'An instruction to use the `index.php` files for directory indexes:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`index.php`文件作为目录索引的指令：
- en: '[PRE10]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: See also
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: We can also refer to the following sections.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以参考以下章节。
- en: The *Installing Apache on your system* recipe in [Chapter 8](ch08.html "Chapter 8. Running
    an Apache Web Server"), *Running an Apache Web Server*
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章. 运行Apache Web服务器")中的*在系统上安装Apache*教程，*运行Apache Web服务器*'
- en: The *Creating a virtual host* recipe in [Chapter 8](ch08.html "Chapter 8. Running
    an Apache Web Server"), *Running an Apache Web Server*
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章. 运行Apache Web服务器")中的*创建虚拟主机*教程，*运行Apache Web服务器*'
- en: The *Setting options for directories, files, and locations* recipe in [Chapter
    8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running an Apache Web
    Server*
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章. 运行Apache Web服务器")中的*为目录、文件和位置设置选项*教程，*运行Apache Web服务器*'
- en: The *Changing PHP configuration settings* recipe in this chapter
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中的*更改PHP配置设置*教程
- en: The *Viewing PHP error logs* recipe in this chapter
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中的*查看PHP错误日志*教程
- en: Changing PHP configuration settings
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改PHP配置设置
- en: The PHP interpreter allows you to specify values of numerous settings, which
    determine how PHP applications behave on your system. This configuration affects
    how errors are logged or displayed, how input data is handled, what resources
    are allocated to the interpreter, and settings for extension modules bundled with
    PHP.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: PHP解释器允许你指定众多设置的值，这些设置决定了PHP应用程序在系统上的行为。这些配置影响错误的记录或显示方式、输入数据的处理方式、分配给解释器的资源以及与PHP捆绑的扩展模块的设置。
- en: 'PHP''s configuration file is traditionally called `php.ini`, and its location
    depends on your operating system distribution and version of PHP. Common locations
    of the `php.ini` file include: `/etc/`, `/etc/php5/apache2/`, and `/usr/local/etc/`.
    The `php.ini` file contains master setting values, but some settings may be overwritten
    locally with a PHP script or Apache configuration for a directory.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: PHP的配置文件通常被称为`php.ini`，其位置取决于你的操作系统发行版和PHP版本。`php.ini`文件的常见位置包括：`/etc/`、`/etc/php5/apache2/`和`/usr/local/etc/`。`php.ini`文件包含主设置值，但一些设置可能会被PHP脚本或Apache配置在目录级别覆盖。
- en: In this recipe, we will demonstrate how to check values of currently used configuration
    settings and how they can be modified.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将演示如何检查当前使用的配置设置的值以及如何修改它们。
- en: Getting ready
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Assuming you already have Apache and PHP installed, prepare a directory that
    is exposed through the web server and ready to serve PHP scripts. We will refer
    to this directory as the `DocumentRoot` directory in this recipe.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经安装了Apache和PHP，请准备一个通过Web服务器公开并准备好提供PHP脚本的目录。我们将在本教程中将该目录称为`DocumentRoot`目录。
- en: How to do it...
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: The first part of this recipe will check currently defined settings, which we
    will then proceed to modify.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分将检查当前定义的设置，然后我们将继续修改这些设置。
- en: 'Follow these steps to check current PHP settings:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤检查当前的PHP设置：
- en: Create a file named `phpinfo.php` in the `DocumentRoot` directory of your web
    server.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的Web服务器的`DocumentRoot`目录中创建一个名为`phpinfo.php`的文件。
- en: 'Enter the following code into the `phpinfo.php` file:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`phpinfo.php`文件中输入以下代码：
- en: '[PRE11]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Navigate to the URL of the `phpinfo.php` file: `http://your-server/phpinfo.php`.'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到`phpinfo.php`文件的URL：`http://your-server/phpinfo.php`。
- en: Make a note of the location of the **Loaded Configuration File**.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记下**加载的配置文件**的位置。
- en: Note
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This informs us where the main PHP configuration file (`php.ini`) is located.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这告诉我们主PHP配置文件（`php.ini`）的位置。
- en: Make a note of the `memory_limit` value.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记下`memory_limit`值。
- en: Note
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that there are two columns. They specify the local value and the master
    value of this setting. The master value is specified in `php.ini`, but the local
    value is currently in use. The local value may be different from the master value
    if it is overridden. See the *There's more* section of this recipe.
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，有两列。它们指定了该设置的本地值和主值。主值在`php.ini`中指定，但本地值是当前使用的。如果本地值被覆盖，它可能与主值不同。请参见本教程的*更多内容*部分。
- en: 'Follow these steps to change the master PHP settings:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤更改主PHP设置：
- en: Find the location of the global PHP configuration (`php.ini`) file as described
    earlier.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找全局PHP配置文件（`php.ini`）的位置，方法如前所述。
- en: Navigate to **Others** | **PHP Configuration**.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**其他** | **PHP配置**。
- en: Click **Manage** in the line corresponding to the global PHP configuration file.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击与全局PHP配置文件对应的行中的**管理**。
- en: Click **Resource Limits**.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**资源限制**。
- en: Change **Maximum memory allocation** to `260M`:![How to do it...](img/5849_11_08.jpg)
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**最大内存分配**更改为`260M`：![如何操作...](img/5849_11_08.jpg)
- en: Click **Save**.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**。
- en: Navigate to **Servers** | **Apache Webserver**.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**服务器** | **Apache Webserver**。
- en: Click the **Apply Changes** link.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用更改**链接。
- en: Navigate once again to the URL, `http://your-server/phpinfo.php`.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次转到URL，`http://your-server/phpinfo.php`。
- en: Check the `memory_limit` value. Its master value should now be changed to `260M`.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 检查`memory_limit`值。其主值现在应该已更改为`260M`。
- en: Tip
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Leaving the `phpinfo.php` file on your server is a bad idea as it unnecessarily
    exposes information about your system to the public. Delete the file when you're
    done using it.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 将`phpinfo.php`文件保留在服务器上不是一个好主意，因为它不必要地向公众暴露关于你系统的信息。使用完后请删除该文件。
- en: How it works...
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其工作原理...
- en: 'Apache loads the global PHP configuration (`php.ini`) file every time the server
    is started. In this recipe, we modified this file through Webmin. In particular,
    we changed the line that determines how much memory the PHP interpreter will be
    able to use to the following:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 每次启动时都会加载全局 PHP 配置（`php.ini`）文件。在此示例中，我们通过 Webmin 修改了该文件，特别是更改了决定 PHP
    解释器可以使用多少内存的那一行，修改为以下内容：
- en: '[PRE12]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: After we modified the file, we went to Webmin's interface to apply the configuration
    changes by restarting Apache.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 修改文件后，我们进入 Webmin 界面，通过重启 Apache 来应用配置更改。
- en: There's more...
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: PHP settings may be set locally in scripts and in Apache's per-directory configuration
    files.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 设置可以在脚本和 Apache 的每目录配置文件中本地设置。
- en: Modifying PHP settings for a directory using .htaccess files
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 .htaccess 文件修改目录的 PHP 设置
- en: 'In order to modify PHP settings through `.htaccess` files, we must instruct
    Apache to allow local option overrides for the directory that contains our PHP
    script. Take a look at the *Setting options for directories, files, and locations*
    recipe in [Chapter 8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running
    an Apache Web Server*, for more information. Perform the following steps:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 为了通过 `.htaccess` 文件修改 PHP 设置，我们必须指示 Apache 允许对包含我们 PHP 脚本的目录进行本地选项覆盖。查看[第 8
    章](ch08.html "第 8 章：运行 Apache Web 服务器")中的*设置目录、文件和位置的选项*示例，了解更多信息。执行以下步骤：
- en: Navigate to **Servers** | **Apache Webserver**.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**服务器** | **Apache Web 服务器**。
- en: Click the icon of the virtual server you wish to configure or the default server.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击您希望配置的虚拟服务器的图标或默认服务器。
- en: Click or create directory settings for the directory that contains your PHP
    script.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击或创建包含您 PHP 脚本的目录的设置。
- en: Click **Document Options**.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**文档选项**。
- en: In the **Options file can override** section, mark **Selected below** and select
    **Directory options**.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选项文件可以覆盖**部分，勾选**选中的选项**并选择**目录选项**。
- en: Tip
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'This is equivalent to adding the following line to Apache''s configuration
    for the directory:'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这相当于在 Apache 配置中为该目录添加以下行：
- en: '[PRE13]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Click the **Save** button.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮。
- en: Click the **Apply Changes** link.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用更改**链接。
- en: Create a file named `.htaccess` in the same directory.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在相同目录下创建一个名为 `.htaccess` 的文件。
- en: 'Place the following instruction in the `.htaccess` file to locally change the
    memory limit to 32MB:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `.htaccess` 文件中放置以下指令，将内存限制本地更改为 32MB：
- en: '[PRE14]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The directive, `php_value`, is used to configure settings which accept parameter
    values. Boolean parameters, which only accept the values on and off, are set with
    the `php_flag` directive. More information can be found in PHP's online manual
    at [http://php.net/manual/configuration.changes.php](http://php.net/manual/configuration.changes.php).
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`php_value` 指令用于配置接受参数值的设置。布尔参数仅接受开或关的值，使用 `php_flag` 指令进行设置。有关更多信息，请参见 PHP
    在线手册：[http://php.net/manual/configuration.changes.php](http://php.net/manual/configuration.changes.php)。'
- en: Verify the change in local settings using the `phpinfo()` function, as described
    earlier.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `phpinfo()` 函数验证本地设置的更改，如前所述。
- en: Modifying PHP settings dynamically inside script code
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在脚本代码中动态修改 PHP 设置
- en: 'Prepare a `phpinfo.php` file as described in this recipe, but add the following
    code to it:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 按照此示例准备一个`phpinfo.php`文件，并在其中添加以下代码：
- en: '[PRE15]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Navigate to the URL of the `phpinfo.php` file to verify the change in local
    settings.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到 `phpinfo.php` 文件的 URL，验证本地设置的更改。
- en: See also
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: Take a look at the *Setting options for directories, files, and locations* recipe
    in [Chapter 8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running
    an Apache Web Server*, for more information about changing Apache settings locally
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看[第 8 章](ch08.html "第 8 章：运行 Apache Web 服务器")中的*设置目录、文件和位置的选项*示例，了解更多关于在本地更改
    Apache 设置的信息，*运行 Apache Web 服务器*。
- en: Displaying PHP errors while debugging
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示 PHP 错误以进行调试
- en: While writing code in PHP or installing a downloaded application, you may find
    yourself staring at a blank browser screen with no hint as to why it isn't working
    as expected. This is caused by the default PHP configuration that hides error
    messages from prying eyes. Error messages could reveal information about your
    server, so this is a good idea in production, but makes resolving problems more
    difficult. During development, you can enable PHP's friendly error messages by
    following this recipe.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写PHP代码或安装下载的应用程序时，你可能会发现自己盯着一块空白的浏览器屏幕，完全没有任何提示为什么它没有按照预期工作。这是由于PHP的默认配置，它隐藏了错误信息以防泄露敏感数据。错误信息可能暴露服务器的相关信息，因此在生产环境中这样做是一个好主意，但这也会增加解决问题的难度。在开发过程中，你可以通过以下步骤启用PHP的友好错误信息。
- en: How to do it...
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to execute this recipe:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤执行此食谱：
- en: 'Let''s start by writing a PHP script that will cause an error. The script could
    contain the following broken code:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从编写一个会导致错误的PHP脚本开始。该脚本可能包含以下破损的代码：
- en: '[PRE16]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Save the script to a file on your server and navigate to the file's public URL
    on your web server. If error displaying is turned off, you should see a blank
    screen.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将脚本保存到服务器上的一个文件中，并导航到该文件在你的Web服务器上的公共URL。如果关闭了错误显示，你应该会看到一块空白屏幕。
- en: Navigate to **Others** | **PHP Configuration**.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**其他** | **PHP配置**。
- en: Click **Manage** in the line corresponding to the global PHP configuration file.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**管理**，对应于全局PHP配置文件的那一行。
- en: Click **Error Logging**.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**错误日志**。
- en: Set **Display error messages?** to **Yes**.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**显示错误信息？**设置为**是**。
- en: Click **Save**.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**。
- en: Navigate to **Servers** | **Apache Webserver**.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**服务器** | **Apache Web服务器**。
- en: Click the **Apply Changes** link.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用更改**链接。
- en: 'After changing the setting, navigate to your broken script''s URL once again.
    You should now see an error message like this:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 更改设置后，再次导航到你出现问题的脚本的URL。你现在应该能看到类似这样的错误信息：
- en: '**Parse error: syntax error, unexpected ''!'' in /var/www/index.php on line
    3**'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '**解析错误：语法错误，/var/www/index.php 第3行出现意外的 ''!''**'
- en: How it works...
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: PHP's `display_errors` setting is responsible for whether the interpreter displays
    error messages on the screen or hides them.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: PHP的`display_errors`设置决定了解释器是否在屏幕上显示错误信息，或者隐藏这些信息。
- en: 'In this recipe, we enabled PHP''s error reporting globally by turning on the
    `display_errors` configuration flag. To achieve this, we changed the `display_errors`
    line in `php.ini` to the following and restarted Apache:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们通过启用`display_errors`配置标志来全局启用PHP的错误报告。为此，我们将`php.ini`中的`display_errors`行更改为以下内容，并重启了Apache：
- en: '[PRE17]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You can also set the flag locally for a chosen directory by adding the following
    line to a `.htaccess` file. Make sure that Apache allows local overrides in this
    directory:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过在`.htaccess`文件中添加以下行来为指定的目录本地设置该标志。确保Apache允许该目录中的本地覆盖：
- en: '[PRE18]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Don't use the `ini_set` function to turn on displaying errors, as some errors
    will prevent the script from being parsed and the setting will not be able to
    take effect.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 不要使用`ini_set`函数来开启错误显示，因为某些错误会阻止脚本被解析，导致该设置无法生效。
- en: See also
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Changing PHP configuration settings* recipe in this chapter
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中的*更改PHP配置设置*食谱
- en: The *Logging in PHP* recipe in this chapter
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章中的*PHP中的日志记录*食谱
- en: Logging in PHP
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PHP中的日志记录
- en: Applications written in PHP generate log messages whenever an error occurs.
    These messages may be saved to a log file, passed to syslog, or ignored, depending
    on the configuration settings of the interpreter. Ignoring error messages is a
    bad idea as it prevents you from detecting problems occurring on your server.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PHP编写的应用程序在发生错误时会生成日志消息。这些消息可以根据解释器的配置设置保存到日志文件、传递给syslog，或者被忽略。忽略错误消息是一个不好的做法，因为它会阻止你发现服务器上发生的问题。
- en: On the other hand, saving every message to a file can cause your logs to grow
    very quickly, especially on high-traffic sites. Fortunately, PHP allows you to
    configure which errors are logged quite precisely. All PHP errors are assigned
    a level value; most severe errors are marked as `E_ERROR`, less severe as `E_WARNING`,
    even less severe as `E_NOTICE`, and so on. A complete list of error levels can
    be found in the PHP manual at [http://php.net/errorfunc.constants.php](http://php.net/errorfunc.constants.php).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，将每条消息保存到文件中可能会导致日志增长非常迅速，尤其是在高流量网站上。幸运的是，PHP允许你非常精确地配置哪些错误会被记录。所有PHP错误都有一个级别值；最严重的错误标记为`E_ERROR`，较轻的错误标记为`E_WARNING`，再轻的标记为`E_NOTICE`，依此类推。完整的错误级别列表可以在PHP手册中的[http://php.net/errorfunc.constants.php](http://php.net/errorfunc.constants.php)找到。
- en: It is recommended to log all errors during development, but in production, all
    errors should be logged, except `E_DEPRECATED` (deprecation warnings) and `E_STRICT`
    (code style suggestions). We will set this level of logging in this recipe.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 建议在开发过程中记录所有错误，但在生产环境中，应该记录所有错误，除了`E_DEPRECATED`（弃用警告）和`E_STRICT`（代码风格建议）。我们将在本食谱中设置这种日志记录级别。
- en: Getting ready
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, we will need to know what user and group Apache is
    running as. You can find instructions on obtaining this information in the *Getting
    ready* section of the *Generating dynamic pages using CGI* recipe of this chapter.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成此食谱，我们需要知道Apache正在以哪个用户和组运行。你可以在本章的*生成动态页面使用CGI*食谱中的*准备工作*部分找到获取此信息的说明。
- en: How to do it...
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Instruct PHP to keep a log of error messages by following these steps:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤指示PHP记录错误消息：
- en: Create an empty file to store your PHP error log in a location of your choosing,
    for example, in `/var/log/php_errors.log`.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个空文件，用于存储你的PHP错误日志，存储位置可以自定义，例如，`/var/log/php_errors.log`。
- en: 'Change the owner of the file to the Apache user. If your web server runs as
    the `www-data` user, you can do this by issuing the following command:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件的所有者更改为Apache用户。如果你的Web服务器以`www-data`用户运行，你可以通过执行以下命令来完成：
- en: '[PRE19]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Note
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Information about manipulating files and changing ownership and permissions
    can be found in the *Managing files and directories on the server* recipe in [Chapter
    6](ch06.html "Chapter 6. Managing Files on Your System"), *Managing Files on Your
    System*.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关于操作文件和更改所有权与权限的信息，可以在[第6章](ch06.html "第6章 管理系统中的文件")中的*管理服务器上的文件和目录*食谱中找到，*管理系统中的文件*。
- en: 'Make sure that the owner (Apache) has write access to the file:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保所有者（Apache）对文件具有写入权限：
- en: '[PRE20]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Navigate to **Others** | **PHP Configuration**.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**其他** | **PHP配置**。
- en: Click **Manage** in the line corresponding to the global PHP configuration file.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击与全局PHP配置文件对应行的**管理**。
- en: Click **Error Logging**.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**错误日志**。
- en: Set **Display error messages?** to **Yes**.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**显示错误消息？**设置为**是**。
- en: Set **Write error messages to log?** to **Yes**.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**是否写入错误消息到日志？**设置为**是**。
- en: Set **Expression for error types** to `E_ALL & ~E_DEPRECATED & ~E_STRICT`.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**错误类型表达式**设置为`E_ALL & ~E_DEPRECATED & ~E_STRICT`。
- en: Set **Log file for errors** to **Other file** and enter `/var/log/php_errors.log`
    in the text field, as shown in the following screenshot:![How to do it...](img/5849_11_09.jpg)
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**错误日志文件**设置为**其他文件**，并在文本框中输入`/var/log/php_errors.log`，如以下截图所示：![如何操作...](img/5849_11_09.jpg)
- en: Click **Save**.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**。
- en: Navigate to **Servers** | **Apache Webserver**.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**服务器** | **Apache Web服务器**。
- en: Click the **Apply Changes** link.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用更改**链接。
- en: From now on, you should see error messages appear in PHP's log file.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，你应该能在PHP的日志文件中看到错误消息。
- en: How it works...
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何运作...
- en: 'In order to enable PHP error logging, we set the following master values in
    your `php.ini` file:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启用PHP错误日志记录，我们在`php.ini`文件中设置了以下主值：
- en: '[PRE21]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The preceding settings turn on PHP's error logging (`log_errors`) and specify
    which file the errors should be saved in (`error_log`).
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 上述设置启用了PHP的错误日志记录（`log_errors`），并指定了错误应保存到哪个文件（`error_log`）。
- en: The `error_reporting` instruction specifies which messages are saved and which
    ones are ignored. This line accepts a complex syntax in which ampersand signs
    (`&`) allow you to specify different levels of messages to log and tilde characters
    (`~`) that negate a given class. This allows us to log errors of all levels (`E_ALL`),
    but not deprecation warnings (`& ~E_DEPRECATED`) or style suggestions (`& ~E_STRICT`).
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`error_reporting`指令指定了哪些消息会被保存，哪些会被忽略。该行接受复杂的语法，其中与符号(`&`)允许您指定不同级别的消息进行记录，波浪符(`~`)则用于取消某一类消息的记录。这使我们能够记录所有级别的错误（`E_ALL`），但不记录弃用警告（`&
    ~E_DEPRECATED`）或样式建议（`& ~E_STRICT`）。'
- en: Refer to the *Changing PHP configuration settings* recipe in this chapter for
    more information about ways of changing the configuration of PHP.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考本章中的*更改PHP配置设置*配方，了解更多有关更改PHP配置的方法。
- en: There's more...
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'PHP can also output error messages to the system log (syslog). If you wish
    to use syslog, change the `error_log` line as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: PHP还可以将错误消息输出到系统日志（syslog）。如果您希望使用syslog，请将`error_log`行更改如下：
- en: '[PRE22]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: PHP errors are output to the syslog facility named `user`, and unfortunately,
    this cannot be changed through the PHP configuration at this time.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: PHP错误会输出到名为`user`的syslog设施中，不幸的是，目前无法通过PHP配置来更改这一点。
- en: Note
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Modern syslog implementations (such as rsyslog, syslog-ng) can filter messages
    based on the command that generated them.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 现代的syslog实现（如rsyslog，syslog-ng）可以基于生成日志的命令过滤消息。
- en: Refer to the *Saving syslog messages to a file* recipe in [Chapter 5](ch05.html
    "Chapter 5. Monitoring Your System"), *Monitoring Your System*, for more information
    about syslog.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[第5章](ch05.html "第5章. 监控您的系统")中的*将syslog消息保存到文件*配方，*监控您的系统*，了解更多关于syslog的信息。
- en: See also
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'For more information about using system logs, take a look at the following
    recipes:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用系统日志的更多信息，请查看以下配方：
- en: The *Viewing and searching through system logfiles* recipe in [Chapter 5](ch05.html
    "Chapter 5. Monitoring Your System"), *Monitoring Your System*
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章. 监控您的系统")中的*查看和搜索系统日志文件*配方，*监控您的系统*'
- en: The *Adding other logfiles to Webmin* recipe in [Chapter 5](ch05.html "Chapter 5. Monitoring
    Your System"), *Monitoring Your System*
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章. 监控您的系统")中的*添加其他日志文件到Webmin*配方，*监控您的系统*'
- en: The *Configuring logfile rotation* recipe in [Chapter 5](ch05.html "Chapter 5. Monitoring
    Your System"), *Monitoring Your System*
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章. 监控您的系统")中的*配置日志文件轮换*配方，*监控您的系统*'
- en: Installing WordPress on your server
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在您的服务器上安装WordPress
- en: WordPress is a very popular open source blogging platform. The software is very
    easy to use yet versatile enough to serve a variety of purposes, such as running
    informational websites or even simple e-commerce shops. WordPress is written entirely
    in PHP, which makes it quite easy to install.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress是一个非常受欢迎的开源博客平台。该软件非常易于使用，且足够灵活，能够满足各种用途，比如运行信息性网站或简单的电子商务商店。WordPress完全用PHP编写，这使得它的安装非常简便。
- en: This recipe pulls together strands from various preceding chapters. We will
    demonstrate how to use the recipes provided in this book to set up a working web
    server hosting a website powered by the WordPress blogging platform.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方整合了前面各章节的内容。我们将展示如何使用本书中提供的配方来设置一个工作中的Web服务器，托管一个由WordPress博客平台支持的网站。
- en: Note
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Package repositories of many operating system distributions host a package for
    WordPress. You may choose to install the package if you don't intend to customize
    your site or host multiple different versions of the software. Note that WordPress
    may be updated more frequently than packages in your OS repository, which could
    possibly lead you to use an insecure version of the software. Look for documentation
    contained within the package for more information if you choose this route.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 许多操作系统发行版的包存储库中都提供了WordPress的软件包。如果您不打算自定义站点或托管多个不同版本的软件，您可以选择安装该软件包。请注意，WordPress的更新频率可能比您操作系统包存储库中的软件包更高，这可能会导致您使用不安全的版本。如果您选择此路线，请查看包中的文档以获取更多信息。
- en: How to do it...
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: This recipe is divided into a number of sections. We will prepare the server
    first by installing the required software packages. You may skip these steps if
    you have the software mentioned installed on your server already. We will then
    create a MySQL database and user for our WordPress installation. Finally, we'll
    create an Apache virtual host and install WordPress.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱分为多个部分。我们首先通过安装所需的软件包来准备服务器。如果你已在服务器上安装了这些软件，可以跳过这些步骤。然后，我们将为我们的WordPress安装创建一个MySQL数据库和用户。最后，我们将创建一个Apache虚拟主机并安装WordPress。
- en: 'Please follow these steps to prepare the server:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照以下步骤准备服务器：
- en: Install the Apache web server by following the *Installing Apache on your system*
    recipe in [Chapter 8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running
    an Apache Web Server*.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照[第8章](ch08.html "第8章. 运行Apache Web服务器")中的*在系统上安装Apache*食谱安装Apache Web服务器，*运行Apache
    Web服务器*。
- en: Install the MySQL database server by following the *Installing the MySQL database
    server* recipe in [Chapter 9](ch09.html "Chapter 9. Running a MySQL Database Server"),
    *Running a MySQL Database Server*.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照[第9章](ch09.html "第9章. 运行MySQL数据库服务器")中的*安装MySQL数据库服务器*食谱安装MySQL数据库服务器，*运行MySQL数据库服务器*。
- en: Install PHP by following the *Installing PHP* recipe in this chapter.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照本章中的*安装PHP*食谱安装PHP。
- en: Tip
  id: totrans-268
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In order for PHP applications to communicate with MySQL, you will need to install
    an additional PHP module, which is available as a package on most OS distributions.
    You can check to see if this module is already installed by looking at the output
    of the `phpinfo()` function, as described in the *Changing PHP configuration settings*
    recipe of this chapter. If you find an information section named **mysql**, then
    the `php-mysql` module is installed.
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了让PHP应用程序能够与MySQL通信，你需要安装一个额外的PHP模块，这个模块在大多数操作系统发行版中以包的形式提供。你可以通过查看`phpinfo()`函数的输出，检查此模块是否已安装，正如本章中*更改PHP配置设置*食谱所描述的那样。如果你找到名为**mysql**的信息部分，那么`php-mysql`模块已安装。
- en: Install the system package named `php-mysql`, `php5-mysql`, or something similar.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装名为`php-mysql`、`php5-mysql`或类似名称的系统包。
- en: Note
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information about installing packages can be found in the *installing software
    packages* recipe in [Chapter 1](ch01.html "Chapter 1. Setting Up Your System"),
    *Setting Up Your System*.
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关安装软件包的更多信息，请参见[第1章](ch01.html "第1章. 设置系统")中的*安装软件包*食谱，*设置系统*。
- en: Install the `php-gd` module that allows PHP applications to manipulate graphic
    images in common formats such as PNG and JPEG. Install a system package named
    `php-gd`, `php5-gd`, or something similar.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`php-gd`模块，使PHP应用程序能够处理常见格式（如PNG和JPEG）的图形图像。安装名为`php-gd`、`php5-gd`或类似名称的系统包。
- en: Make sure that the rewrite module of Apache (`mod_rewrite`) is installed and
    enabled. Take a look at the *Enabling Apache modules* recipe in [Chapter 8](ch08.html
    "Chapter 8. Running an Apache Web Server"), *Running an Apache Web Server*, for
    more information.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保Apache的重写模块（`mod_rewrite`）已安装并启用。有关更多信息，请查看[第8章](ch08.html "第8章. 运行Apache
    Web服务器")中的*启用Apache模块*食谱，*运行Apache Web服务器*。
- en: Creating a database
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建数据库
- en: 'We will create a database and user named `wordpress`. You should probably use
    a more informative name, especially if you plan to use more than one instance
    of WordPress. Please follow these steps to create a database:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个名为`wordpress`的数据库和用户。你可能应该使用一个更具信息性的名称，特别是如果你计划使用多个WordPress实例的话。请按照以下步骤创建数据库：
- en: Create a new MySQL database and user, both named `wordpress`. The user should
    use a strong password and be allowed to connect from the local machine (`localhost`).
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的MySQL数据库和用户，二者均命名为`wordpress`。该用户应使用强密码，并允许从本地机器（`localhost`）连接。
- en: Grant the `wordpress` user connecting from `localhost` all permissions on the
    `wordpress` database.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授予从`localhost`连接的`wordpress`用户对`wordpress`数据库的所有权限。
- en: Note
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Information about creating MySQL databases and granting permissions can be found
    in the *Creating a new database* and *Creating users and granting permissions
    to databases* recipes in [Chapter 9](ch09.html "Chapter 9. Running a MySQL Database
    Server"), *Running a MySQL Database Server*.
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关于创建MySQL数据库和授予权限的信息，请参见[第9章](ch09.html "第9章. 运行MySQL数据库服务器")中的*创建新数据库*和*创建用户并授予数据库权限*食谱，*运行MySQL数据库服务器*。
- en: Tip
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'If you are running a system with **Security Enhanced Linux** (**SELinux**),
    you will have to allow Apache to connect to databases by setting the following
    flag:'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你正在运行带有**安全增强 Linux**（**SELinux**）的系统，你需要通过设置以下标志来允许 Apache 连接到数据库：
- en: '[PRE23]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Creating a virtual host and installing WordPress
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建虚拟主机并安装 WordPress
- en: 'In order to create a virtual host and install WordPress, perform the following
    steps:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建虚拟主机并安装 WordPress，请执行以下步骤：
- en: Follow the *Creating a virtual host* recipe in [Chapter 8](ch08.html "Chapter 8. Running
    an Apache Web Server"), *Running an Apache Web Server*, to create a website serving
    files from the document root, `/var/www/blog.example.com`, with the server name,
    `blog.example.com`.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请参考[第 8 章](ch08.html "第 8 章：运行 Apache Web 服务器")中的*创建虚拟主机*示例，*运行 Apache Web 服务器*，以便从文档根目录`/var/www/blog.example.com`提供文件，并设置服务器名称为`blog.example.com`。
- en: 'Download the latest version of WordPress from the following URL and extract
    the archive into the `/var/www/blog.example.com` directory: [http://wordpress.org/latest.tar.gz](http://wordpress.org/latest.tar.gz)'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下网址下载最新版本的 WordPress，并将归档文件解压到`/var/www/blog.example.com`目录： [http://wordpress.org/latest.tar.gz](http://wordpress.org/latest.tar.gz)
- en: Note
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'When the extraction is complete, WordPress''s `index.php` file should have
    the following path: `/var/www/blog.example.com/index.php`.'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当提取完成后，WordPress 的`index.php`文件应位于以下路径：`/var/www/blog.example.com/index.php`。
- en: 'Create an `.htaccess` file in the same directory and enter the following rewrite
    rules to enable WordPress''s clean URLs:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在相同的目录中创建一个 `.htaccess` 文件，并输入以下重写规则，以启用 WordPress 的干净 URL：
- en: '[PRE24]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Tip
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Apache's virtual host or directory configuration must allow options to be overridden
    by the `.htaccess` files (`AllowOverride All`). For more information, take a look
    at the *Setting options for specific directories, files, and locations* recipe
    in [Chapter 8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running
    an Apache Web Server*.
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Apache 的虚拟主机或目录配置必须允许 `.htaccess` 文件覆盖选项（`AllowOverride All`）。有关更多信息，请查看[第 8
    章](ch08.html "第 8 章：运行 Apache Web 服务器")中的*为特定目录、文件和位置设置选项*示例，*运行 Apache Web 服务器*。
- en: 'Navigate to the URL of your new WordPress site: `http://blog.example.com/`.'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到新 WordPress 网站的 URL：`http://blog.example.com/`。
- en: A setup screen will appear. Follow instructions there and enter the created
    database name, username, and password, as shown in the following screenshot:![Creating
    a virtual host and installing WordPress](img/5849_11_05.jpg)
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 会出现一个设置屏幕。按照屏幕上的指示输入已创建的数据库名称、用户名和密码，如下图所示：![创建虚拟主机并安装 WordPress](img/5849_11_05.jpg)
- en: WordPress setup will generate the contents of a configuration file, which you
    should save as `/var/www/blog.example.com/wp-config.php`.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WordPress 安装会生成一个配置文件的内容，您应将其保存为`/var/www/blog.example.com/wp-config.php`。
- en: You can now navigate to the URL of your WordPress site and follow onscreen instructions
    to finish setup and start using the site.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以导航到 WordPress 网站的 URL，按照屏幕上的说明完成设置并开始使用网站。
- en: How it works...
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: WordPress uses technologies described throughout this book. In order to set
    up our server for the application, we need to install Apache, MySQL, and PHP.
    We also need a number of additional PHP modules to allow WordPress to communicate
    with the database and manipulate image files.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress 使用了本书中介绍的技术。为了为该应用程序设置我们的服务器，我们需要安装 Apache、MySQL 和 PHP。我们还需要安装一些额外的
    PHP 模块，以便 WordPress 与数据库通信并操作图像文件。
- en: Every instance of WordPress requires access to a database. The table prefix
    is added to the name of every database table, which allows multiple installations
    of WordPress to share a single database. We left the prefix set at its default
    value of `wp_`. Since we are running our own server, we can create as many databases
    as we need; therefore, there is no need to share databases. In fact, we also created
    a dedicated database user for this application with access to one database only.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 WordPress 实例都需要访问数据库。表前缀会添加到每个数据库表的名称中，这样可以让多个 WordPress 实例共享一个数据库。我们将前缀保留为默认值`wp_`。由于我们在运行自己的服务器，我们可以根据需要创建任意数量的数据库；因此，实际上不需要共享数据库。实际上，我们还为这个应用程序创建了一个专用的数据库用户，仅允许访问一个数据库。
- en: The virtual host configuration we created allows us to run WordPress on one
    subdomain (`blog.example.com`), leaving us free to run other software on the main
    domain or other subdomains.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建的虚拟主机配置允许我们在一个子域（`blog.example.com`）上运行 WordPress，从而可以自由地在主域或其他子域上运行其他软件。
- en: The `.htaccess` file we created is designed to allow WordPress to use clean
    URLs. Thanks to this function, pages may have URLs such as `http://blog.example.com/hello-world/`
    instead of `http://blog.example.com/?p=1`.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建的 `.htaccess` 文件旨在允许 WordPress 使用干净的 URL。借助这个功能，页面的 URL 可能是 `http://blog.example.com/hello-world/`，而不是
    `http://blog.example.com/?p=1`。
- en: Note
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information about clean URLs, called permalinks in WordPress, is available
    in its documentation at [http://codex.wordpress.org/Using_Permalinks](http://codex.wordpress.org/Using_Permalinks).
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 有关干净 URL（在 WordPress 中称为永久链接）的更多信息，请参阅其文档：[http://codex.wordpress.org/Using_Permalinks](http://codex.wordpress.org/Using_Permalinks)
- en: We finished the installation by allowing WordPress to create the contents of
    its main configuration file (`wp-config.php`) for us. We needed to provide database
    connection details into a form, and WordPress prepared the configuration file
    itself. In addition to storing database connection details, the installer also
    generated pseudo-random cryptographic salt strings, which help keep WordPress
    secure. Salt strings are also stored in the configuration file and should be kept
    secret and changed occasionally.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过允许 WordPress 为我们创建其主要配置文件（`wp-config.php`）的内容来完成安装。我们需要将数据库连接详细信息输入到一个表单中，WordPress
    会自行准备配置文件。除了存储数据库连接详情外，安装程序还生成了伪随机的加密盐字符串，这有助于保持 WordPress 的安全。盐字符串也会存储在配置文件中，应该保持机密并偶尔更换。
- en: Tip
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: To keep the WordPress configuration file safe, make sure its permissions are
    set correctly. It has to be readable for Apache, but not anyone else. Take a look
    at the *Getting ready* section of the *Generating dynamic pages using CGI* recipe
    in this chapter to find the name of the Apache user, as well as the *Managing
    files and directories on the server* recipe in [Chapter 6](ch06.html "Chapter 6. Managing
    Files on Your System"), *Managing Files on Your System*, for information about
    setting permissions.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保 WordPress 配置文件的安全，请确保其权限设置正确。该文件必须对 Apache 可读，但对其他人不可读。请查看本章的*生成动态页面使用
    CGI*食谱中的*准备工作*部分，了解 Apache 用户的名称，并参考[第 6 章](ch06.html "第 6 章. 系统上的文件管理")中的*管理文件和目录*食谱，获取有关设置权限的信息。
- en: Also, make sure that any backup copies of this file are stored in a safe way.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，确保任何该文件的备份副本都存储在安全的地方。
- en: See also
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: More information about the process of installing WordPress can be found in its
    manual at [http://codex.wordpress.org/Installing_WordPress](http://codex.wordpress.org/Installing_WordPress)
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关安装 WordPress 过程的更多信息，请参见其手册：[http://codex.wordpress.org/Installing_WordPress](http://codex.wordpress.org/Installing_WordPress)
- en: Installing Drupal on your server
  id: totrans-311
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你的服务器上安装 Drupal
- en: Drupal is a powerful open source **content management system** (**CMS**). It
    is highly modular, which means it can be customized to perform nearly any task
    by installation of additional plugins. Drupal is written entirely in PHP, which
    makes it quite easy to install.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 是一个强大的开源**内容管理系统**（**CMS**）。它高度模块化，意味着通过安装额外的插件，可以将其定制为执行几乎任何任务。Drupal
    完全用 PHP 编写，这使得它非常容易安装。
- en: This recipe pulls together strands from various preceding chapters. We will
    demonstrate how to use recipes provided in this book to set up a working web server
    hosting a website powered by the Drupal CMS platform.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱汇集了前面各章的内容。我们将展示如何使用本书中提供的食谱设置一个工作中的 Web 服务器，托管一个由 Drupal CMS 平台驱动的网站。
- en: Tip
  id: totrans-314
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Package repositories of many operating system distributions host a package for
    Drupal. You may choose to install the package if you don't intend to host multiple
    different versions of the software. Note that Drupal may be updated more frequently
    than packages in your OS repository, which could possibly lead to using an insecure
    version of the software. Look for documentation contained within the package for
    more information if you choose this route.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 许多操作系统发行版的包管理库中都提供了 Drupal 的安装包。如果你不打算托管多个不同版本的软件，你可以选择安装这个包。但请注意，Drupal 可能会比操作系统库中的包更新得更频繁，这可能会导致使用不安全的软件版本。如果你选择这种方式，请查阅包中的文档以获取更多信息。
- en: Getting ready
  id: totrans-316
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, we will need to know what user and group Apache is
    running as. You can find instructions on obtaining this information in the *Getting
    ready* section of the *Generating dynamic pages using CGI* recipe in this chapter.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本食谱，我们需要了解 Apache 运行的用户和组。你可以在本章的*生成动态页面使用 CGI*食谱中的*准备工作*部分找到获取此信息的说明。
- en: How to do it...
  id: totrans-318
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: This recipe is divided into a number of sections. We will prepare the server
    first by installing required software packages. You may skip these steps if you
    already have the software mentioned installed on your server. We will then create
    a MySQL database and user for our Drupal installation. Finally, we'll create an
    Apache virtual host and install Drupal.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方分为多个部分。我们首先通过安装所需的软件包来准备服务器。如果你已经在服务器上安装了所述软件，可以跳过这些步骤。接下来，我们将为 Drupal 安装创建一个
    MySQL 数据库和用户。最后，我们将创建一个 Apache 虚拟主机并安装 Drupal。
- en: 'Follow these steps to prepare the server:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤准备服务器：
- en: Install the Apache web server by following the *Installing Apache on your system*
    recipe in [Chapter 8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running
    an Apache Web Server*.
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照[第 8 章](ch08.html "第 8 章. 运行 Apache Web 服务器")中的 *在你的系统上安装 Apache* 配方安装 Apache
    Web 服务器，*运行 Apache Web 服务器*。
- en: Install the MySQL database server by following the *Installing the MySQL database
    server* recipe in [Chapter 9](ch09.html "Chapter 9. Running a MySQL Database Server"),
    *Running a MySQL Database Server*.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过遵循[第 9 章](ch09.html "第 9 章. 运行 MySQL 数据库服务器")中的 *安装 MySQL 数据库服务器* 配方，安装 MySQL
    数据库服务器，*运行 MySQL 数据库服务器*。
- en: Install PHP by following the *Installing PHP* recipe in this chapter.
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过遵循本章中的 *安装 PHP* 配方安装 PHP。
- en: In order for PHP applications to communicate with MySQL, you will need to install
    an additional PHP module, which is available as a package on most OS distributions.
    Install the system package named `php-mysql`, `php5-mysql`, or something similar.
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了让 PHP 应用程序能够与 MySQL 通信，你需要安装一个额外的 PHP 模块，这个模块在大多数操作系统的发行版中都有提供。安装名为 `php-mysql`、`php5-mysql`
    或类似名称的系统包。
- en: Note
  id: totrans-325
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information about installing packages can be found in the *Installing software
    packages* recipe in [Chapter 1](ch01.html "Chapter 1. Setting Up Your System"),
    *Setting Up Your System*.
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关安装软件包的更多信息，请参见[第 1 章](ch01.html "第 1 章. 设置你的系统")中的 *安装软件包* 配方，*设置你的系统*。
- en: Install the `php-gd` module that allows PHP applications to manipulate graphic
    images in common formats such as PNG and JPEG. Install a system package named
    `php-gd`, `php5-gd`, or something similar.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 `php-gd` 模块，允许 PHP 应用程序操作 PNG、JPEG 等常见格式的图形图像。安装名为 `php-gd`、`php5-gd` 或类似名称的系统包。
- en: Make sure that the rewrite module of Apache (`mod_rewrite`) is installed and
    enabled. Take a look at the *Enabling Apache modules* recipe in [Chapter 8](ch08.html
    "Chapter 8. Running an Apache Web Server"), *Running an Apache Web Server*, for
    more information.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保 Apache 的重写模块（`mod_rewrite`）已安装并启用。更多信息请参见[第 8 章](ch08.html "第 8 章. 运行 Apache
    Web 服务器")中的 *启用 Apache 模块* 配方，*运行 Apache Web 服务器*。
- en: Creating a database
  id: totrans-329
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建数据库
- en: 'We will create a database and user named `drupal`. You should probably use
    a more informative name, especially if you plan to use more than one instance
    of Drupal. Please follow these steps:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个名为 `drupal` 的数据库和用户。你可能需要使用更具描述性的名称，特别是如果你计划使用多个 Drupal 实例时。请按以下步骤操作：
- en: Create a new MySQL database and user, both named `drupal`. The user should use
    a strong password and be allowed to connect from the local machine (`localhost`).
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 MySQL 数据库和用户，命名为 `drupal`。用户应使用强密码，并允许从本地机器（`localhost`）连接。
- en: Grant the `drupal` user connecting from `localhost` all permissions on the `drupal`
    database.
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授予 `drupal` 用户从 `localhost` 连接的所有权限，权限作用于 `drupal` 数据库。
- en: Note
  id: totrans-333
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Information about creating MySQL databases and granting permissions can be found
    in the *Creating a new database* and *Creating users and granting permissions
    to databases* recipes in [Chapter 9](ch09.html "Chapter 9. Running a MySQL Database
    Server"), *Running a MySQL Database Server*.
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建 MySQL 数据库并授予权限的详细信息可以在[第 9 章](ch09.html "第 9 章. 运行 MySQL 数据库服务器")中的 *创建新数据库*
    和 *创建用户并授予数据库权限* 配方中找到，*运行 MySQL 数据库服务器*。
- en: Tip
  id: totrans-335
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'If you are running a system with **Security Enhanced Linux** (**SELinux**),
    you will have to allow Apache to connect to databases by setting the following
    flag:'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你正在使用**增强型 Linux 安全**（**SELinux**）的系统，你需要通过设置以下标志来允许 Apache 连接到数据库：
- en: '[PRE25]'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Creating a virtual host and installing WordPress
  id: totrans-338
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建虚拟主机并安装 WordPress
- en: 'Follow these steps to create a virtual host and install Drupal:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建虚拟主机并安装 Drupal：
- en: Follow the *Creating a virtual host* recipe in [Chapter 8](ch08.html "Chapter 8. Running
    an Apache Web Server"), *Running an Apache Web Server*, to create a website serving
    files from the document root, `/var/www/cms.example.com`, with the server name,
    `cms.example.com`.
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照[第8章](ch08.html "第8章 运行Apache Web服务器")中*创建虚拟主机*的食谱，创建一个从文档根目录`/var/www/cms.example.com`提供文件的网站，并设置服务器名称为`cms.example.com`。
- en: 'Find and download the latest version of WordPress from the following URL and
    extract the archive into the `/var/www/cms.example.com` directory: [https://drupal.org/download](https://drupal.org/download).'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下URL查找并下载最新版本的WordPress，并将压缩包提取到`/var/www/cms.example.com`目录： [https://drupal.org/download](https://drupal.org/download)。
- en: Note
  id: totrans-342
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'When the extraction is complete, Drupal''s `index.php` file should have this
    path: `/var/www/cms.example.com/index.php`.'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当解压完成后，Drupal的`index.php`文件应该具有以下路径：`/var/www/cms.example.com/index.php`。
- en: Tip
  id: totrans-344
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Drupal comes bundled with an `.htaccess` file. Make sure that the file was properly
    extracted to `/var/www/cms.example.com/.htaccess`.
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Drupal捆绑了一个`.htaccess`文件。请确保该文件已正确提取到`/var/www/cms.example.com/.htaccess`。
- en: Apache's virtual host or directory configuration must allow options to be overridden
    by `.htaccess` files (`AllowOverride All`). For more information, take a look
    at the *Setting options for specific directories, files, and locations* recipe
    in [Chapter 8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running
    an Apache Web Server*.
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Apache的虚拟主机或目录配置必须允许`.htaccess`文件覆盖选项（`AllowOverride All`）。有关更多信息，请参考[第8章](ch08.html
    "第8章 运行Apache Web服务器")中*为特定目录、文件和位置设置选项*的食谱。
- en: Create a directory (`sites/default/files`) in which Drupal will store uploaded
    and temporary files. The directory is relative to the root Drupal directory, so
    its full path in our case would be `/var/www/cms.example.com/sites/default/files`.
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个目录（`sites/default/files`），Drupal将在其中存储上传的文件和临时文件。该目录是相对于Drupal根目录的，因此在我们这种情况下，它的完整路径是`/var/www/cms.example.com/sites/default/files`。
- en: Change the owner of the `sites/default/files` directory to the Apache user and
    make sure the owner has read and write permissions for the directory.
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`sites/default/files`目录的所有者更改为Apache用户，并确保该所有者对该目录具有读写权限。
- en: Tip
  id: totrans-349
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Information about manipulating files and changing ownership and permissions
    can be found in the *Managing files and directories on the server* recipe in [Chapter
    6](ch06.html "Chapter 6. Managing Files on Your System"), *Managing Files on Your
    System*.
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关于操作文件和更改所有权及权限的信息可以在[第6章](ch06.html "第6章 管理你的系统文件")的*在服务器上管理文件和目录*一节中找到，*在你的系统上管理文件*。
- en: Create Drupal's configuration file in `sites/default/settings.php` by making
    a copy of the default settings file, `sites/default/default.settings.php`.
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过复制默认设置文件`sites/default/default.settings.php`，在`sites/default/settings.php`中创建Drupal的配置文件。
- en: Temporarily allow all users to write to the `settings.php` file by changing
    its permissions to `666`.
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 临时允许所有用户写入`settings.php`文件，通过将其权限更改为`666`。
- en: 'Visit the URL of your new Drupal site: `http://cms.example.com/`.'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问你新Drupal站点的URL：`http://cms.example.com/`。
- en: A setup screen will appear. Follow the instructions on this screen and enter
    the created database, username, and password.
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个设置屏幕将会出现。请按照屏幕上的指示，输入已创建的数据库、用户名和密码。
- en: When the installer is finished modifying your settings file, it will inform
    you that you should now change permissions to remove write access to the `settings.php`
    file:![Creating a virtual host and installing WordPress](img/5849_11_06.jpg)
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当安装程序完成修改你的设置文件时，它将通知你现在应该更改权限，移除对`settings.php`文件的写入访问权限：![创建虚拟主机并安装WordPress](img/5849_11_06.jpg)
- en: You can now navigate to the URL of your Drupal site and follow onscreen instructions
    to finish setup and start using the site.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以导航到你的Drupal站点的URL，按照屏幕上的指示完成设置并开始使用该站点。
- en: How it works...
  id: totrans-357
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Drupal uses technologies described throughout this book. In order to set up
    our server for the application, we need to install Apache, MySQL, and PHP. We
    also need a number of additional PHP modules to allow Drupal to communicate with
    the database and manipulate image files.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal使用了本书中描述的技术。为了为应用程序设置我们的服务器，我们需要安装Apache、MySQL和PHP。我们还需要安装一些额外的PHP模块，以便Drupal与数据库通信并操作图像文件。
- en: After the initial server setup was complete, we created a virtual host, which
    allows us to run a Drupal site on a subdomain (`cms.example.com`), leaving us
    free to run other software on the main domain or other subdomains.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 在初步服务器设置完成后，我们创建了一个虚拟主机，使我们能够在子域（`cms.example.com`）上运行 Drupal 网站，从而可以在主域或其他子域上运行其他软件。
- en: With everything prepared, we copied Drupal files to the domain directory, created
    the files and folder that Drupal needs for installation, and then allowed Drupal's
    installer to guide us through the remaining steps. Drupal filled its settings
    file with the information necessary to connect to the database and initialized
    the website. After installation, it's important to remove write permissions from
    the settings file.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 在一切准备就绪后，我们将 Drupal 文件复制到域目录，创建了 Drupal 安装所需的文件和文件夹，然后让 Drupal 的安装程序引导我们完成剩下的步骤。Drupal
    填充了它的设置文件，包含了连接数据库所需的信息，并初始化了网站。安装完成后，重要的一步是从设置文件中删除写权限。
- en: See also
  id: totrans-361
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: More information about the process of installing Drupal can be found in its
    manual at [https://drupal.org/documentation/install](https://drupal.org/documentation/install)
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关安装 Drupal 过程的更多信息，请参阅其手册，网址为 [https://drupal.org/documentation/install](https://drupal.org/documentation/install)
- en: Installing a Django-based application using mod_wsgi
  id: totrans-363
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 mod_wsgi 安装基于 Django 的应用程序
- en: Django is a versatile web development framework written in the Python programming
    language. The framework allows for rapid development while encouraging good coding
    practices. Applications written in Django can be hosted on Apache with the use
    of the `mod_wsgi` module.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: Django 是一个多功能的 web 开发框架，使用 Python 编程语言编写。该框架支持快速开发，并鼓励良好的编码实践。使用 Django 编写的应用程序可以通过
    `mod_wsgi` 模块托管在 Apache 上。
- en: This recipe will demonstrate how to set up your server to host a Django application.
    Other Python applications supporting `mod_wsgi` can be set up in a similar fashion.
    This includes applications such as MoinMoin, PyBlosxom, Trac, and other frameworks
    such as CherryPy, Pylons, TurboGears, Pyramid, web.py, Werkzeug, Web2Py, and Zope.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将演示如何设置服务器来托管 Django 应用程序。其他支持 `mod_wsgi` 的 Python 应用程序也可以通过类似方式进行设置。这包括
    MoinMoin、PyBlosxom、Trac 等应用程序，以及 CherryPy、Pylons、TurboGears、Pyramid、web.py、Werkzeug、Web2Py
    和 Zope 等框架。
- en: How to do it...
  id: totrans-366
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Install the Apache web server by following the *Installing Apache on your system*
    recipe in [Chapter 8](ch08.html "Chapter 8. Running an Apache Web Server"), *Running
    an Apache Web Server*.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 按照 [第八章](ch08.html "第八章：运行 Apache Web 服务器")，*运行 Apache Web 服务器* 章节中的 *在您的系统上安装
    Apache* 教程，安装 Apache Web 服务器。
- en: Install Python Version 2.7 using a system package. The package will be named
    `python`, `python2.7`, `python-2.7`, or something similar.
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用系统包安装 Python 版本 2.7。该包的名称可能是 `python`、`python2.7`、`python-2.7` 或类似的名称。
- en: Tip
  id: totrans-369
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: As of Version 1.5, Django supports Python 3, and setup is the same as in the
    newer version. You just need to substitute Python 2.7 with Python 3, and packages
    for `pip` and `mod_wsgi` with their Python 3 equivalents.
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 1.5 版本开始，Django 支持 Python 3，安装过程与较新版本相同。您只需要将 Python 2.7 替换为 Python 3，并将 `pip`
    和 `mod_wsgi` 的软件包替换为 Python 3 版本。
- en: Install `pip`—the Python package installer—from a system package. The package
    will be named `python-pip` or something similar.
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从系统包安装 `pip`——Python 包管理器。该包的名称可能是 `python-pip` 或类似的名称。
- en: Tip
  id: totrans-372
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: On some systems, you may need to add an additional repository to install the
    package. For instance, if you're running a Linux distribution from the RedHat
    family (RHEL, CentOS, Fedora, and so on), you should add the **Extra Packages
    for Enterprise Linux** (**EPEL**) repository. Information about setting up EPEL
    can be found in the *Giving users access to your server via FTP* recipe in [Chapter
    6](ch06.html "Chapter 6. Managing Files on Your System"), *Managing Files on Your
    System*.
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在某些系统中，您可能需要添加额外的仓库才能安装软件包。例如，如果您使用的是 RedHat 家族的 Linux 发行版（如 RHEL、CentOS、Fedora
    等），您应该添加 **企业 Linux 的额外软件包**（**EPEL**）仓库。关于设置 EPEL 的信息可以在 *通过 FTP 给用户访问您的服务器*
    章节中的 [第六章](ch06.html "第六章：管理您系统上的文件")，*管理您系统上的文件* 章节中找到。
- en: Install `mod_wsgi`, a module that enables Apache to host Python applications,
    from a system package. The package will be named `mod_wsgi`, `apache2-mod_wsgi`,
    `libapache2-mod-wsgi`, or something similar.
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从系统包安装 `mod_wsgi`，这是一个使 Apache 能够托管 Python 应用程序的模块。该包的名称可能是 `mod_wsgi`、`apache2-mod_wsgi`、`libapache2-mod-wsgi`
    或类似的名称。
- en: Follow the steps in the *Enabling Apache modules* recipe in [Chapter 8](ch08.html
    "Chapter 8. Running an Apache Web Server"), *Running an Apache Web Server*, to
    enable the `mod_wsgi` module (`wsgi`).
  id: totrans-375
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照[第8章](ch08.html "第8章：运行Apache Web服务器")中的*启用Apache模块*食谱，*运行Apache Web服务器*，启用`mod_wsgi`模块（`wsgi`）。
- en: 'Install Django using `pip` by issuing the following command:'
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`pip`安装Django，运行以下命令：
- en: '[PRE26]'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Tip
  id: totrans-378
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'You can modify the preceding command to install a particular version of Django.
    For instance, to install Django 1.6.2, use the following command:'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以修改上述命令来安装特定版本的Django。例如，要安装Django 1.6.2，可以使用以下命令：
- en: '[PRE27]'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Make a directory for web applications in `/srv/webapps/`.
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/srv/webapps/`中创建一个Web应用目录。
- en: 'Create a project structure for your application by issuing the following command.
    This will create a directory in `/srv/webapps/hello` to store your application.
    Execute the following command:'
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令为你的应用创建项目结构。这将在`/srv/webapps/hello`中创建一个目录来存储你的应用。执行以下命令：
- en: '[PRE28]'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Tip
  id: totrans-384
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Instead of starting a new project in `hello`, you can upload a Django application
    to another directory. Make a note of the application path and substitute it for
    `/srv/webapps/hello` in subsequent steps.
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以将Django应用上传到另一个目录，而不是在`hello`中启动新项目。记下应用路径，并在后续步骤中将其替换为`/srv/webapps/hello`。
- en: Make directories for static and media files used by your application, for instance,
    in `/srv/webapps/hello/static/` and `/srv/webapps/hello/media/`.
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为你的应用程序创建静态文件和媒体文件的目录，例如，`/srv/webapps/hello/static/`和`/srv/webapps/hello/media/`。
- en: In Webmin, navigate to **Servers** | **Apache Webserver** and click **Create
    virtual host**. You don't need to specify a document root; just set **Server Name**
    to `hello.example.com`.
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Webmin中，导航到**服务器** | **Apache Web服务器**，然后点击**创建虚拟主机**。你无需指定文档根目录，只需将**服务器名称**设置为`hello.example.com`。
- en: Tip
  id: totrans-388
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: More information about setting up virtual servers can be found in the *Createing
    virtual host* recipe in [Chapter 8](ch08.html "Chapter 8. Running an Apache Web
    Server"), *Running an Apache Web Server*. This recipe also explains how to set
    up a mock DNS record in `/etc/hosts` if you don't have another way to point subdomains
    to your server.
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多关于设置虚拟服务器的信息，可以在[第8章](ch08.html "第8章：运行Apache Web服务器")中的*创建虚拟主机*食谱中找到，*运行Apache
    Web服务器*。此食谱还解释了如何在`/etc/hosts`中设置模拟DNS记录，如果你没有其他方式将子域指向服务器。
- en: Click the icon for the newly created virtual server.
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击新创建的虚拟服务器的图标。
- en: Click the **Edit Directives** icon.
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**编辑指令**图标。
- en: 'Enter the following configuration directives in the text area and click **Save**:'
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本区域输入以下配置指令并点击**保存**：
- en: '[PRE29]'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Consider the following screenshot:'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请参考以下截图：
- en: '![How to do it...](img/5849_11_07.jpg)'
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/5849_11_07.jpg)'
- en: Click the **Apply Changes** link.
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用更改**链接。
- en: Now, when you navigate to [http://hello.example.com](http://hello.example.com),
    you should be greeted by Django's welcome screen served by Apache.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你访问[http://hello.example.com](http://hello.example.com)时，应该能看到由Apache提供的Django欢迎界面。
- en: Tip
  id: totrans-398
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'If you''re using SELinux, you may run into problems because the location `/srv/webapps`
    is not accessible to Apache. Disable SELinux temporarily to see if that solves
    your problem, and then refer to the following documentation page for information
    on how to fix the issue:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是SELinux，可能会遇到问题，因为`/srv/webapps`位置对Apache不可访问。可以临时禁用SELinux，看看是否能解决问题，然后参考以下文档页面，了解如何解决此问题：
- en: '[https://code.google.com/p/modwsgi/wiki/ApplicationIssues#Secure_Variants_Of_UNIX](https://code.google.com/p/modwsgi/wiki/ApplicationIssues#Secure_Variants_Of_UNIX)'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://code.google.com/p/modwsgi/wiki/ApplicationIssues#Secure_Variants_Of_UNIX](https://code.google.com/p/modwsgi/wiki/ApplicationIssues#Secure_Variants_Of_UNIX)'
- en: How it works...
  id: totrans-401
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: '**Web Server Gateway Interface** (**WSGI**) is a low-level interface between
    web servers and web applications or frameworks written in Python. Apache is able
    to serve such applications through a module named `mod_wsgi`.'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '**Web服务器网关接口**（**WSGI**）是一个低级接口，连接Web服务器和用Python编写的Web应用或框架。Apache通过一个名为`mod_wsgi`的模块能够提供此类应用服务。'
- en: The configuration we created instructs Apache to create a number of daemon processes
    (`processes=3`) that reside in memory ready to process HTTP requests coming from
    the web server. The number of processes and threads started within each process
    determines how much of the system's resources are assigned to the application,
    which in turn decides how many requests it can handle simultaneously. These parameters
    should be tweaked to your specific needs.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建的配置指示 Apache 创建多个守护进程（`processes=3`），这些进程驻留在内存中，随时准备处理来自 Web 服务器的 HTTP 请求。每个进程中启动的进程数和线程数决定了分配给应用程序的系统资源量，进而决定了它可以同时处理多少个请求。这些参数应根据你的具体需求进行调整。
- en: The `python-path` parameter tells Python where it can find additional application
    modules. Our application is placed in `/srv/webapps/hello/`, which is not on the
    standard list of places Python searches when it looks for modules; therefore,
    we specify its location explicitly.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '`python-path` 参数告诉 Python 它可以在哪里找到额外的应用程序模块。我们的应用程序位于 `/srv/webapps/hello/`，这是
    Python 在查找模块时不会自动搜索的标准位置；因此，我们需要明确指定它的位置。'
- en: The `WSGIScriptAlias` directive instructs Apache to serve all requests coming
    in to the root URL of the domain (`/`) to be handled by Django. `Alias` directives
    instruct Apache that requests to places such as `/static/` should be served directly
    from disk. You can combine the `Alias` and `WSGIScriptAlias` directives to specify
    which parts of a domain are served by an application and which parts Apache should
    serve directly.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '`WSGIScriptAlias` 指令指示 Apache 将所有访问域名根 URL (`/`) 的请求交给 Django 处理。`Alias` 指令则告诉
    Apache，像 `/static/` 这样的请求应该直接从磁盘提供。你可以结合使用 `Alias` 和 `WSGIScriptAlias` 指令，来指定由应用程序提供服务的域名部分，以及由
    Apache 直接提供的部分。'
- en: See also
  id: totrans-406
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: More information about serving Django through mod_wsgi can be found in its manual
    at [https://docs.djangoproject.com/en/dev/howto/deployment/wsgi/modwsgi/](https://docs.djangoproject.com/en/dev/howto/deployment/wsgi/modwsgi/).
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关通过 mod_wsgi 提供 Django 服务的更多信息，可以在其手册中找到：[https://docs.djangoproject.com/en/dev/howto/deployment/wsgi/modwsgi/](https://docs.djangoproject.com/en/dev/howto/deployment/wsgi/modwsgi/)。
- en: Even more detailed information can be found in the `mod_wsgi` documentation
    at [https://code.google.com/p/modwsgi/wiki/InstallationInstructions](https://code.google.com/p/modwsgi/wiki/InstallationInstructions).
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更详细的信息可以在 `mod_wsgi` 文档中找到：[https://code.google.com/p/modwsgi/wiki/InstallationInstructions](https://code.google.com/p/modwsgi/wiki/InstallationInstructions)。
