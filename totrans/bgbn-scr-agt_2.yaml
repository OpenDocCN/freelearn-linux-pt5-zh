- en: Chapter 2. Circumventing Censorship with a Tor Bridge
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章：通过 Tor 桥接绕过审查
- en: In this chapter, you'll configure your **BeagleBone Black** (**BBB**) to run
    a bridge in the Tor network. This bridge will allow you and others to access the
    Internet more anonymously and provide an anti-censorship gateway. We'll add a
    simple hardware control interface to BBB so that we can see and adjust the bandwidth
    usage of the bridge in real time. We'll call this project BeagleBridge.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将配置你的**BeagleBone Black**（**BBB**）以在 Tor 网络中运行一个桥接。这个桥接将允许你和其他人更加匿名地访问互联网，并提供一个反审查的网关。我们将为
    BBB 添加一个简单的硬件控制界面，以便我们实时查看和调整桥接的带宽使用情况。我们将这个项目命名为 BeagleBridge。
- en: 'This chapter will discuss the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将讨论以下内容：
- en: An introduction to Tor
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tor 简介
- en: The difference between a Tor relay and bridge
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tor 中继与桥接的区别
- en: Obfuscated Tor proxies
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混淆 Tor 代理
- en: How to download and install Tor on BBB
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在 BBB 上下载和安装 Tor
- en: How to configure BBB as a Tor bridge running an obfuscated proxy
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何配置 BBB 作为运行混淆代理的 Tor 桥接
- en: How to add hardware controls to adjust the bridge from a front panel
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何向前面板添加硬件控制来调整桥接
- en: Learning about Tor
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Tor
- en: In this project, you will learn how to use Tor, a tool and network designed
    to protect your anonymity online. Tor originally developed from research, sponsored
    by the U.S. Naval Research Laboratory, on **onion routing** (Dingledine, Mathewson,
    and Syverson, 2004). In onion routing, the client builds a circuit of nodes in
    an overlay network, which is a network built on top of an existing network. The
    Tor network is an overlay network that runs on the Internet, although it can run
    on separate networks. The client sends a message to each node, which is specifically
    encrypted for that node, asking the node to send it to the next node in the circuit.
    Each node peels back a layer of encryption and forwards the result to the next
    hop in the circuit, and hence, the **onion analogy**. The last node contains the
    client's actual message, which is forwarded to the destination server.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本项目中，你将学习如何使用 Tor，这是一个旨在保护你在线匿名性的工具和网络。Tor 最初源自美国海军研究实验室资助的关于**洋葱路由**的研究（Dingledine,
    Mathewson, 和 Syverson，2004）。在洋葱路由中，客户端在一个覆盖网络中建立一个节点电路，覆盖网络是建立在现有网络之上的网络。Tor 网络是一个运行在互联网中的覆盖网络，尽管它也可以运行在单独的网络上。客户端将消息发送给每个节点，该消息是专门为该节点加密的，请求该节点将消息转发给电路中的下一个节点。每个节点解开一层加密并将结果转发给电路中的下一个跳点，因此有了**洋葱类比**。最后一个节点包含客户端的实际消息，并将其转发给目标服务器。
- en: Onion routing provides anonymity because the destination server does not know
    the IP address of the client. Typically, when you use your browser to access the
    Internet, the browser creates a **Transmission Control Protocol** (**TCP**) connection
    that originates from your system and terminates at the website you are trying
    to visit. The address for TCP is provided by the **Internet Protocol** (**IP**).
    Each IP datagram contains a source and destination IP address. As datagrams arrive
    at the server, the server can read the source IP address. This is generally useful
    as the server needs this address to return your data. However, this also means
    that the server knows your IP address, which is where you live on the Internet.
    Your IP address alone reveals information about you, such as the country in which
    you live and your **Internet Service Provider** (**ISP**). Geolocating by an IP
    address can be accurate to the zip code level, when you use United States as an
    example.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 洋葱路由提供匿名性，因为目标服务器无法知道客户端的 IP 地址。通常，当你使用浏览器访问互联网时，浏览器会创建一个**传输控制协议**（**TCP**）连接，该连接从你的系统发起，并在你尝试访问的网站处终止。TCP
    的地址由**互联网协议**（**IP**）提供。每个 IP 数据报包含源 IP 地址和目标 IP 地址。当数据报到达服务器时，服务器可以读取源 IP 地址。这通常是有用的，因为服务器需要这个地址来返回你的数据。然而，这也意味着服务器知道你的
    IP 地址，即你在互联网上的位置。仅仅是你的 IP 地址就能透露你的一些信息，比如你所在的国家和你的**互联网服务提供商**（**ISP**）。通过 IP
    地址进行地理定位可以准确到邮政编码级别，以美国为例。
- en: Note
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Tor**, originally an acronym for **The Onion Router**, is now simply referred
    to as *Tor*, not *TOR*. When you ask questions on the Tor mailing list or IRC
    channels, Tor developers will appreciate it if you make note of this subtlety.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**Tor**，最初是**洋葱路由器**（**The Onion Router**）的缩写，现在简单地称为*Tor*，而不是*TOR*。当你在 Tor
    邮件列表或 IRC 频道上提问时，Tor 开发者会很感激你注意到这一细微差别。'
- en: The following diagram shows this routing. In this case, Alice is a client who
    connects to the first node of her circuit, which happens to be running on your
    BBB. This BBB unwraps a layer and forwards Alice's communication to the middle
    node. The middle node does the same to the final (exit) node. The exit node sends
    Alice's original message to the destination server named Bob. The green arrows
    show internal Tor connections that are encrypted. The connection from the exit
    node to Bob is shown as an unencrypted connection because this traffic is not
    part of the Tor network. From Bob's perspective, the IP originator of this connection
    is the exit node. However, the true originator is Alice whose IP is hidden by
    the Tor network.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了这一路由过程。在这个例子中，Alice是一个客户端，她连接到她电路中的第一个节点，这个节点恰好运行在你的BBB上。这个BBB解开一层并将Alice的通信转发到中间节点。中间节点也执行相同的操作，将信息转发到最终（出口）节点。出口节点将Alice的原始消息发送到名为Bob的目标服务器。从图中绿色箭头所示，表明Tor内部的连接是加密的。出口节点到Bob的连接则显示为未加密连接，因为这部分流量不属于Tor网络的一部分。从Bob的角度来看，这个连接的IP发起者是出口节点。然而，真正的发起者是Alice，她的IP地址被Tor网络隐藏了。
- en: '![Learning about Tor](img/00006.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![了解Tor](img/00006.jpeg)'
- en: 'The response to this information by many individuals is:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 许多个人对此信息的反应是：
- en: '*"So what? Why do I care if the website I''m visiting knows my IP address?"*'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"那又怎样？为什么我关心我访问的网站知道我的IP地址？"*'
- en: The website, which knows the data you requested, now knows your location. This
    information could be combined with other public information, for example, to conduct
    a **linkage attack**. A linkage attack is an attempt at deanonymization by combining
    information from multiple sources. For example, let's say you are searching for
    information on a rare medical condition. You post a question on a forum, under
    a pseudonym, asking for information. However, the website, and anybody passively
    monitoring your connection (if it wasn't encrypted), knows your general location
    as well as your question. Your medical condition is most prevalent in Hispanic
    females in their seventies. Using your IP address combined with knowledge about
    your medical condition, one can conduct a linkage attack possibly using public
    census data to reveal your identity.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 该网站现在知道了你请求的数据，并且还知道了你的位置信息。这些信息可能与其他公共信息结合使用，例如，进行**关联攻击**。关联攻击是通过将来自多个来源的信息结合起来进行的去匿名化尝试。例如，假设你在寻找有关某种罕见疾病的信息。你在一个论坛上以化名发布问题，询问相关信息。然而，该网站以及任何被动监控你连接的人（如果连接没有加密）都知道你的大致位置以及你提出的问题。你的疾病在七十多岁的西班牙裔女性中最为常见。通过将你的IP地址与疾病信息结合起来，可以进行关联攻击，可能使用公共人口普查数据来揭示你的身份。
- en: Tor protects against this kind of attacks by encrypting your traffic through
    the Tor network and masking your IP address. To the remote website, your IP address
    will be that of the last node in the Tor network, known as an exit relay.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Tor通过加密你的流量并通过Tor网络进行传输，同时隐藏你的IP地址，从而防范此类攻击。对于远程网站来说，你的IP地址将是Tor网络中最后一个节点的IP地址，这个节点被称为出口中继。
- en: Appreciating the various users of Tor
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 欣赏Tor的各种用户
- en: A wide range of people use Tor for daily Internet access. Individuals who don't
    want their ISP to collect information on the websites they visit, perhaps because
    they are seeking information on sensitive topics, use Tor. Government agents and
    the military use Tor. After all, it's difficult to go undercover online if the
    IP address you are connecting FROM resolves to `fbi.gov`. Tor is used by whistleblowers,
    such as Edward Snowden, to disclose information to the press. It is also used
    by normal citizens when a government blocks access to the Internet. In late March
    2014, when the Turkish government attempted to ban access to Twitter, the number
    of Tor users in Turkey jumped from around 25,000 to just under 70,000 in about
    two weeks.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 各种各样的人使用Tor进行日常的互联网访问。那些不希望ISP收集他们访问网站信息的人，可能是因为他们正在寻求敏感话题的信息，使用Tor。政府代理人和军方也使用Tor。毕竟，如果你连接的IP地址是`fbi.gov`，那么在网上卧底就很困难。像爱德华·斯诺登这样的举报人也使用Tor向媒体披露信息。当政府封锁互联网访问时，普通公民也会使用Tor。例如，在2014年3月底，当土耳其政府试图封锁Twitter时，土耳其的Tor用户数量从约25,000人激增至不到70,000人，仅用了大约两周时间。
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注释
- en: Tor publishes, via a wide range of interactive graphs, numerous metrics on who
    is using Tor and where they're using it from. The users spike in Turkey can be
    seen in the graph available at [https://metrics.torproject.org/users.html?graph=userstats-relay-country&start=2014-01-04&end=2014-04-04&country=tr&events=off#userstats-relay-country](https://metrics.torproject.org/users.html?graph=userstats-relay-country&start=2014-01-04&end=2014-04-04&country=tr&events=off#userstats-relay-country).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Tor 通过各种交互式图表发布了关于谁在使用 Tor 以及他们来自哪里的大量指标。在[https://metrics.torproject.org/users.html?graph=userstats-relay-country&start=2014-01-04&end=2014-04-04&country=tr&events=off#userstats-relay-country](https://metrics.torproject.org/users.html?graph=userstats-relay-country&start=2014-01-04&end=2014-04-04&country=tr&events=off#userstats-relay-country)
    上的图表中可以看到土耳其的用户激增。
- en: Understanding Tor relays
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解 Tor 中继
- en: '**Tor relays** are the individual nodes in the Tor network. A node is some
    type of computer that is running the Tor software. These relays route messages
    throughout the network. Exit nodes, which are the last nodes in the circuit, send
    the clients'' messages to the destination service. One of the interesting aspects
    of Tor is that most of the nodes are run by volunteers. These relay operators
    volunteer their bandwidth, time, and energy bill to increase the capacity of the
    Tor network. The Tor Project encourages individuals to run relays in order to
    add to the diversity of the network. The motivation behind this recommendation
    is that it is easier to hide in a crowd—it''s difficult to hide in a crowd of
    one person.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Tor 中继**是 Tor 网络中的单独节点。一个节点是运行 Tor 软件的计算机。 这些中继将消息在整个网络中传递。出口节点是电路中的最后一个节点，将客户端的消息发送到目标服务。Tor
    的一个有趣之处在于，大多数节点都是由志愿者运行的。这些中继操作员自愿提供带宽、时间和能源费用，以增加 Tor 网络的容量。Tor 项目鼓励个人运行中继，以增加网络的多样性。该建议背后的动机是，藏身在一个人群中更容易——在一个只有一个人的人群中藏身是很困难的。'
- en: Understanding Tor bridges
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解 Tor 桥接
- en: In 2006, in response to an increased Internet censorship, the Tor project added
    an anticensorship feature called a bridge relay or simply, a bridge (Dingledine,
    2006). A bridge is a special form of a relay—it's not listed in the public relay
    directory. Strong Internet censors were able to block access to Tor through several
    methods. One method that was effective was to look up all the public relays, which
    were only a thousand or so at the time, and deny access to those IP addresses.
    Therefore, bridge relays were created and distributed by less public means in
    order to allow users to access the Tor network. If a client could access the bridge,
    which was already connected to Tor, then the client could access the Internet.
    In this context, less public means a distribution mechanism that does not work
    via the public relay list.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 2006年，随着互联网审查的加强，Tor 项目增加了一个反审查功能，叫做桥接中继，简称为桥接（Dingledine, 2006）。桥接是一种特殊形式的中继——它不会出现在公共中继目录中。强大的互联网审查者能够通过几种方法阻止访问
    Tor。其中一个有效的方法是查找所有公共中继，那时大约只有一千个左右，并拒绝访问那些 IP 地址。因此，桥接中继是通过不太公开的方式创建和分发的，以便用户能够访问
    Tor 网络。如果客户端能够访问桥接（它已经连接到 Tor），那么客户端就可以访问互联网。在这种情况下，不太公开意味着一种不通过公共中继列表的分发机制。
- en: Using obfuscated proxies and pluggable transports
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用混淆代理和可插拔传输
- en: Censors were still able to block access to Tor; the technique was to identify
    the traffic patterns generated by Tor and block the connection. In 2010, Jacob
    Appelbaum and Nick Mathewson of the Tor Project suggested a method to obfuscate
    the Tor traffic between the client and the bridge in order to thwart deep packet
    inspection. As the obfuscation mechanism might need to change, and has changed
    in fact, the Tor Project wanted a generic protocol to allow different obfuscated
    proxies to run. This abstraction was known as **pluggable transport**.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 审查者仍然能够阻止访问 Tor；一种技术是识别由 Tor 生成的流量模式并阻止连接。在 2010 年，Tor 项目的 Jacob Appelbaum 和
    Nick Mathewson 提出了一个方法，通过混淆客户端和桥接之间的 Tor 流量，以应对深度包检测。由于混淆机制可能需要变化，实际上也发生了变化，Tor
    项目希望有一个通用协议，以允许不同的混淆代理运行。这种抽象被称为 **可插拔传输**。
- en: In this chapter, we will set up your BBB to run as a Tor bridge, running an
    obfuscated proxy, using the obfs3 pluggable transport.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将设置您的 BBB 作为 Tor 桥接运行，运行一个混淆代理，使用 obfs3 可插拔传输。
- en: Realizing the limitations of Tor
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 意识到 Tor 的局限性
- en: Tor is one of the best tools currently available to protect anonymity. However,
    like all the security tools discussed in this book, there are limits to its protection.
    First of all, Tor's threat model does not hold up to a global passive adversary.
    Such an adversary can passively monitor the entire Internet. If an adversary can
    monitor the entire Internet, then it can correlate the traffic entering the Tor
    network with the traffic leaving the network and can possibly deanonymize Tor
    clients. One of the trade-offs of this design is that Tor is a low-latency system,
    meaning that you can access the Internet using normal protocols such as HTTP without
    experiencing much delay. This is one of the reasons why diversity in the Tor network
    is important. If all the relays were in a particular country, it might be easier
    for that country to monitor the traffic. However, currently it is thought to be
    difficult, in spite of the recent leaks provided by Edward Snowden, for such an
    adversary to monitor the entire Internet.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Tor 是目前保护匿名性最好的工具之一。然而，像本书中讨论的所有安全工具一样，它的保护也有局限性。首先，Tor 的威胁模型无法应对全球被动对手。这样的对手可以被动地监视整个互联网。如果对手能够监视整个互联网，那么他们就可以将进入
    Tor 网络的流量与离开网络的流量进行关联，从而可能揭露 Tor 客户端的身份。这种设计的一个折衷是，Tor 是一个低延迟系统，这意味着你可以使用像 HTTP
    这样的正常协议访问互联网，而不会遇到太多的延迟。这也是 Tor 网络中多样性重要的原因之一。如果所有的中继节点都在某个特定国家，那么这个国家可能会更容易监视流量。然而，尽管最近爱德华·斯诺登提供了泄露的信息，目前仍认为这样的对手很难监视整个互联网。
- en: Note
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Roger Dingledine of the Tor Project commented on NSA''s exploits of Tor with
    the following:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Tor 项目的 Roger Dingledine 就 NSA 利用 Tor 漏洞做出如下评论：
- en: '*"The good news is that they [the NSA] went for a browser exploit, meaning
    there''s no indication that they can break the Tor protocol or do traffic analysis
    on the Tor network. Infecting the laptop, phone, or desktop is still the easiest
    way to learn about the human behind the keyboard."*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*"好消息是，他们[NSA]利用了浏览器漏洞，这意味着没有迹象表明他们能够破解 Tor 协议或对 Tor 网络进行流量分析。感染笔记本、手机或桌面仍然是了解键盘背后人的最简单方法。"*'
- en: The full text and additional commentary is available on the Tor website ([https://blog.torproject.org/blog/yes-we-know-about-guardian-article](https://blog.torproject.org/blog/yes-we-know-about-guardian-article)).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 完整文本和更多评论可见于 Tor 网站（[https://blog.torproject.org/blog/yes-we-know-about-guardian-article](https://blog.torproject.org/blog/yes-we-know-about-guardian-article)）。
- en: Also, Tor will not automatically encrypt all your traffic. If you request information
    over unencrypted HTTP, the Tor exit node you use will relay this unencrypted information
    to its destination. A malicious exit node can monitor or manipulate your traffic;
    therefore, it's always best to use encrypted sessions, such as HTTPS, over Tor.
    Tor does not protect all your traffic just because you are running Tor. Applications
    generally need to be configured to use Tor. Even if you set up a transparent proxy
    on your home network and route all of your traffic through that proxy, the malware
    or exploits in your browser may leak your identity. This is why the Tor Project
    recommends that you use the Tor Browser, which essentially is a forked version
    of Mozilla Firefox that has been patched especially to not leak your identity.
    Lastly, Tor can't protect your identity if you choose to reveal it. If you decide
    to log in to Facebook over Tor, you've just told Facebook who you are and that
    you are using Tor since all the Tor exit nodes are public.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Tor 并不会自动加密你所有的流量。如果你请求的是未加密的 HTTP 信息，那么你使用的 Tor 退出节点会将这些未加密的信息转发到目标地址。恶意的退出节点可能会监视或操控你的流量；因此，最好在
    Tor 上使用加密的会话，如 HTTPS。Tor 并不会仅仅因为你运行了 Tor 就保护你所有的流量。应用程序通常需要配置以使用 Tor。即使你在家庭网络上设置了一个透明代理，并将所有流量通过该代理路由，浏览器中的恶意软件或漏洞也可能泄露你的身份。这就是为什么
    Tor 项目建议你使用 Tor 浏览器的原因，Tor 浏览器本质上是 Mozilla Firefox 的一个分支版本，经过特别修补以避免泄露你的身份。最后，如果你选择揭示你的身份，Tor
    就无法保护你的身份。如果你决定通过 Tor 登录 Facebook，你就等于告诉了 Facebook 你是谁，而且你正在使用 Tor，因为所有 Tor 退出节点都是公开的。
- en: Tip
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: An easy way to use Tor more securely is to use it only from Tails ([https://tails.boum.org/](https://tails.boum.org/)),
    which is a custom Linux distribution that will boot from various media. Tails
    is a collection of free software and includes numerous correctly configured tools
    to help protect your confidentiality and anonymity.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Tor 更安全的一个简单方法是仅从 Tails（[https://tails.boum.org/](https://tails.boum.org/)）使用它，Tails
    是一个定制的 Linux 发行版，可以从各种媒体启动。Tails 是一套免费的软件，并包含多个已正确配置的工具，帮助保护你的隐私和匿名性。
- en: The impact and benefits of running a Tor bridge
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行 Tor 桥接的影响和好处
- en: So, why run a Tor bridge on BBB? The impact and benefits of Tor is in the network.
    The more the Tor servers, the more the resources in the network. Many users in
    developed nations have high-speed Internet connections that are orders of magnitude
    faster than in countries where access to censor-free Internet is restricted. A
    bridge is likely to receive less traffic than a relay, as there are fewer bridge
    users than normal Tor users. Most likely, the limiting performance factor for
    your bridge will be your home network's upload speed. This can be a constraining
    factor if you are running a relay, but as a bridge, you are most likely helping
    those in precarious Internet situations and any donated bandwidth is appreciated.
    Lastly, running a bridge on BBB has the extra advantage of a low impact on your
    electric bill, as BBB will only draw about 460mA when loading a web page according
    to the BeagleBone Black System Reference Manual.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，为什么要在 BBB 上运行 Tor 桥接呢？Tor 的影响力和好处体现在网络中。Tor 服务器越多，网络中的资源就越丰富。许多发达国家的用户拥有比在互联网受限的国家更快的互联网连接速度，这种差距是数量级别的。桥接节点的流量通常会比中继节点少，因为桥接用户比正常的
    Tor 用户少。桥接的性能瓶颈很可能是家庭网络的上传速度。如果你运行的是中继节点，这可能会成为限制因素，但作为桥接节点，你很可能是在帮助那些面临不稳定互联网环境的人，任何捐赠的带宽都是值得感激的。最后，在
    BBB 上运行桥接的额外优势是对电费的影响较小，因为根据 BeagleBone Black 系统参考手册，BBB 加载网页时的功耗大约为 460mA。
- en: Installing Tor on BBB
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 BBB 上安装 Tor
- en: The instructions provided in the following sections are geared towards the user
    running BeagleBridge on a home network. The bridge will consume some otherwise
    unused bandwidth and donate it to the Tor network. You should check your ISP's
    Terms of Service before running a server to see whether it's permitted. Also,
    you'll need to configure port forwarding from your home router. As there are numerous
    devices, each with their own configuration mechanism, you should consult your
    router's manual on how to enable port forwarding.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 以下章节提供的指令是针对在家庭网络上运行 BeagleBridge 的用户。桥接节点会消耗一些本来未使用的带宽，并将其捐赠给 Tor 网络。在运行服务器之前，你应该检查你的
    ISP 的服务条款，确认是否允许运行此类服务。此外，你还需要配置家用路由器的端口转发。由于有各种各样的设备，每个设备都有不同的配置方式，你应该查阅路由器手册，了解如何启用端口转发。
- en: Installing Tor from the development repository
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从开发库安装 Tor
- en: The Tor images in the official Debian repository are not as up to date as those
    from the Tor Project. We'll use the Tor Project's development repository to retrieve
    the latest software. This is especially important when you are running a bridge,
    as the bridge and the pluggable transport software are updated frequently.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 官方 Debian 仓库中的 Tor 镜像版本并不如 Tor 项目提供的版本更新。我们将使用 Tor 项目的开发仓库来获取最新的软件。这对于运行桥接节点特别重要，因为桥接节点和可插拔传输软件的更新频率较高。
- en: Note
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The latest instructions as well as the latest GPG fingerprint can be found on
    the Tor Project's website ([https://www.torproject.org/docs/debian](https://www.torproject.org/docs/debian)).
    The following steps explain the installation procedure, but you should cross-reference
    them with the published instructions.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最新的指令以及最新的 GPG 指纹可以在 Tor 项目官网找到（[https://www.torproject.org/docs/debian](https://www.torproject.org/docs/debian)）。以下步骤解释了安装过程，但你应该与发布的官方指令进行对比。
- en: 'Edit `/etc/apt/sources.list` by adding the following lines:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑 `/etc/apt/sources.list`，添加以下内容：
- en: '[PRE0]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, add the GPG key used to sign these Tor packages:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，添加用于签名这些 Tor 软件包的 GPG 密钥：
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, issue the following command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，输入以下命令：
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The Tor Project recommends that you add the GPG key ring with the following
    command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Tor 项目建议你通过以下命令添加 GPG 密钥环：
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Tor needs an up-to-date time as it enforces the time validity on certificates.
    In a later chapter, we''ll show you how to keep time with a dedicated **Real Time
    Clock** (**RTC**). For now, update your clock from the **Network Time Protocol**
    (**NTP**) as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Tor 需要更新的时间，因为它会对证书进行时间有效性检查。在后续章节中，我们将向您展示如何使用专用的 **实时时钟**（**RTC**）保持时间。现在，您可以通过
    **网络时间协议**（**NTP**）来更新您的时钟，方法如下：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Install Tor:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Tor：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then, install `obfsproxy`. Obfsproxy is the software that implements the obfuscated
    proxy and allows various pluggable transports. Obfsproxy uses Python Twisted library,
    an event-driven networking engine, which will install around 17 MB of packages
    in total:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，安装 `obfsproxy`。Obfsproxy 是实现混淆代理的软件，支持各种可插拔传输。Obfsproxy 使用 Python Twisted
    库，这是一个事件驱动的网络引擎，总共会安装大约 17 MB 的软件包：
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'While we are installing software, let''s install the Stem Python package. Stem
    is a Python controller library for Tor, and we''ll be using it later to interact
    with our bridge. The easiest method is to install it with `pip`:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装软件时，让我们安装 Stem Python 包。Stem 是一个用于 Tor 的 Python 控制库，我们稍后将使用它与我们的桥接进行交互。最简单的方法是通过
    `pip` 安装：
- en: '[PRE7]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Configuring Tor for BBB
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 Tor 以支持 BBB
- en: 'Under Debian, the configuration file for Tor is `/etc/tor/torrc`. Before editing
    `/etc/tor/torrc`, you should first take a backup. This `torrc` file is available
    for download at [https://github.com/jbdatko/beagle-bone-for-secret-agents/blob/master/ch2/torrc](https://github.com/jbdatko/beagle-bone-for-secret-agents/blob/master/ch2/torrc).
    We will discuss more interesting aspects of this configuration file in the following
    sections. When you are ready, replace `/etc/tor/torrc` with the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Debian 系统中，Tor 的配置文件是 `/etc/tor/torrc`。在编辑 `/etc/tor/torrc` 之前，您应该先进行备份。此
    `torrc` 文件可以在 [https://github.com/jbdatko/beagle-bone-for-secret-agents/blob/master/ch2/torrc](https://github.com/jbdatko/beagle-bone-for-secret-agents/blob/master/ch2/torrc)
    下载。我们将在后续章节中讨论此配置文件的更多有趣方面。当你准备好时，将 `/etc/tor/torrc` 替换为以下内容：
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Adding contact details to the torrc file
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将联系信息添加到 torrc 文件
- en: At minimum, you should change the `Nickname` field and `ContactInfo`. The `Nickname`
    field is a shorter way to refer to your bridge; however, your bridge's fingerprint
    is always the best method as it is unique. The `ContactInfo` field allows the
    Tor project to send you an e-mail if there is a problem with your bridge. You
    can create an e-mail alias if you are concerned about receiving spam. Just be
    sure to monitor this account for infrequent e-mails from the Tor project.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 至少，您应该更改 `Nickname` 字段和 `ContactInfo`。`Nickname` 字段是对您的桥接节点的简短引用；不过，您的桥接指纹始终是最好的方法，因为它是唯一的。`ContactInfo`
    字段允许 Tor 项目在您的桥接出现问题时向您发送电子邮件。如果您担心收到垃圾邮件，可以创建一个电子邮件别名。只需确保定期查看该账户，以便接收 Tor 项目偶尔发送的邮件。
- en: Tuning the bandwidth usage of your bridge
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调整桥接的带宽使用
- en: Tor's man page will describe most of these settings in detail, but some warrant
    extra explanation. The bandwidth settings, `RelayBandwidthRate` and `RelayBandwidthBurst`,
    are tunable bandwidth settings, and in a later section, we will connect our hardware
    controls to manipulate these settings. The rate and the burst are in kilobytes
    per second, not in the more common kilo or *megabits* per second, so watch your
    units.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Tor 的手册页将详细描述大多数这些设置，但其中一些设置需要额外的解释。带宽设置 `RelayBandwidthRate` 和 `RelayBandwidthBurst`
    是可调的带宽设置，稍后我们将连接硬件控制来操作这些设置。速率和突发带宽单位是千字节每秒，而不是更常见的千位或 *兆位* 每秒，因此请注意单位。
- en: Understanding Tor exit policies
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Tor 出口策略
- en: 'A bridge, by definition, is the entry point to the Tor network. As such, the
    exit policy, which will allow traffic to exit the Tor network from the server,
    should be the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 桥接节点，按照定义，是 Tor 网络的入口点。因此，出口策略应允许流量从服务器退出 Tor 网络，应该如下设置：
- en: '[PRE9]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This prevents your server from running as an exit node. If you do decide to
    run an exit node, be prepared to receive some complaints from your ISP if you
    are running it on a home network. This is why the Tor Project and the Electronic
    Frontier Foundation recommend that you *don't* run an exit relay on a home network.
    A thorough, legal FAQ prepared by the Electronic Frontier Foundation can be found
    at [https://www.torproject.org/eff/tor-legal-faq.html.en](https://www.torproject.org/eff/tor-legal-faq.html.en).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以防止您的服务器作为出口节点运行。如果您决定运行出口节点，请准备好收到来自您的 ISP 的一些投诉，尤其是当您在家庭网络上运行时。因此，Tor 项目和电子前沿基金会（EFF）建议您
    *不要* 在家庭网络上运行出口中继。电子前沿基金会准备的详细法律常见问题解答可以在 [https://www.torproject.org/eff/tor-legal-faq.html.en](https://www.torproject.org/eff/tor-legal-faq.html.en)
    找到。
- en: Setting bridge-specific settings
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置桥接特定的配置
- en: 'There are three bridge specific settings: `BridgeRelay`, `ServerTransportPlugin`,
    and `ExtORPort`. The `BridgeRelay` setting is the key setting that defines your
    relay as a bridge. Your bridge''s meta information is published in the bridge
    database instead of the public directory server, which keeps your bridge''s IP
    less public than a Tor relay''s IP address. `ServerTransportPlugin` defines which
    pluggable transport proxy your bridge supports. Currently, ScrambleSuit is the
    latest promising pluggable transport technology. However, obfs3, which is the
    transport enabled in our bridge configuration example, is slightly more mature
    and it is the more conservative recommendation. Lastly, `ExtORPort` allows the
    gathering and reporting of bridge statistics to the Tor Project.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 有三个与桥接相关的设置：`BridgeRelay`、`ServerTransportPlugin`和`ExtORPort`。`BridgeRelay`设置是关键设置，用来定义你的中继节点为桥接节点。你的桥接节点的元数据信息将发布到桥接数据库，而不是公共目录服务器，从而使桥接节点的IP地址比Tor中继节点的IP更不容易暴露。`ServerTransportPlugin`定义了你的桥接节点支持的可插拔传输代理。目前，ScrambleSuit是最新的有前景的可插拔传输技术。然而，obfs3（在我们的桥接配置示例中启用的传输方式）略微成熟一些，是更保守的推荐方式。最后，`ExtORPort`允许Tor项目收集并报告桥接节点的统计数据。
- en: Note
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For those who are interested in running the ScrambleSuit obfsproxy, take a
    look at the following link on how to configure your bridge: [https://lists.torproject.org/pipermail/torrelays/
    2014-February/003886.html](https://lists.torproject.org/pipermail/torrelays/%202014-February/003886.html).'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些有兴趣运行ScrambleSuit obfsproxy的人，可以查看以下链接，了解如何配置桥接：[https://lists.torproject.org/pipermail/torrelays/
    2014-February/003886.html](https://lists.torproject.org/pipermail/torrelays/%202014-February/003886.html)。
- en: Starting your new Tor bridge
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动你的新Tor桥接
- en: 'With the time updated and the configuration set, it''s time to turn on the
    bridge. At the moment, the bridge should be able to make a connection to the Tor
    network, but it will not be able to accept incoming connections as we have not
    yet configured port forwarding from your router. However, the `obfsproxy` port
    is randomly assigned, so we need to run the bridge first to find the port. Restart
    the Tor service with the following command:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的更新和配置的设置，现在是启动桥接的时候了。此时，桥接应该能够连接到Tor网络，但由于尚未从你的路由器配置端口转发，它无法接受传入连接。不过，`obfsproxy`端口是随机分配的，因此我们需要先启动桥接，才能找到该端口。使用以下命令重新启动Tor服务：
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, let''s check the log to see whether Tor has started correctly:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们检查日志，看看Tor是否已正确启动：
- en: '[PRE11]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If you see something like the following, then your Tor client''s behavior is
    working:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到类似以下的内容，那么你的Tor客户端行为正常：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Enabling port forwarding
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用端口转发
- en: 'We know that we need to forward port `9001`, as it is the ORPort, but we need
    to know which port the obfsproxy software runs on. This will be logged in the
    same file and will be discovered by searching the Tor log with the following command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道需要转发`9001`端口，因为它是ORPort，但我们需要知道obfsproxy软件运行在哪个端口上。这将在同一个日志文件中记录，并可以通过以下命令搜索Tor日志来发现：
- en: '[PRE13]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The previous command should yield the following search result:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令应该会返回以下搜索结果：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The `obfsproxy` port for our obfs3 service is on `59519`. From your home router,
    configure port forwarding from `9001`, and configure port forwarding from `59519`
    from your external IP to BBB. It will also help if you give your BBB a static
    internal IP. Consult your router''s manual for directions. Alternatively, you
    can specify the port with the following line in the `/etc/tor/torrc` file:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的obfs3服务的`obfsproxy`端口是`59519`。从你的家庭路由器配置端口转发，从`9001`端口进行转发，同时从外部IP向BBB转发`59519`端口。如果给你的BBB分配一个静态内部IP，也会有所帮助。请查阅路由器手册以获取详细指导。或者，你也可以在`/etc/tor/torrc`文件中使用以下行来指定端口：
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Replace the x's with the desired port address. However, it's best to let obfsproxy
    pick a random address; otherwise, the Tor Project might end up with an uneven
    distribution of bridges running on certain ports, which will make it easier to
    block access to bridges.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 用所需的端口地址替换x。不过，最好让obfsproxy随机选择一个地址；否则，Tor项目可能会在某些端口上运行桥接节点过多，这样更容易阻止对桥接节点的访问。
- en: 'Once you''ve forwarded the necessary ports, restart the router again. You should
    see the following messages, indicating success:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你转发了所需的端口，重新启动路由器。你应该能看到以下信息，表示成功：
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Congratulations! You are now running a Tor bridge on BBB and are helping to
    improve Internet freedom. You are also enabling agents, both secret and otherwise,
    to access the unfiltered Internet.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你现在正在 BBB 上运行 Tor 桥接器，并且正在帮助改善互联网自由。你还在为代理，无论是秘密代理还是其他代理，提供访问未过滤互联网的能力。
- en: Adding physical interfaces to the bridge
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向桥接器添加物理接口
- en: Now you have a Tor bridge running and you can stop here. If you do, you'd be
    missing out on the ability to combine software with custom hardware on BBB. Our
    BBB Tor bridge currently has no visual feedback, so it's not obvious that it's
    working. Also, the only means to control the bridge is to log in to BBB over SSH
    and manipulate the configuration options. The Tor bridge is an appliance and it
    needs appliance controls. In this section, we'll add a front panel, which will
    give us an easy method to control the bridge's bandwidth and a quick indicator
    to know that the software hasn't crashed. In the following section, we'll add
    the software to interface with our bridge and control the hardware.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经成功运行了一个 Tor 桥接器，你可以在这里停下来。如果你停下来了，你就错过了将软件与定制硬件结合使用的机会。我们的 BBB Tor 桥接器目前没有视觉反馈，所以并不明显它是否在工作。此外，控制桥接器的唯一方式是通过
    SSH 登录到 BBB 并操作配置选项。Tor 桥接器是一个设备，它需要设备控制。在这一部分，我们将添加一个前面板，它将为我们提供一个简单的方法来控制桥接器的带宽，并快速指示软件是否崩溃。在接下来的部分，我们将添加软件来与桥接器进行交互并控制硬件。
- en: Note
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you decide to run a Tor relay, there are websites such as Tor atlas ([https://atlas.torproject.org/](https://atlas.torproject.org/))
    that will produce bandwidth graphs and display other information about your relay.
    Another tool that will also display information about your bridge is Globe ([https://globe.torproject.org/](https://globe.torproject.org/)).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定运行 Tor 中继器，有一些网站可以生成带宽图并显示有关你中继器的其他信息，比如 Tor atlas ([https://atlas.torproject.org/](https://atlas.torproject.org/))。另一个也能显示桥接器信息的工具是
    Globe ([https://globe.torproject.org/](https://globe.torproject.org/))。
- en: Gathering the front panel components
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 收集前面板组件
- en: 'As this is our first project, we are going to use some basic components: a
    **light-emitting diode** (**LED**), a rotary potentiometer, and a **liquid-crystal
    display** (**LCD**), all shown in the following circuit diagram:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是我们的第一个项目，我们将使用一些基本组件：**发光二极管**（**LED**）、旋转电位器和**液晶显示器**（**LCD**），它们都显示在下面的电路图中：
- en: '![Gathering the front panel components](img/00007.jpeg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![收集前面板组件](img/00007.jpeg)'
- en: LCDs can been a bit tricky to work with, but SparkFun Electronics has combined
    a 16x2 LCD with a microcontroller so that it can use a serial interface instead
    of a more complicated parallel one. The serial interface is simpler because it
    only requires one data line to the device, whereas a parallel interface will require
    more wiring.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: LCD 显示器可能有点棘手，但 SparkFun Electronics 将一个 16x2 的 LCD 与微控制器结合起来，使其可以使用串行接口，而不是更复杂的并行接口。串行接口更简单，因为它只需要一条数据线连接到设备，而并行接口则需要更多的连接线。
- en: Using an LCD to display status information
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 LCD 显示状态信息
- en: Our Tor bridge generates a lot of metadata, such as the bandwidth usage, the
    number of connections, and some Tor-specific statistics. For a home network, it's
    useful to know how much bandwidth your bridge is using, and it would be nice to
    know this without logging in to BBB all the time. In the serial LCDs, we will
    draw a graphical representation of the bandwidth usage. We'll use ten bars, each
    representing a tenth of the available bandwidth. If you see five bars, then the
    bridge is using half of the available bandwidth. The LCD selected for this project
    was LCD-09067 (SparkFun Electronics).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 Tor 桥接器会生成大量元数据，例如带宽使用情况、连接数量以及一些 Tor 特有的统计信息。对于家庭网络来说，了解桥接器使用的带宽量非常有用，而且最好能够在不每次都登录
    BBB 的情况下获取这些信息。在串行 LCD 显示器中，我们将绘制带宽使用的图形表示。我们将使用十个条形图，每个条形图代表可用带宽的十分之一。如果你看到五个条形图，那么桥接器正在使用一半的可用带宽。此项目选用的
    LCD 是 LCD-09067（SparkFun Electronics）。
- en: Note
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: SparkFun Electronics is an international distributor that ships products from
    Boulder, Colorado, in the United States. Some of the more common components recommended
    in this book can be replaced with equivalent ones in your local electronic store
    if you are trying to save on shipping. You don't need to type in each component;
    they are all listed in one consolidated *wish list* at [https://www.sparkfun.com/wish_lists/93119](https://www.sparkfun.com/wish_lists/93119).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: SparkFun 电子公司是一个国际分销商，位于美国科罗拉多州博尔德，负责发货。本书推荐的一些常见组件，如果你想节省运费，可以用当地电子商店的等效组件替代。你无需逐个输入每个组件，它们都已列在一个汇总的*愿望清单*中，地址是
    [https://www.sparkfun.com/wish_lists/93119](https://www.sparkfun.com/wish_lists/93119)。
- en: Controlling the bandwidth with a potentiometer
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用电位器控制带宽
- en: 'A potentiometer is like a variable resistor. If you''ve ever adjusted the volume
    of a radio or speaker with a knob, you''ve probably used a potentiometer. By adjusting
    the knob, you adjust the resistance in the potentiometer, which in turns adjusts
    the voltage sensed at the output. The potentiometer has three leads: one for voltage
    (in), one for ground, and the final is the output.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 电位器就像是一个可变电阻。如果你曾调整过收音机或扬声器的音量旋钮，你大概使用过电位器。通过调整旋钮，你可以调整电位器中的电阻，从而改变输出端感应到的电压。电位器有三个引脚：一个用于电压输入，一个用于接地，最后一个是输出。
- en: This knob, connected to BeagleBridge, will throttle the bandwidth available
    to Tor. With the dial turned up to max, the bridge will report that all of your
    bandwidth is available to route traffic to the Tor network. With the dial at its
    midpoint, the bridge will report that half of your bandwidth is available for
    use. If you notice that the bridge is consuming more bandwidth than you'd like,
    as indicated by the LCD, you can turn down the *volume* of your bridge. The potentiometer
    and knob for this project are COM-09939 and COM-10001 (SparkFun Electronics).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这个旋钮连接到 BeagleBridge，将控制分配给 Tor 的带宽。当旋钮调到最大时，桥接器将报告所有带宽都可用来路由流量到 Tor 网络。当旋钮调到中间位置时，桥接器将报告一半的带宽可用。如果你注意到桥接器消耗的带宽超过你想要的量（LCD
    显示出来的），你可以调低桥接器的*音量*。这个项目的电位器和旋钮分别是 COM-09939 和 COM-10001（SparkFun 电子公司）。
- en: Your bridge will not immediately attract users; it will take some time. Start
    with your bridge set at the max bandwidth; if you discover that it is consuming
    more bandwidth than you like, then turn it down. To receive an indication whether
    the Tor bridge is working, we will use an LED controlled by a BBB's GPIO, which
    will flash periodically. This way you can look over at the panel and tell whether
    the software is still running. The LED by SparkFun is COM-10633, and the LED holder
    is COM-11148.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 你的桥接器不会立刻吸引到用户；这需要一些时间。开始时将桥接器设置为最大带宽；如果你发现它消耗的带宽超过了你的需求，可以将其调低。为了得到 Tor 桥接器是否正常工作的指示，我们将使用一个由
    BBB 的 GPIO 控制的 LED，它会定期闪烁。这样你就可以查看面板，判断软件是否仍在运行。SparkFun 的 LED 是 COM-10633，LED
    支架是 COM-11148。
- en: Designing the BeagleBridge circuit
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计 BeagleBridge 电路
- en: The following Fritzing diagram shows the schematic for this project.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本项目的 Fritzing 电路图。
- en: '![Designing the BeagleBridge circuit](img/00008.jpeg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![设计 BeagleBridge 电路](img/00008.jpeg)'
- en: The potentiometer is connected via BBB's **Analog-to-Digital Converter** (**ADC**)
    pins. BBB's analog inputs can only tolerate a max of 1.8V; so, it's very important
    to use the dedicated analog voltage pin, pin P9_32 (pin number 32 of the connector
    P9), which provides this voltage. Do *not* connect the potentiometer to the normal
    3.3V or 5V power rails, as this will damage the processor. We'll arbitrarily pick
    the analog input AIN5 on pin P9_36 as our input pin, and connect that to the middle
    lead or output of the potentiometer. Lastly, connect the last lead of the potentiometer
    to the dedicated analog ground pin, P9_34.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 电位器通过 BBB 的**模拟到数字转换器**（**ADC**）引脚连接。BBB 的模拟输入只能承受最高 1.8V，因此非常重要的是使用专用的模拟电压引脚，即
    P9_32 引脚（P9 接口的第 32 引脚），它提供这个电压。*不要*将电位器连接到普通的 3.3V 或 5V 电源轨，因为这样会损坏处理器。我们将随意选择
    P9_36 上的模拟输入 AIN5 作为输入引脚，并将其连接到电位器的中间引脚或输出端。最后，将电位器的最后一个引脚连接到专用的模拟地引脚 P9_34。
- en: The LED and LCD both use 3.3V and the common ground. We need a serial transmit
    pin for the LCD, so we'll arbitrarily pick P9_13, which is the transmit for UART4\.
    UART1 transmit on P9_24 or UART2 on P9_21 will also work fine.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: LED 和 LCD 都使用 3.3V 电压和共地。LCD 需要一个串行传输引脚，所以我们将随意选择 P9_13，它是 UART4 的传输引脚。P9_24
    上的 UART1 传输或者 P9_21 上的 UART2 传输也都能正常工作。
- en: Lastly, we need a GPIO to control the LED. Again, any will do, but I've picked
    pin P9_15\. You'll need a resistor to limit the current to the LED. Sizing a resistor
    is straightforward using Ohm's Law; we just need to know the forward voltage drop
    and the max current of the LED. This information is found in the datasheet. If
    you are using SparkFun's 5mm Green LED, its max current is 20mA and has a forward
    voltage drop of 2.2V.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要一个GPIO来控制LED。同样，任何GPIO都可以，但我选择了P9_15插针。你需要一个电阻来限制LED的电流。根据欧姆定律计算电阻的大小非常简单；我们只需要知道LED的正向电压降和最大电流。这个信息可以在数据手册中找到。如果你使用的是SparkFun的5mm绿色LED，它的最大电流为20mA，正向电压降为2.2V。
- en: Ohm's Law states that voltage is equal to the current multiplied by the resistance,
    or *V = IR*. Subtracting 2.2V from 3.3V of our supply voltage, and dividing the
    resulting value by .020 Amps gives 55 Ohms. 55 Ohms isn't a standard value, but
    56 is, so you can use this. But, you can always use a higher resistance value,
    and the LED will just be less bright. The resistor used in this project had a
    value of 100 Ohms.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 欧姆定律指出，电压等于电流与电阻的乘积，或者*V = IR*。从我们的电源电压3.3V中减去2.2V，再将结果除以0.020安培，得到55欧姆。55欧姆不是标准值，但56欧姆是，所以你可以使用这个值。但是，你始终可以使用更高的电阻值，LED的亮度将会降低。这个项目中使用的电阻值为100欧姆。
- en: Wiring the hardware with a proto cape
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用原型板连接硬件
- en: There are some special considerations when wiring this project as it is meant
    to go inside an enclosure to provide the front panel. A stranded wire will bend
    and flex better compared to a solid core. Once settled in the enclosure, we wouldn't
    expect the wires to strain or move around, but they certainly will when you try
    to install the panel inside the enclosure! We also have a few options to wire
    our project to BBB. We could use jumper wires with male pins to insert into the
    female expansion headers, but these pins can come out easily, especially when
    you put your project into the enclosure.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在布线这个项目时有一些特殊的考虑，因为它是为了放入一个外壳中并提供前面板。与实心线相比，绞线具有更好的弯曲和柔韧性。外壳一旦安装好，我们不期望电线会承受拉力或移动，但当你尝试将面板安装到外壳时，它们肯定会移动！我们也有几种方法将我们的项目连接到BBB。我们可以使用带公头插针的跳线插入母头扩展插针，但这些插针很容易脱落，尤其是在你把项目放入外壳时。
- en: We'll use SparkFun's BeagleBone Black Proto Cape, DEV-12774, to easily combine
    our circuit with BBB. This board breaks out power, ground, and other pin signals
    for expansion. It includes an EEPROM, which is not only useful if you want to
    have persistent data stored on your board but is also required if you are building
    a BeagleBone Cape, which will be discussed in detail in the next chapter. The
    advantage of a protoboard, especially the Beagle proto capes, is that we can solder
    male headers on the board and then use female terminated wires, which tend to
    connect a little better. Plus, by using the male headers, we can easily reuse
    the protoboard for a later project. However, these protoboards are not required,
    and if you are trying to save some money, with some creative wiring, you don't
    need one.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用SparkFun的BeagleBone Black原型板DEV-12774，轻松地将电路与BBB结合。该板将电源、接地和其他插针信号引出，以便扩展。它包括一个EEPROM，这不仅对想要在板上存储持久数据的人有用，而且如果你要构建一个BeagleBone
    Cape，它也是必需的，后者将在下一章详细讨论。原型板的优势，特别是Beagle原型帽的优势在于，我们可以在板上焊接公头插针，然后使用母头接线，这种方式连接会更牢固。此外，通过使用公头插针，我们可以轻松地将原型板重复用于后续项目。然而，这些原型板并不是必须的，如果你想省钱，通过一些创意布线，你也可以不使用它。
- en: If you are using the protoboard approach, you don't have to populate all the
    headers either. Only the male pins that we need are soldered to the corresponding
    pads on the protoboard's P9 header. The way these protoboards work is that each
    pin is duplicated on the pads next to them. Solder the 100 Ohm resistor from P9_15
    to the bottom of one of the male pins in the middle of the board. Then, connect
    a wire from the male pin to the positive terminal of the LED.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是原型板方法，你不必填充所有的插针。只有我们需要的公头插针被焊接到原型板P9插针上的相应焊盘。原型板的工作原理是每个插针旁边都会有一个相同的焊盘。将100欧姆电阻从P9_15焊接到板中间一个公头插针的底部。然后，将一根电线从公头插针连接到LED的正极。
- en: When complete, your project should look something like the following circuit
    diagram. We don't have the control software running yet, but you can see the LCD
    displaying the bandwidth usage. The following diagram doesn't have soldered connections
    to the potentiometer for the ease of testing, but instead uses *IC Hooks*. In
    a finished installation, you will want to solder the wires for a better mechanical
    and electrical connection.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您的项目应该看起来像下面的电路图。我们还没有运行控制软件，但您可以看到 LCD 显示了带宽使用情况。下图为了方便测试，未将电位器焊接连接，而是使用了
    *IC Hooks*。在最终安装中，您将需要焊接线缆，以确保更好的机械和电气连接。
- en: '![Wiring the hardware with a proto cape](img/00009.jpeg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![用原型帽连接硬件](img/00009.jpeg)'
- en: Developing the software using Python libraries
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Python 库开发软件
- en: 'The software for this project is freely available for download at [https://github.com/jbdatko/beagle-bone-for-secret-agents/](https://github.com/jbdatko/beagle-bone-for-secret-agents/).
    In this section, we''ll highlight the finer details of working with the existing
    libraries and outline the architecture of the project. The code uses many asynchronous
    callbacks from these libraries since there are several concurrent activities:
    the Tor bridge, the bandwidth knob, writing to the LCD, and blinking of the LED.
    To interact with the bridge, we''ll use the Tor `Stem` library ([https://stem.torproject.org/](https://stem.torproject.org/)),
    and to interact with the hardware, we''ll use Adafruit''s BeagleBone Python library
    ([https://github.com/adafruit/adafruit-beaglebone-io-python](https://github.com/adafruit/adafruit-beaglebone-io-python)).'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目的软件可以免费下载，网址为 [https://github.com/jbdatko/beagle-bone-for-secret-agents/](https://github.com/jbdatko/beagle-bone-for-secret-agents/)。在本节中，我们将突出显示使用现有库的细节，并概述项目的架构。由于有多个并发活动：Tor
    桥接、带宽旋钮、LCD 写入和 LED 闪烁，代码使用了这些库中的许多异步回调。为了与桥接进行交互，我们将使用 Tor 的 `Stem` 库 ([https://stem.torproject.org/](https://stem.torproject.org/))，而为了与硬件进行交互，我们将使用
    Adafruit 的 BeagleBone Python 库 ([https://github.com/adafruit/adafruit-beaglebone-io-python](https://github.com/adafruit/adafruit-beaglebone-io-python))。
- en: Controlling the hardware with pyBBIO
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 pyBBIO 控制硬件
- en: 'We installed the `Stem` library when we installed Tor; so, now we need to install
    the `Adafruit` BBIO library by performing the following commands:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在安装 Tor 时已经安装了 `Stem` 库；因此，现在我们需要通过执行以下命令来安装 `Adafruit` 的 BBIO 库：
- en: '[PRE17]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The `Adafruit` library conveniently enables the device tree overlays, which
    are the files that describe the hardware configuration of BBB to the kernel, at
    runtime. Therefore, there is no need to manipulate the configuration via the `sysfs`
    as everything is handled in the Python library. The code models each hardware
    component as its own Python class. The LED modeled by the `TorFreedomLED` class
    is the most straightforward. We need the LED to blink; this is accomplished by
    toggling the output high, sleeping the executing thread briefly, and then toggling
    the output low to turn it off. To set up the GPIO, we only need to call `GPIO.setup`,
    by passing in the pin and the direction:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`Adafruit` 库方便地启用了设备树覆盖文件，这些文件在运行时将 BBB 的硬件配置描述给内核。因此，您无需通过 `sysfs` 操作配置，因为一切都在
    Python 库中处理。代码将每个硬件组件建模为其自己的 Python 类。由 `TorFreedomLED` 类建模的 LED 是最简单的。我们需要让 LED
    闪烁；这是通过切换输出为高电平、让执行线程稍作休眠，然后再切换输出为低电平来关闭 LED 实现的。为了设置 GPIO，我们只需调用 `GPIO.setup`，并传入引脚和方向：'
- en: '[PRE18]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The LCD, controlled by the `FrontPanelDisplay` class, writes to the serial port,
    `/dev/ttyO4`, on BBB's UART 4 at 9600 baud. The LCD only receives information;
    therefore, we are only using the transmit lines from BBB. Commands are written
    to the attached microcontroller, which in turn drives the display. The datasheet,
    available on the SparkFun website, describes all of the commands. In general,
    the procedure is to move the virtual cursor on the display and then send the text.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 由 `FrontPanelDisplay` 类控制的 LCD 写入 BBB 的 UART 4 上的串口 `/dev/ttyO4`，波特率为 9600。LCD
    仅接收信息；因此，我们只使用 BBB 的传输线。命令被写入附加的微控制器，后者驱动显示器。数据手册可在 SparkFun 网站上找到，描述了所有命令。一般而言，过程是先在显示器上移动虚拟光标，然后发送文本。
- en: Note
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: SparkFun has a more complete quick start guide on the serial LCD at [https://www.sparkfun.com/tutorials/246](https://www.sparkfun.com/tutorials/246).
    The example code is for an Arduino, but porting it to Python is straightforward
    if you follow the example of the bridge LCD in this chapter.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: SparkFun 在[https://www.sparkfun.com/tutorials/246](https://www.sparkfun.com/tutorials/246)提供了一个更完整的串行
    LCD 快速入门指南。示例代码是针对 Arduino 的，但如果你参考本章中的桥接 LCD 示例，将其移植到 Python 是非常直接的。
- en: 'Similar to the GPIO example, the serial port in the `Adafruit` library can
    be used as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 GPIO 示例，`Adafruit` 库中的串行端口可以按如下方式使用：
- en: '[PRE19]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The display will automatically wrap lines if the text you are trying to display
    is longer than sixteen characters. Therefore, you have to manage the LCD to ensure
    that it displays correctly. For example, let''s take a look at the `display_graph`
    method that is responsible for producing the bandwidth graph:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尝试显示的文本超过了 16 个字符，显示屏会自动换行。因此，你需要管理 LCD，以确保它正确显示。例如，让我们来看一下负责生成带宽图的 `display_graph`
    方法：
- en: '[PRE20]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The first line clears the screen and resets the cursor to the top-left corner
    of the 16x2 display. Next, we format the two lines to display the graph using
    the special block character on the LCD. This line is left justified and is filled
    with whitespace up to sixteen characters. Finally, the lines are written to the
    LCD with the serial `write` methods. The cursor does not have to be reset between
    each line because after writing the first, it will be ready in the second line.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行清除屏幕并将光标重置到 16x2 显示屏的左上角。接下来，我们格式化两行文本，使用 LCD 上的特殊块字符来显示图形。这一行是左对齐的，并且用空白填充，直到达到
    16 个字符。最后，使用串行 `write` 方法将行写入 LCD。因为写入第一行后，光标会自动跳到第二行，所以不需要在每行之间重置光标。
- en: Lastly, the bandwidth adjust knob is modeled in the `BandwidthKnob` class. This
    class uses the `ADC` module and is also implemented as a thread. The analog input
    will always produce a value when read, and we will ratio this value to the available
    bandwidth for the bridge. The `Adafruit` library normalizes the values from `0.0`
    to `1.0`; so, when the knob is at its midpoint, the call to `ADC.read(pin)` should
    return `0.5`. There is some jitter in the analog signal, and we don't need a fine
    resolution on the bandwidth. Sampling once every second should suffice since we
    don't expect the knob to change frequently. We'll round up to the next whole number,
    which will give the knob ten discrete settings. The `run` method will report back
    to the caller, via a message queue, if the *volume* setting has changed. The calling
    thread can then update the Tor bridge bandwidth limits accordingly.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，带宽调节旋钮在 `BandwidthKnob` 类中建模。此类使用 `ADC` 模块，并作为线程实现。模拟输入每次读取时都会产生一个值，我们将这个值与桥接器的可用带宽做比率。`Adafruit`
    库将值归一化到 `0.0` 到 `1.0` 之间；因此，当旋钮处于中点时，调用 `ADC.read(pin)` 应返回 `0.5`。模拟信号中会有一些抖动，而我们不需要对带宽进行精确的分辨率调整。每秒采样一次应该就足够了，因为我们预计旋钮不会频繁变化。我们会四舍五入到下一个整数，这样旋钮就会有十个离散的设置。`run`
    方法会通过消息队列向调用者报告 *音量* 设置是否发生了变化。然后，调用线程可以相应地更新 Tor 桥接带宽限制。
- en: 'This code sample shows you how to set up the ADC on BBB with the `Adafruit`
    library and how to pass that result to a waiting thread with a message queue:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码示例向你展示了如何在 BBB 上使用 `Adafruit` 库设置 ADC，以及如何通过消息队列将结果传递给一个等待的线程：
- en: '[PRE21]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Determining your bandwidth with speedtest-cli
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 speedtest-cli 确定你的带宽
- en: 'In order to adjust the bandwidth rate, we first need to know how much bandwidth
    our bridge has. Fortunately, there is a nice script to run a speed test from your
    command line that is appropriately called `speedtest-cli`. This is installed with
    the following command:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 为了调整带宽速率，我们首先需要知道我们的桥接器拥有多少带宽。幸运的是，有一个很方便的脚本可以从命令行运行速度测试，它被称为 `speedtest-cli`。你可以使用以下命令安装它：
- en: '[PRE22]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Run the test with the following command:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令运行测试：
- en: '[PRE23]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'If you inspect the output file, you should see something like the following:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你检查输出文件，你应该会看到如下内容：
- en: '[PRE24]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: We'll use the results in this file as the basis for our bandwidth adjustment.
    At the moment, we only need to remember its location for later use.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用该文件中的结果作为我们带宽调整的基础。目前，我们只需要记住它的位置以备后用。
- en: Controlling the bridge with the Stem library
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Stem 库控制桥接器
- en: 'The bridge is controlled using the `Stem` library, which communicates with
    the Tor process over the Tor control protocol. The setup is managed in the `BeagleBridge`
    class. After establishing a connection with the Tor process, this class registers
    two event listeners for the `Bandwidth` and `Configuration` changed event. The
    bandwidth event is triggered each second and reports, via the `print_bw` callback,
    the bytes used in the last second. This information is used to draw the bandwidth
    graph. The following callback function shows how the callback interacts with the
    LCD:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 桥接使用 `Stem` 库进行控制，该库通过Tor控制协议与Tor进程进行通信。设置由 `BeagleBridge` 类管理。在与Tor进程建立连接后，此类注册两个事件监听器，用于监听
    `Bandwidth` 和 `Configuration` 变更事件。带宽事件每秒触发一次，并通过 `print_bw` 回调报告上秒使用的字节数。此信息用于绘制带宽图表。以下回调函数显示了回调与LCD的交互：
- en: '[PRE25]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For those who want to dive deeper into the `Stem` library and the Tor control
    protocol, the `Stem` library has thorough online documentation and examples ([https://stem.torproject.org/tutorials.html](https://stem.torproject.org/tutorials.html)).
    The control protocol, for those who want an even more in-depth look, is located
    at [https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=control-spec.txt](https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=control-spec.txt).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些希望深入了解 `Stem` 库和Tor控制协议的用户，`Stem` 库提供了详细的在线文档和示例（[https://stem.torproject.org/tutorials.html](https://stem.torproject.org/tutorials.html)）。对于想要更深入了解控制协议的用户，可以参考[https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=control-spec.txt](https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=control-spec.txt)。
- en: 'The `Configuration Changed` event is the callback to inform the process that
    the bridge''s configuration was changed. This occurs when the bandwidth knob is
    adjusted, which causes the `update_rate` method to be called, that sends a command
    to the bridge to update the configuration. The end result is that by adjusting
    the knob, you directly affect the bandwidth limits on your bridge. When the callback
    occurs, it will display the new bandwidth rates on the LCD so that you know that
    your limit has changed. This callback is shown as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`Configuration Changed` 事件是一个回调，用于通知进程桥接的配置已被更改。这发生在带宽旋钮被调整时，从而触发 `update_rate`
    方法，该方法向桥接发送更新配置的命令。最终结果是，通过调整旋钮，您直接影响桥接的带宽限制。当回调发生时，它将在LCD上显示新的带宽速率，以便您知道您的限制已发生变化。此回调如下所示：'
- en: '[PRE26]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The main section of the Python script performs the class instantiation and also
    displays a one-time splash screen to the LCD. It will show the total bytes transmitted
    by the bridge, the number of established circuits, and the last 24 bytes of the
    bridge's fingerprint. The bridge controller will run forever, while the bandwidth
    knob is at a nonzero value. When you dial the knob to zero, the program will exit
    and the LCD will be filled with blocks.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Python脚本的主要部分执行类的实例化，同时向LCD显示一次性启动画面。它会显示桥接传输的总字节数、已建立的电路数，以及桥接指纹的最后24个字节。只要带宽旋钮的值不为零，桥接控制器将永远运行。当您将旋钮调到零时，程序将退出，LCD将显示块状图案。
- en: 'Finally, to run the bridge controller, execute the following command, with
    the first parameter being the location of the speed test results:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，要运行桥接控制器，请执行以下命令，第一个参数是速度测试结果的所在位置：
- en: '[PRE27]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: To avoid running as root, you'll have to manipulate user groups and permissions.
    The Tor process runs as the `debian-tor` user, and the `Adafruit` library, which
    enables device tree overlays on your behalf, needs to run at a user level that
    has the permission to enable these features. You can create a custom group and
    a user that is in the `debian-tor` group and then give that group permission to
    modify the device tree files to not run as root.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免以root身份运行，您需要操作用户组和权限。Tor进程以 `debian-tor` 用户身份运行，而 `Adafruit` 库（为您启用设备树覆盖）需要在具有启用这些功能权限的用户级别运行。您可以创建一个自定义组，并将一个用户加入到
    `debian-tor` 组中，然后赋予该组修改设备树文件的权限，以避免以root身份运行。
- en: Connecting to your obfuscated bridge
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到您的混淆桥接
- en: 'With BeagleBridge, you have your own entry point in the Tor network. You can
    download and install the Tor browser and configure it to use your bridge. This
    is useful anytime you find yourself on a restricted or hostile network and want
    to access the Internet more anonymously. However, if you use *your* BeagleBridge,
    passive attackers could learn the IP address to which you are connecting, which
    happens to be your home network. The traffic is obfuscated, but it may look suspicious
    over time. It might be better to use a random bridge address obtained via Tor.
    Even if you don''t directly connect to your own bridge, your bridge is helping
    to contribute resources to the Tor network, which helps everybody access a censor-free
    Internet. To connect to your bridge, launch the Tor browser and click on **Open
    Settings** as it starts up. Then, answer with a `Yes` to questions about whether
    your connection is censored. Select **Enter Custom Bridges** and enter your bridge
    as follows, but replace the x''s with your IP address and the port number of your
    bridge:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 BeagleBridge，你拥有自己的 Tor 网络入口点。你可以下载并安装 Tor 浏览器，并配置它使用你的桥接。这在你处于受限或不友好的网络中时非常有用，可以更匿名地访问互联网。然而，如果你使用
    *你的* BeagleBridge，旁路攻击者可能会通过你连接的 IP 地址发现你的家庭网络。虽然流量是经过混淆的，但随着时间推移可能会显得可疑。最好使用通过
    Tor 获取的随机桥接地址。即使你没有直接连接到自己的桥接，你的桥接仍然在为 Tor 网络提供资源，帮助大家访问一个没有审查的互联网。要连接到你的桥接，启动
    Tor 浏览器并在启动时点击 **打开设置**。然后，回答关于你的连接是否被审查的问题时选择 `是`。选择 **输入自定义桥接**，然后按如下方式输入你的桥接地址，但请将
    x 替换为你的 IP 地址和桥接的端口号：
- en: '`bridge obfs3 XXX.XXX.XXX.XXX:59519`'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`bridge obfs3 XXX.XXX.XXX.XXX:59519`'
- en: Continuing with Tor-related projects
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 继续进行与 Tor 相关的项目
- en: This project is just the first step in learning Tor. If you want to route more
    traffic with BBB, you can switch from a bridge to a public relay. Relays receive
    more traffic but are also more public. Your IP address will be listed as a public
    bridge, and some websites will refuse to serve you content even if you are running
    a nonexit relay.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目只是学习 Tor 的第一步。如果你想通过 BBB 路由更多的流量，你可以将桥接更换为公共中继。中继接收更多流量，但也更加公开。你的 IP 地址将被列为公共桥接，并且即使你正在运行非出口中继，一些网站也可能拒绝为你提供内容。
- en: You can also run a Tor **hidden service** on the BeagleBone. Using Tor with
    a client helps to anonymize your IP address to a server, but a Tor hidden service
    hides the server's IP address from a client. It would be an interesting project
    for a BeagleBone if you had a service that you want accessible only through Tor.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在 BeagleBone 上运行 Tor **隐藏服务**。使用 Tor 客户端有助于将你的 IP 地址匿名化，从而保护客户端的隐私，但 Tor
    隐藏服务可以隐藏服务器的 IP 地址，避免客户端获知。如果你有一个仅希望通过 Tor 访问的服务，这将是一个非常有趣的 BeagleBone 项目。
- en: 'Hardware-wise, consider placing the BeagleBone and front panel in a dedicated
    enclosure. See whether there is a local hackerspace around you, and they may be
    able to help you make a nice laser-cut enclosure! If you don''t have a laser cutter,
    you can use a SparkFun Electronics box like the one in the following screenshot:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在硬件方面，考虑将 BeagleBone 和前面板放入一个专用的外壳中。看看你附近是否有黑客空间，他们可能能帮你制作一个漂亮的激光切割外壳！如果你没有激光切割机，也可以使用像下面截图中那样的
    SparkFun Electronics 盒子：
- en: '![Continuing with Tor-related projects](img/00010.jpeg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![继续进行与 Tor 相关的项目](img/00010.jpeg)'
- en: Note
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The onion logo is a registered trademark of the Tor Project, used with permission.
    The BeagleBridge project described in this chapter is not affiliated to the Tor
    Project.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 洋葱标志是 Tor 项目的注册商标，经许可使用。本章中描述的 BeagleBridge 项目与 Tor 项目无关。
- en: Summary
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about Tor and how to circumvent Internet censorship
    by running a Tor bridge on BBB. We've also shown how to add some basic hardware
    controls to BBB in order to create a front panel interface. Lastly, through some
    Python code, we were able to tie the hardware controls and the Tor bridge together.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你了解了 Tor 以及如何通过在 BBB 上运行 Tor 桥接来绕过互联网审查。我们还展示了如何为 BBB 添加一些基本的硬件控制，以便创建前面板接口。最后，通过一些
    Python 代码，我们成功地将硬件控制和 Tor 桥接结合起来。
- en: In the next chapter, we'll take a closer look at specialized cryptographic hardware
    available for BBB and show you how to use each of these devices.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将更深入地了解 BBB 可用的专用加密硬件，并展示如何使用这些设备。
