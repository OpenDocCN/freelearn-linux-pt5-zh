["```\nbindkey -e\n\n```", "```\n% bindkey -e\n\n```", "```\n% bindkey -v\n\n```", "```\n% echo $WORDCHARS\n> *?_-.[]~=/&;!#$%^(){}<>\n\n```", "```\n% echo bca\n> bca\n\n```", "```\n% echo bca\n\n```", "```\n% echo bac\n\n```", "```\n% echo abc\n\n```", "```\n% git psuh origin master\n\n```", "```\n% git push origin master\n\n```", "```\n% echo 'world hello,'\n\n```", "```\n% echo 'hello, world'\n\n```", "```\n% echo world hello\n\n```", "```\n% echo world _\n\n```", "```\n% echo _world\n\n```", "```\n% echo hello_world\n\n```", "```\n% # press Ctrl + R\nbck-i-search: _\n\n```", "```\nsetopt NO_FLOW_CONTROL\n\n```", "```\n% bindkey -N newmap # this creates a keybind named 'newmap'\n\n```", "```\n% bindkey -N mycoolmap emacs # this creates a new keymap based off the existing 'emacs'\n\n```", "```\n% bindkey -A mycoolmap mymacs # this creates an alias 'mymacs' for 'mycoolmap'\n\n```", "```\n% bindkey -lL\n> bindkey -N command\n bindkey -N emacs\n bindkey -N isearch\n bindkey -N listscroll\n bindkey -A emacs main\n bindkey -N menuselect\n bindkey -N vicmd\n bindkey -N viins\n\n```", "```\n% bindkey -lL mymacs\n> bindkey -A mycoolmap mymacs\n\n```", "```\n% bindkey -lL main\n> bindkey -A emacs main\n\n```", "```\n% bindkey -L\n bindkey \"^@\" set-mark-command\n bindkey \"^A\" beginning-of-line\n bindkey \"^B\" backward-char\n bindkey \"^D\" delete-char-or-list\n bindkey \"^E\" end-of-line\n bindkey \"^F\" forward-char\n bindkey \"^G\" send-break\n bindkey \"^H\" backward-delete-char\n # [...] large list of bindings omitted\n bindkey -R \"\\M-^@\"-\"\\M-^?\" self-insert\n\n```", "```\n% read\n> ^[[1;5D\n```", "```\n% read -k\n```", "```\n^?\n% # and you are back to the prompt\n```", "```\n# type in \"hello\" and navigate to the beginning of the line (Ctrl + A) followed by Esc + X\n% _hello\nexecute:\n# ZLE waits for your command, type `ca` and press Tab key:\n% _hello\nexecute: ca\n\n% _hello\nexecute: capitalize-word\n# now press return and watch how the command is applied\n\n% Hello\n\n```", "```\n% # enter where-is mode via Esc + X\n> Where is: capitalize-word\n> capitalize-word is on \"^[C\" \"^[c\"\n\n```", "```\nautoload -Uz tetris\nzle -N tetris\nbindkey '\\et' tetris\n```", "```\nautoload -Uz tetris\n```", "```\nzle -N tetris\n```", "```\nbindkey '\\et' tetris\n\n```", "```\nsource .zsh_tetris\n```", "```\nfunction rationalize-dot {\n  if [[ $LBUFFER = *.. ]]; then\n    LBUFFER+=/..\n  else\n    LBUFFER+=.\n  fi\n}\nzle -N rationalize-dot\nbindkey . rationalize-dot\n```", "```\nmy_function() {\n    my_code\n}\n```", "```\n    function my_function {\n        my_code\n    }\n```", "```\nif condition; then\n    my_code\nelif another_condition; then\n    more_code\nelse\n    even_more_code\nfi\n\n```", "```\nif condition; then\n    do_a_barrel_roll\nelse\n    echo \"can't do it\"\nfi\n\n```", "```\nelse\n    LBUFFER+=.\nfi\n```", "```\nzle -N rationalize-dot\nbindkey . rationalize-dot\n```", "```\n% ls \\\n\n```", "```\n> -a\n\n```", "```\n% echo \" # press return immediately after the double quotes\ndquote> _\n\n```", "```\ndquote> $HOME\" # press return here\n> /home/gfestari\n\n```", "```\n% echo hello world # press Esc + return\necho goodbye world\n\n```", "```\n% if [[ true = false ]]; then # press return here\nthen> echo _\n\n```", "```\n% if [[ true = false ]]; then\necho_\n\n```", "```\nbindkey '^Q' push-line-or-edit\nbindkey '\\eQ' push-line-or-edit\n\n```", "```\n% ls -a\n\n```", "```\n# push-line-or-edit\n% _\n\n```", "```\n% cd myfolder\nmyfolder % ls -a\n\n```", "```\nbindkey '\\e[A' history-beginning-search-backward\nbindkey '\\e[B' history-beginning-search-forward\n\n```", "```\n% echo hello world\n% ls\n% echo bye world\n\n```", "```\n> echo bye world\n> ls\n> echo hello world\n\n```", "```\n% ec\n> echo bye world\n\n```"]