- en: Chapter 9. Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whether deployed at a hospital, college, corporation, federal agency, or non-profit
    organization, security of the end device has become a critical component of any
    organization’s data loss prevention and information assurance policies. With data
    loss events, for example, such as WikiLeaks or stolen laptops with social security
    numbers from organizations such as the U.S. Census Bureau, Ireland Department
    of Social and Family Affairs, or Anheuser-Busch, ensuring that sensitive data
    stays within the confines of the corporate infrastructure has gained much visibility.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: In a traditional physical desktop model end users are issued desktops or laptops
    that contain writeable media (hard drives). These end devices store data such
    as the user’s profile, copies of data from file shares, browser cache, plain text
    documents, images, spreadsheets, and other business and personal data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Even with encryption of the hard drive on the end device sensitive data can
    still reside on the laptop (for example). With the availability of high-powered
    compute instances with processing power ideal for password cracking algorithms,
    such as Amazon EC2 GPU instances, cracking passwords and encryption algorithms
    can be offloaded to a public cloud. Therefore, the safest end device is a device
    that does not store any sensitive information, whether encrypted or not. For this
    reason, PCoIP zero clients (end devices that have a PCoIP chip from Teradici)
    are arguably more secure than thin clients (with a locked down operating system).
    Both are exponentially more secure than thick clients (traditional laptop or desktop).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: The inherent security of VDI
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With a properly designed VDI solution, all of the sensitive data resides in
    a secured data center versus living on hard drives in devices such as laptops
    and desktops. While it is possible to copy data within the vDesktop to, for example,
    a USB thumb drive plugged into the end device, it is also possible to prevent
    USB redirection of such devices.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: In secure VDI implementations the only data that is typically transmitted is
    the visual and audio stream to deliver the desktop experience to the end device.
    This means that if an end user is using Microsoft Word to manipulate a document
    while connected to their vDesktop, the document does not live on his/her end device
    (for example, a laptop). Instead, it completely resides within the vDesktop running,
    ideally, within the data center. The visual representation of the desktop, including
    the visual display of Microsoft Word and the document are streamed down to the
    end device via the secured PCoIP protocol.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: In a properly designed VDI solution, if an end device is broken, stolen, lost,
    or misplaced, the end user simply needs a new end device to connect back to their
    vDesktop. For example, if Lily has a PCoIP zero client that is no longer working,
    she can be issued a new zero client and can immediately resume working in the
    VDI. There is no re-imaging process for zero clients and Lily can quickly return
    to productive tasks.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个设计得当的 VDI 解决方案中，如果终端设备损坏、被盗、丢失或遗失，最终用户只需更换一个新的终端设备即可重新连接到他们的 vDesktop。例如，如果
    Lily 的 PCoIP 零客户端无法使用，她可以领取一台新的零客户端，并能立即恢复在 VDI 中的工作。零客户端无需重新映像，Lily 可以快速恢复生产任务。
- en: Without VDI, she may have to wait for days for an end device to be repurposed,
    procured, or provisioned before she can return to productivity.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有 VDI，她可能需要等待几天才能让终端设备重新利用、采购或配置，才能恢复生产工作。
- en: In addition, there are no data salvage actions that need to be performed because
    no data exists on the end device. In environments that employ the use of hot desking,
    or the practice of providing unassigned workspaces without reservations in an
    office environment, Lily could simply walk to an available workspace, log in,
    and reconnect to the VDI. Again, all of Lily’s data resides in the data center.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，不需要执行数据恢复操作，因为终端设备上不存在数据。在使用热桌面技术的环境中，或者在办公环境中提供不需要预约的未分配工作区的做法下，Lily 只需走到一个可用的工作区，登录并重新连接到
    VDI。同样，Lily 的所有数据都存储在数据中心。
- en: Firewalls, zones, and antivirus
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防火墙、区域和防病毒
- en: The basic fundamentals of securing a VMware View environment involve only allowing
    the specific ports and protocols absolutely necessary for a functioning VDI. In
    addition, it also involves the use of **Secure Sockets Layer (SSL)** (as opposed
    to unencrypted traffic over port 80) when available. In addition, requiring the
    use of PCoIP, as opposed to also allowing RDP connections, can further increase
    security in the environment.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: VMware View 环境安全的基本原则包括仅允许那些对功能性 VDI 至关重要的特定端口和协议。此外，当可用时，还需要使用**安全套接字层（SSL）**（与通过端口
    80 的未加密流量相对）。另外，要求使用 PCoIP，而不是同时允许 RDP 连接，也可以进一步提高环境的安全性。
- en: 'Within a given VDI solution there are potentially several firewalls that come
    into effect. These firewalls include:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定的 VDI 解决方案中，可能会有多个生效的防火墙。这些防火墙包括：
- en: '**Windows OS firewall:** This firewall is used to restrict inbound and outbound
    traffic at the operating system layer'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows 操作系统防火墙：** 此防火墙用于限制操作系统层的进出流量'
- en: '**Network firewall (internal):** These firewalls are used to restrict traffic
    within the internal LAN environment'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络防火墙（内部）：** 这些防火墙用于限制内部局域网环境内的流量'
- en: '**Network firewall (external/DMZ)**: These firewalls are used to restrict traffic
    (typically) generated from the Internet'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络防火墙（外部/DMZ）：** 这些防火墙用于限制通常来自互联网的流量'
- en: '**Virtual firewall:** These firewalls are used to restrict traffic across virtual
    port groups and virtual switches within the virtual infrastructure'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**虚拟防火墙：** 这些防火墙用于限制虚拟基础设施中虚拟端口组和虚拟交换机之间的流量'
- en: The calculated use of firewalls helps create physical and virtual security enclaves
    known as **zones**. A virtual security zone is a group of network configurations,
    security policies, virtual machines, and other virtual infrastructure components
    allowed to freely communicate with each other according to the defined policies.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 精心计算使用防火墙有助于创建被称为**区域**的物理和虚拟安全隔离区。虚拟安全区是一组网络配置、安全策略、虚拟机及其他虚拟基础设施组件，根据定义的策略允许彼此自由通信。
- en: 'Virtual security zones have the following possibilities for cross-zone communication:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟安全区有以下几种跨区通信的可能性：
- en: '**Permitted:** Virtual machines in Zone_A and Zone_B are able to freely communicate
    with each other based on a mutual trust relationship (not to be confused with
    technologies such as Active Directory trusts and relationships)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**允许的：** Zone_A 和 Zone_B 中的虚拟机可以基于互相信任关系自由地相互通信（不要与像 Active Directory 信任和关系这样的技术混淆）'
- en: '**Restricted:** Virtual machines in Zone_A and Zone_B are able to communicate
    with each other along predefined ports and protocols only'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**受限的：** Zone_A 和 Zone_B 中的虚拟机只能通过预定义的端口和协议相互通信'
- en: '**Prohibited:** Virtual machines in Zone_A and Zone_B are not permitted to
    communicate with each other'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁止的：** Zone_A 和 Zone_B 中的虚拟机不允许相互通信'
- en: One of the final pieces of the security matrix is antivirus protection for vDesktops.
    Antivirus protection ensures that malware does not penetrate and proliferate the
    physical and/or virtual desktop environment.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: The fundamentals firewall rules
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For a more detailed list of ports and protocols, please see Christoph Harding’s
    excellent article *Firewall settings for a VMware View environment* on `ThatsMyView.net`
    found at: [http://www.thatsmyview.net/2011/04/24/firewall-settings-for-a-vmware-view-environment/](http://www.thatsmyview.net/2011/04/24/firewall-settings-for-a-vmware-view-environment/).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '| Source IP | Direction | Destination IP | Transport protocol | Port | Application
    protocol | Description |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
- en: '| End user device | Inbound | View Security Server | TCP | 443 | HTTPS | Authentication
    and other communications |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
- en: '| End user device | Both | View Security Server | TCP and UDP | 4172 | PCoIP
    | PCoIP handshake and data transfer |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
- en: '| View Security Server | Inbound | View Connection Server | TCP | 8009 | AJP13
    | AJP-Data Traffic |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
- en: '| View Security Server | Inbound | View Connection Server | TCP | 4001 | JMS
    | Java |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
- en: '| View Security Server | Inbound | View Transfer Server | TCP | 443 | HTTPS
    | Communication with View Transfer Server |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
- en: '| View Security Server | Both | View Agent | TCP and UDP | 4172 | PCoIP | PCoIP
    handshake and data transfer |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
- en: '| View Security Server | Both | View Agent | TCP | 32111 |   | USB Redirection
    (if applicable) |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Outbound | Active Directory | TCP and UDP | 389
    | LDAP | Active Directory Authentication and ADAM |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Both | View Connection Server | TCP | 4100 | JMSIR
    | Internal View Connection Server communication |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Both | View Connection Server | TCP | 636 | LDAPS
    | AD LDS |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Both | View Connection Server | TCP | 1515 |   |
    Microsoft Endpoint Mapper |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Both | View Connection Server | TCP | 4001 | JMS
    | Java |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Both | View Connection Server | TCP | 8009 | AJP13
    | AJP-Data Traffic |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Both | View Transfer Server | TCP | 8009 | AJP13
    | AJP-Data Traffic |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Outbound | View Transfer Server | TCP | 443 | HTTPS
    | Communication with View Transfer Server |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Outbound | View Transfer Server | TCP | 4001 | JMS
    | Java |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Outbound | View Transfer Server | TCP | 4100 | JMSIR
    | Internal communication |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Outbound | vCenter Server | TCP | 18443 | SOAP |
    View Composer communication |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Outbound | vCenter Server | TCP | 443 | HTTPS |
    vCenter communication |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
- en: '| View Connection Server | Both | View Agent | TCP | 4001 | JMS | Java |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
- en: '| End user device | Outbound | View Connection Server | TCP | 443 | SSL | Communication
    with View Connection Server for authentication and other activities |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
- en: '| View Security Server | Inbound | View Connection Server | TCP | 8009 | AJP13
    | AJP-Data Traffic |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| View Security Server | 入站 | View Connection Server | TCP | 8009 | AJP13 |
    AJP-数据流量 |'
- en: '| View Security Server | Inbound | View Connection Server | TCP | 4001 | JMS
    | Java |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| View Security Server | 入站 | View Connection Server | TCP | 4001 | JMS | Java
    |'
- en: '| End user device | Inbound | View Transfer Server | TCP | 443 | HTTPS | Communication
    with View Transfer Server |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 终端设备 | 入站 | View Transfer Server | TCP | 443 | HTTPS | 与 View Transfer Server
    的通信 |'
- en: '| View Security Server | Inbound | View Transfer Server | TCP | 443 | HTTPS
    | Communication with View Transfer Server |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| View Security Server | 入站 | View Transfer Server | TCP | 443 | HTTPS | 与
    View Transfer Server 的通信 |'
- en: '| View Security Server | Inbound | View Transfer Server | TCP | 8009 | AJP13
    | AJP-Data Traffic |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| View Security Server | 入站 | View Transfer Server | TCP | 8009 | AJP13 | AJP-数据流量
    |'
- en: '| View Security Server | Inbound | View Transfer Server | TCP | 4100 | JMSIR
    | Internal communication |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| View Security Server | 入站 | View Transfer Server | TCP | 4100 | JMSIR | 内部通信
    |'
- en: '| View Security Server | Inbound | View Transfer Server | TCP | 4001 | JMS
    | Java |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| View Security Server | 入站 | View Transfer Server | TCP | 4001 | JMS | Java
    |'
- en: '| View Connection Server | Inbound | View Transfer Server | TCP | 8009 | AJP13
    | AJP-Data traffic |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| View Connection Server | 入站 | View Transfer Server | TCP | 8009 | AJP13 |
    AJP-数据流量 |'
- en: '| End user device | Both | View Agent | TCP and UDP | 4172 | PCoIP | PCoIP
    connection and data |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 终端设备 | 双向 | View Agent | TCP 和 UDP | 4172 | PCoIP | PCoIP 连接和数据 |'
- en: '| End user device | Both | View Agent | TCP | 32111 |   | USB redirection (if
    applicable) |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 终端设备 | 双向 | View Agent | TCP | 32111 |   | USB 重定向（如适用） |'
- en: '| View Agent | Outbound | View Connection Server | TCP | 4001 | JMS | Java
    |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| View Agent | 出站 | View Connection Server | TCP | 4001 | JMS | Java |'
- en: '| End user device | Both | View Agent | TCP and UDP | 4172 | PCoIP | PCoIP
    connection and data |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 终端设备 | 双向 | View Agent | TCP 和 UDP | 4172 | PCoIP | PCoIP 连接和数据 |'
- en: '| End user device | Inbound | View Agent | TCP | 32111 |   | USB redirection
    (if applicable) |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 终端设备 | 入站 | View Agent | TCP | 32111 |   | USB 重定向（如适用） |'
- en: '| End user device | Inbound | View Connection Server | TCP | 443 | HTTPS |
      |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 终端设备 | 入站 | View Connection Server | TCP | 443 | HTTPS |   |'
- en: '| End user device | Inbound | View Connection Server | TCP | 443 | HTTPS |
      |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 终端设备 | 入站 | View Connection Server | TCP | 443 | HTTPS |   |'
- en: '| End user device | Both | View Connection Server | TCP and UPD | 4172 | PCoIP
    | PCoIP connection and data |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 终端设备 | 双向 | View Connection Server | TCP 和 UDP | 4172 | PCoIP | PCoIP 连接和数据
    |'
- en: Virtual enclaves
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟隔离区
- en: A **virtual enclave** is a defined group of virtual machines, virtual port groups,
    resources (if using resource pools), and potentially underlying datastores. The
    notion of a virtual enclave is to provide segmentation within the VDI, separating
    one group from another.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**虚拟隔离区**是由虚拟机、虚拟端口组、资源（如果使用资源池）以及可能的底层数据存储组成的一个定义好的组。虚拟隔离区的概念是提供 VDI 内部的分段，将一个组与另一个组分隔开。'
- en: 'The following diagram is an illustration showing three separate enclaves:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了三个独立的隔离区：
- en: '![Virtual enclaves](img/1124EN_09_01.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![虚拟隔离区](img/1124EN_09_01.jpg)'
- en: 'In the preceding diagram, three classifications of vDesktops exist within the
    overall virtual infrastructure. These classifications are composed of desktop
    pools of the same name. They are as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图示中，三个类别的 vDesktops 存在于整个虚拟基础设施中。这些类别由同名的桌面池组成，具体如下：
- en: '**Training:** This enclave is used by training rooms to provide vDesktops for
    training purposes'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**培训：**该隔离区由培训室使用，为培训提供虚拟桌面'
- en: '**Faculty:** This enclave is used by faculty members at the organization for
    their primary vDesktop'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**教职工：**该隔离区由组织内的教职工用于其主要虚拟桌面'
- en: '**Servers:** This enclave is used by all of the virtual machines running a
    server-based operating system'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务器：**该隔离区由所有运行服务器操作系统的虚拟机使用'
- en: 'From within the virtual infrastructure, there are ways to isolate the three
    enclaves as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚拟基础设施中，有以下方法可以隔离这三个隔离区：
- en: VLAN tagging
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VLAN 标签
- en: Separate vSwitch/vDSwitch uplinks
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独立的 vSwitch/vDSwitch 上行链路
- en: Enabling vSwitch/vDSwitch security settings
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用 vSwitch/vDSwitch 安全设置
- en: Using resource pools to isolate compute consumption
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用资源池来隔离计算消耗
- en: Using separate datastores to isolate data and I/O
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用独立的数据存储来隔离数据和 I/O
- en: Using separate clusters
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用独立集群
- en: All of the preceding methods are available with VMware vSphere without additional
    software components.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 所有前述方法均可在 VMware vSphere 中使用，无需额外的软件组件。
- en: However, with solutions such as VMware vShield TM, Reflex Systems vTrust TM
    with vmTagging TM, and other security products, it’s possible to provide virtual
    air gaps from within the virtual infrastructure.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows different segmentation options with VMware virtual
    networking:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '![Virtual enclaves](img/1124EN_09_02.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
- en: 'The preceding diagram showcases several virtual networking technologies:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: A virtual distributed switch (vDSwitch)
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Three separate virtual distributed port groups
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Two separate software firewalls (provided through VMware vShield technology
    or Reflex Systems vTrust technology)
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A provider network connection; this connection has direct access to the Internet
    (in this example)
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Three separate vDesktop groups
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The red enclave contains vDesktops that support within a given organization
    that require direct access to the Internet for functions that support external
    clients.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: This enclave’s vDesktops are connected to the provider port group, which has
    direct access to the Internet from within the virtual infrastructure. The connection
    could be filtered further upstream at the physical layer, however.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: The blue enclave contains vDesktops used by the majority of the work staff within
    a given organization.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: This enclave’s vDesktops are connected to a port group that has access to the
    provider network; however, instead of direct access to the provider network, it
    uses **network address translation (NAT)** to mask the actual IP addresses of
    vDesktops within the blue enclave.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: The green enclave contains vDesktops used by the training rooms within a given
    organization.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: This enclave’s vDesktops are connected to a port group that does not have access
    to the provider network (note the fact that the connection terminates as it exits
    the firewall). Its virtual enclave provides access for the vDesktops and resources
    within the green enclave to communicate freely. However, there is no mechanism
    for virtual machines within the green enclave to communicate with resources outside
    of the enclave. This enclave is described as being isolated.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: In addition to performing network segmentation, both the VMware vShield and
    Reflex Systems solutions can provide software-based firewall protection between
    the various enclaves.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: For example, vDesktops in the blue enclave may only be allowed to communicate
    with vDesktops in the green enclave over port 443 (HTTPS).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: The jailbreak scenario
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **jailbreak scenario**, pulled from a real-world solution, involves preventing
    communications between vDesktops within the same desktop pool. Desktop pools are
    used to define several key settings of all of its vDesktops; one of these settings
    is the specific port group (standard or distributed) assigned to one or more vDesktop’s
    virtual NICs. This setting is defined at a desktop pool level; therefore, all
    vDesktops within a given desktop pool will be on the same port group.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: In the jailbreak scenario, the IT staff at a detention center has implemented
    a VDI to allow inmates to perform various training exercises. While the vDesktops
    have been locked down to prevent connectivity to the Internet, the fact that all
    of the vDesktops are on the same port group could pose a threat.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '![The jailbreak scenario](img/1124EN_09_03.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
- en: The biggest threat in the prison break scenario is that the various vDesktop
    users, while segregated from any other network connectivity (including connectivity
    to the Internet or to the production network of the detention center) still have
    the ability to send data to one another. The threat is that multiple vDesktop
    users will leverage the fact that all of their vDesktop virtual machines are on
    the same port group and send messages to coordinate a revolt on the prison staff
    at a specific time.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: For example, if thirty inmates are logged into a VDI and start trading discrete
    messages to assault the prison staff at 11:00 a.m., that could pose a huge risk
    for the prison staff in terms of their own personal safety, the safety of the
    facilities, and of the nearby community.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: While there is no out of the box solution to prevent this type of communication
    (arguably, the built-in Windows firewall can be of use in this scenario), Reflex
    Systems does offer the ability to segregate individual virtual machines from one
    another. In addition, VMware vShield could potentially be used to provide this
    virtual segmentation. For environments with a high rate of volatility (expansion,
    contraction, View Composer refreshes, and so on), this solution, regardless of
    whether VMware, Reflex Systems, or another security solution is used, will require
    a significant amount of customization, scripting, and integration work.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: USB redirection and filtering
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Throughout a growing number of organizations, USB hard drives are prohibited.
    This is because of the great risk of data leakage from end users copying sensitive
    data to a USB hard drive and then misusing the device or using the USB hard drive’s
    data maliciously. However, simply blocking all USB devices may disallow the following
    perfectly accepted USB devices such as:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Pointing devices
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audio headsets
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transcription playback pedals
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Medical equipment, for example, a patient monitoring device
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scientific equipment, for example, a metering device
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Photographic equipment, for example, a video recorder
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audio equipment, for example, USB MIDI interfaces
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Authentication devices, for example, a card reader
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Therefore, it’s important to not simply block all devices, but instead, build
    a white list of allowed USB devices. This is known as **USB filtering.**
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram is an illustration showing the three main levels available
    for USB filtering:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '![USB redirection and filtering](img/1124EN_09_04.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
- en: 'There are three integration points where USB filtering can be applied, they
    are as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: End device
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: View Connection Server
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows desktop operating system
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In addition, USB Filtering can be applied to:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: An entire ClassID to allow or disallow an entire class of devices (for example,
    USB mass storage device)
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A **VendorID (VID)** and **ProductID (PID)** to allow or disallow a specific
    device (for example, Kingston mass storage device)
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: USB filtering at the end device
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the benefits of using PCoIP zero clients is the ability to create device
    profiles and apply them to all zero clients in an environment. In this manner,
    a single USB filtering device profile could be created and applied to all zero
    clients in an environment. By locking the devices down with a complex password,
    the device’s profile would only be controlled by, for example, the Teradici Management
    Console. Therefore, any policy defining USB filtering would not be able to be
    overridden. By managing USB filtering at the end device, such as with the Teradici
    Management Console, permissions can be granted on a device ID or device class,
    allowing great flexibility in management (for example, USB thumb drives are disallowed
    unless they are made by IronKey TM).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: The drawbacks of applying USB device filtering at the device level is that it
    strongly discourages **bring-your-own-device (BYOD)** programs. These programs
    encourage end users to use the device that they are most comfortable with; as
    the device will ultimately be connecting to an organization-owned vDesktop and
    all work will be performed on the vDesktop, it is of less or no concern whether
    the end device is in such a scenario.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: Using device profiles for USB filtering means that a profile must be built for
    each device, and each device must be managed.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: In many organizations, the move to a VDI solution is to get out of the business
    of managing end devices and instead, enabling the end user workforce to use their
    preferred method of computing.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: USB filtering via View Connection Server
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: VMware View Connection Server also provides a mechanism for performing USB filtering.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the USB access policy setting in the View Admin
    console:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '![USB filtering via View Connection Server](img/1124EN_09_05.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
- en: From within the **Policies** | **Global Policies** section of the View Admin
    console, **USB access** can be set to the all-encompassing, **Allow** or **Deny**.
    This does not allow fine-toothed management of only granting access to specific
    devices. Instead, this allows or disallows USB redirection for all devices.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: Another method that is similar in the all or nothing approach, is to not install
    the USB redirection component of the VMware View Agent from within the vDesktop
    template or Parent VM. This is not recommended as it is limiting future capabilities
    within the environment.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: USB filtering via the Windows operating system
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For example, an IronKey encrypted USB drive has a device class of **Windows
    Portable Device (WPD)**.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows a USB device from within the guest operating
    system:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '![USB filtering via the Windows operating system](img/1124EN_09_06.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
- en: This information can be found by opening the **Properties** tab from within
    **Device Manager** with the applicable device highlighted.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot specifically shows a USB device ID:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '![USB filtering via the Windows operating system](img/1124EN_09_07.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
- en: Under **Hardware Ids** of the given device (for example, IronKey thumb drive),
    the PID and **firmware revision (REV)** can be found. In the preceding example,
    **VID** is **1953, PID** is **0201** and **REV** is **0208**.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: NirSoft makes a free product called USBDeview © that is a handy utility to quickly
    find the PID, VID, serial number, and other information about a specific USB device
    as well. It also shows the information in a more user friendly manner.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the use of USBDeview to identify the ID of a
    USB product:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: '![USB filtering via the Windows operating system](img/1124EN_09_22.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
- en: In the preceding example, the IronKey thumb drive has a **VendorID** of **1953**
    and a **ProductID** of **0201**.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: The DeviceClassGUID is also needed to configure USB filtering. It can also be
    found under the **Properties** tab from within **Device Manager**.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the registry key for hardware filters:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '![USB filtering via the Windows operating system](img/1124EN_09_08.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
- en: For example, to disallow all IronKey encrypted thumb drives (VendorID 1958,
    ProductID 0201), **VID_1958&PID_0201** would be added to the **HardwareIDFilters**
    key at the location **Computer\HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware
    VDM\USB\**.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: 'The registry change takes effect immediately and does not require a reboot.
    Now, when an end user attempts to connect their IronKey encrypted thumb drive
    they will receive the error. The following screenshot gives an example of the
    error message a user may receive when attempting to use a USB device in an environment
    where that USB device is prohibited:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '![USB filtering via the Windows operating system](img/1124EN_09_09.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
- en: There are several methods of allowing and disallowing USB devices (especially
    mass storage devices). However, the techniques outlined in this section fundamentally
    apply to all devices and should be used as a best practice.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: The most secure way of performing USB filtering is to block all devices except
    those defined on the white list.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Smart card authentication
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Smart card authentication** is a mechanism by which a plastic card, typically
    with gold plated contact pads, is used to store certificates used by the end user
    to authenticate. Smart cards are used throughout many industries, including military,
    healthcare, education, retail, and the scientific community. The advantages of
    smart card authentication are as follows:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: It requires the end user to have the authentication mechanism on his person
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It requires the end user to successfully provide the answer to a challenge (PIN)
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Smart card authentication is a two-factor authorization mechanism that requires
    the end user to physically possess a smart card as well as enter in a PIN successfully.
    The PIN does not authenticate the end user to the domain; instead the PIN authenticates
    the end user to the certificate on the smart card. The certificate on the smart
    card is then used to authenticate the end user to the domain.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: Smart card authentication is already a standard practice within hospitals, education
    facilities, the scientific community, and military organizations.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: 'Smart card authentication requires the following things:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: One or more certificates
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Middleware (for example, ActivClient from ActivIdentity)
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Middleware should be installed before the VMware View Agent to avoid any GINA
    chaining issues; the proper installation order is VMware Tools, then Smart Card
    Middleware, and then VMware View Agent.
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: It may also be beneficial to set smart card removal behavior to lock the workstation
    for persistent solutions or log off for non-persistent solutions.
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Smart card
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Smart card reader (for example, SCR331)
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In addition, the following prerequisites must be met:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: The smart card option is installed during the VMware View Connection Server
    installation process
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The VMware View Connection Server is configured to allow smart card authentication
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The middleware (for example, ActivClient) is functioning properly and is configured
    with the necessary certificates
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `locked.properties` file on all of the VMware View Connection and Security
    Servers in the environment has been configured to use the master keystore holding
    one or more **Certificate Authority (CA)** certificates for the respective user
    certificates in use on the smart cards
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The smart card configuration should be nearly identical for any organization
    (with only the certificates being the differentiator). It is important to note
    that while most smart cards may look the same, there are approximately a dozen
    or so smart card models on the market.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: The make and model of the smart card can typically be discovered via the smart
    card middleware in use, for example, ActivClient.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows a given smart card from within the ActivClient
    console:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: '![Smart card authentication](img/1124EN_09_10.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
- en: In the preceding screenshot, a card has been inserted into an approved card
    reader (for example, SCR331). There are three options on the home screen within
    ActivClient. Clicking on the **My Certificates** folder opens the user certificates
    stored on the smart card. Clicking on **CA Certificates** opens the CA certificates
    stored on the smart card and are used to validate the user certificates.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: 'Opening the **Smart Card Info** object brings up the following screenshot that
    shows smart card information from within ActivClient:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '![Smart card authentication](img/1124EN_09_11.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, the **Manufacturer** of the smart card
    in question is **Gemalto** and the **Model** is **Cyberflex Access 64K V2c**.
    In addition, the username (typically associated with an Active Directory user
    account of the same name) is also displayed in the **User Name** field.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the certificates on a given smart card:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: '![Smart card authentication](img/1124EN_09_12.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
- en: While only one user certificate is shown in the preceding screenshot, it is
    possible to have multiple user certificates stored on a smart card. VMware View
    will filter through the user certificates and prompt the end user to select which
    certificate to use for authentication. Only valid certificates that have the client
    authentication and smart card logon role will be displayed.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows certificate details of a smart card via ActivClient:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '![Smart card authentication](img/1124EN_09_13.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot shows the **My Certificate** screen from within ActivClient.
    The principal name of the issuing CA for the user certificate (for example, `thinkvirt.demo.local)`
    is displayed. It is important that the name resolution to the issuing CA be fully
    functional. Malfunctioning DNS resolution can impact smart card authentication
    times.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: Additional smart card information from VMware can be found in the *Smart Card
    Certificate Authentication with VMware View 4.5/4.6* whitepaper.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: Configuring smart card authentication for VMware View Connection Servers
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Smart card authentication is supported by PCoIP zero clients, thin clients,
    and thick clients. It is important to verify that the exact card reader model,
    card model, and certificates in use are supported in the VMware View/Teradici
    PCoIP support matrix. These documents are available at [http://www.vmware.com/](http://www.vmware.com/)
    and [http://www.teradici.com/](http://www.teradici.com/) respectively.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: In addition, smart cards are often used to provide a secure mechanism for Single
    Sign-On, which is the ability to log in to the VMware View environment once (and
    not for every time a session is connected or reconnected to a vDesktop).
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: To mandate the use of smart card authentication, go to the **Edit View Connection
    Server Settings** tab found under **View Configuration** | **Servers**.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows advanced smart card configuration options:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring smart card authentication for VMware View Connection Servers](img/1124EN_09_14.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
- en: '**Smart card authentication** can be set to not **Allowed, Optional**, or **Required**.
    In addition, sessions can be set to disconnect upon smart card removal by selecting
    the **Disconnect user sessions on smart card removal** checkbox.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: In many secured environments, the required option will be configured to enforce
    that any incoming requests to access a vDesktop in the VDI are authenticated by
    the use of a user’s smart card.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: In addition to configuring smart card authentication in the VMware View Admin
    console, there is a main file of importance during configuration `locked.properties`.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: The `settings.properties` file, also located in the `\sslgateway\conf` subdirectory
    contains configuration for the certificate used by the VMware View Admin console
    for HTTPS encryption; the value for which certificate to use is stored in the
    `keyfile` string. In addition, the `settings.properties` file contains the hashed
    password necessary to use the certificate; the value for the password is stored
    in the `keypass` string.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the environment for smart card authentication
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To prepare the environment for smart card authentication, perform the following
    steps:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: The first step is to verify a fully functioning DNS and NTP environment as certificate-based
    authentication is very sensitive to the time drift or difficulty in resolving
    servers within the **public key infrastructure (PKI)**.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, the CA certificate must be downloaded. This can be done by opening a browser
    and pointing it to `http://<CA_SERVER>/certsrv`, where`<CA_SERVER>` is the **fully
    qualified domain name (FQDN)** or IP address of the CA Server.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Download CA Certificate** link with **DER encoding** (default)
    selected. Save the certificate to the VMware View Connection Server under `\VMware
    View\Server\jre\bin`.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Launch the command prompt with administrative permission (for example, right-click
    on the **Command Prompt** icon and select **Run As Administrator)**. Navigate
    to `\VMware View\Server\jre\bin`.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, type the following command to generate the keystore:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `certnew.cer` file is the CA certificate that was downloaded in a previous
    step. The `trust.key` file is the generated keystore that will be used by the
    VMware View Connection Server to verify end user certificates stored on their
    smart card.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The keytool utility will then prompt for the CA certificates password as well
    as to whether the certificate should or should not be trusted.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the keystore has been successfully generated, copy the file (for example,
    `trust.key)` to `\VMware View\Server\sslgateway\conf` subdirectory.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, create a text file named `locked.properties` within the `\VMware View\Server\sslgateway\conf`
    subdirectory with Notepad (or a similar tool).
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the following text:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Restart the VMware View Connection Server service.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuring smart card authentication for VMware View Security Servers
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For environments that leverage one or more VMware View Security Servers, it
    is important to configure the View Security Server to also utilize smart card
    authentication (as well as configuring the appropriate certificates). Otherwise,
    only internal users or users bypassing the VMware View Security Server, will be
    able to leverage their smart card for authentication.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: The steps are identical to those listed in the *Configuring smart card authentication
    for VMware View Connection Servers* section.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows an illustration showing the location of the `locked.properties`
    file:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '![Configuring smart card authentication for VMware View Security Servers](img/1124EN_09_15.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
- en: 'Therefore, the easiest way to configure a VMware View Security Server (shown
    as VSS in the preceding diagram) is as follows:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: Copy the `trust.key` file (or other appropriate keystore file) to the `\VMware
    View\Server\sslgateway\conf` subdirectory.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the `locked.properties` file to the `\VMware View\Server\sslgateway\conf`
    subdirectory.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Restart the VMware View Security Server service.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Notice the simplicity of the preceding steps if a VMware View environment is
    leveraging the same PKI and same keystore for the CA certificate, which is likely
    almost all VMware View solutions using smart cards. Therefore, it is quite possible
    to script the copying of the files from one server to the other, as well as restarting
    the appropriate service (for example, VMware View Security Server service) when
    necessary.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: Configuring U.S. Department of Defense CAC Authentication
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**U.S. Department of Defense Common Access Card (DoD CAC)** (smart card) authentication
    is a **Homeland Security Presidential Directive 12 (HSPD-12)** approved mechanism
    used by U.S. military installations for authentication to IT assets. CACs also
    serve as a general identification card pursuant to the Geneva Conventions.'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: Personnel log in to their physical desktop by entering their CAC into a USB
    smart card reader, laptop smart card reader, a thin or zero client with an integrated
    card reader, or a keyboard with an integrated card reader. Once the card has been
    read, the end user is prompted to enter his PIN.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: It is entirely possible to use CAC authentication inside the vDesktop without
    ever configuring it as an acceptable authentication mechanism to get to the vDesktop.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: For example, if ActivClient is installed and configured properly within a vDesktop
    but smart card authentication has not been configured on the View Connection Server
    environment, then the smart card cannot be used to connect to the vDesktop. However,
    once connected to the vDesktop, the smart card can be successfully used to authenticate
    within the VDI (for example, an RDP connection). In normal smart card operation,
    authentication using a smart card will prompt the end user for his/her PIN. While
    this scenario is possible, it is far from the preferred solution, as connecting
    into the VDI is not done via smart card authentication.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: Configuring CAC authentication encompasses the techniques used in standard smart
    card authentication configuration and adds a few minor considerations.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: 'Configuring CAC authentication is explained as follows:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: On the VMware View Connection Server, navigate to the `\VMware View Server\Server\sslgateway\conf`
    subdirectory.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a subdirectory named `certexport`. Within `\certexport`, place all of
    the `.cer` files that are applicable. This directory is used to generate a current
    or future `master keystore`.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The next step of configuring CAC authentication is to generate or obtain a `master
    keystore`, which contains all of the U.S. DoD and intermediate CA certificates.
    The `master keystore` file should be placed in the `\sslgateway\conf` subdirectory
    found within the `VMware View installation` directory on the View Connection Server.
    Instructions on how to generate a `master keystore` are outlined later in this
    chapter.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the `truststore` files to the `\sslgateway\conf` subdirectory.![Configuring
    U.S. Department of Defense CAC Authentication](img/1124EN_09_16.jpg)
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The preceding screenshot is a representative screen capture of the `\\sslgateway\conf`
    subdirectory of working VMware View Connection Server configured for CAC authentication.
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now that all of the certificates are in the proper location, VMware View Connection
    Server must be configured to use the certificates.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, open the `locked.properties` file, which can also be found in the `\sslgateway\conf`
    subdirectory. If the file does not exist, it should be created using Notepad or
    a similar utility.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The contents of the `locked.properties` file should be similar to:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The preceding text assumes that the `master keystore` file is actually named
    as `masterkeystore`. The `trustStoreType` = `JKS` defined that the trust store
    is a Java keystore generated with the **Java Runtime Environment (JRE)** `keytool.exe`
    or similar utility. The `useCertAuth` = `true` enabled the use of the certificate.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: Once the settings have been applied, restart the VMware View Connection Server
    service or the VMware View Security Server service. At this point, it’s also important
    to verify that the View Admin console is still functional, as a malformed `locked.properties`
    file can prevent the View Admin console from loading properly.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: Certificate revocation configuration
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A **Certificate Revocation List (CRL)** is used to prevent users whose end user
    certificate has been revoked (for example, the end user is an employee who has
    been terminated) from successfully authenticating to the environment. VMware View
    supports CRLs and **Online Certificate Status Protocol (OCSP)** to check the certificate
    revocation status of a given certificate. If both OCSP and CRL are configured
    on a VMware View Connection Server or VMware View Security Server, VMware View
    will attempt to use OCSP first and then fall back to the use of a CRL if OCSP
    fails. VMware View will not fall back to OCSP from the use of a CRL if the CRL
    check fails.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: Configure the use of a CRL
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The use of a CRL is configured by editing the `locked.properties` file and
    adding the following lines:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `enableRevocationchecking` and `allowCertCRLs` strings enables VMware View
    to perform certificate revocation checking. The `crlLocation` string is used to
    define the location of the CRL.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: An example of a value for `crlLocation` is `http://cert.demo.local/certEnroll/ocsp-ROOT_CA.crl`.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: Configure the use of OCSP
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The use of a OCSP is configured by editing the `locked.properties` file and
    adding the following lines:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `enableRevocationchecking` and `allowCertCRLs` strings enables VMware View
    to perform a certificate revocation check. The `enableOCSP` string enables OCSP.
    The `ocspSigningCert` is used to define the certificate used by the OCSP authority
    and the `ocspURL` is used to define the location of OCSP responder.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: Configure the use of both a CRL and OCSP
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To configure the use of both a CRL and OCSP, insert all of the preceding fields
    and their appropriate values into the `locked.properties` file. Please note that
    the `allowCertCRLs=true` string only needs to be listed once.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, the following should be added to the `locked.properties` file:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `ocspCRLFailover` string allows the VMware View Connection Server or VMware
    View Security Server to use a CRL if OCSP fails.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Prohibiting the use of Copy and Paste functions
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In some environments, administrators may want to prevent end users from copying
    and pasting between their vDesktop and their thick or thin client. The proper
    way to prevent the Copy and Paste functions is via Group Policy of the vDesktops.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: This is defined in the `PCOIP.ADM` template available on any View Connection
    Server in the `\extras` subdirectory. This setting can be found in `Computer Configuration\Admin
    Templates\PCoIP Session Variables\Not Overridable Admin Settings\Configure PCoIP
    Virtual Channels`.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: Within this setting, there is an allowed and disallowed list. If a virtual channel
    is listed on both the allowed and disallowed list, it will be disallowed. In View
    4.6 and later, the virtual channel responsible for the clipboard (mksvchan) no
    longer needs to be explicitly mentioned. Instead, the administrator can simply
    check the disable clipboard processing on the PCoIP host and enable the policy.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the settings of the clipboard process:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: '![Prohibiting the use of Copy and Paste functions](img/1124EN_09_17.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
- en: The **Disable clipboard processing on PCoIP host** setting is read at the time
    of connection or reconnection. Therefore, changing the setting from **Not Configured**
    to **Enabled**, for example, will go into effect on the next log in and not the
    existing session.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: View Connection Server tags
  id: totrans-265
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VMware View Connection Server uses tags to control the access to specific desktop
    pools in an environment with multiple View Connection Servers. Any given VMware
    View Connection Server can have no tags, one tag, or many tags. Tags are defined
    under **View Configuration** | **Servers** | **Edit View Connection Server Settings**
    in the View Admin console.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the use of a Connection Server tag (thinkvirt,
    in this case):'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '![View Connection Server tags](img/1124EN_09_18.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
- en: In the preceding example, a specific VMware View Connection Server has been
    assigned the **thinkvirt** tag. To assign multiple tags to a VMware View Connection
    server, separate the tags by either semicolons or commas.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: Then, from within the configuration of a desktop pool, on the **Pool Settings**
    tab select **Browse** for configuration tagging.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the use of a restriction tag:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: '![View Connection Server tags](img/1124EN_09_19.jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
- en: The preceding screenshot would show multiple tags if multiple tags were in use
    and would allow the administrator to select none, some, or all of the available
    tags.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **Tag** field will only be populated if at least one View Connection Server
    within the environment has a defined tag.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Connection Server Restrictions** dialog box, there are two options:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: '**No restrictions:** This pool can be accessed from any VMware View Connection
    Server'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Restricted to these tags:** This pool can be accessed from one or more VMware
    View Connection Servers with the defined tags'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following is a matrix of tag connection permissions:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: '| Connection Server has defined tag? | Desktop pool is configured to use tags?
    | Result |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
- en: '| No | No | Able to connect |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
- en: '| No | One or more | Not able to connect |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
- en: '| One or more | No | Able to connect |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
- en: '| One or more | One or more | Able to connect only if one or more tags match
    |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
- en: One example of when this may be useful is if an organization has two separate
    inbound VPN environments. VPN_A is used by consultants and visitors. VPN_B is
    used by employees. If the organization wanted to restrict users of VPN_A to a
    desktop with limited capabilities and minimal applications installed, one or more
    separate View Connection Servers could be set up for VPN_A and VPN_B, respectively.
    The View Connection Servers would be tagged VPNA and VPNB, respectively. Then,
    the limited desktop pool would only allow connections from VPNA, whereas the fully
    functional desktop pool would only allow connections from VPNB.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to note that a VMware View solution can leverage more than one
    vCenter Server. Therefore, not only could tagging limit the pools an inbound user
    has access to but the backend desktop pools could live on a completely separate
    virtual infrastructure.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: In addition, you could use View Connection Server tagging to identify which
    users were forced to use two-factor authentication and which were not.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: '![View Connection Server tags](img/1124EN_09_20.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
- en: In the previous example, the end user has more than one View Connection Server
    (VCS) available to him. The Green VCS requires smart card authentication. For
    example, this VCS could be used by military staff or doctors who have been issued
    a common access card (CAC), whereby the Blue VCS could be used by civilians, interns,
    or temporary staff (who are not issued smart cards). Within the VDI there exists
    a Desktop Pool that has several sensitive financial applications as part of its
    base image. By using VMware View Connection Server tagging, the financial desktop
    pool can be configured to only allow incoming connections from the Green VCS,
    thereby enforcing the use of smart card authentication for incoming users.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: Forensics
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Forensics**, in terms of Information Technology, typically relates to the
    extraction of legal evidence from computer systems to support legal events. Forensics
    involves identifying, preserving, recovering, analyzing, and presenting collected
    data from a computer environment. Forensics is also a required component for many
    sensitive computing environments looking to leverage VDI solutions.'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: '![Forensics](img/1124EN_09_21.jpg)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
- en: To understand how forensics is impacted by VDI, it’s first important to understand
    where user-authored or user-manipulated data may reside.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: 'The primary locations for user-authored or user-manipulated data are as follows:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: '**Operating system:** For VMware View solutions that do not leverage View Composer
    or do not leverage redirection of the users persona, user data will reside within
    the operating system partition.'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Persona:** For VMware View solutions that leverage Microsoft roaming profiles,
    a persona management solution, for example, Liquidware Labs ProfileUnity TM, or
    VMware Views persistent user data drives, user data will reside within the persona
    partition. For Microsoft roaming profiles, AppSense, or ProfileUnity, the user
    data will be stored on a network share. Therefore, ensuring that the network share
    that stores the user data is backed up according to the organizations policy is
    imperative as the location where forensics analysis will occur.'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For solutions that use persistent user data drives, it is important to preserve
    these virtual disk files so that they can be attached to other virtual machines
    if the need to perform forensics arises. When user data resides in the persona
    layer, virtual machine volatility is of far less concern.
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Network resources:** For network resources, such as file shares, web-based
    collaboration resources, the scope for preserving these data points is outside
    the scope of this book and relies more on understanding various platforms and
    how they provide auditing and data restoration capabilities.'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Temporary location:** For solutions that leverage redirecting the users profile,
    its possible that configuration of the solution may miss user data due to misconfiguration
    and therefore, would be discarded during a vDesktop or desktop pool View Composer.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The biggest challenge for VDI that requires forensics capabilities is the use
    of non-persistent desktop pools. Persistent desktop pools are automatically assigned
    once and therefore data, versioning, state, and so on is able to be maintained.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-302
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While a VDI solution is inherently secure in nature, as the end user’s data
    typically resides in a secure data center, it is still important to understand
    an organization’s security posture, policies, and attack vectors and take appropriate
    measures where necessary. With end users connecting from any location, such as
    an unsecured Wi-Fi connection at a coffee shop, an Apple iPad over the AT&T 3G
    network, a corporate LAN, or a home cable ISP, it is important to protect corporate
    data and intellectual property. The use of smart card authentication a solution
    rapidly gaining in popularity — is one strong approach for protecting the authentication
    entry point. Sound networking policies limiting traffic to defined ports, protocols,
    sources, and destinations is another key component of a secure VDI.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: Finally, understanding basic fundamentals of data forensics to ensure compliance,
    if necessary, is an important skill to have within the VDI solution team. While
    potentially the majority of VDI solutions will not require in-depth forensic capabilities,
    understanding the data points to preserve, monitor, and collect are significant.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter focuses on the process of migrating from a physical desktop
    solution to a virtual desktop solution. There are many different approaches that
    can be taken, and the advantages and disadvantages of each will be covered.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
