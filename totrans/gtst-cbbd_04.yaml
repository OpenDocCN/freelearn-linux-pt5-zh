- en: Chapter 4. Manually Installing an Alternative Operating System
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章：手动安装备用操作系统
- en: Installing a full-blown desktop **operating system** (**OS**) onto an SD card
    via an image is certainly useful, but limitations arise quickly. What if an installation
    to an SSD is desired? Or what about having a very minimal installation for use
    as a server? Surely no heavy GUI is needed for this? All these questions will
    be covered in this chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个完整的桌面**操作系统**（**OS**）通过镜像安装到SD卡上是非常有用的，但很快就会遇到限制。如果需要将操作系统安装到SSD上怎么办？或者，如果希望有一个非常精简的安装用于作为服务器使用呢？显然，对于这个需求不需要重型GUI界面吧？所有这些问题将在本章中讨论。
- en: 'This chapter will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Partitioning and formatting a destination medium
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分区和格式化目标介质
- en: Creating rootfs
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建rootfs
- en: Allowing booting of the destination medium
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许目标介质启动
- en: Updating the OS
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新操作系统
- en: Installing additional software
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装额外软件
- en: Prerequisites for this chapter
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本章的前提条件
- en: In this chapter, Debian (or even Ubuntu) will be installed to an alternative
    installation medium. A SATA SSD will be used, but a regular SATA disk can be equally
    used given that enough electrical power is available to power the drive; a power
    adapter with at least 2 amperes is required in such a case. Alternatively, a second
    microSD card can be used in a microSD-to-USB adapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，Debian（甚至Ubuntu）将安装到一个备用安装介质上。将使用SATA SSD，但只要有足够的电力来为驱动器提供电源，也可以使用普通的SATA硬盘；在这种情况下，至少需要一个2安培的电源适配器。或者，也可以使用第二个microSD卡，通过microSD到USB适配器来连接。
- en: When installing to a SATA drive, however, the Cubieboard still requires an SD
    card to boot, as the SoC cannot boot from a SATA drive directly. Technically,
    the onboard NAND flash or an onboard SPI flash could be used for this instead,
    but SPI flash-enabled Cubieboards are hard to find, and working with NAND requires
    a very old u-boot, which lacks a lot of new features. In this chapter, the microSD
    card created in the previous chapter will be repurposed and used to accomplish
    all these tasks.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当安装到SATA驱动器时，Cubieboard仍然需要SD卡来启动，因为SoC不能直接从SATA驱动器启动。从技术上讲，板载NAND闪存或板载SPI闪存也可以用于此，但支持SPI闪存的Cubieboard很难找到，而且使用NAND需要一个非常旧的u-boot，它缺少很多新特性。在本章中，之前章节创建的microSD卡将重新使用，并完成所有这些任务。
- en: Tip
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: USB flash drives can, in theory, be used, but at the time of writing this book,
    the USB boot code has not landed in u-boot. At the moment, a USB flash drive can
    only be used after booting a kernel with USB support, which has been loaded from
    either a NAND or an SD card.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: USB闪存驱动器理论上可以使用，但在撰写本书时，USB引导代码尚未进入u-boot。目前，USB闪存驱动器只能在引导一个带有USB支持的内核后使用，该内核已从NAND或SD卡加载。
- en: Preparing the destination medium
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备目标介质
- en: To install Debian to a SATA drive, the destination drive will need some preparation.
    It needs to be partitioned and formatted.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 若要将Debian安装到SATA驱动器，目标驱动器需要一些准备工作。需要对其进行分区和格式化。
- en: Assuming the Cubieboard is booted up using the Fedora image created earlier
    and has either a SATA drive, USB flash drive, or a microSD card with a USB adapter
    connected, it is time to start `fdisk` on the destination medium, which is assumed
    to be `/dev/sda`. Please make sure that the correct device node is used; otherwise,
    the following actions will destroy anything present on the medium.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 假设Cubieboard已使用之前创建的Fedora镜像启动，并且已连接SATA硬盘、USB闪存驱动器或带USB适配器的microSD卡，现在是时候开始在目标介质上使用`fdisk`，假设目标介质为`/dev/sda`。请确保使用正确的设备节点，否则以下操作将销毁介质上的所有内容。
- en: 'The most common tool of choice to partition a device is `fdisk`. While `fdisk`
    has a few parameters, starting it with a device node will start `fdisk` in an
    interactive mode where a disk can be prepared. Root access is required to use
    `fdisk` and thus may need to be prefixed with `sudo`, as shown in the following
    screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 分区设备时，最常用的工具是`fdisk`。虽然`fdisk`有一些参数，但以设备节点启动它将使`fdisk`进入交互模式，在其中可以准备磁盘。使用`fdisk`需要root权限，因此可能需要加上`sudo`前缀，如下图所示：
- en: '![Preparing the destination medium](img/1572OS_04_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![准备目标介质](img/1572OS_04_01.jpg)'
- en: 'There should not be any previous data present or at least be backed up, which
    will not be covered here. Pressing the *o* key should clear any previously created
    partitions, as shown here:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 应确保目标介质上没有任何以前的数据，或者至少已经备份，这部分内容将在此不做讨论。按下*o*键应清除任何先前创建的分区，如下所示：
- en: '![Preparing the destination medium](img/1572OS_04_02.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![准备目标介质](img/1572OS_04_02.jpg)'
- en: 'Partitions are a useful thing, they allow a logical separation. There are many
    reasons and choices when dividing a disk, as but here, only the following four
    partitions are of interest:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 分区是非常有用的，它们允许逻辑分隔。分区时有许多原因和选择，在这里，我们只关注以下四个分区：
- en: '**Boot**: This partition holds all the relevant boot files'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启动**：此分区包含所有相关的启动文件'
- en: '**Root**: This partition holds all the relevant system files'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**根**：此分区包含所有相关的系统文件'
- en: '**Home**: This partition holds all the user files'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**家**：此分区包含所有用户文件'
- en: '**Swap**: This partition expands the RAM memory'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交换**：此分区扩展 RAM 内存'
- en: In this example, only three primary partitions will be created as the boot partition
    will be on the SD card. For the root partition, 6 GB is used, and for a swap partition,
    512 MB is used. The remainder is used for the home partition.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，将只创建三个主分区，因为启动分区将位于 SD 卡上。根分区使用 6 GB，交换分区使用 512 MB。剩余空间用于 home 分区。
- en: 'Ultimately, however, it is up to the reader to define what is useful to you
    as this can differ greatly. With the `n` command, a new partition can be created.
    In the following screenshot, the three partitions explained earlier are created:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，最终由读者决定什么是对你有用的，因为这可能因人而异。使用 `n` 命令可以创建新分区。以下截图中，展示了之前解释过的三个分区的创建：
- en: '![Preparing the destination medium](img/1572OS_04_03.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![准备目标介质](img/1572OS_04_03.jpg)'
- en: When not entering a value for the last sector, `fdisk` will use the last sector
    available as default, thus using the remainder of the medium.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当未输入最后一个扇区的值时，`fdisk` 会默认使用可用的最后一个扇区，从而使用剩余的介质空间。
- en: 'Partitions should not only be created, but also need to be categorized. By
    default, `fdisk` will turn all newly created partitions into regular Linux filesystem
    partitions, which is fine except for the swap partition. This partition needs
    a different type applied to it. The `t` command is used to categorize a partition,
    which in turn wants to know the exact type to use. For swap, this is type 82\.
    The `l` command can be used at any time to get an overview of the available types.
    The following screenshot shows how to turn partition `2` into a swap partition:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 分区不仅需要创建，还需要分类。默认情况下，`fdisk` 会将所有新创建的分区转化为常规的 Linux 文件系统分区，这对于除了交换分区之外的其他分区来说是没问题的。交换分区需要应用不同的类型。`t`
    命令用于对分区进行分类，这需要知道要使用的具体类型。对于交换分区，其类型为 82。任何时候都可以使用 `l` 命令来查看可用的类型。以下截图展示了如何将分区
    `2` 转换为交换分区：
- en: '![Preparing the destination medium](img/1572OS_04_04.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![准备目标介质](img/1572OS_04_04.jpg)'
- en: 'Using the commands `w` to write and `q` to quit, the newly created partition
    table is saved to the disk and `fdisk` quits, as shown here:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `w` 命令保存并使用 `q` 命令退出，新创建的分区表会被写入磁盘，`fdisk` 随之退出，如下所示：
- en: '![Preparing the destination medium](img/1572OS_04_05.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![准备目标介质](img/1572OS_04_05.jpg)'
- en: Formatting the newly created partitions
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 格式化新创建的分区
- en: With freshly created partitions available, they now need to be formatted. In
    this book, `ext4` will be used as the filesystem.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在新创建的分区可用后，它们需要进行格式化。本书中将使用 `ext4` 作为文件系统。
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: While not yet supported by the 3.4.x kernel used in this book, `f2fs` is very
    interesting as it is optimized for SSD, USB, or microSD flash usage. This is something
    that could be interesting in future.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本书中使用的 3.4.x 内核尚不支持，`f2fs` 是一个非常有趣的文件系统，因为它针对 SSD、USB 或 microSD 闪存的使用进行了优化。这在未来可能会很有意思。
- en: The command to format a partition is `mkfs.ext4`, and the parameters that are
    of interest are the device node being formatted and optionally `-L`, which is
    used to give the partition a name.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 格式化分区的命令是 `mkfs.ext4`，其中值得关注的参数是正在格式化的设备节点和可选的 `-L`，用于给分区命名。
- en: 'Formatting the root partition is shown here:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 格式化根分区的操作如下：
- en: '![Formatting the newly created partitions](img/1572OS_04_06.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![格式化新创建的分区](img/1572OS_04_06.jpg)'
- en: 'Formatting the swap partition can be done using the command in the following
    screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 格式化交换分区可以通过以下截图中的命令来完成：
- en: '![Formatting the newly created partitions](img/1572OS_04_07.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![格式化新创建的分区](img/1572OS_04_07.jpg)'
- en: 'Formatting the remainder for the user files can be done as shown here:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 格式化剩余的空间用于用户文件，如下所示：
- en: '![Formatting the newly created partitions](img/1572OS_04_08.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![格式化新创建的分区](img/1572OS_04_08.jpg)'
- en: 'To ensure that all the data is written to the appropriate places, the partitions
    are mounted on the existing filesystem as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保所有数据都写入到适当的位置，分区会按照现有文件系统进行挂载，如下所示：
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating a Debian or Ubuntu rootfs
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Debian 或 Ubuntu 的 rootfs
- en: The first thing that should be mentioned here is that Ubuntu is a Debian derivative.
    To cut a long story short, it is basically Debian, and as a result, it does not
    hugely matter which distribution is used for installation, be it Debian or Ubuntu.
    So when talking about installing Ubuntu or Debian, the same thing is really being
    said. The tool used for installation here is called **debootstrap** and is available
    in a lot of distributions.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这里首先要提到的是，Ubuntu 是 Debian 的衍生版。简而言之，它基本上就是 Debian，因此安装时使用哪个发行版并没有太大区别，不论是 Debian
    还是 Ubuntu。所以，谈论安装 Ubuntu 或 Debian，其实是在说同一件事。这里使用的安装工具是 **debootstrap**，它在许多发行版中都可以找到。
- en: Installing debootstrap
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 debootstrap
- en: 'Fedora has debootstrap available and can be installed via the Yum tool, as
    shown here:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Fedora 提供了 debootstrap，并可以通过 Yum 工具安装，如下所示：
- en: '![Installing debootstrap](img/1572OS_04_09.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![安装 debootstrap](img/1572OS_04_09.jpg)'
- en: Running debootstrap
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行 debootstrap
- en: With debootstrap installed, it is almost time to get started. A few things need
    to be mentioned first; debootstrap, which stands for Debian bootstrap, can be
    used to install any Debian variant for any architecture for at least Debian and
    Ubuntu. It does require a mirror to be supplied to its list of arguments. The
    list of mirrors can be obtained for Debian at [http://www.debian.org/mirror/list-full](http://www.debian.org/mirror/list-full),
    but for Ubuntu, there is no official list of mirrors. However, using the country
    code in the URL can result in a mirror, for example, in the Netherlands, [http://nl.ports.ubuntu.com](http://nl.ports.ubuntu.com)
    is a valid mirror. Using a mirror has the obvious advantage that the download
    will proceed much faster.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了 debootstrap 后，差不多可以开始了。首先需要提及一些事情；debootstrap，即 Debian bootstrap，可以用于安装任何架构的
    Debian 变种，至少支持 Debian 和 Ubuntu。它确实需要在其参数列表中提供一个镜像。Debian 的镜像列表可以通过 [http://www.debian.org/mirror/list-full](http://www.debian.org/mirror/list-full)
    获取，而 Ubuntu 则没有官方的镜像列表。然而，通过在 URL 中使用国家代码可以找到镜像，例如在荷兰，[http://nl.ports.ubuntu.com](http://nl.ports.ubuntu.com)
    就是一个有效的镜像。使用镜像的明显优点是下载会更快。
- en: Since Allwinner SoCs are based on the ARMv7 architecture, for the architecture,
    **armhf** will be used for that.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Allwinner SoC 基于 ARMv7 架构，因此该架构将使用 **armhf**。
- en: The **suite**, as it is called, depends on what is desired. For Debian, there
    are the stable, testing, and unstable suites, where **Wheezy** is the name of
    the stable branch, **Jessie** is testing, and **sid** is the unstable branch.
    It should be noted that in future, the names Wheezy and Jessie will change to
    new suite names, but sid will always remain the unstable development version.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**suite**（套件）取决于需要的版本。对于 Debian，有稳定版、测试版和不稳定版，**Wheezy** 是稳定版的名称，**Jessie**
    是测试版，而 **sid** 是不稳定版的名称。需要注意的是，未来 Wheezy 和 Jessie 会更改为新的套件名称，但 sid 永远是未稳定的开发版本。'
- en: Finally, debootstrap is prefixed with the `PATH` variable to ensure debootstrap
    uses the correct path. This is due to a bug currently in debootstrap in combination
    with the newer distributions.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，debootstrap 被加上 `PATH` 变量前缀，以确保 debootstrap 使用正确的路径。这是因为当前 debootstrap 与新发行版的组合中存在一个
    bug。
- en: Tip
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The `–foreign` parameter can be used to bootstrap any architecture, even on
    an x86-based system, as no code is executed. Bootstrapping will require some additional
    work using the `–second-stage` parameter. It is up to the reader to learn more
    about this when cross bootstrapping.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`–foreign` 参数可以用来引导任何架构，即使是在 x86 系统上，因为没有代码会被执行。引导过程还需要通过 `–second-stage` 参数进行一些额外的操作。读者可以在进行跨架构引导时深入了解这方面的内容。'
- en: 'The following command will start the installation of Debian Wheezy for arm-hard-float
    into `/mnt` using the [http://ftp.nl.debian.org/debian/](http://ftp.nl.debian.org/debian/)
    mirror, as shown here:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将使用 [http://ftp.nl.debian.org/debian/](http://ftp.nl.debian.org/debian/)
    镜像，将 Debian Wheezy 安装到 `/mnt` 目录中，适用于 arm-hard-float 架构，如下所示：
- en: '![Running debootstrap](img/1572OS_04_10.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![运行 debootstrap](img/1572OS_04_10.jpg)'
- en: As debootstrap is written in Perl. It may be possible that **Perl** is not currently
    installed on the system where debootstrap is being used. Installing Perl may follow
    a long list of packages that need to be downloaded and installed.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 debootstrap 是用 Perl 编写的，因此可能系统中尚未安装 **Perl**。安装 Perl 可能会导致需要下载和安装一长串包。
- en: Tip
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Similarly, debootstrap `–foreign --arch=armhf trusty /mnt http://nl.ports.ubuntu.com`
    can be used to install **Ubuntu Trusty Tahr** with a note that this will only
    be the base system. Also, debootstrap might not come with all the suites as expected.
    All Ubuntu suites are symlinks to the gutsy suite at `/usr/share/debootstrap/scripts`
    as long as it exists on [http://ports.ubuntu.com/dists/](http://ports.ubuntu.com/dists/).
    Use `ln -s gutsy utopic` in the scripts directory, for example, to add utopic
    as a valid suite.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，可以使用 debootstrap `–foreign --arch=armhf trusty /mnt http://nl.ports.ubuntu.com`
    来安装 **Ubuntu Trusty Tahr**，但请注意，这将仅是基础系统。此外，debootstrap 可能不会带有所有预期的套件。只要 `/usr/share/debootstrap/scripts`
    下存在，所有 Ubuntu 套件都是指向 gutsy 套件的符号链接，链接目标是 [http://ports.ubuntu.com/dists/](http://ports.ubuntu.com/dists/)。例如，在脚本目录中使用
    `ln -s gutsy utopic` 来将 utopic 添加为有效套件。
- en: Configuring the base system
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置基础系统
- en: 'The so-called `fstab` file in Linux is responsible for mounting partitions
    in their designated positions. Using any editor, the following changes need to
    be added to the `fstab` file. While the UUID-based mount points can be used, only
    standard entries are used here. However, you are welcome and even encouraged to
    use the UUID-based mount points. A common editor that is relatively easy to use
    is **nano**. After modifying the file, exit nano with the *Ctrl* key in combination
    with the *x* key and answer the question to save the modified buffer with the
    *y* key. The filename should remain the same, thus answering with the *Enter*
    key. The `fstab` file in the editor is shown in the following screenshot:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 中所谓的 `fstab` 文件负责将分区挂载到指定的位置。使用任何编辑器，以下更改需要添加到 `fstab` 文件中。虽然可以使用基于 UUID
    的挂载点，但这里只使用标准条目。不过，你可以使用基于 UUID 的挂载点，并且我们鼓励你这么做。一个相对易用的常见编辑器是 **nano**。修改完文件后，按
    *Ctrl* 键和 *x* 键退出 nano，并回答问题以通过 *y* 键保存修改过的缓冲区。文件名应保持不变，因此按 *Enter* 键确认。编辑器中的
    `fstab` 文件如下所示：
- en: '![Configuring the base system](img/1572OS_04_11.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![配置基础系统](img/1572OS_04_11.jpg)'
- en: With `/boot` mounted read-only, it makes sure that not only no accidental writes
    happen, but also no intended writes occur. Also, as mentioned earlier in this
    chapter, the boot partition of the microSD card, which was created in the previous
    chapter, is reused here.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `/boot` 挂载为只读模式，可以确保不仅没有意外的写入发生，而且也没有故意的写入操作。此外，正如本章前面提到的，上一章创建的 microSD 卡的启动分区在这里被重复使用。
- en: Configuring the networking
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置网络
- en: Debian and Ubuntu use the `interfaces` file at `/etc/network/interfaces` to
    configure networking. Note that this is a more permanent configuration used when
    not using the graphical utilities, such as network manager. If the final goal
    of this setup is a graphical desktop, it is probably wise to skip setting up the
    `interfaces` file.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 和 Ubuntu 使用 `/etc/network/interfaces` 文件来配置网络。请注意，这是在不使用图形工具（如网络管理器）时所用的更持久的配置。如果该配置的最终目标是图形桌面，跳过配置
    `interfaces` 文件可能是明智的选择。
- en: Tip
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Using the network interface `eth0` as the parameter for `dhclient` should result
    in a working network connection, as shown in the following command. However, this
    will be lost after a reboot.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 使用网络接口 `eth0` 作为 `dhclient` 的参数应能建立有效的网络连接，如以下命令所示。但请注意，这一配置在重启后会丢失。
- en: '[PRE1]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Use nano to open the `interfaces` file at `/mnt/etc/network/interfaces` and
    make the following addition at the bottom:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 nano 打开 `/mnt/etc/network/interfaces` 文件，并在文件底部添加以下内容：
- en: '[PRE2]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Generally, a similar section exists for the loopback device.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，类似的部分也存在于回环设备中。
- en: If a static IP configuration is required, the following can be used as an example
    (do replace the proper values with all numbers for the desired network).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要静态 IP 配置，可以参考以下示例（请用目标网络的所有数字替换相应的值）。
- en: '[PRE3]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When using a static IP address, the system also needs to be told how to resolve
    things; the `resolv.conf` file at `/etc/resolv.conf` is responsible for this.
    Note that this file will get overwritten if the network is configured either via
    `dhcp` or via a network manager. Using nano as an example editor, open the `resolv.conf`
    file at `/mnt/etc/resolv.conf` to add the following lines to it:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用静态 IP 地址时，系统还需要告诉它如何解析内容；`/etc/resolv.conf` 中的 `resolv.conf` 文件负责此操作。请注意，如果网络通过
    `dhcp` 或网络管理器进行配置，文件将被覆盖。以 nano 为例，打开 `/mnt/etc/resolv.conf` 文件，并在其中添加以下行：
- en: '[PRE4]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Also here, we need to properly replace the values with whatever is appropriate
    for the network used. Remember to save the file using *Ctrl* + *x*.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，在这里，我们需要根据所使用的网络正确地替换值。记得使用*Ctrl* + *x*保存文件。
- en: If there is more than one nameserver on the local network, a new line prefixed
    with the word nameserver should be used for each additional nameserver.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果本地网络上有多个名称服务器，则应为每个额外的名称服务器使用一行，以“nameserver”开头。
- en: Tip
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In the unlikely event that there is no nameserver available on the local network,
    Google's or OpenDNS's nameservers can be used. For Google, they are `8.8.8.8`
    and `8.8.4.4`, and for OpenDNS, they are `208.67.222.222` and `208.67.220.220`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果本地网络上没有可用的名称服务器，可以使用Google或OpenDNS的名称服务器。对于Google，它们是`8.8.8.8`和`8.8.4.4`，而对于OpenDNS，它们是`208.67.222.222`和`208.67.220.220`。
- en: 'Finally, the system needs to be named on the network—the so-called `hostname`.
    Simply write a name that is unique on the network in the `hostname` file at `/mnt/etc/hostname`,
    as shown here:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，系统需要在网络上命名——即所谓的`hostname`。只需在`/mnt/etc/hostname`中的`hostname`文件里写下一个在网络上唯一的名称，如下所示：
- en: '[PRE5]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Another thing that needs to be set up is the so-called hosts file. It serves
    as the most basic way to look up a hostname, for example, when there is no DNS
    server available. The hostname needs to be in here in addition to any other hostnames
    that are required to be available from the network; for example, there is a time
    server on the network from where all the computers get their current time. Every
    system queries this server via `time.example.com`. Even if there's no Internet
    connectivity and no DNS service available, to ensure the time server is always
    able to be looked up, an entry to the hosts file can be added. With `192.168.0.15`
    being the local time server, the following command can be used as an example for
    the hostname and a guide to add additional hosts. Note that quite often, there
    is little need to add additional hosts, as DNS is nearly always used for this
    purpose. Remember to save the file using *Ctrl* + *x*.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要设置的文件是所谓的hosts文件。它是查找主机名的最基本方式，例如，当没有DNS服务器可用时。主机名需要出现在这里，此外还需要列出任何其他必须能够从网络中访问的主机名；例如，网络中有一个时间服务器，所有计算机从中获取当前时间。每个系统通过`time.example.com`查询此服务器。即使没有互联网连接和没有DNS服务，为了确保时间服务器始终能够被查找，可以在hosts文件中添加一个条目。假设`192.168.0.15`是本地时间服务器，可以使用以下命令作为主机名的示例，并作为添加其他主机的指南。请注意，通常情况下，很少需要添加其他主机，因为DNS几乎总是用于此目的。记得使用*Ctrl*
    + *x*保存文件。
- en: '[PRE6]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Making the destination medium bootable
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使目标介质可引导
- en: 'Unfortunately, as mentioned before, the SoC cannot boot from SATA drives or
    USB flash drives; it requires a helper component. In this book, a small microSD
    card is used for this purpose. As such, it will hold the bootloader, the kernel,
    and a little bit of configuration to glue it all together. In the previous chapter,
    the installation script used for the Fedora installation was done automatically.
    The kernel that will be installed onto the microSD card will, by default, continue
    loading the rootfs from the microSD card. This will obviously need to be adjusted
    so that the microSD card will boot the newly created medium. To do this, the boot
    partition needs to be mounted first, as shown in the following command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，正如之前提到的，SoC无法从SATA驱动器或USB闪存驱动器引导，它需要一个辅助组件。在本书中，使用了一张小的microSD卡来实现这个目的。因此，它将容纳引导加载程序、内核和一些配置，将所有内容粘合在一起。在上一章中，用于Fedora安装的安装脚本是自动完成的。将安装到microSD卡上的内核默认情况下将继续从microSD卡加载rootfs。显然，需要调整它，以便microSD卡能引导新创建的介质。为此，需要首先挂载引导分区，如下所示的命令所示：
- en: '[PRE7]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Using nano, edit the `uEnv.txt` file and modify the line that starts with root
    `/dev/sda1`, as shown in the following screenshot. Remember to save the file using
    *Ctrl* + *x*.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用nano编辑`uEnv.txt`文件，修改以root `/dev/sda1`开头的行，如下所示的屏幕截图所示。记得使用*Ctrl* + *x*保存文件。
- en: '![Making the destination medium bootable](img/1572OS_04_12.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![使目标介质可引导](img/1572OS_04_12.jpg)'
- en: 'With the microSD card set up to boot from the newly created medium, it is safe
    to unmount it again with the following command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当microSD卡设置为从新创建的介质引导时，可以安全地使用以下命令再次卸载它：
- en: '[PRE8]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If things go wrong and the Cubieboard refuses to boot, the microSD card can
    be used in a microSD-to-USB adapter and the `uEnv.txt` file can be opened with
    a locally installed text editor. The OS used to make this modification, however,
    will need to be able to read and write `ext4` or at least `ext2` filesystems.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现问题并且 Cubieboard 无法启动，可以将 microSD 卡插入 microSD 转 USB 适配器，并使用本地安装的文本编辑器打开 `uEnv.txt`
    文件。然而，用于进行此修改的操作系统需要能够读取和写入 `ext4` 或至少 `ext2` 文件系统。
- en: The root user
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: root 用户
- en: 'While a root user exists with any default Debian or Ubuntu installation, the
    question arises as to how to log in as the root user. The following are the two
    options:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管任何默认的 Debian 或 Ubuntu 安装都会存在 root 用户，但问题是如何作为 root 用户登录。以下是两种选择：
- en: Precreate a regular user that has administrative rights via `sudo` and don't
    allow the root user to log in
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预先创建一个具有管理权限的常规用户，通过 `sudo` 使用，并且不允许 root 用户登录
- en: Or the easier way, set up a root password for the root user and use it
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者使用更简单的方法，为 root 用户设置一个 root 密码并使用它
- en: Security-wise, the first option is safer. Both options will be briefly covered
    here. It is up to the reader to decide which option is better suited and how important
    the security aspect of it all is. This book is also not about properly securing
    a system. This is left to the reader as an exercise and is far beyond the scope
    of this book.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 从安全角度看，第一个选项更安全。这里将简要介绍这两种方法。选择哪种方式更适合以及安全性的重要性由读者自行决定。本书并不是关于如何正确地保护系统的内容。这部分留给读者作为练习，远超出本书的范围。
- en: Preparing the chroot command
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备 chroot 命令
- en: 'To set up a root password, a few steps are required, as this has to be done
    actually from within the system. The `chroot` command makes it possible to actually
    enter the system as if it was booted as such. But there is a prerequisite, that
    is, certain dynamic directories need to be populated, namely, `/dev` and `/proc`,
    as shown here:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置 root 密码，需要执行一些步骤，因为这必须在系统内部完成。`chroot` 命令使得能够像系统已启动一样进入该系统。但这有一个前提条件，那就是必须填充某些动态目录，即
    `/dev` 和 `/proc`，如下所示：
- en: '[PRE9]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here, the existing `/dev` mount is reused whereas the `proc` filesystem is
    mounted normally. Now, it is possible to use `chroot` into the filesystem, as
    shown here:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，现有的 `/dev` 挂载被重用，而 `proc` 文件系统则正常挂载。现在，可以像这样使用 `chroot` 进入文件系统：
- en: '[PRE10]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Changing the root password
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改 root 密码
- en: 'The `passwd` command will be used to start the password change for the root
    user, where a new password is entered twice. The system will not echo anything
    back to the user, as shown here:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`passwd` 命令将用于启动 root 用户的密码更改，在此过程中需要输入新密码两次。系统不会将任何信息回显给用户，如下所示：'
- en: '[PRE11]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Creating a new super user
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个新的超级用户
- en: 'To create a new user, the `useradd` command is used. There are a lot of options
    to this command and it is up to you to get familiarized with them. The options
    used in this example are, however, the ones generally used. Besides a new user,
    a new group matching the user''s username will also be automatically created;
    the `-U` flag is responsible for that. Additionally, the `-s` flag is used to
    supply an alternative login shell. This is completely optional but recommended
    as Debian defaults to the default `sh` shell, which is rather limited. The `-m`
    flag creates a directory for the user and copies some basic files. In the following
    example, the username used will be `packt`:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个新用户，可以使用 `useradd` 命令。该命令有许多选项，读者可以熟悉它们。然而，本例中使用的选项是最常见的。除了新用户外，还将自动创建一个与用户用户名匹配的新组；`-U`
    标志用于此功能。此外，`-s` 标志用于提供替代的登录 shell。这是完全可选的，但推荐使用，因为 Debian 默认使用的是默认的 `sh` shell，功能相对有限。`-m`
    标志用于为用户创建目录并复制一些基本文件。在下面的示例中，使用的用户名将是 `packt`：
- en: '[PRE12]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'To give the new user administrative powers, it will need rights to the `sudo`
    command. The user has already been made a part of the `sudo` user group via the
    `-G` parameter. But the command needs to be actually available to be usable. While
    the usage of `apt` will be discussed later in this chapter, use the following
    command to install `sudo`:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 为了赋予新用户管理员权限，需要为其提供 `sudo` 命令的使用权。用户已通过 `-G` 参数成为 `sudo` 用户组的一部分。但该命令需要实际上可用才能使用。虽然本章后面会讨论如何使用
    `apt`，可以使用以下命令来安装 `sudo`：
- en: '[PRE13]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Finally, the user will also require a password to actually log in. The following
    `passwd` command can be used for this:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，用户还需要一个密码才能实际登录。可以使用以下 `passwd` 命令来设置密码：
- en: '[PRE14]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Exiting chroot
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 退出 chroot
- en: 'The `chroot` environment can now be exited using the `exit` command, as follows:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以使用`exit`命令退出`chroot`环境，如下所示：
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Adding the serial console
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加串行控制台
- en: If the system were to be rebooted at this point, the login console would show
    up on `tty0`, which is the normal console when a monitor and keyboard are connected.
    There might, however, be a case where the connected monitor is not immediately
    compatible or where for some reason the USB keyboard or monitor cannot be used.
    The serial console has served us very well until now, and thus, in order to enable
    it on this, the Debian or Ubuntu installation is strongly recommended. Here, the
    first difference between Debian and Ubuntu, however, becomes apparent. Debian
    still uses the older `sysvinit`, whereas Ubuntu still uses `upstart`, and while
    both are slowly in the progress of migrating to `systemd`, this is not applicable
    at this moment. Ironically, with `systemd`, or at least with the one that is installed
    and currently running, the Fedora image has the serial console set up by default.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此时系统重启，登录控制台将显示在`tty0`上，这是当连接显示器和键盘时的正常控制台。然而，可能会出现某些情况下，连接的显示器不立即兼容，或者由于某种原因，USB键盘或显示器无法使用。直到现在，串行控制台对我们非常有用，因此，强烈建议在此情况下启用串行控制台，并推荐使用Debian或Ubuntu安装。在这里，Debian和Ubuntu之间的第一个区别变得明显。Debian仍然使用较旧的`sysvinit`，而Ubuntu仍然使用`upstart`，虽然两者都在逐步迁移到`systemd`，但此时这一点不适用。具有讽刺意味的是，在使用`systemd`时，或者至少在安装并当前运行的`systemd`版本下，Fedora镜像默认设置了串行控制台。
- en: Adding the serial console to Debian
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将串行控制台添加到 Debian
- en: The file responsible for spawning the various `init` services is `inittab` at
    `/etc/inittab`, and uses nano; this can be edited to add the serial console. Find
    the following section, uncomment the line starting with `#T0`, and remove the
    hashtag. Also note that by default the baud speed is `9600`, and our entire setup
    assumes a baud speed of `115200`, so make sure that this change has been performed,
    as shown in the following example. Remember to save the file using *Ctrl* + *x*.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 负责生成各种`init`服务的文件是位于`/etc/inittab`的`inittab`，可以使用nano进行编辑以添加串行控制台。找到以下部分，取消注释以`#T0`开头的行，并删除井号。还需要注意的是，默认的波特率为`9600`，而我们的整个设置假定波特率为`115200`，因此请确保已进行此更改，如以下示例所示。记得使用*Ctrl*
    + *x*保存文件。
- en: '[PRE16]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Adding the serial console to Ubuntu
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将串行控制台添加到 Ubuntu
- en: 'For `upstart`, the situation is completely different. The files in the `/etc/init/`
    directory are parsed by `upstart`. First, copy the file `tty1.conf` to `ttyS0.conf`
    as this makes editing much easier; the files are similar after all, as shown here:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`upstart`，情况完全不同。`/etc/init/`目录中的文件由`upstart`解析。首先，将文件`tty1.conf`复制到`ttyS0.conf`，这样可以更方便地进行编辑；毕竟文件相似，如下所示：
- en: '[PRE17]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: However, a few changes need to be made to this file. First, replace all occurrences
    of `tty1` with `ttyS0`. Next, in addition to `2345`, add `1` to the number of
    run levels. Also, remove the `and` `(…)` section. Finally, the `getty` line needs
    to be adjusted to listen to a serial port at `115200` bps. The following command
    shows you how the file eventually should look like. Alternatively, a new file
    can be created with the following content. Remember to save the file using *Ctrl*
    + *x*.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，需要对这个文件进行一些更改。首先，将所有出现的`tty1`替换为`ttyS0`。接着，除了`2345`外，还要在运行级别中添加`1`。此外，删除`and`
    `(…)`部分。最后，`getty`行需要调整为监听串行端口，波特率为`115200` bps。以下命令展示了文件最终应有的样子。或者，可以创建一个新的文件，内容如下。记得使用*Ctrl*
    + *x*保存文件。
- en: '[PRE18]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Rebooting the new OS
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重启新操作系统
- en: 'With all the required changes in place, it is time to reboot into the new operating
    system. First, unmount all partitions that have been mounted for this installation.
    Make sure that none of the mounted directories are in use. The `umount -l` command
    is used, where the `-l` parameter stands for lazy, which means that `umount` will
    try to unmount all subdirectories first and finish with unmounting the requested
    directory. In case of errors, manual unmounting is probably required. The `reboot`
    command will then reboot the system, as shown here:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有必要的更改完成后，应该是时候重启进入新操作系统了。首先，卸载所有已挂载的分区。确保没有挂载的目录正在使用中。可以使用`umount -l`命令，其中`-l`参数表示懒惰卸载，这意味着`umount`会首先尝试卸载所有子目录，最后卸载请求的目录。如果遇到错误，可能需要手动卸载。然后，使用`reboot`命令重新启动系统，如下所示：
- en: '[PRE19]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: After the reboot, you will be greeted with a login prompt, as shown in the following
    screenshot. Obviously, this differs slightly between Debian and Ubuntu. After
    logging in with either the created user or the root, the installation part of
    this chapter is completed, congratulations!
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 重启后，你将看到一个登录提示，如下图所示。显然，这在 Debian 和 Ubuntu 之间有所不同。使用创建的用户或 root 登录后，本章的安装部分完成，恭喜你！
- en: '![Rebooting the new OS](img/1572OS_04_13.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![重启新操作系统](img/1572OS_04_13.jpg)'
- en: Getting around the new OS via the command line
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过命令行操作新操作系统
- en: If you are new to GNU/Linux in general, using the cheatsheet as shown in [Appendix
    B](apb.html "Appendix B. Basic Linux Commands Cheatsheet"), *Basic Linux Commands
    Cheatsheet*, will be helpful, as a few common Linux commands can be explored,
    and it can be considered as a beginner's guide to GNU/Linux. This section will
    focus a little more on common tasks, keeping Debian or Ubuntu up to date and installing
    new software.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 GNU/Linux 新手，使用[附录 B](apb.html "附录 B. 基本 Linux 命令备忘单")中展示的备忘单，*基本 Linux
    命令备忘单*，将会很有帮助，因为可以探索一些常见的 Linux 命令，并且它可以作为 GNU/Linux 新手的指南。本节将更多地关注一些常见任务，比如保持
    Debian 或 Ubuntu 最新以及安装新软件。
- en: Introducing apt
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍 apt
- en: Both Debian and Ubuntu rely heavily on apt for their software needs. Apt is
    a suite of commands that allows the installation of new software packages or keeping
    the existing ones up to date. Apt works closely together with dpkg although a
    regular user will probably never invoke dpkg directly. Apt is responsible for
    downloading a requested piece of software, checking what its dependencies are,
    and telling dpkg to install them. It is the Swiss army knife of package management
    under Debian and Ubuntu. It was the command-line AppStore before AppStores even
    existed.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 和 Ubuntu 都在软件需求方面严重依赖 apt。Apt 是一组命令，用于安装新的软件包或保持现有软件包的最新。Apt 与 dpkg 紧密配合，尽管普通用户可能永远不会直接调用
    dpkg。Apt 负责下载所请求的软件，检查其依赖关系，并告诉 dpkg 安装它们。它是 Debian 和 Ubuntu 下的瑞士军刀，是在 AppStore
    存在之前的命令行应用商店。
- en: Configuring apt
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 apt
- en: Apt does not require a whole lot of configuring. What apt does need is a list
    of places where it can check and download software from. The Debian and Ubuntu
    defaults might not offer everything of interest. The file responsible for apt's
    configuration is `sources.list` at `/etc/apt/sources.list`, and if you are logged
    in as a regular user, it requires `sudo` to grant the user additional privileges
    to edit the file. In the following example, the non-free component and the security
    repository will be added to the main component. Note that the various sources
    in the `sources.list` file will vary between various suites or derivatives, such
    as Ubuntu.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Apt 并不需要很多配置。apt 需要的是一个可以检查和下载软件的地方列表。Debian 和 Ubuntu 的默认设置可能无法提供所有感兴趣的内容。负责
    apt 配置的文件是 `/etc/apt/sources.list` 中的 `sources.list`，如果你以普通用户身份登录，则需要 `sudo` 提供额外权限来编辑该文件。在下面的示例中，将非自由组件和安全库添加到主组件中。请注意，`sources.list`
    文件中的各种源会因不同的套件或衍生版（如 Ubuntu）而有所不同。
- en: '[PRE20]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: With these changes in place, apt will need to be updated, but that is handled
    in the next subsection.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些更改后，apt 需要更新，但这将在下一小节中处理。
- en: Debian has a good tutorial for more in-depth reading at [https://wiki.debian.org/SourcesList](https://wiki.debian.org/SourcesList),
    and an additional components and repositories are listed at [https://wiki.debian.org/UnofficialRepositories](https://wiki.debian.org/UnofficialRepositories).
    For Ubuntu, the source list can be found at [https://help.ubuntu.com/community/SourcesList](https://help.ubuntu.com/community/SourcesList)
    and additional repositories at [https://help.ubuntu.com/community/Repositories/Ubuntu](https://help.ubuntu.com/community/Repositories/Ubuntu).
    Further configuration beyond what is listed in this subsection is left as an exercise
    to the reader. Note that while in theory Ubuntu and Debian repositories can be
    mixed, it is not recommended and will likely cause issues.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 提供了一个很好的教程，供深入阅读，网址是 [https://wiki.debian.org/SourcesList](https://wiki.debian.org/SourcesList)，附加的组件和库可以在
    [https://wiki.debian.org/UnofficialRepositories](https://wiki.debian.org/UnofficialRepositories)
    上找到。对于 Ubuntu，可以在 [https://help.ubuntu.com/community/SourcesList](https://help.ubuntu.com/community/SourcesList)
    查找源列表，附加的库则在 [https://help.ubuntu.com/community/Repositories/Ubuntu](https://help.ubuntu.com/community/Repositories/Ubuntu)
    上列出。除了本小节所列的配置外，其他配置留给读者自己完成。请注意，虽然理论上 Ubuntu 和 Debian 的仓库可以混用，但不推荐这样做，这可能会导致问题。
- en: Keeping the OS up to date
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保持操作系统最新
- en: Regularly checking and installing updates can be critical to security. Also,
    new versions of existing software packages potentially yielding new features or
    fixing bugs are also obtained in this way. The steps are identical for Ubuntu
    and Debian.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 定期检查和安装更新对于安全性至关重要。 此外，通过这种方式还可以获得现有软件包的新版本，这可能带来新功能或修复错误。 对于Ubuntu和Debian，步骤是相同的。
- en: 'To download and update apt with a new list of the software, the first apt command
    `apt-get` is introduced. The `apt-get` command without parameters, however, will
    not do a lot more than print a help screen. As the intended action is to update
    the list of applications that will be the `update` parameter passed. Again, if
    run as a regular user, it should be prefixed with `sudo`. Also, if the network
    has not been configured yet and the intention is to let the graphical user interface
    configure the network, remember to run `dhclient eth0` to obtain a temporary network
    configuration. The following command in the screenshot runs an update of apt:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用新的软件列表下载并更新apt，首先引入了第一个apt命令`apt-get`。 然而，没有参数的`apt-get`命令将不会做更多事情，只会打印一个帮助屏幕。
    由于预期的操作是更新应用程序列表，所以将传递`update`参数。 再次强调，如果以普通用户身份运行，则应以`sudo`为前缀。 此外，如果尚未配置网络并且打算让图形用户界面配置网络，则请记住运行`dhclient
    eth0`以获取临时网络配置。 屏幕截图中的以下命令运行了apt的更新：
- en: '![Keeping the OS up to date](img/1572OS_04_14.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![保持操作系统更新](img/1572OS_04_14.jpg)'
- en: 'If sections and components were not added in the previous subsection, the list
    would obviously be shorter. At this point, the apt has an up-to-date list of the
    available software. To upgrade all installed packages, most importantly because
    of security updates, the `upgrade` parameter to `apt-get` is used, as shown in
    the following screenshot:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在前一小节中未添加部分和组件，则列表显然会更短。 此时，apt已经有了可用软件的最新列表。 要升级所有已安装的软件包，尤其是因安全更新而需执行`apt-get`的`upgrade`参数，如下面的屏幕截图所示：
- en: '![Keeping the OS up to date](img/1572OS_04_15.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![保持操作系统更新](img/1572OS_04_15.jpg)'
- en: In the preceding example, there was only one update available, which was an
    update to `libgnutls`. This list can vary depending on the amount of updates,
    naturally.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，只有一个可用的更新，即对`libgnutls`的更新。 这个列表可能会因更新数量的不同而有所变化。
- en: Tip
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The `apt` file at `/etc/cron.daily/apt` is responsible for the daily update
    of apt and installing security critical packages, thus running the `apt-get` update
    is not always required.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 位于`/etc/cron.daily/apt`的`apt`文件负责每天更新apt并安装安全关键软件包，因此不总是需要运行`apt-get` update。
- en: Installing additional software
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装额外的软件
- en: The most exciting thing about any OS probably is the software. However, the
    default created Debian or Ubuntu installation lacks most of the software. It is,
    after all, just the bare minimum.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 任何操作系统最令人兴奋的可能是软件。 然而，默认创建的Debian或Ubuntu安装缺乏大多数软件。 毕竟，这只是最基本的。
- en: Finding packages
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找软件包
- en: While installing packages, a problem can occur when a name is roughly remembered
    but not to exactly. In that case, there is an apt tool called `apt-cache`. Using
    the `search` parameter, the internal cached apt database can be searched for available
    packages. Especially in combination with the `grep` command, these two can be
    helpful to find what is needed, as shown in the following screenshot. The `grep
    –` command is explained in [Appendix B](apb.html "Appendix B. Basic Linux Commands
    Cheatsheet"), *Basic Linux Commands Cheatsheet*.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装软件包时，当名称粗略记住但不完全记得时可能会出现问题。 在这种情况下，有一个名为`apt-cache`的合适工具。 使用`search`参数，可以搜索内部缓存的apt数据库以查找可用的软件包。
    特别是与`grep`命令结合使用时，这两个命令可以帮助找到所需的内容，如下面的屏幕截图所示。 `grep –`命令在《附录 B》[*Basic Linux
    Commands Cheatsheet*](apb.html "附录 B. 基本Linux命令速查表")中有解释。
- en: '![Finding packages](img/1572OS_04_16.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![查找软件包](img/1572OS_04_16.jpg)'
- en: Additionally, you might want to search for a filename of an application. There
    is an apt tool for that as well. The `apt-file` tool using the `search` parameter
    will allow you to search for files inside packages. Unfortunately, at the time
    of writing this book, the `apt-file` tool is not yet included in the current stable
    release of Debian or Ubuntu, but should be hopefully added soon.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可能还想搜索应用程序的文件名。 也有一个适用的apt工具。 使用`search`参数的`apt-file`工具将允许您在软件包内搜索文件。 不幸的是，在撰写本书时，`apt-file`工具尚未包含在当前稳定版本的Debian或Ubuntu中，但希望很快会添加。
- en: Installing the software package using apt-get
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用apt-get安装软件包
- en: 'The most basic way to install a software package is also via `apt-get`, the
    parameter not surprisingly being install. Nano has been used often as an example
    editor. This is because it is very easy to use and nearly always preinstalled
    as it is so small. **Vi** is another small editor that is nearly always preinstalled
    but is far from easy to use. Vi has a bigger brother called Vi improved or vim.
    Let us install vim via `apt-get`, as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 安装软件包的最基本方法也是通过 `apt-get`，参数当然是 install。Nano 经常被用作示例编辑器。这是因为它非常易于使用，并且通常预安装，因为它体积很小。**Vi**
    是另一个小型编辑器，几乎总是预安装，但使用起来远不如 Nano 简单。Vi 有一个更强大的版本，叫做 Vi 改进版（vim）。让我们通过 `apt-get`
    安装 vim，如下所示：
- en: '![Installing the software package using apt-get](img/1572OS_04_17.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![使用 apt-get 安装软件包](img/1572OS_04_17.jpg)'
- en: After downloading and installing a few packages, vim is now installed.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并安装了一些软件包后，vim 现在已安装。
- en: Installing the software package using tasksel
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 tasksel 安装软件包
- en: More than often, a collection of packages is required to have the system perform
    certain functions. The `tasksel` command can be used to install a collection of
    packages to perform a certain task. Running `tasksel` with elevated privileges
    yields the menu, as shown in the following screenshot. Ubuntu does not have `tasksel`
    preinstalled and requires it to be installed via `apt-get`, as shown in the previous
    example for vim.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 更常见的是，需要一组软件包才能使系统执行某些功能。`tasksel` 命令可以用来安装一组执行特定任务的软件包。以提升权限运行 `tasksel` 将显示菜单，如下图所示。Ubuntu
    没有预安装 `tasksel`，需要通过 `apt-get` 安装，就像前面安装 vim 的例子一样。
- en: '![Installing the software package using tasksel](img/1572OS_04_18.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![使用 tasksel 安装软件包](img/1572OS_04_18.jpg)'
- en: Installing the Debian desktop environment task will install a graphical desktop
    environment based on **GNOME** and some additional packages marked as standard
    by Debian, such as LibreOffice.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Debian 桌面环境任务将安装基于**GNOME**的图形桌面环境以及一些由 Debian 标记为标准的附加包，如 LibreOffice。
- en: The downloading and installation might take a while depending on the target
    medium and Internet connection speed. Installation on an SSD with a very fast
    Internet connection can take about thirty minutes.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 下载和安装过程可能需要一些时间，这取决于目标媒介和网络连接速度。在配备高速互联网连接的 SSD 上安装大约需要三十分钟。
- en: Under Ubuntu, `tasksel` will look slightly different, but even here there is
    an Ubuntu desktop option, as shown in the following screenshot. This will take
    about the same time thirty minutes or more.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 下，`tasksel` 会略有不同，但这里也有一个 Ubuntu 桌面选项，如下图所示。这将大约需要相同的时间，三十分钟或更长。
- en: '![Installing the software package using tasksel](img/1572OS_04_19.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![使用 tasksel 安装软件包](img/1572OS_04_19.jpg)'
- en: Installing packages via metapackages
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过元包安装软件包
- en: The tasks available via `tasksel` appear to be rather limited. Instead, it is
    probably easier to use metapackages. Metapackages are, in effect, not that much
    different from tasks; in fact, they very well might be the same in the background.
    A metapackage is not really a package that installs anything, rather it is a list
    of packages or a collection of packages that get installed from it. For example,
    `xfce4` is a metapackage for Debian, which will install all the packages required
    for the `xfce4` desktop environment and will also install software that the package
    maintainers thought would make sense to have for a full-fledged desktop environment,
    such as a file manager.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 `tasksel` 可用的任务似乎相当有限。相反，使用元包可能更为简便。元包实际上与任务没有太大区别；事实上，它们可能在后台是一样的。元包并不是一个真正安装任何东西的包，而是一个软件包列表或一组通过它安装的软件包。例如，`xfce4`
    是 Debian 的一个元包，它将安装所有 `xfce4` 桌面环境所需的软件包，并且还会安装包维护者认为对完整桌面环境有用的软件，如文件管理器。
- en: Note
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For Ubuntu, this metapackage is just called xfce, though the xubuntu-desktop
    metapackage should be more interesting here.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Ubuntu，这个元包被称为 xfce，不过 xubuntu-desktop 元包在这里更为有趣。
- en: 'Another interesting metapackage to match the `xfce4` metapackage is `xfce4-goodies`.
    In fact, the following command will show you how to install multiple packages
    in one go. Running the command will result in a huge list of packages to be installed,
    but will yield a usable `xfcef4` desktop, as if it were installed from a CD, for
    example. One could even argue that an installation CD would do just that, as shown
    here:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个与 `xfce4` 元包相匹配的有趣元包是 `xfce4-goodies`。实际上，以下命令将展示如何一次安装多个软件包。运行该命令会产生一个庞大的待安装软件包列表，但最终会得到一个可用的
    `xfce4` 桌面，就像从 CD 安装的一样。例如，有人甚至可以争辩说，安装 CD 恰恰能做到这一点，如下所示：
- en: '[PRE21]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: After waiting about 30 minutes for the xfce4 desktop to get installed, xfce4
    can be started using the `startx` command. At this point, however, the monitor
    and keyboard will have to be used. Xfce4 cannot be used or started over the serial
    console. This yields an almost usable desktop environment. Almost means here that
    certain things with permissions are missing. A user is not allowed to shut down
    the machine by default, for example.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 等待大约 30 分钟，xfce4 桌面安装完成后，可以使用 `startx` 命令启动 xfce4。然而，这时必须使用显示器和键盘。Xfce4 不能通过串口控制台启动或使用。这时的桌面环境几乎可以使用。“几乎”意味着某些权限设置缺失。例如，默认情况下用户无法关闭机器。
- en: There are several ways to allow these things to work properly, and one is the
    use of a login manager; xfce4, however, does not come with one, but that is okay.
    There are plenty of login managers to choose from. GNOME comes with `gdm`, but
    going with a lightweight login manager that matches Xfce4 as a lightweight desktop
    manager, LightDM should be a good candidate. Installing the `lightdm` package
    should require no extra instructions. Rebooting the Cubieboard now will yield
    an active login window, which upon login, wraps up this chapter.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以让这些功能正常工作，其中之一是使用登录管理器；然而，xfce4 并没有自带登录管理器，但这没关系。市面上有很多可以选择的登录管理器。GNOME
    自带 `gdm`，但考虑到 Xfce4 是一个轻量级的桌面管理器，选择一个轻量级的登录管理器，比如 LightDM，应该是一个不错的选择。安装 `lightdm`
    包不需要额外的指令。现在重启 Cubieboard 后，您会看到一个活动的登录窗口，登录后，便完成了本章内容。
- en: Summary
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: Having worked through this chapter, admittedly a big one, the result should
    technically be the same as the previous chapter; a working desktop environment
    based on either Debian or Ubuntu. The installation of additional software via
    the command line is now a breeze, and keeping the system up to date is not an
    issue at all.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了这一章，虽然这算是一个大章节，但技术上，结果应该和前一章相同；无论是基于 Debian 还是 Ubuntu 的工作桌面环境。通过命令行安装额外的软件现在已经变得非常简单，而且系统的更新也不成问题。
- en: The next chapter will take this installation and turn it into a server for various
    tasks, optionally retaining the desktop functionality.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将以此安装为基础，将其转变为一个用于各种任务的服务器，您可以选择保留桌面功能。
