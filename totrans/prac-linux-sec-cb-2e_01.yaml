- en: Linux Security Problem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Linux machine is only as secure as the administrator configures it to be.
    Once we have installed the Linux distribution of our choice and have removed all
    the unnecessary packages post installation, we can start working on the security
    aspect of the system by fine-tuning the installed software and services.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will discuss the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring server security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security policy—server security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining security controls
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing backup plans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following recipes will be covered in the chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Checking the integrity of installation medium using checksum
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using LUKS disk encryption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Making use of `sudoers`—configuring `sudo` access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanning hosts with Nmap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaining root on a vulnerable Linux system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing backup plans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A security policy is a definition that outlines the rules and practices to be
    followed for computer network security in an organization. How the organization
    should manage, protect, and distribute sensitive data is defined in the security
    policy.
  prefs: []
  type: TYPE_NORMAL
- en: Developing a security policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When creating a security policy you should keep in mind that it should be simple
    and easy for all the users to follow. The objective of the policy should be to
    protect the data while keeping the privacy of the users.
  prefs: []
  type: TYPE_NORMAL
- en: 'It should be developed around these points:'
  prefs: []
  type: TYPE_NORMAL
- en: Accessibility to the system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software installation rights on the system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data permission
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recovery from failure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When developing a security policy, a user should be using only those services
    for which permission has been granted. Anything that is not permitted should be
    restricted in the policy. Let's look at some common Linux security myths.
  prefs: []
  type: TYPE_NORMAL
- en: Linux security myths
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You might feel nervous while planning to use Linux-based systems in your business.
    This may be due to some false rumors about security in Linux that the systems
    might have fallen prey to any of the myths out there.
  prefs: []
  type: TYPE_NORMAL
- en: Myth – as Linux is open source, it is considered to be insecure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux, being a free and open source operating system, has its own advantages.
    It includes a large base of developers who constantly audit the source code for
    any possible security risks; the Linux community can provide fast support and
    fixes for any potential security problem. Patches are released quickly for testing
    by the community so they don't have to deal with the clumsy administration that
    other Unix vendors may have to deal with.
  prefs: []
  type: TYPE_NORMAL
- en: Due to the massive worldwide user base, Linux's security gets tested across
    huge range of computing environments, thus making it one of the most stable and
    secure operating systems. As Linux is open to scrutiny by developers across the
    world, it helps Linux derive superior security in the ways the privileges are
    assigned. The way in which these privileges are assigned in a Linux system is
    also a security feature derived from the open source code of the system.
  prefs: []
  type: TYPE_NORMAL
- en: Myth – Linux is an experts-only system, and only they know how to configure
    their systems in terms of security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Assuming that Linux is for experts who know how to deal with viruses is a misconception.
    Linux has evolved to become one of the friendliest OSes that can be used by anyone,
    whether novice or experts.
  prefs: []
  type: TYPE_NORMAL
- en: Linux is secure because of its strong architecture. Regular users on a Linux
    system possess low-privileged accounts rather than having root privileges.
  prefs: []
  type: TYPE_NORMAL
- en: Myth – Linux is virus free
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Due to its strong architecture, even if a Linux system gets compromised, viruses
    would not have root access and thus will not be able to cause any major damage
    to the system.
  prefs: []
  type: TYPE_NORMAL
- en: Even on Linux servers, several levels of security are implemented and they are
    updated more often, again helping to secure the servers from viruses.
  prefs: []
  type: TYPE_NORMAL
- en: There are still a number of viruses that target Linux, thus making it not completely
    virus free. But most of the viruses that exist for Linux are non-destructive in
    nature.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring server security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once a Linux server is created, the immediate next step is to implement security
    procedures to make sure that any kind of threat should not cause the system to
    be compromised. A major reason for malicious attacks on Linux servers have been
    poorly implemented security or existing vulnerabilities. When configuring a server,
    the security policies need to be implemented properly to create a secure environment
    that will help prevent your business from getting hacked.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let us have a look for each and every configuration.
  prefs: []
  type: TYPE_NORMAL
- en: User management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Follow these steps to configure server security:'
  prefs: []
  type: TYPE_NORMAL
- en: When a Linux server is created, the first user created by default is always
    the root user. This root user should be used for initial configuration only.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once initial configuration is done, this root user should be disabled via SSH.
    This will make it difficult for any hacker to gain access to your Linux machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further, a secondary user should be created to log in and administer the machine.
    This user can be allowed sudo permissions if administrative actions need to be
    performed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Password policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Follow these steps to configure server security:'
  prefs: []
  type: TYPE_NORMAL
- en: When creating user accounts, ensure the use of strong passwords. If allowed,
    keep the length of the password to between 12 to 14 characters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If possible, generate passwords randomly, and include lowercase and uppercase
    letters, numbers, and symbols.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Avoid using password combinations that could be easily guessed, such as dictionary
    words, keyboard patterns, usernames, ID numbers, and so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Avoid using the same password twice.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuration policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Follow these steps to configure server security:'
  prefs: []
  type: TYPE_NORMAL
- en: The operating system on the server should be configured in accordance with the
    guidelines approved for InfoSec.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Any service or application not being used should be disabled, wherever possible.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Every access to the services and applications on the server should be monitored
    and logged. It should also be protected through access-control methods. An example
    of this will be covered in [Chapter 3](dd9ad20f-3479-47df-8819-358a6d9354ca.xhtml),
    *Local Filesystem Security*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The system should be kept updated and any recent security patches, if available,
    should be installed as soon as possible
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Avoid using the root account as much as possible. It is better to use the security
    principles that require least access to perform a function.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Any kind of privileged access must be performed over a secure channel connection
    (SSH) wherever possible.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Access to the server should be in a controlled environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Monitoring policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'All security-related actions on server systems must be logged and audit reports
    should be saved as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For a period of one month, all security-related logs should be kept online
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For a period of one month, the daily backups, as well as the weekly backups
    should be retained
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For a minimum of two years, the monthly full backups should be retained
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any event related to security being compromised should be reported to the InfoSec
    team. They shall then review the logs and report the incident to the IT department.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Some examples of security-related events are as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Port-scanning-related attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to privileged accounts without authorization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unusual occurrences due to a particular application on the host
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Following the policies as given here helps in the base configuration of the
    internal server that is owned or operated by the organization. Implementing the
    policy effectively will minimize unauthorized access to any sensitive and proprietary
    information.
  prefs: []
  type: TYPE_NORMAL
- en: Security policy – server security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A major reason for malicious attacks on Linux servers has been poorly implemented
    security or existing vulnerabilities. When configuring a server, the security
    policies need to be implemented properly and ownership needs to be taken for proper
    customization of the server.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's have a look and various security policies
  prefs: []
  type: TYPE_NORMAL
- en: General policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s discuss the various security policies:'
  prefs: []
  type: TYPE_NORMAL
- en: The administration of all the internal servers in an organization is the responsibility
    of a dedicated team that should also keep watch for any kind of compliance issues.
    If a compliance issues occurs, the team should immediately review and implement
    an updated security policy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When configuring internal servers, they must be registered in such a way that
    the identification of the servers can be done on the basis of the following information:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Location of the server
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Operating system version and hardware configuration
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Services and applications running on the server
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Any kind of information in the organization's management system must always
    be kept up to date.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuration policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s discuss the various security policies:'
  prefs: []
  type: TYPE_NORMAL
- en: The operating system on the server should be configured in accordance with the
    guidelines approved for InfoSec.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Any service or application not being used should be disabled, wherever possible.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Every access to the services and applications on the server should be monitored
    and logged. It should also be protected through access-control methods. An example
    of this will be covered in [Chapter 3](dd9ad20f-3479-47df-8819-358a6d9354ca.xhtml),
    *Local FileSystem Security.*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The system should be kept updated and any recent security patches, if available,
    should be installed as soon as possible
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Avoid using the root account as much as possible. It is better to use security
    principles that require least access to perform a function.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Any kind of privileged access must be performed over a secure channel connection
    (SSH), wherever possible.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Access to the server should be in a controlled environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Monitoring policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s discuss the various security policies:'
  prefs: []
  type: TYPE_NORMAL
- en: 'All security-related actions on server systems must be logged and audit reports
    should be saved as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For a period of one month, all the security-related logs should be kept online
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For a period of one month, the daily backups, as well as the weekly backups,
    should be retained
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For a minimum of two years, the monthly full backups should be retained
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Any event related to security being compromised should be reported to the InfoSec
    team. They shall then review the logs and report the incident to the IT department.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Some examples of security related events are as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Port-scanning-related attacks
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Access to privileged accounts without authorization
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Unusual occurrences due to a particular application on the host
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Following the policies as given here helps the base configuration of the internal
    server that is owned or operated by the organization. Implementing the policy
    effectively will minimize unauthorized access to any sensitive and proprietary
    information.
  prefs: []
  type: TYPE_NORMAL
- en: Defining security controls
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Securing a Linux server starts with the process of hardening the system, and
    to do this it's important to define a list of security controls. A security controls
    list (or security checklist) confirms that proper security controls have been
    implemented.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's have a look at various security control checklists.
  prefs: []
  type: TYPE_NORMAL
- en: Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we will look into each security control checklist:'
  prefs: []
  type: TYPE_NORMAL
- en: Installation media such as CD-ROM/DVD/ISO should be checked by using checksum
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A minimal base installation should be done when creating the server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is good practice to create separate filesystems for `/home`, and `/tmp`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is good practice to install minimum software on the server to minimize the
    chances of vulnerability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Always keep the Linux kernel and software up to date
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boot and disk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we will look into each security control checklist:'
  prefs: []
  type: TYPE_NORMAL
- en: Encrypt partitions using disk encryption methods such as LUKS.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limit access to BIOS by configuring a BIOS password.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limit bootable devices and allow only devices such as disk to be booted.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configure a password to access the single user mode boot loader.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network and services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we will look into each security control checklist:'
  prefs: []
  type: TYPE_NORMAL
- en: Determine the services running by checking the open network ports.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use a firewall such as `iptables/nftables` to limit access to the services as
    per need.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encrypt all data transmitted over the network.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid using services such as FTP, Telnet, and Rlogin/Rsh.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any unwanted services should be disabled.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A centralized authentication service should be used.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intrusion detection and Denial of Service (DoS)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we will look into each security control checklist:'
  prefs: []
  type: TYPE_NORMAL
- en: File integrity tools such as AIDE, Samhain, and AFICK should be installed and
    configured for monitoring important files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use a malware scanner such as CalmAV to protect against malicious scripts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configure system logging to a remote machine for the purpose of detection, forensics,
    and archiving.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deter brute-force attacks by using anti brute-force tools for authentication
    attempts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Auditing and availability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we will look into each security control checklist:'
  prefs: []
  type: TYPE_NORMAL
- en: Read through logs to monitor for suspicious activity.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configure auditd configuration to perform system accounting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure backup is working, and also check restores.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Implementing these security controls minimizes the security risk to your Linux
    server. This helps protect your data from the hands of hackers.
  prefs: []
  type: TYPE_NORMAL
- en: Checking the integrity of installation medium by using checksum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whenever you download an image file of any Linux distribution, it should always
    be checked for correctness and safety. This can be done by generating an MD5 hash
    after downloading the image file and then comparing the generated hash with the
    hash generated by the organization supplying the image file.
  prefs: []
  type: TYPE_NORMAL
- en: This helps in checking the integrity of the downloaded file. If the original
    file was tampered with it can be detected using the MD5 hash comparison. The larger
    the file size, the higher the possibility of changes in the file. It is always
    recommended you do an MD5 hash comparison for files such as the operating system
    installation CD.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`md5sum` is normally installed in most Linux distributions, so installation
    is not required.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the Linux Terminal and then change the directory to the folder containing
    the downloaded ISO file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Because Linux is case sensitive, type the correct spelling for the folder name.
    Downloads are not the same as downloads in Linux.
  prefs: []
  type: TYPE_NORMAL
- en: 'After changing to the download directory, type the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'md5sum will then print the calculated hash in a single line as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Now we can compare the hash calculated by this command with the hash on the
    UbuntuHashes page ([https://help.ubuntu.com/community/UbuntuHashes](https://help.ubuntu.com/community/UbuntuHashes)).
    After opening the UbuntuHashes page, we just need to copy this previously calculated
    hash, in the Find box of the browser (by pressing *Ctrl* + *F*).
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If the calculated hash and the hash on the UbuntuHashes page match, then the
    downloaded file is not damaged. In case the hashes don't match, then there is
    a possibility that the file might be tampered or is damaged. Try downloading the
    file again. If the issue still persists, it is recommended you report the issue
    to the administrator of the server.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here’s something extra in case you want to go the extra mile: the GUI checksum
    calculator available for Ubuntu.'
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, it’s really inconvenient to use the Terminal for doing checksums.
    You need to know the right folder of the downloaded file and also the exact filename.
    This makes it difficult to remember the exact commands.
  prefs: []
  type: TYPE_NORMAL
- en: As a solution, there is the very small and simple software – **GtkHash**.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the tool here: [http://gtkhash.sourceforge.net/](http://gtkhash.sourceforge.net/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Or you can install it by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Using LUKS disk encryption
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In enterprises, small business, and government offices, the users may have to
    secure their systems in order to protect their private data, which includes customers
    details, important files, contact details, and so on. To help with this, Linux
    provides a good number of cryptographic techniques that can be used to protect
    data on physical devices such as hard disk or removable media. One such cryptographic
    technique is using **Linux Unified Key Setup** (**LUKS**)-on-disk-format. This
    technique allows the encryption of Linux partitions.
  prefs: []
  type: TYPE_NORMAL
- en: This is what LUKS does**:**
  prefs: []
  type: TYPE_NORMAL
- en: The entire block device can be encrypted using LUKS; it's well suited for protecting
    the data on removable storage media or the laptop disk drives
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LUKS uses the existing device mapper kernel subsystem
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It also provides passphrase strengthening, which helps protect against dictionary
    attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the following process to work, it is necessary that a separate partition
    is also created while installing Linux, which will be encrypted using LUKS.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring LUKS using the steps given will remove all data on the partition
    being encrypted. So, before starting the process of using LUKS, make sure you
    take a backup of the data to some external source.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To begin with manually encrypting directories, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install `cryptsetup` as shown here, which is a utility used for setting up
    encrypted filesystems:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b167735b-b91c-4f98-a760-a9c7b363ed2f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Encrypt your `/dev/sdb1` partition, which is a removable device. To encrypt
    the partition, type the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3439b7f1-428c-4d08-adb6-018e8b74c545.png)'
  prefs: []
  type: TYPE_IMG
- en: This command initializes the partition and also sets a passphrase. Make sure
    you note the passphrase for further use.
  prefs: []
  type: TYPE_NORMAL
- en: Now open the newly created encrypted device by creating a mapping:![](img/5bee70ce-7cbf-4f52-b45c-8e19eca573d0.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Check to confirm that the device is present:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c5331396-f706-4d28-be1b-488f94acdb5a.png)'
  prefs: []
  type: TYPE_IMG
- en: Check the status of the mapping using the following command:![](img/b5ef027e-03c5-4fd3-af32-500fc11f1606.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Dump LUKS headers using the following command:![](img/4b7ead46-bd0c-4a7a-9e96-2d7f076f8459.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, write zeros to `/dev/mapper/backup2` encrypted device:![](img/9be3c11f-79b0-4bde-b9ff-314ce6f5b67a.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As the `dd` command may take hours to complete, we use the `pv` command to monitor
    the progress.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now create a filesystem:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6a252565-418a-4f73-9840-20bca3a3c53e.png)'
  prefs: []
  type: TYPE_IMG
- en: Then mount the new filesystem and confirm the filesystem is visible:![](img/18c573e9-648b-4096-a4c8-d5bfc735a7bb.png)![](img/32a3072d-be95-4186-98f4-df53e0539ce3.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Congratulations! You have successfully created an encrypted partition. Now,
    you can keep all your data safe, even when the computer is off.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following commands to unmount and secure the data on the partition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'To remount the encrypted partition, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/10b38d18-558f-45fc-9ab3-eb70f0f1dd66.png)'
  prefs: []
  type: TYPE_IMG
- en: Make use of sudoers – configuring sudo access
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sudoer is the functionality of the Linux system that can be used by an administrator
    to provide administrative access to a trusted regular user, without actually sharing
    the root user's password. The administrator simply needs to add the regular user
    in the sudoers list.
  prefs: []
  type: TYPE_NORMAL
- en: Once a user has been added to the sudoers list, they can execute any administrative
    command by preceding it with sudo. Then the user would be asked to enter their
    own password. After this, the administrative command would be executed the same
    way as by the root user.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As the file for the configuration is pre-defined and the commands used are inbuilt,
    nothing extra is needed to be configured before starting the steps.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You will first create a normal account and then give it sudo access. Once done,
    you will be able to use the `sudo` command from the new account and then execute
    the administrative commands. Follow the steps given to configure sudo access.
    First, use the root account to log in to the system then create a user account
    using the `useradd` command, as shown. Replace USERNAME in the command with any
    name of your choice:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6abf9ec2-b568-468b-bf57-ad9ccf6536f5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now, using the `passwd` command set a password for the new user account, as
    shown:![](img/a918c81c-b939-4008-ac05-75a13ae8b01b.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now edit the `/etc/sudoers` file by running the `visudo` as shown. The policies
    applied when using the `sudo` command, are defined by the `/etc/sudoers` file:![](img/d0551b98-bb15-4f75-9b5d-4ca86eeda37c.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the file is open in the editor, search for the following lines which allow
    sudo access to the users in the test group:![](img/aaf80c52-3f18-42d5-b8e9-486b96fe231b.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can enable the given configuration by deleting the comment character (`#`)
    at the beginning of the second line. Once the changes are done, save the file
    and exit from the editor. Now using the `usermod` command, add the previously
    created user to the test group:![](img/996f892a-30c6-4e92-9905-948079b84720.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now you need to check whether the configuration created now allows the new user
    account to run commands using `sudo`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To switch to the newly created user account, use the `su` option:![](img/ebbb55fa-77af-4c4c-910d-c294150c29e3.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now use the `groups` command to confirm the presence of the user account in
    the test group:![](img/305ed1ed-cbc3-4b28-94cb-572d20f86aa4.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Finally, run the `whoami` command with `sudo` from the new account. As you
    have executed a command using `sudo` for the first time using this new user account,
    the default banner message will be displayed for the `sudo` command. The screen
    will also ask for the user account password to be entered:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/718f4426-3745-48de-83db-b0750f256cbf.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The last line of the output shown is the username returned by the `whoami` command.
    If `sudo` is configured correctly this value will be root.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You have successfully configured a user with sudo access. You can now log in
    to this user account and use `sudo` to run commands the same way as you would
    from the root user.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you create a new account, it does not have the permission to run administrator
    commands. However, after editing the `/etc/sudoers` file, and making appropriate
    entry to grant sudo access to the new user account, you can start using the new
    user account to run all administrator commands.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here are some extra measures that you can take to ensure total security.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability assessment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A vulnerability assessment is the process of auditing your network and system
    security, through which you can come to know about the confidentiality, integrity,
    and availability of your network. The first phase in vulnerability assessment
    is reconnaissance, and this further leads to the phase of system readiness, in
    which we mainly check for all known vulnerabilities in the target. Next follows
    the phase of reporting in which we group all the vulnerabilities found into categories
    of low, medium, and high risk.
  prefs: []
  type: TYPE_NORMAL
- en: Scanning hosts with Nmap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nmap, which can be used for scanning a network, is one of the most popular tools
    included in Linux. It has been in existence for many years, and is currently one
    of the preferred tools for gathering information about a network. Nmap can be
    used by administrators on their networks to find any open ports and the host systems.
    When performing vulnerability assessments, Nmap is surely a tool not to be missed.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Most Linux versions come with Nmap installed. The first step is to check whether
    you already have it by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'If Nmap exists, you should see output similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ace504d0-5e56-4838-9d43-486b78ee3b1f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If Nmap is not already installed, you can download and install it from this
    link: [https://nmap.org/download.html.](https://nmap.org/download.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following command will quickly install Nmap on your system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Follow these steps for scanning hosts with Nmap:'
  prefs: []
  type: TYPE_NORMAL
- en: The most common use of Nmap is to find all the hosts online within a given IP
    range. The default command used takes some time to scan the complete network,
    depending on the number of hosts in the network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The following screenshot shows an example:![](img/6d0f40a6-9684-4bf9-8dba-0ab67c72254c.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To perform a SYN scan on a particular IP from a subnet, use the following command:![](img/bfcfa8dc-27e9-4c7e-857a-219e59cf9215.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If SYN scan does not work properly, you can also use Stealth scan:![](img/e98d5af2-a766-4b63-8bf4-6277d0a4591c.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To detect the version number of the services running on the remote host, you
    can perform Service Version Detection scan as follows:![](img/2edf882c-0432-4645-9d68-7aee019184c0.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you want to detect the operating system running on the remote host, run
    the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/538f3a50-00ef-404a-a8e2-4de873a3e642.png)'
  prefs: []
  type: TYPE_IMG
- en: The output here has been truncated:![](img/f6f73b30-6cc2-47b8-81dd-e857bc631921.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you wish to scan only for a particular port, such as `80`, run the command:![](img/9fdc5fa0-42c5-4377-81bf-e4f892b59866.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nmap checks for the services that are listening by testing the most common network
    communication ports. This information helps the network administrator to close
    all unwanted or unused ports and services. The previous examples show how to use
    port scanning and Nmap as a powerful tool to study the network around us.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nmap also has scripting features that we can use to write custom scripts. These
    scripts can be used with Nmap to automate and extend the scanning capabilities
    of Nmap.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find more information about using Nmap at its official homepage: [https://nmap.org/](https://nmap.org/).
    [](https://nmap.org/)'
  prefs: []
  type: TYPE_NORMAL
- en: Gaining root on a vulnerable Linux system
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When trying to learn how to scan and exploit a Linux machine, one major problem
    we encounter is where to try. For this purpose, the Metasploit team has developed
    and released a virtual machine called *Metasploitable*. This machine has been
    made vulnerable purposefully, having many services running unpatched. Due to this,
    it has become a great platform for practicing or developing penetration testing
    skills. In this section, we will learn how to scan a Linux system and then, using
    the scanning result, how to find a service that is vulnerable. Using that vulnerable
    service, we shall gain root access to the system.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Kali Linux and the Metasploitable VMware system will be used in this section.
    The image file of Metasploitable can be downloaded from these links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://sourceforge.net/projects/metasploitable/files/Metasploitable2/](http://sourceforge.net/projects/metasploitable/files/Metasploitable2/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://images.offensive-security.com/virtual-images/kali-linux-2018.2-vm-i386.zip](https://images.offensive-security.com/virtual-images/kali-linux-2018.2-vm-i386.zip)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Metasploit Framework is an open source tool used by security professionals
    globally to perform penetration tests by executing exploit code on target systems
    from within the framework. It comes pre-installed with Kali Linux (the preferred
    choice of distribution for security professionals).
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to gain root access to a vulnerable Linux system:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First open the Metasploit console on the Kali system by running the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/2dd9b486-0260-495a-93cd-b1df58aef53d.png)'
  prefs: []
  type: TYPE_IMG
- en: At the bottom of the screen, you should get the Metasploit framework prompt
    denoted by `msf>`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, we need to scan the target, which is `192.168.0.102` in this example,
    using Nmap:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following screenshot shows the output of the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c45f87d1-d84e-4f21-8fcc-6e9cce8ae326.png)'
  prefs: []
  type: TYPE_IMG
- en: In the previous command, you can see there are many services running on different
    ports. Among them you can see FTP is also running on port `21`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will focus on the FTP service for now. From the output shown, you can see
    that the FTP service is provided by the vsftpd application version 2.3.4.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now lets try to find an exploit for `vsftpd` within the Metasploit framework
    by simply executing the command `search` `vsftpd.` Here is the output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/da12ffaa-43b9-4a7a-9dbb-08dce8378529.png)'
  prefs: []
  type: TYPE_IMG
- en: The search results are showing a module, VSFTPD Backdoor Command Execution,
    with an excellent rating, which means that this exploit will work perfectly fine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now run the following commands to use the exploit and check its options:![](img/00538b6b-cc3d-4fb6-bf02-5f2b8cd9e63e.png)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As you can see from the screenshot, you need to set the value of `RHOST`, which
    is `192.168.1.102` in our case.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Set the value for `RHOST` and then run the exploit as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cb65f99b-068b-4222-a564-394a8002ff95.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the exploit runs successfully, you will get root access, as shown in the
    preceding screenshot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We first did an Nmap scan to check for running services and open ports and found
    the FTP service running. Then we tried to find the version of the FTP service.
    Once we got the information, we searched for any exploit available for VSFTPD.
    The VSFTPD backdoor module that was found in the search result is actually a code
    that is being sent to the target machine by the Metasploit framework. The code
    gets executed on the target machine due to a module of the VSFTPD being improperly
    programmed. Once the code gets executed, we get a root shell access on our Kali
    machine
  prefs: []
  type: TYPE_NORMAL
- en: Using the exploit found for VSFTPD, we tried to attack the target system and
    got the root shell on it.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's learn about a few more exploits and attacks that are common in Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Missing backup plans
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this era of malicious attacks and dangerous cyberattacks, your data is never
    safe. Your data needs something more than just protection. Its needs insurance
    in the form of backups. At any point of time, if your data is lost, having data
    backups ensures that your business can be up and running in no time.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When we talk about data backup in Linux, choosing the best backup tool that
    matches your business needs is essential. Everyone needs to have a data backup
    tool that is dependable, but it's not necessary to spend too much to get a tool
    that has features that meets your needs. The backup tool should allow you to have
    local backups, remote backups, one-time backups, scheduled backups, and many other
    features.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's look at a few outstanding backup tools for Linux.
  prefs: []
  type: TYPE_NORMAL
- en: fwbackups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the easiest of all Linux backup tools. fwbackups has a user-friendly
    interface and it can be used for single backups and also for recurring scheduled
    backups.
  prefs: []
  type: TYPE_NORMAL
- en: Local as well as remote backups can be done in various formats, such as `tar`,
    `tar.gz`, `tar.bz`, or `rsync` format. A single file or an entire computer can
    be backed up using this tool.
  prefs: []
  type: TYPE_NORMAL
- en: Using this tool, backup and restoring can be done easily. Incremental or differential
    backups can be done to speed the process.
  prefs: []
  type: TYPE_NORMAL
- en: rsync
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is one of the most widely used backup solutions for Linux. It can be used
    for incremental backups, whether local or remote.
  prefs: []
  type: TYPE_NORMAL
- en: '`rsync` can be used to update directory trees and filesystems while preserving
    links, ownerships, permissions, and privileges.'
  prefs: []
  type: TYPE_NORMAL
- en: Being a command-line tool, `rsync` is perfect for creating simple scripts to
    use in conjunction with `cron`, so as to create automated backups.
  prefs: []
  type: TYPE_NORMAL
- en: Amanda (Advanced Maryland Automatic Network Disk Archiver)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is a free and open source tool developed for "*moderately sized computer
    centers*". It is designed for performing the backup of multiple machines over
    the network to tape drives, disks, or optical disks.
  prefs: []
  type: TYPE_NORMAL
- en: Amanda can be used to backup about everything on a diverse network, using a
    combination of a master backup server and Linux or Windows.
  prefs: []
  type: TYPE_NORMAL
- en: LVM snapshots and hardware snapshots can also be handled using this tool.
  prefs: []
  type: TYPE_NORMAL
- en: Simple Backup Solution (SBS)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Primarily targeted at desktop backup, SBS can be used to backup files and directories.
    It also allows regular expressions to be used for exclusion purposes.
  prefs: []
  type: TYPE_NORMAL
- en: It includes pre-defined backup configurations that can be used to back up directories
    such as `/var/`, `/etc/`, `/usr/local`.
  prefs: []
  type: TYPE_NORMAL
- en: SBS can be used for custom backups, manual backups and scheduled backups, and
    is not limited to just pre-defined backups.
  prefs: []
  type: TYPE_NORMAL
- en: Bacula
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bacula is a free and open source tool and requires client programs to be installed
    on each system targeted for backup. All these systems are controlled using a server
    that centrally handles the backup rules.
  prefs: []
  type: TYPE_NORMAL
- en: Bacula has its own file format, which is not proprietary as the tool is open
    source.
  prefs: []
  type: TYPE_NORMAL
- en: Routine full and incremental backups can be done using the tool and it offers
    better support for setups if multiple servers are being used with their own tape
    drives.
  prefs: []
  type: TYPE_NORMAL
- en: Encryption and RAID is supported by Bacula. Scripting language for customizing
    your backup jobs is also offered by Bacula, which can be used to incorporate encryption.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A backup tool is necessary for anyone in the IT industry or a computer power
    user. The backup tool should be capable of scheduled backups, one-time backups,
    local backups, remote backups, and many other features.
  prefs: []
  type: TYPE_NORMAL
