- en: Chapter 9. Configuring the Syslog and Monitoring Performance
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章 配置 Syslog 和监控性能
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Configuring the syslog
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 syslog
- en: Monitoring the performance on Oracle Solaris 11
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控 Oracle Solaris 11 的性能
- en: Introduction
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'In this chapter, we will learn about two important topics: syslog and performance
    monitoring. The former is an essential task for daily administration and is very
    appropriate for resolving the following possible events and problems that occur
    in Oracle Solaris 11\. Configuring syslog is very similar to other UNIX flavors,
    but there will be particular details that are exclusively related to Oracle Solaris.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习两个重要主题：syslog 和性能监控。前者是日常管理的基本任务，非常适合解决在 Oracle Solaris 11 中可能发生的以下事件和问题。配置
    syslog 与其他 UNIX 系统非常相似，但会有一些特别的细节是专门与 Oracle Solaris 相关的。
- en: Talking about the syslog framework means discussing a very important part of
    the system that is responsible for event messages. Any security problem, hardware
    change and problem, kernel event, or general issues will be recorded in logfiles.
    Additionally, applications will log their messages in logfiles. The syslog framework
    plays a special role if we are working with forensic analysis. Syslog framework
    has a central role. Logs are also important when we investigate a malware's attack.
    If we have to create a troubleshooting process, once more, the records saved and
    managed by the syslog framework are vital. This is the real importance of the
    syslog framework because its responsibility is to forward any kind of message
    to the logfiles, according to the category and severity of the message.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论 syslog 框架意味着讨论系统中一个非常重要的部分，它负责事件消息的记录。任何安全问题、硬件变更和故障、内核事件或一般问题都会记录在日志文件中。此外，应用程序也会将它们的消息记录到日志文件中。syslog
    框架在我们进行取证分析时发挥着特别的作用。syslog 框架具有核心作用。当我们调查恶意软件攻击时，日志也很重要。如果我们需要创建故障排除过程，那么 syslog
    框架保存和管理的记录是至关重要的。这就是 syslog 框架的真正重要性，因为它的责任是将任何类型的消息转发到日志文件中，依据消息的类别和严重性。
- en: The latter topic, performance monitoring, introduces us to a complete and new
    world where it would be possible to write a whole book on the subject. The idea
    here is to learn about the main fundamentals and commands to help find out performance
    problems in the system. The gathered metrics can be used for a tuning task where
    the main goal is to improve the performance and try to keep the same hardware.
    This is useful because managers do not want to spend money buying an unnecessary
    and expensive hardware when eventually, only some modifications in the system
    will be enough.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 后者的主题，性能监控，向我们介绍了一个完整的新世界，我们甚至可以为这个主题写一本完整的书。这里的想法是学习一些基本的原则和命令，帮助发现系统中的性能问题。收集到的指标可以用于调优任务，主要目标是提高性能并尽可能保持相同的硬件配置。这非常有用，因为管理人员不希望在没有必要的情况下购买昂贵的硬件，而实际上，可能只需对系统做一些修改就能达到预期效果。
- en: Configuring the syslog
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 syslog
- en: The syslog framework is one of the most important features of Oracle Solaris
    11, because its goal is to log all the events that occur in each second. These
    records can be used to investigate any suspicious behavior on the system. Like
    most books, we will not delve into unnecessary details and theory about syslog.
    The main idea here is to show how the syslog can be configured, monitored, and
    used.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: syslog 框架是 Oracle Solaris 11 最重要的特性之一，因为它的目标是记录每秒钟发生的所有事件。这些记录可以用于调查系统中的任何可疑行为。像大多数书籍一样，我们不会深入探讨关于
    syslog 的不必要的细节和理论。这里的主要目的是展示如何配置、监控和使用 syslog。
- en: Getting ready
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe requires two virtual machines (VirtualBox or VMware) named `solaris11-1`
    and `solaris11-2`, both running Oracle Solaris 11 with at least 2 GB RAM, and
    a network interface.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程需要两台虚拟机（VirtualBox 或 VMware），分别命名为 `solaris11-1` 和 `solaris11-2`，这两台虚拟机均运行
    Oracle Solaris 11，内存至少为 2 GB，并且具备一个网络接口。
- en: How to do it…
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点……
- en: 'The syslog framework is composed of a main daemon (`syslogd`) and its respective
    configuration file (`/etc/syslog.conf`). To gather details about the associated
    syslog service, we have to execute the following SMF administration commands:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: syslog 框架由一个主守护进程（`syslogd`）和它相应的配置文件（`/etc/syslog.conf`）组成。要获取与 syslog 服务相关的详细信息，我们必须执行以下
    SMF 管理命令：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As we mentioned about the syslog service, there''s a configuration file named
    `/etc/syslog.conf`, as shown in the following command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们提到的 syslog 服务，它有一个配置文件，名为 `/etc/syslog.conf`，如下所示：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This configuration file is straight and has only two columns, selector and target,
    both separated by **tabs** (not spaces).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 该配置文件简单，只有两列，选择器和目标，且两者由**制表符**（而不是空格）分隔。
- en: 'The selector column is composed of two components in the `facility.level` format,
    and the syntax is defined as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 选择器列由`facility.level`格式的两个组件组成，语法定义如下：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `facility` component determines the class or category of message (KERN,
    USER, MAIL, DAEMON, AUTH, NEWS, UUCP, CRON, AUDIT, LOCAL 0-7, and *), and the
    `level` component means the priority (EMERG, ALERT, CRIT, ERROR, WARNING, NOTICE,
    INFO, and DEBUG, in the descending order). Additionally, the target column is
    the destination of the message, where the destination can be a device file, file,
    user, or host.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`facility`组件确定消息的类别或类型（KERN、USER、MAIL、DAEMON、AUTH、NEWS、UUCP、CRON、AUDIT、LOCAL
    0-7和*），`level`组件表示优先级（EMERG、ALERT、CRIT、ERROR、WARNING、NOTICE、INFO和DEBUG，按降序排列）。此外，目标列是消息的目的地，目标可以是设备文件、文件、用户或主机。'
- en: 'We will now see some practical examples of the `/etc/syslog.conf` configuration
    file with its respective syntax:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将看到一些`/etc/syslog.conf`配置文件的实际示例及其相应的语法：
- en: '`*.err;kern.notice;auth.notice /dev/sysmsg`: All messages with an error (`err`)
    priority (the facility doesn''t matter), any kernel facility messages with a priority
    equal to or higher than `notice` (`notice`, `warning`, `error`, `critical`, `alert`,
    and `emergency`), and any authentication (`auth`) facility message with a priority
    equal to or higher than `notice` are sent to `/devsysmsg`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*.err;kern.notice;auth.notice /dev/sysmsg`：所有优先级为错误（`err`）的消息（设施无关），任何`kernel`设施的优先级为`notice`（`notice`、`warning`、`error`、`critical`、`alert`、`emergency`）或更高的消息，以及任何`auth`设施的优先级为`notice`或更高的消息都将发送到`/dev/sysmsg`。'
- en: '`*.err;kern.debug;daemon.notice;mail.crit /var/adm/messages`: All messages
    with a `debug` priority (the facility doesn''t matter), any kernel facility message
    with a `debug` level or higher, any `daemon` facility message with `notice` priority
    or higher, and all mail facility messages with `critical` priority or higher are
    sent to the `/var/adm/messages` file'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*.err;kern.debug;daemon.notice;mail.crit /var/adm/messages`：所有优先级为`debug`的消息（设施无关），任何`kernel`设施的`debug`优先级或更高的消息，任何`daemon`设施的`notice`优先级或更高的消息，以及所有`mail`设施的`critical`优先级或更高的消息都将发送到`/var/adm/messages`文件。'
- en: '`*.alert;kern.err;daemon.err alexandre`: In this example, all messages with
    priority equal to or higher than `alert`, messages with facility equal to `kernel`
    and priority error (`err`) or higher, and messages with facility equal to `daemon`
    and priority error (`err`) or higher are sent to the `alexandre` user'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*.alert;kern.err;daemon.err alexandre`：在这个例子中，所有优先级为`alert`或更高的消息，所有`kernel`设施的错误（`err`）或更高优先级的消息，以及所有`daemon`设施的错误（`err`）或更高优先级的消息都将发送到`alexandre`用户。'
- en: '`*.emerg *`: In this line, all messages with priority level equal to or higher
    than `emerg` are sent to every user that is logged on'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*.emerg *`：在这一行，所有优先级为`emerg`或更高的消息将发送到所有已登录的用户。'
- en: '`local7.alert @solaris11-2`: Any message with the `local7` facility and priority
    level equal to or higher than `alert` is sent to another host (`solaris11-2`)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local7.alert @solaris11-2`：任何`local7`设施的优先级为`alert`或更高的消息将被发送到另一个主机（`solaris11-2`）。'
- en: '``mail.debug ifdef(`LOGHOST'', /var/log/syslog, @loghost)``: This is a nice
    example because any message with the facility equal to `mail` and priority level
    equal to `debug` or higher can be sent to two different destinations specified
    in the `/etc/hosts` file'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '``mail.debug ifdef(`LOGHOST'', /var/log/syslog, @loghost)``：这是一个很好的示例，因为任何优先级为`debug`或更高的`mail`设施的消息都可以发送到`/etc/hosts`文件中指定的两个不同目标。'
- en: If the `LOGHOST` variable (as shown earlier) is set (defined in the same line)
    to the localhost, the `mail.debug` messages are sent to the `/var/log/syslog`
    file. However, if the `LOGHOST` keyword is set to another host (for example, `solaris11-2
    machine`), then the `mail.debug` message is sent to the `solaris11-2` machine.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`LOGHOST`变量（如前所示）被设置（在同一行定义）为localhost，`mail.debug`消息将被发送到`/var/log/syslog`文件。然而，如果`LOGHOST`关键字被设置为另一个主机（例如，`solaris11-2
    machine`），则`mail.debug`消息将被发送到`solaris11-2`主机。
- en: 'As the `/etc/hosts` file is used to specify these special hostnames, we can
    verify an example as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`/etc/hosts`文件用于指定这些特殊的主机名，我们可以验证以下示例：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this case, `loghost` is configured to the localhost (`solaris11-1`), so any
    message with facility equal to `mail` and priority level equal to `debug` must
    be sent to the `/var/adm/message` file.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`loghost` 被配置为本地主机（`solaris11-1`），因此任何具有 `mail` 服务并且优先级为 `debug` 的消息必须发送到
    `/var/adm/message` 文件。
- en: 'From these examples, you can note some of the following points:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些示例中，你可以注意到以下几点：
- en: A message can be sent to two or more different places, as seen in the first
    two examples
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息可以发送到两个或更多不同的地方，正如前两个示例所示。
- en: If a message is sent to another host, such as the last configuration line's
    example, the target host must have a similar line to handle the arriving message
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果消息被发送到另一个主机，例如最后一个配置行中的示例，则目标主机必须有类似的行来处理接收到的消息。
- en: Any change in the `/etc/syslog.conf` file requires restarting the syslog service
    (`svcadm restart svc:/system/system-log:default` and `svcadm restart svc:/system/system-log:default`)
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对 `/etc/syslog.conf` 文件的任何更改都需要重新启动 syslog 服务（`svcadm restart svc:/system/system-log:default`
    和 `svcadm restart svc:/system/system-log:default`）。
- en: 'Let''s create a real test. In the `solaris11-1` system, edit the `/etc/syslog.conf`
    file and add the following line:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进行一个真实的测试。在 `solaris11-1` 系统中，编辑 `/etc/syslog.conf` 文件并添加以下行：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Add the `solaris11-2` system in the `/etc/hosts` file on the `solaris11-1`
    machine, and make sure that it''s accessible from the `solaris11-1` system, as
    shown in the following commands:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `solaris11-1` 机器的 `/etc/hosts` 文件中添加 `solaris11-2` 系统，并确保可以从 `solaris11-1`
    系统访问，如以下命令所示：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'On the `solaris11-1` system, refresh the syslog service by executing the following
    command:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `solaris11-1` 系统中，通过执行以下命令刷新 syslog 服务：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If the syslog configuration doesn''t take effect for some reason, you can restart
    it by running the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于某种原因 syslog 配置没有生效，可以通过运行以下命令来重新启动它：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'On another system (`solaris11-2`), we have to include the following line at
    end of the `/etc/syslog.conf` file:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个系统（`solaris11-2`）上，我们需要在 `/etc/syslog.conf` 文件的末尾添加以下行：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'As this file doesn''t exist, we can create it as shown in the following command:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 由于此文件不存在，我们可以按以下命令创建它：
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'There is a property from the `system-log:default` service named `log_from_remote`,
    and it should be set to `true` to allow remote hosts (`solaris11-1`) to log any
    message into the `solaris11-2` system. Nonetheless, the big issue is that this
    parameter is usually configured to `false`. Additionally, a configuration file
    (`/etc/default /syslog`) also controls the remote logging behavior, as shown in
    the following command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`system-log:default` 服务中有一个名为 `log_from_remote` 的属性，它应该设置为 `true`，以允许远程主机（`solaris11-1`）将任何消息记录到
    `solaris11-2` 系统中。然而，问题在于这个参数通常配置为 `false`。此外，一个配置文件（`/etc/default/syslog`）也控制远程日志记录行为，如以下命令所示：'
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now, let's take a look at the details. If this `LOG_FROM_REMOTE` variable (from
    the `/etc/default/syslogd` file) is set to `YES` or `NO`, the `log_from_remote`
    property (from the `system-log:default` service) is enabled or disabled, respectively.
    However, if the `LOG_FROM_REMOTE` variable is commented out (as shown in the previous
    file), the value of the `log_from_remote` property (from the `system-log:default`
    service) takes effect.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们详细看看。如果 `LOG_FROM_REMOTE` 变量（来自 `/etc/default/syslogd` 文件）设置为 `YES` 或
    `NO`，则 `log_from_remote` 属性（来自 `system-log:default` 服务）分别启用或禁用。然而，如果 `LOG_FROM_REMOTE`
    变量被注释掉（如前面的文件所示），则 `log_from_remote` 属性（来自 `system-log:default` 服务）的值生效。
- en: 'Therefore, to make our lives easier, we are going to enable the `log_from_remote`
    property, without touching the `/etc/default/syslogd` configuration file, and
    restart the service, as shown in the following command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了简化我们的工作，我们将启用 `log_from_remote` 属性，而不更改 `/etc/default/syslogd` 配置文件，并重新启动服务，如以下命令所示：
- en: '[PRE11]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'On the same `solaris11-2` system, we have to follow `/var/adm/new_messages`
    to confirm if the message from `solaris11-1` arrives, using the next command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一个 `solaris11-2` 系统中，我们需要跟踪 `/var/adm/new_messages` 以确认 `solaris11-1` 的消息是否到达，使用以下命令：
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'On the `solaris11-1` system, it is time to test the configuration, and we can
    use the `logger` command that generates a message with the facility and level
    specified, using the `-p` option. In this case, we are going to generate the `Alexandre
    Borges` message that will be classified as `local7` and with priority level `emerg`.
    According to the `/etc/syslog.conf` configuration file, the message will be sent
    to the `solaris11-2` host. Once it is there, the message will be sent to the `/var/adm/new_messages`
    file, as shown in the following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `solaris11-1` 系统上，是时候测试配置了，我们可以使用 `logger` 命令来生成一个具有指定设施和级别的消息，使用 `-p` 选项。在这种情况下，我们将生成
    `Alexandre Borges` 消息，它将被归类为 `local7` 并具有 `emerg` 优先级。根据 `/etc/syslog.conf` 配置文件，消息将发送到
    `solaris11-2` 主机。一旦消息到达，它将被发送到 `/var/adm/new_messages` 文件，如以下命令所示：
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'And we''re done! Returning to the `solaris11-2` host, we are able to confirm
    that the message has arrived by executing the following command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了！返回到 `solaris11-2` 主机，我们可以通过执行以下命令确认消息是否已经到达：
- en: '[PRE14]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This is perfect! Everything worked as expected!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 完美！一切如预期那样工作！
- en: 'Proceeding with the explanation about logging, some network services have their
    own log configuration, and the best way to understand this is by taking a look
    at another practical example. For example, pick the telnet service and examine
    its configuration using the following command:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续讲解日志记录的内容时，一些网络服务有自己的日志配置，理解这一点的最佳方法是通过查看另一个实际示例。例如，选择 telnet 服务并使用以下命令检查其配置：
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'As we are able to see in the previous output, the `tcp_trace` property is set
    to `false`, and this way, no telnet message is sent to the syslog service. It
    is possible to change this default behavior by running the following commands:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在之前的输出中看到的，`tcp_trace` 属性被设置为 `false`，这样就不会将任何 telnet 消息发送到 syslog 服务。可以通过运行以下命令来更改此默认行为：
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To verify the telnet events, we must execute a telnet operation from the `solaris11-2`
    system and check the `/var/adm/messages` file in the `solaris11-1` host, as shown
    in the following command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证 telnet 事件，我们必须从 `solaris11-2` 系统执行一次 telnet 操作，并检查 `solaris11-1` 主机上的 `/var/adm/messages`
    文件，如以下命令所示：
- en: '[PRE17]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'On the solaris11-1 host, verify the `/var/adm/`message''s file log content
    by executing the following command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `solaris11-1` 主机上，通过执行以下命令来验证 `/var/adm/` 消息日志文件的内容：
- en: '[PRE18]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'It worked! However, why do messages from services that were configured using
    `tcp_trace=true` go to the `/var/adm/message` file? Because all the messages that
    originated from this attribute are classified as `daemon.notice` (remember the
    `facility.severity` syntax), and according to the `/etc/syslog.conf` file, we
    have the following command:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 成功了！然而，为什么使用 `tcp_trace=true` 配置的服务的消息会进入 `/var/adm/message` 文件呢？因为所有来自此属性的消息都被归类为
    `daemon.notice`（记住 `facility.severity` 语法），根据 `/etc/syslog.conf` 文件，我们有如下命令：
- en: '[PRE19]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Instead of configuring the logging capacity in each network service, we can
    configure the logging feature for all network services, using a simple command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过一个简单的命令配置所有网络服务的日志记录功能，而不是为每个网络服务单独配置日志功能：
- en: '[PRE20]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now, all the network services that are controlled by the `inetadm` framework
    are configured to log to the `system-log:default` service according to the `/etc/syslog.conf`
    configuration file.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，所有通过 `inetadm` 框架控制的网络服务都已配置为根据 `/etc/syslog.conf` 配置文件将日志记录到 `system-log:default`
    服务。
- en: An overview of the recipe
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配方概述
- en: We learned how to configure the logging service in Oracle Solaris 11 using the
    `system-log:default` service (the `syslogd` daemon) and its respective configuration
    file (`/etc/syslog.conf`). Additionally, we saw how to configure the logging feature
    for network services that are controlled by the `inetadm` framework.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何使用 `system-log:default` 服务（即 `syslogd` 守护进程）和其相关的配置文件（`/etc/syslog.conf`）来配置
    Oracle Solaris 11 中的日志服务。此外，我们还了解了如何为通过 `inetadm` 框架控制的网络服务配置日志功能。
- en: Monitoring the performance on Oracle Solaris 11
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控 Oracle Solaris 11 的性能
- en: When we are working in an environment with many available resources, without
    doubt, it is easier to administer all systems. However, how can we handle critical
    systems that run Oracle Solaris 11 with few free resources? How can we find and
    monitor these rare resources on Oracle Solaris 11?
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在资源丰富的环境中工作时，毫无疑问，管理所有系统变得更加容易。然而，如何处理那些运行 Oracle Solaris 11 且资源有限的关键系统呢？我们如何在
    Oracle Solaris 11 上找到并监控这些稀缺资源？
- en: The performance and tuning subject on Oracle Solaris is a very long and dense
    topic to be explained in a complete way; it deserves an entire book dedicated
    to all its details. However, we will learn enough monitor details and commands
    that will motivate you to study this topic deeply.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Oracle Solaris 性能和调优的主题是一个非常长且复杂的话题，无法完全讲解；它值得一本书来专门探讨所有细节。然而，我们将学习足够的监控细节和命令，足以激励你深入研究这一主题。
- en: Getting ready
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: This recipe requires a virtual machine (VirtualBox or VMware) that runs Oracle
    Solaris 11 with 2 GB RAM at least. It is recommended that the system has two or
    more processors or cores.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱需要一台运行 Oracle Solaris 11 的虚拟机（VirtualBox 或 VMware），至少配置 2 GB RAM。建议系统配置两个或更多处理器或核心。
- en: How to do it…
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: Fundamentally, Oracle Solaris 11 is composed of CPU, RAM, and I/O devices, and
    there are many ways to monitor the system. Furthermore, there are some parameters
    that are very important, so it's appropriate to start our studies by examining
    the memory subsystem.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 从根本上讲，Oracle Solaris 11 由 CPU、RAM 和 I/O 设备组成，并且有许多方法可以监控系统。此外，有一些非常重要的参数，因此从检查内存子系统开始我们的学习是非常合适的。
- en: 'The first step is to enable the system to collect the `sar` statistics, as
    shown in the following command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是启用系统收集 `sar` 统计数据，如下命令所示：
- en: '[PRE21]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Using either the `prtconf` or the `lgrpinfo` command, we can find out the total
    installed memory. In addition, by executing the `pagesize` command, we can find
    the page size of a page in memory, and finally, we can use `sar –r` to get the
    free memory and swap space, as shown in the following command:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `prtconf` 或 `lgrpinfo` 命令，我们可以找到总安装内存。另外，执行 `pagesize` 命令可以查找内存中页面的大小，最后，使用
    `sar –r` 可以获取空闲内存和交换空间，如下命令所示：
- en: '[PRE22]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: In the preceding command, the `freemem` column is the average number of available
    pages (4K in this case), and the `freeswap` column means the average number of
    disk blocks designed for page swapping.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，`freemem` 列表示平均可用页面数（此处为 4K），`freeswap` 列表示用于页面交换的磁盘块的平均数量。
- en: 'The free memory (in pages of 4 KB) can also be obtained using a very smart
    command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用非常智能的命令获取空闲内存（以 4 KB 页面为单位）：
- en: '[PRE23]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'A typical way to get the free swap space is using the following command:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 获取空闲交换空间的典型方法是使用以下命令：
- en: '[PRE24]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: In this case, we should remember that free space is shown in sectors (512 bytes).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们应该记住，空闲空间以扇区（512 字节）为单位显示。
- en: 'Taking a different way, free swap information can be obtained from **Modular
    Debugger** (**MDB**):'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 通过另一种方式，可以从 **模块化调试器**（**MDB**）获取空闲交换信息：
- en: '[PRE25]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Furthermore, the same MDB can provide us with lots of information about the
    memory status by executing the following command:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，同一个 MDB 还可以通过执行以下命令为我们提供大量有关内存状态的信息：
- en: '[PRE26]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This output shows the amount of memory used by kernel (`Kernel`), amount of
    memory used by data from **ZFS** **File Data** (**ZFS**), and the number of anonymous
    pages (a sum of heap, stack, shared memory, and copy on write pages) in memory.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出显示了内核（`Kernel`）使用的内存量、**ZFS** **文件数据**（**ZFS**）使用的内存量，以及内存中匿名页面的数量（堆、栈、共享内存和写时复制页面的总和）。
- en: The page cache (stored on virtual memory) is made by all the recently read and
    written regular filesystem data (file and directory data) other than ZFS (the
    ZFS data is on **Adaptive Replacement** **Cache** (**ARC**)). As we mentioned
    earlier, regular ZFS filesystem data is stored on the page cache because mmap
    ZFS data also stays there.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 页面缓存（存储在虚拟内存中）由所有最近读取和写入的常规文件系统数据（文件和目录数据）构成，ZFS 数据除外（ZFS 数据存储在 **自适应替换** **缓存**（**ARC**）中）。正如我们之前提到的，常规
    ZFS 文件系统数据存储在页面缓存中，因为 mmap ZFS 数据也存储在那里。
- en: Free (`freelist`) is the real amount of free memory without any connection to
    the processes and files. The cache list is the number of unmapped file pages on
    the free list.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 空闲（`freelist`）是指与进程和文件无关的实际空闲内存量。缓存列表是指空闲列表中未映射文件页的数量。
- en: The basic and rough working of page cache is that any necessary filesystem data
    is fetched on the `segmap` cache.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 页面缓存的基本和粗略工作原理是，任何必要的文件系统数据都会被提取到 `segmap` 缓存中。
- en: The `Segmap` cache is a kind of first-level cache or staging area, where recent
    pages that were read from the filesystem (`UFS`, `VxFS`, `NFS`, and `QFS`) are
    kept into pages of kernel's virtual memory to be copied to user space buffers.
    Nevertheless, if the information is not found on the `segmap` cache, the kernel
    tries to find the requested data on `cachelist` (unmapped filesystem pages). Additionally,
    the `segmap` cache is not used by the ZFS filesytem. An interesting concept is
    that `freelist` is linked to `cachelist`, showing that when some free page of
    memory is necessary, first, the kernel tries to take pages from `freelist`, but
    if it isn't possible, the kernel takes a page of memory from `cachelist`.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`Segmap` 缓存是一种一级缓存或暂存区，用于存储最近从文件系统（`UFS`、`VxFS`、`NFS` 和 `QFS`）读取的页面，并将其保存在内核虚拟内存中的页面中，以便复制到用户空间缓冲区。然而，如果在
    `segmap` 缓存中找不到信息，内核会尝试在 `cachelist`（未映射的文件系统页面）中查找请求的数据。此外，`segmap` 缓存不被 ZFS
    文件系统使用。一个有趣的概念是，`freelist` 与 `cachelist` 相关联，这表明当需要一些空闲内存页面时，内核首先尝试从 `freelist`
    中获取页面，但如果无法获得，内核将从 `cachelist` 中获取页面。'
- en: 'By the way, only for completeness, the `segmap` cache statistics could be found
    by running the following command:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一句，为了完整性，`segmap` 缓存统计信息可以通过运行以下命令找到：
- en: '[PRE27]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The `kstat` command is also appropriate to show complementary page system information.
    Remember that a page size in memory is 4 KB, and it can be found by executing
    the following command:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`kstat` 命令也适合显示补充的页面系统信息。请记住，内存中的页面大小为 4 KB，可以通过执行以下命令来查找：'
- en: '[PRE28]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'An additional and interesting note: `availrmem` is the amount of unlocked memory
    available for allocation. Furthermore, if we take the same `kstat` command, it
    is possible to get system-wide page statistics, as shown in the following command:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的附注是：`availrmem` 是可用于分配的未锁定内存量。此外，如果我们执行相同的 `kstat` 命令，还可以获得系统范围的页面统计信息，如下所示：
- en: '[PRE29]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'From this huge output, some parameters stand out:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 从这庞大的输出中，有一些参数特别引人注目：
- en: '`anonfree`: This defines heap and stack pages that were released after these
    pages have been paged out to the disk'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`anonfree`：定义了在页面被交换到磁盘后释放的堆和栈页面'
- en: '`anopgin`: This defines heap and stack pages paged in from the disk'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`anopgin`：定义了从磁盘交换进来的堆和栈页面'
- en: '`anonpgout`: This defines heap and stack pages paged out from the swap'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`anonpgout`：定义了从交换区交换出去的堆和栈页面'
- en: '`maj_fault`: This defines the number of operations where the page has been
    found on the disk because it wasn''t on memory'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`maj_fault`：定义了因页面不在内存中而需要从磁盘查找页面的操作数'
- en: '`pgswapin`: This defines the number of pages swapped in'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pgswapin`：定义了交换进来的页面数'
- en: '`pgswapout`: This defines the number of pages swapped out'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pgswapout`：定义了交换出去的页面数'
- en: 'Returning to general memory statistics, there is a known command named `vmstat`
    (which uses the `–p` option to report paging activity) that can disclose useful
    details, as shown in the following command:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到一般的内存统计信息，有一个已知的命令 `vmstat`（使用 `-p` 选项来报告分页活动），它可以披露有用的细节，如下所示：
- en: '[PRE30]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'This output brings to us some interesting information about `swap` (the available
    swap space in KB) and `free` (amount of free memory). There are other critical
    parameters such as `sr` (number of pages scanned per second during an operation
    to find enough free memory), `api` (anonymous page-ins), and `apo` (anonymous
    page-outs). Usually, an `sr` value (scan rate) above zero indicates problems with
    lack of memory, and a high value of either the `api` or `apo` value indicates
    low memory and a high number of operations to and from the swap. Additionally,
    as anonymous page-in operations have a bad impact on the system''s performance,
    we could use the DTrace tool to find all the executables that make many page-in
    operations by running either of the following commands:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出带给我们一些有关 `swap`（可用交换空间，单位为 KB）和 `free`（空闲内存量）有趣的信息。还有其他关键参数，如 `sr`（每秒扫描的页面数，目的是找到足够的空闲内存）、`api`（匿名页面输入）和
    `apo`（匿名页面输出）。通常，`sr` 值（扫描率）大于零表示存在内存不足的问题，而 `api` 或 `apo` 的高值则表示内存不足，且往返交换区的操作次数较多。此外，由于匿名页面输入操作会对系统性能产生不利影响，我们可以使用
    DTrace 工具通过运行以下命令之一来查找所有执行大量页面输入操作的可执行文件：
- en: root@solaris11-1:~# **dtrace -n 'vminfo:::anonpgin { @[pid, execname] = count();
    }'**
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: root@solaris11-1:~# **dtrace -n 'vminfo:::anonpgin { @[pid, execname] = count();
    }'**
- en: root@solaris11-1:~# **dtrace -n 'vminfo:::pgpgin { @pg[execname] = sum(arg0);
    }'**
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: root@solaris11-1:~# **dtrace -n 'vminfo:::pgpgin { @pg[execname] = sum(arg0);
    }'**
- en: After we find what executable is causing a performance impact, it is time to
    decide what we can do. Eventually, it could be necessary to move the offending
    application to another system.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 找到导致性能问题的可执行文件后，就该决定我们能做些什么了。最终，可能需要将有问题的应用程序迁移到其他系统。
- en: 'There is an interesting way to verify that a process is facing problems with
    memory, using the `prstat` command as shown:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种有趣的方法可以验证一个进程是否遇到内存问题，使用 `prstat` 命令，如下所示：
- en: '[PRE31]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The previous command gives the following output:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出如下所示：
- en: '![How to do it…](img/00029.jpeg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![How to do it…](img/00029.jpeg)'
- en: 'First, the options we used here were as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们使用的选项如下：
- en: '`-m`: This reports microstate process accounting information.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-m`：此选项报告微观状态进程的统计信息。'
- en: '`-c`: This prints new reports below previous reports instead of overprinting
    them.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-c`：此选项将新报告打印在前一个报告下方，而不是覆盖它们。'
- en: '`-L`: This reports statistics for each **light-weight process** (**LWP**).
    By default, the `prstat` command reports only the number of LWPs for each process.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-L`：此选项报告每个**轻量级进程**（**LWP**）的统计信息。默认情况下，`prstat` 命令仅报告每个进程的 LWP 数量。'
- en: The DFL column represents the percentage of time the process has spent processing
    data page faults, in other words, lack of enough memory. Ideally, this value should
    be zero.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: DFL 列表示进程处理数据页面缺失的时间百分比，换句话说，就是内存不足。理想情况下，这个值应该为零。
- en: 'For daily administration, we are used to executing the `vmstat` command to
    gather information about virtual memory, as shown in the following command:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 对于日常管理，我们习惯执行 `vmstat` 命令来收集关于虚拟内存的信息，如以下命令所示：
- en: '[PRE32]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Some cool columns are `w` (number of swapped-out threads), `swap` (free swap
    space in KBs), `free` (free memory, including page cache and free lists in KB),
    `re` (number of reclaimed pages from page cache), `pi` and `po` (KB of page paged
    in and out, respectively), and `sr` (pages scanned in memory for available pages).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 一些有用的列包括 `w`（被交换出的线程数量）、`swap`（空闲交换空间的 KB 数）、`free`（空闲内存，包括页面缓存和空闲列表的 KB 数）、`re`（从页面缓存中回收的页面数量）、`pi`
    和 `po`（分别为分页进和分页出的 KB 数），以及 `sr`（扫描内存中可用页面的页数）。
- en: 'A nice variation from the preceding command is `vmstat –s` (displays the total
    number of various system events since boot), as shown in the following commands:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的命令中有一个很好的变化是 `vmstat –s`（显示自启动以来各种系统事件的总数），如以下命令所示：
- en: '[PRE33]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'I have highlighted the main statistics from this `vmstat –s` output as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经突出显示了从 `vmstat –s` 输出中提取的主要统计信息，如下所示：
- en: '`pages swapped in`: This refers to the number of pages swapped in (from swap
    to memory). The ideal value is zero.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pages swapped in`：指的是被交换进来的页面数量（从交换空间到内存）。理想值为零。'
- en: '`pages swapped out`: This refers to the number of pages swapped out (from memory
    to swap). The ideal value is zero.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pages swapped out`：指的是被交换出去的页面数量（从内存到交换空间）。理想值为零。'
- en: '`reclaims from free list`: This refers to the total of the reclaimed pages
    from the free page cache inside the free list. Reclaimed pages are pages of memory
    that were released because of space shortage, but they still were not used for
    other processes nor paged out to swap. A high value can evince lack of memory.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reclaims from free list`：指的是从空闲列表中的空闲页缓存回收的页面总数。回收的页面是因为空间不足而释放的内存页面，但它们还没有被其他进程使用，也没有被换出到交换空间。较高的值可能表示内存不足。'
- en: '`major faults`: This refers to the number of pages not found on physical memory;
    these pages were fetched on disk. The ideal value is close to zero.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`major faults`：指的是未在物理内存中找到的页面数量；这些页面是从磁盘中读取的。理想值接近零。'
- en: '`total name lookups`: Every time a file is opened, its pathname is stored in
    a special place named **Directory Name Lookup Cache** (**DNLC**). These statistics
    show us how many times the kernel found the directory path in cache (DNLC), and
    it does not have to fetch this information on disk. Values above 90 percent are
    great! Another way to get information about DNLC is using `kstat`.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`total name lookups`：每当一个文件被打开时，它的路径名会存储在一个名为 **目录名称查找缓存**（**DNLC**）的特殊位置。该统计信息显示了内核在缓存（DNLC）中找到目录路径的次数，而无需从磁盘上读取这些信息。大于
    90% 的值非常好！获取 DNLC 信息的另一种方式是使用 `kstat`。'
- en: 'It is possible to gather specialized DNLC cache information by executing the
    following command:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过执行以下命令收集专门的 DNLC 缓存信息：
- en: '[PRE34]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'It is possible to calculate the efficiency of DNLC, which is (*hits/(hits +
    misses)) * 100*. Therefore, according to the previous output, we have the following:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 可以计算 DNLC 的效率，计算公式为 (*hits/(hits + misses)) * 100。因此，根据前面的输出，我们得出以下结论：
- en: DNLC's efficiency = (2439710/ (2439710 + 408555) * 100 = 85,67 percent
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: DNLC 的效率 = (2439710 / (2439710 + 408555)) * 100 = 85.67%
- en: As an interesting interpretation from the previous output, every hundred times
    we start searching for directory path information on disk, 85 times, this information
    is found in a DNLC cache.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的输出中可以得出一个有趣的解释：每当我们开始在磁盘上查找目录路径信息时，85 次该信息会在 DNLC 缓存中找到。
- en: 'Another clever method to get DNLC statistics is using the `sar` command as
    follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 DNLC 统计信息的另一个巧妙方法是使用 `sar` 命令，如下所示：
- en: '[PRE35]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The `iget/s` column shows us how many requests for the `inode` directory path
    were not found on `DNLC`. Zero is an ideal value for this column. Nonetheless,
    if the `iget/s` value is not equal to zero, we can change the `ncsize` parameter
    to improve this statistic by changing the `/etc/system` file, as shown in the
    following command:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`iget/s` 列显示了在 `DNLC` 上未找到的 `inode` 目录路径请求的次数。该列的理想值是零。然而，如果 `iget/s` 的值不等于零，我们可以通过修改
    `/etc/system` 文件并更改 `ncsize` 参数来改善这一统计数据，如以下命令所示：'
- en: '[PRE36]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The `ncsize` parameter defines the number of entries in the directory name look-up
    cache (DNLC), and this parameter is used by UFS, NFS, and ZFS to cache elements
    of path names that have been resolved.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`ncsize` 参数定义了目录名称查找缓存（DNLC）中的条目数量，这个参数被 UFS、NFS 和 ZFS 用来缓存已解析的路径名元素。'
- en: 'By default, the value is dynamically calculated using the formula *(4 * (v.v_proc
    + maxusers) + 320) + (4 * (v.v_proc + maxusers) + 320) / 100*. Additionally, the
    current value is found by executing the following command:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，值是通过公式 *(4 * (v.v_proc + maxusers) + 320) + (4 * (v.v_proc + maxusers)
    + 320) / 100* 动态计算的。此外，可以通过执行以下命令找到当前值：
- en: '[PRE37]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'When talking about DNLC, another hot topic arises; this is the buffer cache.
    The buffer cache holds the metadata for inodes, which have directory path information
    on DNLC. The buffer cache statistics are obtained by running a command, as shown
    in the following screenshot:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在谈论 DNLC 时，另一个热门话题是缓冲区缓存。缓冲区缓存存储着 inode 的元数据，这些元数据包含 DNLC 上的目录路径信息。缓冲区缓存的统计信息可以通过运行以下命令获得，如下截图所示：
- en: '![How to do it…](img/00030.jpeg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/00030.jpeg)'
- en: The `%rcache` and `%wcache` columns tell us about the percentage of times metadata
    information was found in the buffer cache for the read/write operations, respectively.
    Very good values are `%rcache`, which should be more than 90 percent, and `%wcache`,
    which should be more than 70 percent.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`%rcache` 和 `%wcache` 列分别告诉我们元数据在读取/写入操作中被找到的次数百分比。非常好的值是 `%rcache`，应当超过 90%，以及
    `%wcache`，应当超过 70%。'
- en: 'While managing memory performance, a final critical issue is to know if a physical
    error occurred, such as fault memory or an ECC error. In this case, we can verify
    that the memory and all other hardware components in system are working well by
    running the following command:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在管理内存性能时，一个关键问题是要知道是否发生了物理错误，比如故障内存或ECC错误。在这种情况下，我们可以通过运行以下命令来验证系统中的内存和所有其他硬件组件是否正常工作：
- en: '[PRE38]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Fortunately, there are no errors on my machine.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我的机器上没有错误。
- en: 'A huge concern when trying to tune the performance on Oracle Solaris 11 is
    the CPU. Eventually, the potential performance problem in the system is that the
    CPU is not able to attend all requests on time. For example, the `vmstat` command
    helps us identify if the operating system shows a CPU bottleneck by executing
    the following command:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试调整 Oracle Solaris 11 性能时，一个巨大的关注点是 CPU。最终，系统中的潜在性能问题是 CPU 无法及时处理所有请求。例如，`vmstat`
    命令可以帮助我们识别操作系统是否显示 CPU 瓶颈，执行以下命令：
- en: '[PRE39]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The `kthr:r` column means the total number of ready threads on the run queue
    (sum of the dispatches queues) that wait for CPUs. A constant value above the
    sum of the core processors or CPUs can represent a processor bottleneck, and dividing
    the `kthr:r`/number of CPUs or cores is a good way to compare CPU performance
    among servers.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`kthr:r` 列表示在运行队列（调度队列的总和）中等待 CPU 的就绪线程总数。超过核心处理器或 CPU 数量的常量值可能表示处理器瓶颈，除以 `kthr:r`/CPU
    或核心数是比较服务器 CPU 性能的一个好方法。'
- en: 'Using the DTraceToolkit, we have the `dispqlen.d` script that shows each CPU
    or core dispatch queue that indicates any case of CPU saturation. Fortunately,
    it is not the case in the following command:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 DTraceToolkit，我们有一个 `dispqlen.d` 脚本，显示每个 CPU 或核心调度队列，指示任何 CPU 饱和的情况。幸运的是，在以下命令中并没有出现这种情况：
- en: '[PRE40]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'A similar command that shows a similar output to the `kthr:r` column from `vmstat`
    is the `runq-sz` column from `sar –q`:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 一个与 `vmstat` 中的 `kthr:r` 列输出类似的命令是 `sar –q` 中的 `runq-sz` 列：
- en: '[PRE41]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The `%runocc` file explains the average run queue occupancy that helps us identify
    the eventual burst in the run queue.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`%runocc` 文件解释了平均运行队列占用情况，帮助我们识别运行队列中的突发情况。'
- en: 'Returning to the `vmstat` output, other useful fields are `cpu: us` (user time—how
    much time the CPU spends processing user threads), `cpu:sy` (system time—how much
    time the CPU spends processing kernel threads and system calls), and `cpu:id`
    (idle time—percentage of time that CPUs are waiting for runnable threads). A practical
    way to evaluate potential CPU problems is by considering that a good balance between
    user time (`cpu:us`) and system time (`cpu:sy`) is about 90/10 (depending on applications
    running on the system). Additionally, an upper limit is 70/30, at maximum (limit).
    Any system showing values different from these ranges deserves an investigation.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '回到 `vmstat` 的输出，其他有用的字段包括 `cpu: us`（用户时间——CPU 花费多少时间处理用户线程）、`cpu: sy`（系统时间——CPU
    花费多少时间处理内核线程和系统调用）、`cpu: id`（空闲时间——CPU 等待可运行线程的时间百分比）。评估潜在 CPU 问题的一个实际方法是考虑用户时间（`cpu:
    us`）和系统时间（`cpu: sy`）的良好平衡，大约是 90/10（具体取决于系统中运行的应用程序）。此外，最大上限为 70/30。任何显示不同于这些范围的系统都值得调查。'
- en: 'Most of the previous columns can be viewed in a similar way by executing commands
    such as the following one:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过执行类似以下的命令以相似的方式查看大部分前面提到的列：
- en: '[PRE42]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Keeping the focus on system time and user time, the next command traces what
    processes are on the CPU, what user code they are running, and what kernel functions
    are running on the CPU (system time). Therefore, if we need to know what processes
    are running on the CPU, execute the following command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 集中关注系统时间和用户时间，接下来的命令将追踪哪些进程正在占用 CPU，正在运行什么用户代码，以及哪些内核函数正在运行在 CPU 上（系统时间）。因此，如果我们需要知道哪些进程正在
    CPU 上运行，可以执行以下命令：
- en: '[PRE43]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: In this case, the `sched` process (the Oracle Solaris scheduler) is taking most
    of the CPU's time. Additionally, the `Java` and `Xorg` processes also take a considerable
    amount of the CPU's time.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`sched` 进程（Oracle Solaris 调度程序）占用了大部分 CPU 时间。此外，`Java` 和 `Xorg` 进程也占用了相当多的
    CPU 时间。
- en: 'To find which processes are taking more user time (to run the user code) from
    the CPU, execute the following command:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找哪些进程占用了更多的用户时间（即运行用户代码），可以执行以下命令：
- en: '[PRE44]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: According to the output, the `firefox` process takes more of the CPU's time.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 根据输出，`firefox` 进程占用了更多的 CPU 时间。
- en: 'Following the same line, it is feasible to obtain the top kernel functions
    that are on the CPU (the `%sys` time) by executing the following command:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 按照同样的思路，可以通过执行以下命令获取正在占用 CPU 的顶级内核函数（`%sys` 时间）：
- en: '[PRE45]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The CPU saturation is also examined when managing processing through the `prstat`
    command:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过 `prstat` 命令管理处理时，也会检查 CPU 饱和度：
- en: '[PRE46]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'In the preceding command, we can see a total of 120 processes; 830 lwps; and
    0.12, 0.11, 0.13 load averages. The `LAT` (latency) column means the amount of
    time that processes are waiting for the CPU, and a constant value above 1 deserves
    a detailed investigation. If some process or thread has an inappropriate value,
    Oracle Solaris offers ways to delve into the details of the problem. For example,
    the `java` process presents a latency (`LAT`) value equal to 0.7 (this is a very
    low value, and it would not be worth investigating in a real case), but if we
    want to gather details about all its threads, execute the following command:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的命令中，我们可以看到总共 120 个进程；830 个 LWP；以及 0.12、0.11、0.13 的负载平均值。`LAT`（延迟）列表示进程等待
    CPU 的时间量，常数值超过 1 时需要进行详细调查。如果某个进程或线程的值不正常，Oracle Solaris 提供了深入调查问题的方式。例如，`java`
    进程的延迟（`LAT`）值为 0.7（这是一个非常低的值，在实际情况中不值得调查），但是如果我们想要收集所有线程的详细信息，可以执行以下命令：
- en: '[PRE47]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'It would be possible to verify the stack for a particular thread by executing
    the following command:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过执行以下命令验证特定线程的堆栈：
- en: '[PRE48]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: The `lwp_cond_wait` and `_lwp_cond_timedwait` functions usually wait for the
    occurrence of a condition represented by an LWP condition variable. In this case,
    both are looking for a CPU.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`lwp_cond_wait` 和 `_lwp_cond_timedwait` 函数通常等待由 LWP 条件变量表示的条件的发生。在这种情况下，两个函数都在等待
    CPU。'
- en: 'Eventually, the `mpstat` command can help us distinguish the load among CPUs,
    as shown in the following command:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，`mpstat` 命令可以帮助我们区分各 CPU 之间的负载，如下所示：
- en: '[PRE49]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Here, `minf` (minor fault—pages that were not found on cache and were fetched
    on memory), `mjf` (major fault—pages that were not found on memory and were fetched
    on disk), `xcal` (cross call), and `intr` (number of interrupts received by the
    CPU). It is appropriate to say that `cross-calls` are calls between CPUs or cores
    that execute a specific low-level function. Additionally, `cross-calls` are also
    necessary to keep the cache coherent due to a stale entry in a cache from a CPU.
    Usually, `cross-calls` are originated from a requirement of releasing memory as
    performed by functions such as `kmen_free ()`. An interrupt (the `intr` column)
    is used by the kernel when it needs another processor to perform work on its behalf,
    such as preempting a dispatcher (a thread signal, a thread that runs on another
    processor to enter the kernel mode) to deliver a signal to interrupt a thread
    on another processor and to start/stop a `/proc` thread on a different processor.
    The `mpstat` command itself doesn''t show us the performance bottleneck, but it
    helps us have a general understanding of a system, as shown earlier. For example,
    continuing the preceding example, it''s possible to list how many cross calls
    a process executed by running the following command:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`minf`（小错误—未在缓存中找到的页面，已从内存中获取）、`mjf`（大错误—未在内存中找到的页面，已从磁盘中获取）、`xcal`（跨调用）和`intr`（CPU接收到的中断数量）。可以说，`cross-calls`是执行特定低级功能的CPU或核心之间的调用。此外，`cross-calls`还需要保持缓存的一致性，因为CPU的缓存中存在过时的条目。通常，`cross-calls`源于释放内存的需求，这些功能如`kmen_free()`会执行该操作。中断（`intr`列）由内核使用，当它需要另一个处理器代表其执行工作时，例如抢占调度程序（线程信号，一个在另一个处理器上运行的线程进入内核模式）以向另一个处理器上的线程发送信号并启动/停止不同处理器上的`/proc`线程。`mpstat`命令本身不会直接显示性能瓶颈，但它有助于我们对系统有一个总体的了解，正如前面所示。例如，继续前面的例子，可以通过运行以下命令列出一个进程执行的跨调用次数：
- en: '[PRE50]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The procedure of running common monitor commands such as `mpstat`, `sar`, `vmstat`,
    and `iostat` followed by a detailed DTrace investigation is a typical approach
    to finding what is the offending application or process.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 执行常见监控命令如`mpstat`、`sar`、`vmstat`和`iostat`，然后进行详细的DTrace调查，是找出导致问题的应用程序或进程的典型方法。
- en: 'Now, we will change the focus to I/O performance. Perhaps the most fundamental
    command to analyze potential problems with the I/O is the `iostat` command:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将重点转向I/O性能。也许分析I/O潜在问题的最基本命令是`iostat`命令：
- en: '[PRE51]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: The output shows statistics for each disk. The used options are `–n` (uses logical
    names), `-x` (shows extended statistics), `-e` (shows error statistics), and `–z`
    (does not show lines without activity). Furthermore, some columns are very important,
    such as `wait` (average number of transactions that are in queue and waiting for
    the disk), `actv` (number of transactions being processed), `wsvc_t` (average
    time that a transaction spends on the I/O wait queue), and `%b` (percentage of
    time that the disk is active). From this explanation, the `wait` column deserves
    attention because it is a metric of disk saturation, and ideally, it should always
    be equal to zero.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示每个磁盘的统计信息。使用的选项包括`–n`（使用逻辑名称）、`-x`（显示扩展统计信息）、`-e`（显示错误统计信息）和`–z`（不显示没有活动的行）。此外，一些列非常重要，比如`wait`（队列中等待磁盘的事务的平均数量）、`actv`（正在处理的事务数量）、`wsvc_t`（事务在I/O等待队列中花费的平均时间）和`%b`（磁盘处于活动状态的时间百分比）。从这个解释来看，`wait`列值得关注，因为它是磁盘饱和度的一个度量，理想情况下，它应该始终为零。
- en: 'A really good tool (from the DTraceToolkit) is the `iotop.d` script that prints
    I/O details ordered by processes and shows I/O sizes (`BYTES` column), as shown
    in the following command:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常好的工具（来自DTraceToolkit）是`iotop.d`脚本，它按照进程排序打印I/O详细信息，并显示I/O大小（`BYTES`列），如下命令所示：
- en: '[PRE52]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: We could remove the `–P` option to prevent the output from rolling and refreshing
    the screen.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以去掉`–P`选项，以防止输出滚动并刷新屏幕。
- en: 'Finally, we have to monitor network interfaces and look for network bottleneck,
    so there are good tools to accomplish this task. For example, the `netstat` command
    is a simple and effective command to gather network information and analyze if
    collision is happening, as shown in the following command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要监控网络接口并寻找网络瓶颈，因此有一些好的工具可以完成这项任务。例如，`netstat`命令是一个简单有效的命令，用于收集网络信息并分析是否发生碰撞，如下命令所示：
- en: '[PRE53]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: There is another fantastic tool named `nicstat` that can help us find potential
    bottleneck on network. However, it is an external tool, and to install it is a
    bit convoluted. However, it is necessary to download the `nicstat` tool from [http://sourceforge.net/projects/nicstat/files/](http://sourceforge.net/projects/nicstat/files/).
    Moreover, it would be nice to download the latest version (with more features),
    but we will need to compile it.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个非常棒的工具，叫做`nicstat`，它可以帮助我们找出网络中的潜在瓶颈。然而，它是一个外部工具，安装起来稍微有些复杂。不过，必须从[http://sourceforge.net/projects/nicstat/files/](http://sourceforge.net/projects/nicstat/files/)下载`nicstat`工具。此外，最好下载最新版本（包含更多功能），但我们需要编译它。
- en: During this demonstration, I used the version from [http://sourceforge.net/projects/nicstat/files/latest/download?source=files](http://sourceforge.net/projects/nicstat/files/latest/download?source=files)
    (nicstat-src-1.95.tar.gz).
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次演示中，我使用的是[http://sourceforge.net/projects/nicstat/files/latest/download?source=files](http://sourceforge.net/projects/nicstat/files/latest/download?source=files)中的版本（nicstat-src-1.95.tar.gz）。
- en: 'Once we download the package, we have to open it by running the following command:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完包之后，我们需要通过执行以下命令打开它：
- en: '[PRE54]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Nonetheless, we have a problem this time; it is necessary for a compiler to
    create the `nicstat` binary! Go to [http://www.oracle.com/technetwork/server-storage/solarisstudio/downloads/index-jsp-141149.html](http://www.oracle.com/technetwork/server-storage/solarisstudio/downloads/index-jsp-141149.html)
    to get Oracle Solaris Studio 12.3, and click on [http://pkg-register.oracle.com](http://pkg-register.oracle.com)
    to download the version for Oracle Solaris 11 x86\. From there, we will be requested
    to create personal SSL certificates to gain access to restricted repositories
    with packages such as Oracle Solaris Studio and Oracle Solaris Cluster. Therefore,
    click on the **Request Certificate** link. You will be redirected to a page to
    download both the key and certificate. It is suggested that you save both in the
    `/root/Downloads` directory.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这次我们遇到了一个问题；需要一个编译器来创建`nicstat`二进制文件！请访问[http://www.oracle.com/technetwork/server-storage/solarisstudio/downloads/index-jsp-141149.html](http://www.oracle.com/technetwork/server-storage/solarisstudio/downloads/index-jsp-141149.html)下载Oracle
    Solaris Studio 12.3，并点击[http://pkg-register.oracle.com](http://pkg-register.oracle.com)下载适用于Oracle
    Solaris 11 x86的版本。之后，我们需要创建个人SSL证书，以便访问包含Oracle Solaris Studio和Oracle Solaris
    Cluster等软件包的受限仓库。因此，请点击**Request Certificate**链接。系统将引导你到一个页面，下载密钥和证书。建议将这两者保存在`/root/Downloads`目录中。
- en: Note
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Oracle Solaris Studio installs a very interesting tool named `er_kernel` to
    profile only the kernel or both the kernel and the load we are running. There
    is more information (including examples) about the `er_kernel` tool on [http://docs.oracle.com/cd/E18659_01/html/821-1379/afahw.html](http://docs.oracle.com/cd/E18659_01/html/821-1379/afahw.html).
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle Solaris Studio安装了一个非常有趣的工具，叫做`er_kernel`，它用于仅对内核或同时对内核和我们运行的负载进行分析。关于`er_kernel`工具的更多信息（包括示例），可以查看[http://docs.oracle.com/cd/E18659_01/html/821-1379/afahw.html](http://docs.oracle.com/cd/E18659_01/html/821-1379/afahw.html)。
- en: 'The following steps are required to install both the key and certificate to
    include the new publisher (`solarisstudio`) in the system, to test if we''re able
    to list the Oracle Solaris Studio files, and then, to install the Oracle Solaris
    Studio, as shown in the following commands:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤是必要的，用于安装密钥和证书，将新的发布者（`solarisstudio`）添加到系统中，测试我们是否能够列出Oracle Solaris Studio文件，并随后安装Oracle
    Solaris Studio，具体命令如下：
- en: '[PRE55]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'This is nice! As the Oracle Solaris Studio is installed out of the system''s
    executable path, we have to include it in the `PATH` variable by running the following
    commands:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好！由于Oracle Solaris Studio是安装在系统的可执行路径之外，我们必须通过执行以下命令将其包含在`PATH`变量中：
- en: '[PRE56]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Return to the `nicstat` directory and compile it by executing the following
    commands:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到`nicstat`目录并执行以下命令进行编译：
- en: '[PRE57]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Finally, we can use the fantastic `nicstat` tool! First, list the available
    interfaces using the `nicstat` tool, as shown in the following command:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用这个超棒的`nicstat`工具！首先，使用`nicstat`工具列出可用的接口，命令如下：
- en: '[PRE58]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The `nicstat` tool has several options, and they are listed by running the
    following command:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '`nicstat`工具有多个选项，可以通过执行以下命令查看：'
- en: '[PRE59]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Based on the available options, the following command brings us an extended
    output, without zeroed lines and separate `%rUtil` and `%wUtil` columns:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 基于可用的选项，以下命令可以为我们提供扩展的输出，去除了零值行，并且将`%rUtil`和`%wUtil`列分开：
- en: '[PRE60]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: The most important columns from the `nicstat` tool are `rAvs` (average size
    of packets received), `wAvs` (average size of packets transmitted), `%Util` (maximum
    utilization of the interface), and `Sat` (errors per second seen for the interface,
    and this can be a clue that the interface might be approaching saturation).
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`nicstat` 工具中最重要的列是 `rAvs`（接收数据包的平均大小）、`wAvs`（传输数据包的平均大小）、`%Util`（接口的最大利用率）和
    `Sat`（接口每秒的错误数，若出现这种情况，可能是接口接近饱和的迹象）。'
- en: 'At the end, administrators can gather statistics from a specific network interface
    by running the following command:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，管理员可以通过运行以下命令来收集特定网络接口的统计数据：
- en: '[PRE61]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'In the preceding command, the columns have the following meaning:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的命令中，各列的含义如下：
- en: '`LINK`: This refers to the name of the data link'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LINK`：指数据链路的名称'
- en: '`IPACKETS`: Number of packets received on this link'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IPACKETS`：通过该链路接收的包的数量'
- en: '`RBYTES`: Number of bytes received on this link'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RBYTES`：通过该链路接收的字节数'
- en: '`IERRORS`: Number of input errors'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IERRORS`：输入错误的数量'
- en: '`OPACKETS`: Number of packets sent on this link'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OPACKETS`：通过该链路发送的包的数量'
- en: '`OBYTES`: Number of bytes sent on this link'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBYTES`：通过该链路发送的字节数'
- en: '`OERRORS`: Number of output errors'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OERRORS`：输出错误的数量'
- en: An overview of the recipe
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 该配方的概述
- en: This chapter explained how to configure the syslog framework to record messages
    and events from the system. Additionally, we gave you a brief introduction to
    monitoring the performance of the Oracle Solaris 11 system using several commands
    such as `vmstat`, `sar`, `prstat`, `kstat`, `mdb`, `iostat`, and so on. We also
    used other tools such as DTrace and DTraceToolkit scripts to measure the performance
    on the Oracle Solaris 11 system.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了如何配置 syslog 框架以记录系统的消息和事件。此外，我们简要介绍了如何使用多个命令（如 `vmstat`、`sar`、`prstat`、`kstat`、`mdb`、`iostat`
    等）监控 Oracle Solaris 11 系统的性能。我们还使用了其他工具，如 DTrace 和 DTraceToolkit 脚本，来衡量 Oracle
    Solaris 11 系统的性能。
- en: References
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '*Solaris Performance and Tools: DTrace and MDB Techniques for Solaris 10 and
    OpenSolaris*; *Richard McDougall*, *Jim Mauro*, *Brendan Gregg*; *Prentice Hall*'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Solaris 性能与工具：DTrace 和 MDB 技术用于 Solaris 10 和 OpenSolaris*；*理查德·麦克杜戈尔*，*吉姆·毛罗*，*布伦丹·格雷格*；*普伦蒂斯·霍尔*'
- en: '*Solaris* *Internals: Solaris 10 and OpenSolaris Kernel Architecture (2nd Edition)*;
    *Richard McDougall*, *Jim Mauro*; *Prentice Hall*'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Solaris* *内部原理: Solaris 10 和 OpenSolaris 内核架构（第二版）*；*理查德·麦克杜戈尔*，*吉姆·毛罗*；*普伦蒂斯·霍尔*'
- en: '[http://solarisinternals.com/wiki/index.php/Solaris_Internals_and_Performance_FAQ](http://solarisinternals.com/wiki/index.php/Solaris_Internals_and_Performance_FAQ)'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://solarisinternals.com/wiki/index.php/Solaris_Internals_and_Performance_FAQ](http://solarisinternals.com/wiki/index.php/Solaris_Internals_and_Performance_FAQ)'
- en: '*Systems Performance: Enterprise and the Cloud*; *Brendan Gregg*; *Prentice
    Hall*'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*系统性能：企业与云*；*布伦丹·格雷格*；*普伦蒂斯·霍尔*'
- en: '[http://www.brendangregg.com/sysperfbook.html](http://www.brendangregg.com/sysperfbook.html)'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.brendangregg.com/sysperfbook.html](http://www.brendangregg.com/sysperfbook.html)'
- en: The DTraceToolkit website at [http://www.brendangregg.com/dtracetoolkit.html](http://www.brendangregg.com/dtracetoolkit.html)
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DTraceToolkit 网站：[http://www.brendangregg.com/dtracetoolkit.html](http://www.brendangregg.com/dtracetoolkit.html)
- en: The Brendan Gregg website at [http://www.brendangregg.com/](http://www.brendangregg.com/)
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Brendan Gregg 网站：[http://www.brendangregg.com/](http://www.brendangregg.com/)
- en: The Dtrace.org website at [http://dtrace.org/blogs/](http://dtrace.org/blogs/)
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dtrace.org 网站：[http://dtrace.org/blogs/](http://dtrace.org/blogs/)
