["```\n~# semanage fcontext –a –t httpd_sys_content_t \"/srv/web/zone/htdocs(/.*)?\"\n~# restorecon –RF /srv/web/zone/htdocs\n\n```", "```\n~# semanage export -f local_selinux.mods\n~# semanage import -f local_selinux.mods\n\n```", "```\n    ~# matchpathcon /service/log\n    /service/log  system_u:object_r:default_t\n\n    ```", "```\n    policy_module(mylogging, 0.2)\n    gen_require(`\n      type var_t;\n      type var_log_t;\n      type auditd_log_t;\n    ')\n    ```", "```\n    /service(/.*)?    gen_context(system_u:object_r:var_t,s0)\n    /service/log(/.*)?    gen_context(system_u:object_r:var_log_t,s0)\n    /service/log/audit(/.*)?    gen_context(system_u:object_r:auditd_log_t,s0)\n    /lxc/.*/log  -d  gen_context(system_u:object_r:var_log_t,s0)\n    /var/opt/oracle/listener\\.log  --  gen_context(system_u:object_r:var_log_t,s0)\n    ```", "```\n    ~$ make mylogging.pp\n    ~$ semodule –i mylogging.pp\n\n    ```", "```\n    ~# matchpathcon /service/log\n    /service/log  system_u:object_r:var_log_t\n\n    ```", "```\n<path>  [<class identifier>]  <context>\n```", "```\n/var/opt/oracle/listener\\.log\n```", "```\n/service(/.*)?\n```", "```\n~$ findcon /etc/selinux/mcs/contexts/files/file_contexts -p /var/log/aide\n/.*    system_u:object_r:default_t:s0\n/var/.*    system_u:object_r:var_t:s0\n/var/log/.*  system_u:object_r:var_log_t:s0\n/var/log/aide(/.*)?  system_u:object_r:aide_log_t:s0\n\n```", "```\n~# matchpathcon /var/log/aide\n/var/log/aide  system_u:object_r:aide_log_t:s0\n\n```", "```\ngen_context(system_u:object_r:var_t,s0)\n```", "```\n/proc  -d  <<none>>\n```", "```\n~# touch /.autorelabel\n~# reboot\n\n```", "```\n~# rlpkg -a -r\n\n```", "```\n~# fixfiles relabel\n\n```", "```\n~# semanage fcontext –a –e / /mnt/chroots/bind\n\n```", "```\n    ~# semanage fcontext -a -e / /mnt/chroot/bind\n\n    ```", "```\n    ~# semanage export -f local_selinux.mods\n\n    ```", "```\n    ~# semanage import -f local_selinux.mods\n\n    ```", "```\nfcontext -a -e / /mnt/chroot/bind\n```", "```\n~# semanage import -f local_selinux.mods\nValueError: Equivalence class for /mnt/chroot/bind already exists\n\n```", "```\ntype_transition <domain> <directory_label>:<resource_class> <specific_label>\n```", "```\ntype_transition <domain> <directory_label>:<resource_class> <specific_label> <filename>\n```", "```\n    ~$ sefindif filetrans.*snort_var_run_t\n\n    ```", "```\n    ~$ sefindif filetrans.*initrc_t\n    system/init.if: interface(`init_daemon_pid_file',`\n    system/init.if:   files_pid_filetrans(initrc_t, $1, $2, $3)\n\n    ```", "```\n    policy_module(mysnort, 0.1)\n    gen_require(`\n      type snort_t;\n      type snort_var_run_t;\n    ')\n    # If initrc_t creates a directory called \"snort\" in a var_run_t dir,\n    # make sure this one is immediately labeled as snort_var_run_t.\n    init_daemon_pid_file(snort_var_run_t, dir, \"snort\")\n    ```", "```\n    ~$ sesearch –s initrc_t –t var_run_t –T | grep \"snort\"\n    type_transition initrc_t var_run_t : dir snort_var_run_t \"snort\"\n\n    ```", "```\ninterface(`snort_generic_pid_filetrans_pid',`\n  gen_require(`\n    type snort_var_run_t;\n  ')\n  files_pid_filetrans($1, snort_var_run_t, dir, $2)\n')\n```", "```\nsnort_generic_pid_filetrans_pid(initrc_t, \"snort\")\n```", "```\n~$ sefindif snort_var_run_t\n~$ sefindif initrc_t\n\n```", "```\nallow initrc_t snort_var_run_t:file read;\n```", "```\nallow initrc_t snort_var_run_t:file { getattr lock open read ioctl }\n```", "```\nallow initrc_t snort_var_run_t:file read_file_perms;\n```", "```\n~$ seshowdef search_dir_perms\ndefine(`search_dir_perms',`{ getattr search open }')\n\n```", "```\n~$ seshowdef read_files_pattern\ndefine(`read_files_pattern',`\n allow $1 $2:dir search_dir_perms;\n allow $1 $3:file read_file_perms;\n')\n\n```", "```\nread_files_pattern(initrc_t, snort_var_run_t, snort_var_run_t)\n```", "```\n~$ sefinddef define.*_pattern\n\n```", "```\n~# semanage –s initrc_t –t var_run_t –T\nFound 2 semantic te rules:\n type_transition initrc_t var_run_t : file initrc_var_run_t;\n type_transition initrc_t var_run_t : dir initrc_var_run_t;\nFound 16 named file transition rules:\ntype_transition initrc_t var_run_t : dir udev_var_run_t \"udev\";\ntype_transition initrc_t var_run_t : dir tor_var_run_t \"tor\";\n…\n\n```", "```\n    ~$ cp ${POLICY_LOCATION}/policy/modules/contrib/snort.* ${DEVROOT}/local\n\n    ```", "```\n    init_ranged_daemon_domain(snort_t, snort_exec_t,  s3:mcs_allcats)\n    ```", "```\n    /usr/bin/snort  --  gen_context(system_u:object_r:snort_exec_t,s3)\n    ```", "```\n    ~# /etc/init.d/snort stop\n    ~# semodule –r snort\n    ~# semodule –i mysnort.pp\n\n    ```", "```\ninit_ranged_daemon_domain(snort_t, snort_exec_t, s3:mcs_allcats)\n```", "```\n~$ seshowif init_ranged_daemon_domain\ninterface(`init_ranged_daemon_domain',`\n gen_require(`\n type initrc_t;\n ')\n init_daemon_domain($1, $2)\n ifdef(`enable_mcs',`\n range_transition initrc_t $2:process $3;\n ')\n ifdef(`enable_mls',`\n range_transition initrc_t $2:process $3;\n mls_rangetrans_target($1)\n ')\n')\n\n```", "```\nmlsconstrain process transition\n  (( h1 dom h2 ) and\n   (( l1 eq l2 ) or ( t1 == mlsprocsetsl ) or\n    (( t1 == privrangetrans ) and ( t2 == mlsrangetrans ))));\n```", "```\n    s0:c100=CompanyX\n    s0-s0:c100=CompanyXClearance\n    s0:c101=CompanyY\n    s0-s0:c101=CompanyYClearance\n    ```", "```\n    ~$ chcat –L\n    s0    SystemLow\n    s0-s0:c0.c1023  SystemLow-SystemHigh\n    s0:c0.c1023  SystemHigh\n    s0:c100    CompanyX\n    s0-s0:c100  CompanyXClearance\n    s0:c101    CompanyY\n    s0-s0:c101  CompanyYClearance\n\n    ```", "```\n    ~# semanage user –a –L s0 –r CompanyXClearance –R \"user_r\" userX_u\n    ~# semanage user –a –L s0 –r CompanyYClearance –R \"user_r\" userY_u\n\n    ```", "```\n    ~# semanage login –m –s userX_u userX\n    ~# semanage login –m –s userX_u userY\n\n    ```", "```\n    ~# chcon –l CompanyX –R /srv/web/www.companyX.com/ /etc/apache/conf/companyX/\n    ~# chcon –l CompanyY –R /srv/web/www.companyY.com/ /etc/apache/conf/companyY/\n\n    ```", "```\n    LANG=$HTTPD_LANG daemon --pidfile=${pidfile} runcon –t httpd_t –l CompanyX $httpd $OPTIONS\n    ```", "```\n    ~# ps –efZ | grep httpd\n\n    ```", "```\ns0:c100    CompanyX\ns0-s0:c100  CompanyXClearance\n```", "```\n~$ chcon –l CompanyX public_html/index.html\n\n```", "```\n~# semanage login –m –r CompanyX user1\n\n```"]