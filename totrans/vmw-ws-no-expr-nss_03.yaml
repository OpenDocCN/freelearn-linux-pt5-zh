- en: Chapter 3. Working with Virtual Machines
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In many ways, working with virtual machines is like working with physical machines.
    In some aspects, there are important differences. In this chapter, you'll learn
    about these differences that can sometimes make working with virtual machines
    a bit of a challenge. In this chapter, you'll also learn how to deal with the
    various particularities of working in a virtual environment.
  prefs: []
  type: TYPE_NORMAL
- en: Performing common tasks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Even the most common tasks can be different in a virtual machine. It starts
    with the virtual machine window itself. Once you''re on it, the mouse cursor is
    captured. That means you''ll need to apply a special trick to get back to the
    host operating system. The common way to do this is by pressing *Ctrl* + *Alt*
    at the same time. But what if in the virtual operating system, the *Ctrl* + *Alt*
    keys sequence has a specific meaning? If that''s the case, you''ll need to define
    the hot keys that are used in your virtual environment. To do this, apply the
    following procedure:'
  prefs: []
  type: TYPE_NORMAL
- en: From the **Edit** menu, select the **Preferences** option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the bar on the left of the screen, select **Hot Keys**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You'll now see the interface that is shown in the following screenshot. By default,
    the *Ctrl* + *Alt* keys are used as the virtual machine hotkeys, and specific
    manipulations are assigned to these hotkeys.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the hotkeys that you want to be redefined. For instance, if you want
    to use *Shift* + **Win** as the default hotkeys, click on these buttons:![Performing
    common tasks](img/9182EN_03_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Assigning the hotkeys that you want to use
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Don't forget to deselect the hotkeys that you don't want to use anymore; you
    probably don't want to use key sequences such as *Ctrl* + *Shift* + *Alt* + **Win**
    all at the same time!
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that you have assigned the hotkeys that make sense to you, you can use
    them for some of the most common actions:'
  prefs: []
  type: TYPE_NORMAL
- en: Use the hotkeys to release control from the current machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use the hotkeys + *Enter* to enter or leave the fullscreen mode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use hotkeys + left arrow or right arrow to switch to the previous or the next
    virtual machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another common task is about **Updates**. You can access this feature from the
    **Preferences** menu as well. By default, VMware Workstation will check for updates
    on startup, and it will automatically update software components that you're using
    as well. That's just fine and there is no reason why you would want to change
    that.
  prefs: []
  type: TYPE_NORMAL
- en: A very useful update option that is not enabled by default is the update of
    VMware Tools. By default, the VMware Tools that are installed in a virtual machine
    are never updated. If you want the best possible performance for your virtual
    machine, it does make sense to update VMware Tools automatically as well. You
    should realize that using the latest version of VMware Tools ensures the best
    possible performance, especially on I/O-drivers. To do this select the **Updates**
    option from the **Preferences** tab and select **Automatically update VMware Tools
    on a virtual machine**.
  prefs: []
  type: TYPE_NORMAL
- en: Working with hardware
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Each virtual machine has hardware assigned. You have selected the hardware that
    you want to use while creating the virtual machine. On an installed virtual machine,
    you will frequently modify hardware settings as well. On some occasions, it will
    be necessary to assign a new virtual hardware but common tasks such as booting
    from a CD-ROM requires some specific action as well.
  prefs: []
  type: TYPE_NORMAL
- en: Booting your virtual machine from a CD-ROM
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are different ways to boot a virtual machine. You can either use a physical
    CD-ROM or a DVD disk or as an alternative, you can boot from an ISO file. Using
    ISO files is useful, as you don't have to make sure the physical disk is present
    for all operations you want to perform.
  prefs: []
  type: TYPE_NORMAL
- en: To tell your virtual machine where it needs to boot from, boot into **BIOS**
    to change the boot order. To enter the **BIOS** setup for the guest operating
    system, navigate to **VM** | **Power** | **Power On to BIOS**.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To make the boot delay a bit longer, you can add the following to the VMX file
    of your virtual machine: `bios.bootDelay = 1000`. This will give you 3 seconds
    of time to interfere with the boot process.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Booting a virtual machine from a CD-ROM can be a real challenge. This is because
    you''ll have a minimal amount of time to press the right key to boot from an optical
    disk while the virtual machine is booting, and also you need to make sure that
    you are connected to the right virtual CD-ROM. In the following procedure, you
    can read how it works:'
  prefs: []
  type: TYPE_NORMAL
- en: Restart your virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you see the virtual machine **BIOS** loading, immediately click on the
    virtual machine window and press the *Esc* key. This will show the **BIOS** menu
    (see the following screenshot):![Booting your virtual machine from a CD-ROM](img/9182EN_03_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The virtual machine's BIOS boot menu
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Don't select CD-ROM from the virtual machine **BIOS** yet but open the **VM**
    menu, navigate to **Removable Devices** | **CD/DVD**, and click on **Settings**.
    This opens the virtual machine's hardware settings window with **CD/DVD** selected.
    Make sure that you've selected either the correct physical drive that contains
    the CD-ROM disk that you want to use or use an image file to select an ISO image
    file.![Booting your virtual machine from a CD-ROM](img/9182EN_03_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Selecting the CD-ROM disk you want to use
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on **OK** to save the selected optical disk.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Get back to **BIOS Boot Menu** of your virtual machine and select **CD-ROM Drive**.
    The virtual machine will now boot from the CD-ROM disk.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Modifying virtual hardware
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you created your virtual machine, you also selected the hardware that you
    want to use. One of the benefits of working with virtual machines is that it is
    easy to change the hardware settings later if needed. To access the current hardware
    settings, right-click on **virtual machine** and select the **Settings** option.
    From here, you can see all the hardware that is currently selected and change
    the hardware assignments as well. If VMware Tools are installed, some setting
    will even be applied directly to the virtual machine without the need to reboot
    it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Modifying virtual hardware](img/9182EN_03_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Changing the virtual machine's hardware settings
  prefs: []
  type: TYPE_NORMAL
- en: While adding virtual hardware, in most cases, you can be very specific about
    the properties of the hardware that is added. In the following procedure, you'll
    read how to add a disk and configure some advanced disk properties. Especially
    when setting up test environments that need to mirror the production environment,
    it can be important to specify properties such as the SCSI ID or disk type.
  prefs: []
  type: TYPE_NORMAL
- en: Right-click on the virtual machine to which you want to add a new disk and open
    the **Settings** menu item. In this example, I'll add a disk to a Linux VM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Add** and from the **Hardware Type** window, select **Hard Disk**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Create a new virtual disk** and click on **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At this point, you can specify whether you want the disk to be an independent
    disk or not. This is an important choice with regard to snapshots; independent
    disks are not affected by snapshots (discussed in detail in [Chapter 8](ch08.html
    "Chapter 8. Cloning and Snapshots"), *Cloning and Snapshots*, of this book). When
    you make a snapshot of a disk, the disk needs to be stopped for a short moment.
    For some services (such as databases), you really don't want a disk to be stopped
    even if it is just for a short moment. In those cases, it makes sense to configure
    the disk as an independent disk, but be aware that you won't be able to create
    a snapshot of such a disk.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When creating an independent disk, you need to specify how changes are handled.
    The default behavior is to write them directly to the disk. Another option is
    to make the changes nonpersistent, which means that you will lose them if you
    power off the virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After specifying which type of disk you want to use, you need to configure the
    disk capacity. An important part of the configuration is whether or not you want
    to allocate all disk space now. By default, thin provisioning is used, which means
    that the disk space is only allocated at the moment when it is actually needed.
    Thin provisioning means that the available disk space on the host operating system
    is used as efficiently as possible but there is a performance penalty. If the
    available disk space on the host is not important, and performance is, you had
    better select the **Allocate all disk space now** option. With this option, you
    will make sure that all disk space is reserved, which offers best performance
    for your VM. You also need to specify whether you want the disk to be created
    as a single file or as multiple files. Using multiple files makes it easier to
    move a virtual machine to another computer, especially if the `FAT32` file system
    is used on that computer, which has a limited maximal file size. On large disks,
    you will however pay a performance price when working with multiple files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After specifying the name of the disk file, the file is created and written
    to the disk. After creating it, you can click on the **Advanced** button to specify
    some of its properties. In some cases, the order in which the disk is presented
    to the virtual machine can be important. You can specify this order by selecting
    the **SCSI** ID. If you want a disk to be presented as the first disk in the virtual
    operating system (which ensures that it is the bootable device), make sure to
    configure it as `SCSI 0:0` and click on **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Changing the order in which disks are presented can have the result that the
    virtual machine won't boot anymore. Make sure that you know what you're doing
    before selecting this option.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'After clicking on **OK,** the new hardware settings are written to the virtual
    machine. This doesn''t activate the new hardware immediately though. On Linux,
    after adding a SCSI disk, you can tell Linux to reread its disks, which will make
    the new device available immediately. After adding the new disk as the user root,
    use the following command to make the new disk available without having to reboot
    the VM:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Working with shared folders
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A very useful feature in VMware Workstation is shared folders. Using shared
    folders allows you to easily share files between the host operating system and
    VMware Workstation. Using shared folders allows you to get access to a shared
    folder on the host computer in the virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'To work with shared folders, you need to enable them in the virtual machine.
    Once enabled, you can access them from the virtual machine''s operating system.
    In the following procedure, you can read how it works:'
  prefs: []
  type: TYPE_NORMAL
- en: Working with shared folders starts on the virtual machine where you want to
    use it. So make sure that the virtual machine where you want to use it is started.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the virtual machine is started, select **Settings** from the **VM** menu
    and click on the **Options** tab. From this tab, select the **Shared Folders**
    item.![Working with shared folders](img/9182EN_03_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enabling shared folders on the virtual machine
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To enable shared folders, you can select **Always enabled** or **Enabled until
    next power off or suspend**. If you're just looking for an easy way to exchange
    files, the latter method works best. If you want the files on the shared folder
    to be always accessible, select **Always enabled**. If you're enabling shared
    folders for Windows guests, you can indicate that you want to see the shared folder
    as a network drive in Windows guests.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After specifying how you want to use shared folders, click on **Add** to start
    the **Shared Folder** wizard. In the first step of this wizard, you'll need to
    select a path on the host computer. Use the **Browse** button to select the appropriate
    path and give it a name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, you'll specify how to share this folder. Click on **Enable this share**
    for access in full read/write mode, or **Read-only** if you just want to allow
    files to be read. Next click on **OK**. The shared folder will now be available
    in the virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To access a shared folder from a Linux virtual machine, go to the `/mnt/hgfs`
    directory. The shared folder is mounted there by default. On a Windows virtual
    machine, you can map a network drive to access the shared folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Setting virtual machine options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You've just worked with the virtual machine options item to enable shared folders.
    There are some other settings that you can select from this tab. Some of the most
    interesting options are discussed in this section.
  prefs: []
  type: TYPE_NORMAL
- en: Automatic snapshots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When working with a virtual machine, you can have a snapshot created automatically.
    A snapshot is like a picture of the current state of a virtual machine that allows
    you to go back to that specific state in an easy way. As an additional protection
    for virtual machines, you can have snapshots created automatically when powering
    off. However, using snapshots may be dangerous if you don't know what you're doing;
    they do use disk space and by using snapshots, you risk running out of available
    disk space. Also, performance will worsen if there are snapshots for your virtual
    machines.
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable the automatic snapshot feature, access the **Snapshots** menu option
    and select between the following when powering off the options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Just power off**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Revert to snapshot**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Take a new snapshot**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ask me**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notice that the **Revert to snapshot** option is a potentially dangerous option;
    it will reset your virtual machine to the state it was in when the last snapshot
    was created, and you will lose all the changes that you've made since.
  prefs: []
  type: TYPE_NORMAL
- en: The **AutoProtect** feature that you can also find in the virtual machine's
    **Options** menu is related to snapshots. You can use this feature to automatically
    create snapshots according to the parameters that you've specified. This is a
    useful feature that always allows you to get back to a reasonably recent state
    of the virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: '![Automatic snapshots](img/9182EN_03_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: When using AutoProtect, you're sure that you can always revert to a recent state
    of the virtual machine
  prefs: []
  type: TYPE_NORMAL
- en: Time synchronization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In virtualized environments, time keeping may be a problem. This is because
    time is based on CPU ticks, and in a VMware Workstation virtual environment, virtual
    machines don't use CPU ticks the way normal computers do. Therefore, you might
    see huge time drifting if you don't take the appropriate measures. At the other
    end, time synchronization is essential because many services rely on the appropriate
    time.
  prefs: []
  type: TYPE_NORMAL
- en: On the VMware Tools menu option, you'll find an interesting option as well.
    This option specifies whether you want to use time synchronization or not. By
    default, the virtual machine doesn't synchronize time with the host. Because of
    virtual machine's inherent features, this may lead to a time that significantly
    differs from the real time. To avoid issues, it is a good idea to have the virtual
    machine synchronize time with the host and to configure NTP time synchronization
    on the host, which ensures that a reliable time is used on the host as well.
  prefs: []
  type: TYPE_NORMAL
- en: VNC connections
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To access a virtual machine, you can configure remote access within the Virtual
    Machine itself. If, however, you're looking for a more standard method of enabling
    remote access which works for all virtual machines, no matter which operating
    system you're using, VNC connections is an interesting option. With VNC, you'll
    share access from the VMware Workstation host to the entire virtual machine screen.
    The benefit of this approach is that you can use it to access all virtual machines
    no matter what operating system is running inside. There is an inconvenience to
    using VNC though; data that is sent over a VNC connection is not encrypted by
    default. This means you should only use it to access virtual machines that are
    on a network connection which you trust completely.
  prefs: []
  type: TYPE_NORMAL
- en: To enable a VNC access to virtual machines, you need to select the Enable VNC
    connections option on each virtual machine (VM) where you want to use it. Next,
    you'll need to specify a VNC Port. Every VNC connection will use its own port,
    so you might end up with one VNC process that is listening on several ports on
    your host and that is fine. It's also a very good idea to protect each VNC session
    with a password. If you don't use a password, anyone can just connect to the active
    sessions on the virtual machine and that is a huge threat to security!
  prefs: []
  type: TYPE_NORMAL
- en: After setting up VNC for virtual machines, you'll need to make sure that you
    have a VNC client on the remote computer. Different VNC clients are available
    for free, and you can find one on, for instance, [www.realvnc.com](http://www.realvnc.com).
  prefs: []
  type: TYPE_NORMAL
- en: Securing virtual machines
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While using VNC means that you'll weaken security on the virtual machines, you
    can also choose to add some extra protection. You'll find related options on the
    **Options** tab of each virtual machine (navigate to **VM** | **Settings** | **Options**).
    The name of the related option is **Access Control**, and you can use it to set
    different kinds of protection.
  prefs: []
  type: TYPE_NORMAL
- en: First, you can encrypt the virtual machine. This process is equivalent to the
    encryption of an entire hard disk and if you use it, the virtual machine's disk
    file won't be accessible without entering the appropriate password. Using this
    option is recommended if you want to make sure that you can trust the virtual
    machine in an environment where you cannot be sure whether you can trust the host
    on which it's running. To enable encryption on a virtual machine, you must first
    shut down the virtual machine before starting the encryption process. Be aware
    that it may take a long time for the encryption process to complete, depending
    on the size of the hard disk where you're applying it to.
  prefs: []
  type: TYPE_NORMAL
- en: After encrypting a virtual machine, you can either remove the encryption or
    change the encryption password. To do this, first make sure that the virtual machine
    is powered off; you'll now see the **Change Password** option and the **Remove
    Encryption** option under **Access Control**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Securing virtual machines](img/9182EN_03_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Use encryption if you want to prevent unauthorized access to the virtual machine
  prefs: []
  type: TYPE_NORMAL
- en: On using **Encryption**, just the contents of the virtual machine are encrypted.
    Users will still be allowed to change the virtual machine's configuration. If
    you want to prevent this, you should use restrictions as well. After selecting
    **Enable restrictions**, each user who wants to change the configuration of a
    virtual machine must first enter **Restrictions password**.
  prefs: []
  type: TYPE_NORMAL
- en: As related options, you can also enforce that the encryption password must be
    used after moving it. This is a good approach to ensure the security of the passwords
    that you're using; a password loses its strength if it's used on multiple locations.
    Also from the **Access Control** tab, you can find an option to disallow USB keys
    to connect to the virtual machine. By applying all of these options, you'll be
    able to add a reasonable level of security to your virtual machines.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you've learned how to work with virtual machines. Different
    tasks have been discussed, from connecting virtual hardware to changing settings
    that relate to the security and remote access of virtual machines. In the next
    chapter, you'll learn what's going on behind the scenes, and the configuration
    of virtual machines as it exists on the host operating system is discussed in
    more detail.
  prefs: []
  type: TYPE_NORMAL
