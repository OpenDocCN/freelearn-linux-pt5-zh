["```\n% echo 'this is a quoted phrase'\n> this is a quoted phrase\n\n```", "```\n% print 'this is a quoted phrase'\n> this is a quoted phrase\n\n```", "```\n% echo this is a backslash: \\\n~>\n\n```", "```\n% echo 'this is a backslash: \\'\n> this is a backslash: \\\n\n```", "```\n% echo 'special characters like * # and \\ need to be quoted'\n> special characters like * # and \\ need to be quoted\n\n```", "```\n% echo \\*.rb\n\n```", "```\n% echo \\\\\n> \\\n\n```", "```\n% string=\"This is a *string* with various 'special' characters\"\n% echo ${(q)string}\n> this\\ is\\ a\\ \\*string\\*\\ with\\ various\\ \\'special\\'\\ characters\n```", "```\n% setopt rcquotes\n% echo 'a single ''quoted'' string'\n> a single ''quoted'' string\n```", "```\n% echo \"My username is $(whoami) and my home folder is located at '$HOME'.\"\n> My username is gfestari and my home folder is located at '/Users/gfestari'.\n\n```", "```\n% echo *\nREADME.md todo.txt draft.txt new_file.txt\n\n```", "```\n% echo *.txt\ntodo.txt draft.txt new_file.txt\n\n```", "```\n% echo *folder\nout_folder src_folder\n\n```", "```\n% setopt nocaseglob\n% echo *.jpg\nphoto.jpg pic.JPG\n```", "```\n% echo .*zsh*\n.zsh_aliases .zsh_funcs .zsh_history .zsh_prompt .zshenv .zshrc\n\n```", "```\n% echo *.??\nscript.sh\n\n```", "```\n% echo main.?*\nmain.c main.o main.tmp\n\n```", "```\n% ls\nLog.log Main.rb README.md script.sh\n% echo [ML]*\nLog.log Main.rb\n\n```", "```\n% echo *.log_[1-9]\nout.log_1 out.log_2 out.log_3\n\n```", "```\n% echo [1-5M]*.*\nMain.rb\n\n```", "```\n% echo [[:alpha:]]*\n\n```", "```\n% echo [[:digit:]b]*.c\nbindings.c\n\n```", "```\n% ls\nbindings.c  bindings.h  bindings.o  main.c  main.o\n\n```", "```\n% echo *.[hc]\nbindings.c bindings.h main.c\n\n```", "```\n% echo *.[^o]\nbindings.c bindings.h main.c\n\n```", "```\n% echo [^[:upper:]]*\n```", "```\n% ls\nbindings.c  bindings.h  bindings.o  main.c  main.o\n\n% echo *.zip\nzsh: no matches found: *.zip\n\n```", "```\n% setopt null_glob\n% echo *.zip\n> \n\n```", "```\n% echo *.c *.zip\nbindings.c main.c\n\n```", "```\n% unsetopt nomatch\n% echo *.zip\n*.zip\n\n```", "```\n% setopt csh_null_glob\n% echo *.zip\nzsh: no match\n\n```", "```\n% echo *.c *.zip\nbindings.c main.c\n\n```", "```\n% echo *[[:alpha:]\nzsh: bad pattern: *[[:alpha:]\n\n```", "```\n% setopt no_bad_pattern\n% echo *[[:alpha:]\n*[[:alpha:]\n\n```", "```\nsetopt EXTENDED_GLOB\n```", "```\n% echo **/*.md\nREADME.md brew/README.md git/README.md scripts/README.md zsh/README.md\n\n```", "```\n% find **/*.md | xargs echo\n\n```", "```\n% echo */**/*.md\n\n```", "```\n% echo [[:upper:]]*.(md|txt)\nREADME.md README.txt\n\n```", "```\n% ls\nlog.txt      log_002.txt  log_010.txt  log_031.txt\nlog_001.txt  log_009.txt  log_030.txt\n\n```", "```\n% echo log_<->.txt\nlog_001.txt log_002.txt log_009.txt log_010.txt log_030.txt log_031.txt\n\n```", "```\n% echo log_<10->.txt\nlog_010.txt log_030.txt log_031.txt\n\n```", "```\n% echo log_<10-20>.txt\nlog_010.txt\n\n```", "```\n% setopt numericglobsort\n% echo log_*\nlog_001.txt log_002.txt log_009.txt log_010.txt log_030.txt log_031.txt\n\n```", "```\n% ls\nREADME.md  README.txt  bindings.c  bindings.h  bindings.o  main.c  main.o\n\n% echo b^*.o\nbindings.c bindings.h\n\n```", "```\n% echo '^c'\n\n```", "```\n% ls\nREADME.md  README.txt  bindings.c  bindings.h  bindings.o  main.c  main.o\n\n% echo b*~*.o\nbindings.c bindings.h\n\n```", "```\n% ls tmp\ndelete_me.sh  out.txt\n\n% echo **/*.sh~tmp/*\nsrc/script.sh\n\n```", "```\n% echo *tmp(/) \ntmp\n\n```", "```\n% ls -F\nREADME.txt  script.zsh  zsh/  src/\n\n```", "```\n% echo *zsh(.)\nscript.zsh\n\n```", "```\n% echo *zsh*<Tab>*\n\n```", "```\n% echo *(mh-1)\n\n```", "```\n% echo *(m-5mh+2)\n\n```", "```\nautoload zmv\n```", "```\nzmv [OPTIONS] old_pattern new_pattern\n```", "```\n% zmv -Wv '*.txt' '*.rb'\nmv -- README.txt README.md\n\n```", "```\nalias mmv='noglob zmv -W'\n```", "```\n% mmv *.c.orig orig/*.c\n\n```", "```\n% ls foo\n% zmv -n '(*)' '${(U)1}''mv -- foo FOO\n```", "```\n% zmv '(**/)(*).(#i)jpg' '$1$2.jpg'\n\n```"]