["```\n $ ifconfig \n lo        Link encap:Local Loopback \n inet addr:127.0.0.1  Mask:255.0.0.0 \n inet6addr: ::1/128 Scope:Host \n UP LOOPBACK RUNNING  MTU:16436  Metric:1 \n RX packets:6078 errors:0 dropped:0 overruns:0 frame:0 \n TX packets:6078 errors:0 dropped:0 overruns:0 carrier:0 \n collisions:0 txqueuelen:0 \n RX bytes:634520 (634.5 KB)  TX bytes:634520 (634.5 KB) \n wlan0     Link encap:EthernetHWaddr 00:1c:bf:87:25:d2 \n inet addr:192.168.0.82  Bcast:192.168.3.255  Mask:255.255.252.0 \n inet6addr: fe80::21c:bfff:fe87:25d2/64 Scope:Link \n UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1 \n RX packets:420917 errors:0 dropped:0 overruns:0 frame:0 \n TX packets:86820 errors:0 dropped:0 overruns:0 carrier:0 \n collisions:0 txqueuelen:1000 \n RX bytes:98027420 (98.0 MB)  TX bytes:22602672 (22.6 MB) \n\n```", "```\n # ifconfig wlan0 192.168.0.80 \n\n```", "```\n # ifconfig wlan0 192.168.0.80  netmask 255.255.252.0 \n\n```", "```\n # dhclient eth0 \n\n```", "```\n$ ifconfig | cut -c-10 | tr -d ' ' | tr -s 'n' \nlo \nwlan0 \n\n```", "```\n$ ifconfig iface_name \n\n```", "```\n$ ifconfig wlan0 \nwlan0     Link encap:EthernetHWaddr 00:1c:bf:87:25:d2 \ninet addr:192.168.0.82 Bcast:192.168.3.255 Mask:255.255.252.0 \ninet6 addr: fe80::3a2c:4aff:6e6e:17a9/64 Scope:Link \nUP BROADCAST RUNNINT MULTICAST  MTU:1500 Metric:1 \nRX Packets... \n\n```", "```\n$ ifconfig wlan0 | egrep -o \"inetaddr:[^ ]*\" | grep -o \"[0-9.]*\" \n192.168.0.82 \n\n```", "```\n# ifconfig eth0 hw ether 00:1c:bf:87:25:d5 \n\n```", "```\n$ cat /etc/resolv.conf \n# Local nameserver \nnameserver 192.168.1.1 \n# External nameserver \nnameserver 8.8.8.8 \n\n```", "```\n# sudo echo nameserver IP_ADDRESS >> /etc/resolv.conf \n\n```", "```\n$ ping google.com \nPING google.com (64.233.181.106) 56(84) bytes of data. \n\n```", "```\n$ host google.com \ngoogle.com has address 64.233.181.105 \ngoogle.com has address 64.233.181.99 \ngoogle.com has address 64.233.181.147 \ngoogle.com has address 64.233.181.106 \ngoogle.com has address 64.233.181.103 \ngoogle.com has address 64.233.181.104 \n\n```", "```\n$ nslookup google.com \nServer:    8.8.8.8 \nAddress:  8.8.8.8#53 \n\nNon-authoritative answer: \nName:  google.com \nAddress: 64.233.181.105 \nName:  google.com \nAddress: 64.233.181.99 \nName:  google.com \nAddress: 64.233.181.147 \nName:  google.com \nAddress: 64.233.181.106 \nName:  google.com \nAddress: 64.233.181.103 \nName:  google.com \nAddress: 64.233.181.104 \n\nServer:    8.8.8.8 \n\n```", "```\nIP_ADDRESS name1 name2 ... \n\n```", "```\n# echo IP_ADDRESS symbolic_name>> /etc/hosts \n\n```", "```\n# echo 192.168.0.9 backupserver>> /etc/hosts \n\n```", "```\n# echo 192.168.0.9 backupserver backupserver.example.com >> /etc/hosts \n\n```", "```\n$ route \nKernel IP routing table \nDestination      Gateway   GenmaskFlags  Metric  Ref  UseIface \n192.168.0.0         *      255.255.252.0  U     2      0     0wlan0 \nlink-local          *      255.255.0.0    U     1000   0     0wlan0 \ndefault          p4.local  0.0.0.0        UG    0      0     0wlan0 \n\n```", "```\n$ route -n \nKernel IP routing table \nDestination   Gateway      Genmask       Flags Metric Ref  UseIface \n192.168.0.0   0.0.0.0      255.255.252.0   U     2     0     0   wlan0 \n169.254.0.0   0.0.0.0      255.255.0.0     U     1000  0     0   wlan0 \n0.0.0.0       192.168.0.4  0.0.0.0         UG    0     0     0   wlan0 \n\n```", "```\n# route add default gw IP_ADDRESS INTERFACE_NAME \n\n```", "```\n# route add default gw 192.168.0.1 wlan0 \n\n```", "```\n$ ping ADDRESS \n\n```", "```\n $ ping 192.168.0.1 \n PING 192.168.0.1 (192.168.0.1) 56(84) bytes of data. \n 64 bytes from 192.168.0.1: icmp_seq=1 ttl=64 time=1.44 ms \n ^C \n --- 192.168.0.1 ping statistics --- \n 1 packets transmitted, 1 received, 0% packet loss, time 0ms \n rtt min/avg/max/mdev = 1.440/1.440/1.440/0.000 ms \n\n $ ping google.com \n PING google.com (209.85.153.104) 56(84) bytes of data. \n 64 bytes from bom01s01-in-f104.1e100.net (209.85.153.104):    \n        icmp_seq=1 ttl=53 time=123 ms \n ^C \n --- google.com ping statistics --- \n 1 packets transmitted, 1 received, 0% packet loss, time 0ms \n rtt min/avg/max/mdev = 123.388/123.388/123.388/0.000 ms \n\n```", "```\n $ ping 192.168.0.99 \n PING 192.168.0.99 (192.168.0.99) 56(84) bytes of data. \n From 192.168.0.82 icmp_seq=1 Destination Host Unreachable \n From 192.168.0.82 icmp_seq=2 Destination Host Unreachable \n\n```", "```\n--- google.com ping statistics --- \n5 packets transmitted, 5 received, 0% packet loss, time 4000ms \nrtt min/avg/max/mdev = 118.012/206.630/347.186/77.713 ms \n\n```", "```\n$> ping example.com \n64 bytes from example.com (1.2.3.4): icmp_seq=1 ttl=37 time=127.2 ms \n64 bytes from example.com (1.2.3.4): icmp_seq=3 ttl=37 time=150.2 ms \n64 bytes from example.com (1.2.3.4): icmp_seq=2 ttl=30 time=1500.3 ms \n\n```", "```\n$> ping 127.0.0.1 \n64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.049 ms \n$> ping www.google.com \n64 bytes from 173.194.68.99: icmp_seq=1 ttl=45 time=49.4 ms \n\n```", "```\n-c COUNT \n\n```", "```\n$ ping 192.168.0.1 -c 2  \nPING 192.168.0.1 (192.168.0.1) 56(84) bytes of data.  \n64 bytes from 192.168.0.1: icmp_seq=1 ttl=64 time=4.02 ms \n64 bytes from 192.168.0.1: icmp_seq=2 ttl=64 time=1.03 ms \n\n--- 192.168.0.1 ping statistics ---  \n2 packets transmitted, 2 received, 0% packet loss, time 1001ms  \nrtt min/avg/max/mdev = 1.039/2.533/4.028/1.495 ms \n\n```", "```\n$ ping domain -c2 \nif [ $? -eq0 ]; \nthen \n echo Successful ; \nelse \n echo Failure \nfi \n\n```", "```\ntraceroute destinationIP \n\n```", "```\n$ traceroute google.com \ntraceroute to google.com (74.125.77.104), 30 hops max, 60 byte packets \n1  gw-c6509.lxb.as5577.net (195.26.4.1)  0.313 ms  0.371 ms  0.457 ms \n2  40g.lxb-fra.as5577.net (83.243.12.2)  4.684 ms  4.754 ms  4.823 ms \n3  de-cix10.net.google.com (80.81.192.108)  5.312 ms  5.348 ms  5.327 ms \n4  209.85.255.170 (209.85.255.170)  5.816 ms  5.791 ms 209.85.255.172 (209.85.255.172)  5.678 ms \n5  209.85.250.140 (209.85.250.140)  10.126 ms  9.867 ms  10.754 ms \n6  64.233.175.246 (64.233.175.246)  12.940 ms 72.14.233.114 (72.14.233.114)  13.736 ms  13.803 ms \n7  72.14.239.199 (72.14.239.199)  14.618 ms 209.85.255.166 (209.85.255.166)  12.755 ms 209.85.255.143 (209.85.255.143)  13.803 ms \n8  209.85.255.98 (209.85.255.98)  22.625 ms 209.85.255.110 (209.85.255.110)  14.122 ms \n*  \n9  ew-in-f104.1e100.net (74.125.77.104)  13.061 ms  13.256 ms  13.484 ms \n\n```", "```\n#!/bin/bash \n#Filename: ping.sh \n# Change base address 192.168.0 according to your network. \n\nfor ip in 192.168.0.{1..255} ; \ndo \n ping $ip -c 2 &> /dev/null ; \n\n if [ $? -eq 0 ]; \n then \n echo $ip is alive \n fi \ndone \n\n```", "```\n$ ./ping.sh \n192.168.0.1 is alive \n192.168.0.90 is alive \n\n```", "```\n#!/bin/bash \n#Filename: fast_ping.sh \n# Change base address 192.168.0 according to your network. \n\nfor ip in 192.168.0.{1..255} ; \ndo \n   ( \n      ping $ip -c2 &> /dev/null ; \n\n      if [ $? -eq0 ]; \n      then \n       echo $ip is alive \n      fi \n   )& \n  done \nwait \n\n```", "```\n $ fping -a 192.160.1/24 -g \n\n```", "```\n $ fping -a 192.160.1 192.168.0.255 -g \n\n```", "```\n$ fping -a 192.168.0.1 192.168.0.5 192.168.0.6 \n# Passes IP address as arguments \n$ fping -a <ip.list \n# Passes a list of IP addresses from a file \n\n```", "```\n $ ssh username@remote_host \n\n```", "```\n $ ssh mec@192.168.0.1 \n The authenticity of host '192.168.0.1 (192.168.0.1)' can't be   \n        established. \n RSA key fingerprint is   \n        2b:b4:90:79:49:0a:f1:b3:8a:db:9f:73:2d:75:d6:f9. \n Are you sure you want to continue connecting (yes/no)? yes \n Warning: Permanently added '192.168.0.1' (RSA) to the list of   \n        known hosts. \n Password: \n\n Last login: Fri Sep  3 05:15:21 2010 from 192.168.0.82 \n mec@proxy-1:~$ \n\n```", "```\n $ ssh user@locahost -p 422 \n\n```", "```\n $ sshuser@host 'COMMANDS' \n\n```", "```\n $ ssh mec@192.168.0.1 'whoami' \n mec\n\n```", "```\n $ ssh user@host \"command1 ; command2 ; command3\" \n\n```", "```\n $ ssh mec@192.168.0.1  \"echo user: $(whoami);echo OS: $(uname)\" \n Password: user: mec OS: Linux \n\n```", "```\n echo user: $(whoami); \n echo OS: $(uname) \n\n```", "```\n #!/bin/bash \n #Filename: uptime.sh \n #Description: Uptime monitor \n\n IP_LIST=\"192.168.0.1 192.168.0.5 192.168.0.9\" \n USER=\"test\" \n\n for IP in $IP_LIST; \n do \n utime=$(ssh ${USER}@${IP} uptime  |awk '{ print $3 }' ) \n echo $IP uptime:  $utime \n done \n\n```", "```\n $ ./uptime.sh \n 192.168.0.1 uptime: 1:50, \n 192.168.0.5 uptime: 2:15, \n 192.168.0.9 uptime: 10:15, \n\n```", "```\n$ ssh -C user@hostname COMMANDS \n\n```", "```\n$ echo 'text' | ssh user@remote_host 'echo' \ntext \n\n```", "```\n# Redirect data from file as: \n$ ssh user@remote_host 'echo'  < file \n\n```", "```\n$> tar -czf - LOCALFOLDER | ssh 'tar -xzvf-' \n\n```", "```\nssh user@host \"export DISPLAY=:0 ; command1; command2\"\"\" \n\n```", "```\nssh -X user@host \"command1; command2\" \n\n```", "```\n$ lftpusername@ftphost \n\n```", "```\nlftp username@ftphost:~> \n\n```", "```\n lftp username@ftphost:~> get filename \n\n```", "```\n lftp username@ftphost:~> put filename \n\n```", "```\n#!/bin/bash \n\n#Automated FTP transfer \nHOST=example.com' \nUSER='foo' \nPASSWD='password' \nlftp  -u ${USER}:${PASSWD} $HOST <<EOF \n\nbinary \ncd /home/foo \nput testfile.jpg \n\nquit \nEOF \n\n```", "```\n<<EOF \nDATA \nEOF \n\n```", "```\n$ sftp user@domainname \n\n```", "```\n$ sftp -oPort=422 user@slynux.org \n\n```", "```\n$ scp filename user@remotehost:/home/path \n\n```", "```\n$ scp SOURCE DESTINATION \n\n```", "```\n$ scp user@remotehost:/home/path/filename filename \n\n```", "```\n$ scp -r /home/usernameuser@remotehost:/home/backups \n# Copies the directory /home/usernameto the remote backup \n\n```", "```\n#!/bin/bash \n#Filename: wlan_connect.sh \n#Description: Connect to Wireless LAN \n\n#Modify the parameters below according to your settings \n######### PARAMETERS ########### \nIFACE=wlan0 \nIP_ADDR=192.168.1.5 \nSUBNET_MASK=255.255.255.0 \nGW=192.168.1.1 \nHW_ADDR='00:1c:bf:87:25:d2' \n#Comment above line if you don't want to spoof mac address \n\nESSID=\"homenet\" \nWEP_KEY=8b140b20e7 \nFREQ=2.462G \n################################# \n\nKEY_PART=\"\" \n\nif [[ -n $WEP_KEY ]]; \nthen \n KEY_PART=\"key $WEP_KEY\" \nfi \n\nif [ $UID -ne 0 ]; \nthen \n echo \"Run as root\" \n exit 1; \nfi \n\n# Shut down the interface before setting new config \n/sbin/ifconfig $IFACE down \n\nif [[ -n $HW_ADDR  ]]; \nthen \n /sbin/ifconfig $IFACE hw ether $HW_ADDR \n echo Spoofed MAC ADDRESS to $HW_ADDR \nfi \n\n/sbin/iwconfig $IFACE essid $ESSID $KEY_PART freq $FREQ \n\n/sbin/ifconfig $IFACE $IP_ADDR netmask $SUBNET_MASK \n\nroute add default gw $GW $IFACE \n\necho Successfully configured $IFACE \n\n```", "```\n# iwlist scan \nwlan0     Scan completed : \n Cell 01 - Address: 00:12:17:7B:1C:65 \n Channel:11 \n Frequency:2.462 GHz (Channel 11) \n Quality=33/70  Signal level=-77 dBm \n Encryption key:on \n ESSID:\"model-2\" \n\n```", "```\n$ ssh-keygen -t rsa \nGenerating public/private rsa key pair.  \nEnter file in which to save the key (/home/username/.ssh/id_rsa):  \nCreated directory '/home/username/.ssh'.  \nEnter passphrase (empty for no passphrase):  \nEnter same passphrase again:  \nYour identification has been saved in /home/username/.ssh/id_rsa.  \nYour public key has been saved in /home/username/.ssh/id_rsa.pub.  \nThe key fingerprint is:  \nf7:17:c6:4d:c9:ee:17:00:af:0f:b3:27:a6:9c:0a:05 username@slynux-laptop \nThe key'srandomart image is:  \n+--[ RSA 2048]----+  \n|           .     |  \n|            o . .| \n|     E       o o.| \n|      ...oo |  \n|       .S .+  +o.|  \n|      .  . .=....|  \n|     .+.o...|  \n|      . . + o.  .| \n|       ..+       |  \n+-----------------+  \n\n```", "```\n$ ssh USER@REMOTE_HOST \\\n    \"cat >> ~/.ssh/authorized_keys\" < ~/.ssh/id_rsa.pub\nPassword:\n\n```", "```\n$ ssh USER@REMOTE_HOST uname \nLinux \n\n```", "```\nssh-copy-id USER@REMOTE_HOST \n\n```", "```\n ssh -L 8000:www.kernel.org:80user@localhost \n\n```", "```\n ssh -L 8000:www.kernel.org:80user@REMOTE_MACHINE \n\n```", "```\nssh -fL8000:www.kernel.org:80user@localhost -N \n\n```", "```\nssh -R 8000:localhost:80 user@REMOTE_MACHINE \n\n```", "```\n# sshfs -o allow_otheruser@remotehost:/home/path /mnt/mountpoint \nPassword: \n\n```", "```\n# umount /mnt/mountpoint \n\n```", "```\n$ lsof -i \nCOMMAND    PID   USER   FD   TYPE DEVICE SIZE/OFF NODE \n    NAME\n\nfirefox-b 2261 slynux   78u  IPv4  63729      0t0  TCP \n    localhost:47797->localhost:42486 (ESTABLISHED)\n\nfirefox-b 2261 slynux   80u  IPv4  68270      0t0  TCP \n    slynux-laptop.local:41204->192.168.0.2:3128 (CLOSE_WAIT)\n\nfirefox-b 2261 slynux   82u  IPv4  68195      0t0  TCP \n    slynux-laptop.local:41197->192.168.0.2:3128 (ESTABLISHED)\n\nssh       3570 slynux    3u  IPv6  30025      0t0  TCP \n    localhost:39263->localhost:ssh (ESTABLISHED)\n\nssh       3836 slynux    3u  IPv4  43431      0t0  TCP \n    slynux-laptop.local:40414->boney.mt.org:422 (ESTABLISHED)\n\nGoogleTal 4022 slynux   12u  IPv4  55370      0t0  TCP \n    localhost:42486 (LISTEN)\n\nGoogleTal 4022 slynux   13u  IPv4  55379      0t0  TCP \n    localhost:42486->localhost:32955 (ESTABLISHED)\n\n```", "```\nlaptop.local:41197->192.168.0.2:3128 \n\n```", "```\n$ lsof -i | grep \":[0-9a-z]+->\" -o | grep \"[0-9a-z]+\" -o  | sort | uniq \n\n```", "```\n$ netstat -tnp \nProto Recv-Q Send-Q Local Address           Foreign Address         \n    State       PID/Program name \n\ntcp        0      0 192.168.0.82:38163      192.168.0.2:3128        \n    ESTABLISHED 2261/firefox-bin \n\ntcp        0      0 192.168.0.82:38164      192.168.0.2:3128        \n    TIME_WAIT   -               \n\ntcp        0      0 192.168.0.82:40414      193.107.206.24:422      \n    ESTABLISHED 3836/ssh\n\ntcp        0      0 127.0.0.1:42486         127.0.0.1:32955         \n    ESTABLISHED 4022/GoogleTalkPlug\n\ntcp        0      0 192.168.0.82:38152      192.168.0.2:3128        \n    ESTABLISHED 2261/firefox-bin \n\ntcp6       0      0 ::1:22                  ::1:39263               \n    ESTABLISHED -               \n\ntcp6       0      0 ::1:39263               ::1:22                  \n    ESTABLISHED 3570/ssh\n\n```", "```\n$ iperf -s \n\n```", "```\n$ iperf -c 192.168.1.36 \n------------------------------------------------------------ \nClient connecting to 192.168.1.36, TCP port 5001 \nTCP window size: 19.3 KByte (default) \n------------------------------------------------------------ \n[  3] local 192.168.1.44 port 46526 connected with 192.168.1.36 port 5001 \n[ ID] Interval       Transfer     Bandwidth \n[  3]  0.0-10.0 sec   113 MBytes  94.7 Mbits/sec \n\n```", "```\n$ iperf -mc 192.168.1.36 \n------------------------------------------------------------ \nClient connecting to 192.168.1.36, TCP port 5001 \nTCP window size: 19.3 KByte (default) \n------------------------------------------------------------ \n[  3] local 192.168.1.44 port 46558 connected with 192.168.1.36 port 5001 \n[ ID] Interval       Transfer     Bandwidth \n[  3]  0.0-10.0 sec   113 MBytes  94.7 Mbits/sec \n[  3] MSS size 1448 bytes (MTU 1500 bytes, ethernet) \n\n```", "```\n nc -l 1234 \n\n```", "```\n nc HOST 1234 \n\n```", "```\n nc -l 1234 >destination_filename \n\n```", "```\n nc HOST 1234 <source_filename \n\n```", "```\n# A script to echo the date out a port \nwhile [ 1 ] \ndo \n sleep 10 \n date \ndone | nc -l 12345  \necho exited \n\n```", "```\n$ nc 127.0.0.1 12345 \n\n```", "```\n # Create a new bridge named br0 \n ip link add br0 type bridge \n\n # Add an Ethernet adapter to the bridge \n ip link set dev eth1 master br0 \n\n # Configure the bridge's IP address \n ifconfig br0 10.0.0.2 \n\n # Enable packet forwarding \n echo 1 >/proc/sys/net/ipv4/ip_forward \n\n```", "```\nroute add -net 192.168.1.0/16 gw 10.0.0.2 \n\n```", "```\nroute add -net 10.0.0.0/24 gw 192.168.1.2 \n\n```", "```\n #!/bin/bash \n        #filename: netsharing.sh\n\n        echo 1 > /proc/sys/net/ipv4/ip_forward \n\n        iptables -A FORWARD -i $1 -o $2 \\\n            -s 10.99.0.0/16 -m conntrack --ctstate NEW -j ACCEPT \n\n        iptables -A FORWARD -m conntrack --ctstate \\\n            ESTABLISHED,RELATED -j ACCEPT\n\n        iptables -A POSTROUTING -t nat -j MASQUERADE \n\n```", "```\n ./netsharing.sh eth0 wlan0 \n\n```", "```\n #iptables -A OUTPUT -d 8.8.8.8 -j DROP \n\n```", "```\n PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. \n 64 bytes from 8.8.8.8: icmp_req=1 ttl=56 time=221 ms \n 64 bytes from 8.8.8.8: icmp_req=2 ttl=56 time=221 ms \n ping: sendmsg: Operation not permitted \n ping: sendmsg: Operation not permitted \n\n```", "```\n #iptables -A OUTPUT -p tcp -dport 21 -j DROP \n $ ftp ftp.kde.org \n ftp: connect: Connection timed out \n\n```", "```\n Failed password for abel from 1.2.3.4 port 12345 ssh2 \n Failed password for baker from 1.2.3.4 port 12345 ssh2 \n\n```", "```\n #iptables -I INPUT -s 1.2.3.4 -j DROP \n\n```", "```\n#iptables -flush \n\n```", "```\napt-get install openvpn \n\n```", "```\nyum install openvpn \n\n```", "```\nls /dev/net/tun \n\n```", "```\n# cd /usr/share/easy-rsa \n# . ./vars \n# ./clean-all \n\n```", "```\n# ./build-ca \nGenerating a 2048 bit RSA private key \n......+++ \n.....................................................+++ \nwriting new private key to 'ca.key' \n----- \nYou are about to be asked to enter information that will be incorporated \ninto your certificate request. \nWhat you are about to enter is what is called a Distinguished Name or a DN. \nThere are quite a few fields but you can leave some blank \nFor somefieldsthere will be a default value, \nIf you enter '.', the field will be left blank. \n----- \nCountry Name (2 letter code) [US]: \nState or Province Name (full name) [CA]:MI \nLocality Name (eg, city) [SanFrancisco]:WhitmoreLake \nOrganization Name (eg, company) [Fort-Funston]:Example \nOrganizational Unit Name (eg, section) [MyOrganizationalUnit]:Packt \nCommon Name (eg, your name or your server's hostname) [Fort-Funston CA]:vpnserver \nName [EasyRSA]: \nEmail Address [me@myhost.mydomain]:admin@example.com \n\nNext, build the server certificate with the build-key command: \n# ./build-key server \nGenerating a 2048 bit RSA private key \n..................................+++ \n.....................+++ \nwriting new private key to 'server.key' \n----- \nYou are about to be asked to enter information that will be incorporated \ninto your certificate request.... \n\nPlease enter the following 'extra' attributes \nto be sent with your certificate request \nA challenge password []: \n\n```", "```\n# ./build-key client1 \nGenerating a 2048 bit RSA private key \n.......................+++ \n.................................................+++ \nwriting new private key to 'client1.key' \n----- \nYou are about to be asked to enter information that will be incorporated \ninto your certificate request. \n...  \n\nPlease enter the following 'extra' attributes \nto be sent with your certificate request \nA challenge password []: \nAn optional company name []: \nUsing configuration from /usr/share/easy-rsa/openssl-1.0.0.cnf \nCheck that the request matches the signature \nSignature ok \nThe Subject's Distinguished Name is as follows \ncountryName  :PRINTABLE:'US' \nstateOrProvinceName  :PRINTABLE:'MI' \nlocalityName  :PRINTABLE:'WhitmoreLake' \norganizationName  :PRINTABLE:'Example' \norganizationalUnitName:PRINTABLE:'Packt' \ncommonName  :PRINTABLE:'client1' \nname                  :PRINTABLE:'EasyRSA' \nemailAddress:IA5STRING:'admin@example.com' \nCertificate is to be certified until Jan  8 15:24:13 2027 GMT (3650 days) \nSign the certificate? [y/n]:y \n\n1 out of 1 certificate requests certified, commit? [y/n]y \nWrite out database with 1 new entries \nData Base Updated \n\n```", "```\n# ./build-dh \nGenerating DH parameters, 2048 bit long safe prime, generator 2 \nThis is going to take a long time \n......................+............+........ \n\n```", "```\n# cp keys/server* /etc/openvpn \n# cp keys/ca.crt /etc/openvpn \n# cp keys/dh2048.pem /etc/openvpn \n\n```", "```\n# scp keys/client1* client.example.com:/etc/openvpn \n# scp keys/ca.crt client.example.com:/etc/openvpn \n\n```", "```\n# cd /usr/share/doc/openvpn/examples/sample-config-files \n# cp server.conf.gz /etc/openvpn \n# cd /etc/openvpn \n# gunzip server.conf.gz \n# vim server.conf \n\n```", "```\nlocal 192.168.1.125 \nModify the paths to the certificates: \n\nca /etc/openvpn/ca.crt \ncert /etc/openvpn/server.crt \nkey /etc/openvpn/server.key  # This file should be kept secret \n\n```", "```\n#dh dh1024.pem \ndh dh2048.pem \n\n```", "```\n# cd /usr/share/doc/openvpn/examples/sample-config-files \n# cpclient.conf /etc/openvpn \n\n```", "```\n# cd /etc/openvpn \n# vim client.conf \n\n```", "```\nca /etc/openvpn/ca.crt \ncert /etc/openvpn/server.crt \nkey /etc/openvpn/server.key  # This file should be kept secret \n\n```", "```\n#remote my-server-1 1194 \nremote server.example.com 1194 \n\n```", "```\n# openvpnserver.conf \nWed Jan 11 12:31:08 2017 OpenVPN 2.3.4 x86_64-pc-linux-gnu [SSL (OpenSSL)] [LZO] [EPOLL] [PKCS11] [MH] [IPv6] built on Nov 12 2015 \nWed Jan 11 12:31:08 2017 library versions: OpenSSL 1.0.1t  3 May 2016, LZO 2.08... \n\nWed Jan 11 12:31:08 2017 client1,10.8.0.4 \nWed Jan 11 12:31:08 2017 Initialization Sequence Completed \n\n```", "```\n$ ifconfig \ntun0      Link encap:UNSPECHWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00   \ninet addr:10.8.0.1  P-t-P:10.8.0.2  Mask:255.255.255.255 \n UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1 \n RX packets:0 errors:0 dropped:0 overruns:0 frame:0 \n TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 \n collisions:0 txqueuelen:100 \n RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B) \n\n```", "```\n# openvpn client.conf \nWed Jan 11 12:34:14 2017 OpenVPN 2.3.4 i586-pc-linux-gnu [SSL (OpenSSL)] [LZO] [EPOLL] [PKCS11] [MH] [IPv6] built on Nov 19 2015 \nWed Jan 11 12:34:14 2017 library versions: OpenSSL 1.0.1t  3 May 2016, LZO 2.08... \n\nWed Jan 11 12:34:17 2017 /sbin/ipaddr add dev tun0 local 10.8.0.6 peer 10.8.0.5 \nWed Jan 11 12:34:17 2017 /sbin/ip route add 10.8.0.1/32 via 10.8.0.5 \nWed Jan 11 12:34:17 2017 Initialization Sequence Completed \n\n```", "```\n$ /sbin/ifconfig \n\ntun0      Link encap:UNSPECHWaddr 00-00-00-00-00-00-00-00...00-00-00-00   \ninet addr:10.8.0.6  P-t-P:10.8.0.5  Mask:255.255.255.255 \n UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1 \n RX packets:2 errors:0 dropped:0 overruns:0 frame:0 \n TX packets:4 errors:0 dropped:0 overruns:0 carrier:0 \n collisions:0 txqueuelen:100 \n RX bytes:168 (168.0 B)  TX bytes:336 (336.0 B) \n\n```", "```\n$ netstat -rn \nKernel IP routing table \nDestination   Gateway       Genmask         Flags   MSS Window  irttIface \n0.0.0.0       192.168.1.7   0.0.0.0         UG        0 0          0 eth0 \n10.8.0.1      10.8.0.5      255.255.255.255 UGH       0 0          0 tun0 \n10.8.0.5      0.0.0.0       255.255.255.255 UH        0 0          0 tun0 \n192.168.1.0   0.0.0.0       255.255.255.0   U         0 0          0 eth0 \n\n```", "```\n$ ping 10.8.0.1 \nPING 10.8.0.1 (10.8.0.1) 56(84) bytes of data. \n64 bytes from 10.8.0.1: icmp_seq=1 ttl=64 time=1.44 ms \n\n```"]