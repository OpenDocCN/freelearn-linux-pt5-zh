["```\n    # apt-get install lxc1\n\n```", "```\n    # apt-get install lxc\n\n```", "```\n    # zypper install lxc\n RedHat, Fedora:\n\n```", "```\n    # yum install epel-release\n\n```", "```\n    # yum install perl libvirt debootstrap\n\n```", "```\n    # yum install lxc lxc-templates tunctl bridge-utils\n\n```", "```\n    lxc-create -n NAME -t TYPE\n\n```", "```\n    $ sudo lxc-create -t download -n ContainerName\n\n```", "```\n$ sudo lxc-create -t download -n ubuntuContainer\n...\nubuntu  zesty   armhf   default 20170225_03:49\nubuntu  zesty   i386    default 20170225_03:49\nubuntu  zesty   powerpc default 20170225_03:49\nubuntu  zesty   ppc64el default 20170225_03:49\nubuntu  zesty   s390x   default 20170225_03:49\n---\n\nDistribution: ubuntu\nRelease: trusty\nArchitecture: i386 \n\nDownloading the image index\nDownloading the rootfs\nDownloading the metadata\nThe image cache is now ready\nUnpacking the rootfs\n\n---\nYou just created an Ubuntu container (release=trusty, arch=i386, variant=default)\nTo enable sshd, run: apt-get install openssh-server\nFor security reason, container images ship without user accounts and without a root password.\nUse lxc-attach or chroot directly into the rootfs to set a root password or create user accounts.\n\n```", "```\n    # ls /usr/share/lxc/templates\n lxc-busybox   lxc-debian   lxc-download ...\n\n```", "```\n$ cat /etc/issue\nDebian GNU/Linux 8\n$ sudo lxc-create -t debian -n debianContainer\ndebootstrap is /usr/sbin/debootstrap\nChecking cache download in /var/cache/lxc/debian/rootfs-jessie-i386 ... \nDownloading debian minimal ...\nI: Retrieving Release \nI: Retrieving Release.gpg \nI: Checking Release signature\nI: Valid Release signature (key id 75DDC3C4A499F1A18CB5F3C8CBF8D6FD518E17E1)\n...\nI: Retrieving Packages \nI: Validating Packages \nI: Checking component main on http://http.debian.net/debian...\nI: Retrieving acl 2.2.52-2\nI: Validating acl 2.2.52-2\nI: Retrieving libacl1 2.2.52-2\nI: Validating libacl1 2.2.52-2\n\nI: Configuring libc-bin...\nI: Configuring systemd...\nI: Base system installed successfully.\nCurrent default time zone: 'America/New_York'\nLocal time is now:      Sun Feb 26 11:38:38 EST 2017.\nUniversal Time is now:  Sun Feb 26 16:38:38 UTC 2017.\n\nRoot password is 'W+IkcKkk', please change !\n\n```", "```\n    # lxc-start -n ubuntuContainer\n\n```", "```\n    <4>init: plymouth-upstart-bridge main process (5) terminated with   \n    status 1\n ...\n\n```", "```\n# lxc-attach -n containerName\nroot@containerName:/#\nroot@containerName:/# useradd -d /home/USERNAME -m  USERNAME\nroot@containerName:/# passwd USERNAME\nEnter new UNIX password:\nRetype new UNIX password:\n\n```", "```\n$ lxc-console -n containerName\nConnected to tty 1\nType <Ctrl+a q> to exit the console, \n<Ctrl+a Ctrl+a> to enter Ctrl+a itself\nLogin:\n\n```", "```\n    # lxc-stop -n containerName\n\n```", "```\n    $ lxc-ls\n container1Name container2Name...\n\n```", "```\n$ lxc-info -n containerName\nName:   testContainer\nState:   STOPPED\n\n```", "```\n$ for c in `lxc-ls` \ndo\nlxc-info -n $c\necho\ndone\nName:  name1\nState:  STOPPED\n\nName:  name2\nState:  RUNNING\nPID:  1234\nIP  10.0.3.225\nCPU use:  4.48 seconds\nBlkIO use:  728.00 KiB\nMemory use:  15.07 MiB\nKMem use:  2.40 MiB\nLink:  vethMU5I00\n TX bytes:  20.48 KiB\n RX bytes:  30.01 KiB\n Total bytes:  50.49 KiB\n\n```", "```\n    # apt-get install cgmanager uidmap systemd-services\n\n```", "```\n    $ sudo service cgmanager start\n\n```", "```\n    # echo 1 > /sys/fs/cgroup/cpuset/cgroup.clone_children\n # echo 1 > /proc/sys/kernel/unprivileged_userns_clone \n\n```", "```\n    $ sudo usermod --add-subuids 100000-165536 $USER\n $ sudo usermod --add-subgids 100000-165536 $USER\n $ sudo chmod +x $HOME\n\n```", "```\n    $ mkdir ~/.config/lxc\n $ cp /etc/lxc/default.conf ~/.config/lxc\n\n```", "```\n    lxc.id_map = u 0 100000 65536\n lxc.id_map = g 0 100000 65536\n\n```", "```\n    USERNAME veth BRIDGENAME COUNT\n\n```", "```\n    $ cat /etc/lxc/lxc-usernet\n clif veth lxcbr0 10\n\n```", "```\n    # systemctl start libvirtd\n\n```", "```\n    lxc.network_link = virbr0\n\n```", "```\n    # lxc.network.type = empty\n lxc.network.type = veth\n lxc.network.link = lxcbr0\n lxc.network.flage = up`\n\n```", "```\n    # systemctl enable lxc-net\n # systemctl start lxc-net\n\n```", "```\n    $ ls /var/lib/lxc/CONTAINERNAME\n config rootfs\n\n```", "```\n    # vim /var/lib/lxc/CONTAINERNAME/config\n\n```", "```\n    # ls /var/lib/lxc/CONTAINERNAME/rootfs\n bin   boot cdrom dev  etc   home  lib   media mnt   proc\n root  run  sbin  sys  tmp   usr   var\n\n```", "```\n    # service docker start\n\n```", "```\n    docker search TERM\n\n```", "```\n# docker search apache\nNAME            DESCRIPTION                STARS OFFICIAL   AUTOMATED\neboraas/apache  Apache (with SSL support)  70                   [OK]\nbitnami/apache  Bitnami Apache Docker      25                   [OK]\napache/nutch    Apache Nutch               12                   [OK]\napache/marmotta Apache Marmotta             4                   [OK]\nlephare/apache  Apache container            3                   [OK]\n\n```", "```\n# docker pull lephare/apache\nlatest: Pulling from lephare/apache\n425e28bb756f: Pull complete \nce4a2c3907b1: Extracting [======================> ] 2.522 MB/2.522 MB\n40e152766c6c: Downloading [==================>    ] 2.333 MB/5.416 MB\ndb2f8d577dce: Download complete \nDigest: sha256:e11a0f7e53b34584f6a714cc4dfa383cbd6aef1f542bacf69f5fccefa0108ff8\nStatus: Image is up to date for lephare/apache:latest\n\n```", "```\n    docker run [OPTIONS] CONTAINER COMMAND\n\n```", "```\n # docker run -t -i -d --name leph1 lephare/apache  /bin/bash\n 1d862d7552bcaadf5311c96d439378617d85593843131ad499...\n\n```", "```\n# docker ps\nCONTAINER ID  IMAGE           COMMAND   CREATED  STATUS  PORTS  NAMES\n123456abc     lephare/apache  /bin/bash 10:05    up      80/tcp leph1\n\n```", "```\n$ docker attach leph1\nroot@131aaaeeac79:/# cd /var/www\nroot@131aaaeeac79:/var/www# mkdir symfony\nroot@131aaaeeac79:/var/www# mkdir symfony/web\nroot@131aaaeeac79:/var/www# cd  symfony/web\nroot@131aaaeeac79:/var/www/symfony/web# echo \"<html><body><h1>It's Alive</h1></body></html>\"   \n    >index.html\nroot@131aaaeeac79:/# cd /etc/init.d\nroot@131aaaeeac79:/etc/init.d# ./apache2 start\n[....] Starting web server: apache2/usr/sbin/apache2ctl: 87: ulimit: error setting limit (Operation \n    not permitted)\nSetting ulimit failed. See README.Debian for more information.\nAH00558: apache2: Could not reliably determine the server's fully qualified domain name, using \n    172.17.0.5\\. Set the 'ServerName' directive globally to suppress this message\n. ok \n\n```", "```\n    # docker stop leph1\n\n```", "```\n    # docker rm leph1\n\n```", "```\n    # docker rm 131aaaeeac79\n\n```", "```\n# vi /etc/apt/sources.list\n## ADD:\ndeb http://download.virtualbox.org/virtualbox/debian stretch contrib\n\n```", "```\n# apt-get install curl\n# curl -O https://www.virtualbox.org/download/oracle_vbox_2016.asc\n# apt-key add oracle_vbox_2016.asc\n# apt-get update\n\n```", "```\n# apt-get install virtualbox-5.1\n\nOpenSuSE \n# zypper install gcc make kernel-devel\nOpen yast2, select Software Management, search for virtualbox.\nSelect virtualbox, virtualbox-host-kmp-default, and virtualbox-qt.\n\n```", "```\n apt-get install apache2\n apt-get install mysql-server php-mysql\n\n```", "```\n    /usr/bin/mysql_secure_installation\n\n```", "```\ncurl \\ https://download.owncloud.org/download/repositories/stable/ \\ Ubuntu_16.10/Release.key/'| sudo tee \\ /etc/apt/sources.list.d/owncloud.list\n\napt-get update\n\n```", "```\n    apt-get install owncloud\n\n```", "```\n    /usr/bin/mysql_secure_installation\n\n```", "```\nrpm --import https://download.owncloud.org/download/repositories/stable/openSUSE_Leap_42.2/repodata/repomd.xml.key\n\nzypper addrepo http://download.owncloud.org/download/repositories/stable/openSUSE_Leap_42.2/ce:stable.repo\n\nzypper refresh\n\nzypper install owncloud \n\n```", "```\n    $ konqueror http://127.0.0.1/owncloud\n\n```", "```\n    # wget https://dl.eff.org/certbot-auto\n # chmod a+x certbot-auto\n # ./certbot-auto\n\n```", "```\n    # cd getssl_master\n # getssl -c DOMAIN.com\n\n```", "```\n    ACCOUNT_EMAIL='myName@mySite.com'\n\n```", "```\n# mkdir /var/web/DOMAIN/.well-known\n# mkdir /var/web/DOMAIN/.well-known/acme-challenge\n# chown webUser.webGroup /var/web/DOMAIN/.well-known\n# chown webUser.webGroup /var/web/DOMAIN/.well-known/acme-challenge\n\n```", "```\nACL=\"/var/web/DOMAIN/.well-known/acme-challenge\"\nUSE_SINGLE_ACL=\"true\"\n\n```", "```\nDOMAIN_CERT_LOCATION=\"/var/web/certs/DOMAIN.crt\"\nDOMAIN_KEY_LOCATION=\"/var/web/certs/DOMAIN.key\"\nCA_CERT_LOCATION=\"/var/web/certs/DOMAIN.com.bundle\"\n\n```", "```\nSERVER_TYPE=\"https\"\nCHECK_REMOTE=\"true\"\n\n```", "```\n./getssl DOMAIN.com\n\n```", "```\nCA=\"https://acme-v01.api.letsencrypt.org\"\n\n```", "```\n./getssl -f DOMAIN.com\n\n```"]