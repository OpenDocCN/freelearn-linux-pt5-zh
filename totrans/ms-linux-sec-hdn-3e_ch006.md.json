["```\nsystemctl status ufw\nsudo ufw status\n```", "```\nsudo ufw allow 22/tcp\n```", "```\nsudo ufw enable\n```", "```\nChain ufw-user-input (1 references)\n target prot opt source destination\n ACCEPT tcp -- anywhere anywhere tcp dpt:ssh\n```", "```\nchain ufw-user-input {\n        meta l4proto tcp tcp dport 22 counter packets 0 bytes 0 accept\n    }\n```", "```\n sudo ufw allow 53\n```", "```\n sudo iptables -L\n. . .\n. . .\n    Chain ufw-user-input (1 references)\n    target prot opt source destination\n    ACCEPT tcp -- anywhere anywhere tcp dpt:ssh\n    ACCEPT tcp -- anywhere anywhere tcp dpt:domain\n    ACCEPT udp -- anywhere anywhere udp dpt:domain\n```", "```\nsudo nft list ruleset\nchain ufw-user-input {\n        meta l4proto tcp tcp dport 22 counter packets 0 bytes 0 accept\n        meta l4proto tcp tcp dport 53 counter packets 0 bytes 0 accept\n        meta l4proto udp udp dport 53 counter packets 0 bytes 0 accept\n    }\n```", "```\ndonnie@ubuntu-ufw:~$ sudo ufw status\nStatus: active\nTo                         Action      From\n--                         ------      ----\n22/tcp                     LIMIT       Anywhere                  \n53                         LIMIT       Anywhere                 \n22/tcp (v6)                LIMIT       Anywhere (v6)             \n53 (v6)                    LIMIT       Anywhere (v6)             \n\ndonnie@ubuntu-ufw:~$\n```", "```\ndonnie@ubuntu-ufw:/etc/ufw$ ls -l\ntotal 48\n-rw-r----- 1 root root  915 Aug  7 15:23 after6.rules\n-rw-r----- 1 root root 1126 Jul 31 14:31 after.init\n-rw-r----- 1 root root 1004 Aug  7 15:23 after.rules\ndrwxr-xr-x 3 root root 4096 Aug  7 16:45 applications.d\n-rw-r----- 1 root root 6700 Mar 25 17:14 before6.rules\n-rw-r----- 1 root root 1130 Jul 31 14:31 before.init\n-rw-r----- 1 root root 3467 Aug 11 11:36 before.rules\n-rw-r--r-- 1 root root 1391 Aug 15  2017 sysctl.conf\n-rw-r--r-- 1 root root  313 Aug 11 11:37 ufw.conf\n-rw-r----- 1 root root 3014 Aug 11 11:37 user6.rules\n-rw-r----- 1 root root 3012 Aug 11 11:37 user.rules\ndonnie@ubuntu-ufw:/etc/ufw$\n```", "```\n*filter\n:ufw-user-input - [0:0]\n:ufw-user-output - [0:0]\n:ufw-user-forward - [0:0]\n. . .\n. . .\n```", "```\n### tuple ### allow any 53 0.0.0.0/0 any 0.0.0.0/0 in\n-A ufw-user-input -p tcp --dport 53 -j ACCEPT\n-A ufw-user-input -p udp --dport 53 -j ACCEPT\n```", "```\n### LOGGING ###\n-A ufw-after-logging-input -j LOG --log-prefix \"[UFW BLOCK] \" -m limit --limit 3/min --limit-burst 10\n-A ufw-after-logging-forward -j LOG --log-prefix \"[UFW BLOCK] \" -m limit --limit 3/min --limit-burst 10\n-I ufw-logging-deny -m conntrack --ctstate INVALID -j RETURN -m limit --limit 3/min --limit-burst 10\n-A ufw-logging-deny -j LOG --log-prefix \"[UFW BLOCK] \" -m limit --limit 3/min --limit-burst 10\n-A ufw-logging-allow -j LOG --log-prefix \"[UFW ALLOW] \" -m limit --limit 3/min --limit-burst 10\n### END LOGGING ###\n```", "```\n### RATE LIMITING ###\n-A ufw-user-limit -m limit --limit 3/minute -j LOG --log-prefix \"[UFW LIMIT BLOCK] \"\n-A ufw-user-limit -j REJECT\n-A ufw-user-limit-accept -j ACCEPT\n### END RATE LIMITING ###\n```", "```\nman ufw\n```", "```\n# drop INVALID packets (logs these in loglevel medium and higher)\n-A ufw-before-input -m conntrack --ctstate INVALID -j ufw-logging-deny\n-A ufw-before-input -m conntrack --ctstate INVALID -j DROP\n```", "```\n# don't delete the 'COMMIT' line or these rules won't be processed\nCOMMIT\n```", "```\n# Mangle table added by Donnie\n*mangle\n:PREROUTING ACCEPT [0:0]\n-A PREROUTING -m conntrack --ctstate INVALID -j DROP\n-A PREROUTING -p tcp -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j DROP\nCOMMIT\n```", "```\nsudo ufw reload\n```", "```\nsudo iptables -L\nOn Ubuntu 22.04 do:\nsudo nft list ruleset\n```", "```\nsudo ufw status\nsudo ufw allow 22/tcp\nsudo ufw enable\nsudo ufw status\nOn Ubuntu 20.04 do:\nsudo iptables -L\nsudo ip6tables -L\nOn Ubuntu 22.04 do:\nsudo nft list ruleset\n```", "```\nsudo ufw allow 53\nsudo ufw status\nOn Ubuntu 20.04 do:\nsudo iptables -L\nsudo ip6tables -L\nOn Ubuntu 22.04 do:\nsudo nft list ruleset\n```", "```\n# Mangle table added by Donnie\n*mangle\n:PREROUTING ACCEPT [0:0]\n-A PREROUTING -m conntrack --ctstate INVALID -j DROP\n-A PREROUTING -p tcp -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j DROP\nCOMMIT\n(Note that the second PREROUTING command wraps around on the printed page.)\n```", "```\nsudo ufw reload\n```", "```\nsudo iptables -L\nsudo iptables -t mangle -L\nsudo ip6tables -L\nsudo ip6tables -t mangle -L\nOn Ubuntu 22.04, observe the rules by doing:\nsudo nft list ruleset\n```", "```\nsudo ufw status\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --state\n running\n [donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo systemctl status firewalld\n firewalld.service - firewalld - dynamic firewall daemon\n  Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled;\n vendor preset: enabled)\n  Active: active (running) since Fri 2017-10-13 13:42:54 EDT; 1h 56min ago\n  Docs: man:firewalld(1)\n  Main PID: 631 (firewalld)\n  CGroup: /system.slice/firewalld.service\n  └─631 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopid\n. . .\n Oct 13 15:19:41 localhost.localdomain firewalld[631]: WARNING: reject-\n route: INVALID_ICMPTYPE: No supported ICMP type., ignoring for run-time.\n [donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ cd /usr/lib/firewalld/zones\n[donnie@localhost zones]$ ls\nblock.xml dmz.xml drop.xml external.xml home.xml internal.xml public.xml\ntrusted.xml work.xml\n[donnie@localhost zones]$\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<zone> \n <short>Public</short> \n <description>For use in public areas. You do not trust the other \ncomputers on networks to not harm your computer. Only selected incoming \nconnections are accepted.</description> \n <service name=\"ssh\"/> \n <service name=\"dhcpv6-client\"/> \n</zone> \n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<zone> \n <short>Home</short> \n <description>For use in home areas. You mostly trust the other computers \non networks to not harm your computer. Only selected incoming connections \nare accepted.</description> \n <service name=\"ssh\"/>\n <service name=\"mdns\"/> \n <service name=\"samba-client\"/> \n <service name=\"dhcpv6-client\"/> \n</zone>\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-zones\n[sudo] password for donnie:\nblock dmz drop external home internal public trusted work\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --list-all-zones\n block\n  target: %%REJECT%%\n  icmp-block-inversion: no\n  interfaces:\n  sources:\n  services:\n  ports:\n  protocols:\n  masquerade: no\n  forward-ports:\n. . .\n. . .\n```", "```\n [donnie@localhost ~]$ sudo firewall-cmd --info-zone=internal\n internal\n  target: default\n  icmp-block-inversion: no\n  interfaces:\n  sources:\n  services: ssh mdns samba-client dhcpv6-client\n  ports:\n  protocols:\n  masquerade: no\n  forward-ports:\n source-ports:\n  icmp-blocks:\n  rich rules:\n [donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-default-zone\n public\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-active-zones\n public\n  interfaces: enp0s3\n[donnie@localhost ~]$\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<zone> \n <short>DMZ</short> \n <description>For computers in your demilitarized zone that are publicly- \naccessible with limited access to your internal network. Only selected \nincoming connections are accepted.</description> \n <service name=\"ssh\"/> \n</zone> \n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --set-default-zone=dmz\n [sudo] password for donnie:\n success\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-default-zone\n dmz\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo ls -l /etc/firewalld\n total 12\n -rw-------. 1 root root 2003 Oct 11 17:37 firewalld.conf\n -rw-r--r--. 1 root root 2006 Aug 4 17:14 firewalld.conf.old\n . . .\n```", "```\n[donnie@localhost ~]$ sudo diff /etc/firewalld/firewalld.conf /etc/firewalld/firewalld.conf.old\n 6c6\n < DefaultZone=dmz\n ---\n > DefaultZone=public\n [donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-services\n RH-Satellite-6 amanda-client amanda-k5-client bacula bacula-client bitcoin bitcoin-rpc bitcoin-testnet bitcoin-testnet-rpc ceph ceph-mon cfengine condor-collector ctdb dhcp dhcpv6 dhcpv6-client dns docker-registry dropbox-lansync elasticsearch freeipa-ldap freeipa-ldaps freeipa-replication freeipa-trust ftp ganglia-client ganglia-master high-availability http https imap imaps ipp ipp-client ipsec iscsi-target kadmin kerberos kibana klogin kpasswd kshell ldap ldaps libvirt libvirt-tls managesieve mdns mosh mountd ms-wbt mssql mysql nfs nrpe ntp openvpn ovirt-imageio ovirt-storageconsole ovirt-vmconsole pmcd pmproxy pmwebapi pmwebapis pop3 pop3s postgresql privoxy proxy-dhcp ptp pulseaudio puppetmaster quassel radius rpc-bind rsh rsyncd samba samba-client sane sip sips smtp smtp-submission smtps snmp snmptrap spideroak-lansync squid ssh synergy syslog syslog-tls telnet tftp tftp-client tinc tor-socks transmission-client vdsm vnc-server wbem-https xmpp-bosh xmpp-client xmpp-local xmpp-server\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --list-services\n[sudo] password for donnie: \nssh dhcpv6-client\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-service=dropbox-lansync\n [sudo] password for donnie:\n dropbox-lansync\n  ports: 17500/udp 17500/tcp\n  protocols:\n  source-ports:\n  modules:\n  destination:\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=dmz\n dmz (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp0s3\n  sources:\n  services: ssh\n  ports:\n  protocols:\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --add-service=http\n success\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=dmz\n dmz (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp0s3\n  sources:\n  services: ssh http\n  ports:\n  protocols:\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --info-zone=dmz\n dmz\n  target: default\n  icmp-block-inversion: no\n  interfaces:\n  sources:\n  services: ssh\n  ports:\n  protocols:\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=dmz\n dmz (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp0s3\n  sources:\n  services: ssh\n  ports:\n  protocols:\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --add-service={http,https}\n [sudo] password for donnie:\n success\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=dmz\n dmz (active)\n target: default\n icmp-block-inversion: no\n interfaces: enp0s3\n sources:\n services: ssh\n ports:\n protocols:\n masquerade: no\n forward-ports:\n source-ports:\n icmp-blocks:\n rich rules:\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --info-zone=dmz\n dmz\n  target: default\n  icmp-block-inversion: no\n  interfaces:\n  sources:\n  services: ssh http https\n  ports:\n  protocols:\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --reload\n success\n[donnie@localhost ~]$\n```", "```\ndonnie@localhost services]$ pwd\n /usr/lib/firewalld/services\n[donnie@localhost services]$ grep '10000' *\n[donnie@localhost services]$\n```", "```\ndonnie@localhost ~]$ sudo firewall-cmd --add-port=10000/tcp\n [sudo] password for donnie:\n success\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --add-port=10000/tcp\n success\n[donnie@localhost ~]$ sudo firewall-cmd --reload\n success\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --add-port={636/tcp,637/tcp,638/udp}\n success\n[donnie@localhost ~]$\n```", "```\nsudo firewall-cmd --runtime-to-permanent\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=public\npublic (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp0s3\n  sources: \n  services: ssh dhcpv6-client\n  ports: 53/tcp 53/udp\n  protocols: \n  masquerade: no\n  forward-ports: \n  source-ports: \n  icmp-blocks: \n  rich rules: \n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-icmptypes\n[sudo] password for donnie: \naddress-unreachable bad-header communication-prohibited destination-unreachable echo-reply echo-request fragmentation-needed host-precedence-violation host-prohibited host-redirect host-unknown host-unreachable ip-header-bad neighbour-advertisement neighbour-solicitation network-prohibited network-redirect network-unknown network-unreachable no-route packet-too-big parameter-problem port-unreachable precedence-cutoff protocol-unreachable redirect required-option-missing router-advertisement router-solicitation source-quench source-route-failed time-exceeded timestamp-reply timestamp-request tos-host-redirect tos-host-unreachable tos-network-redirect tos-network-unreachable ttl-zero-during-reassembly ttl-zero-during-transit unknown-header-type unknown-option\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-icmptype=network-redirectnetwork-redirect  destination: ipv4\n[donnie@localhost ~]$ sudo firewall-cmd --info-icmptype=neighbour-advertisementneighbour-advertisement  \ndestination: ipv6\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --query-icmp-block=host-redirect\nno\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --add-icmp-block=host-redirect\nsuccess\n[donnie@localhost ~]$ sudo firewall-cmd --query-icmp-block=host-redirect\nyes\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=public\npublic (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp0s3\n  sources: \n  services: ssh dhcpv6-client\n  ports: 53/tcp 53/udp\n  protocols: \n  masquerade: no\n  forward-ports: \n  source-ports: \n  icmp-blocks: host-redirect\n  rich rules: \n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --add-icmp-block={host-redirect,network-redirect}\nsuccess\n[donnie@localhost ~]$ \n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --info-zone=public\npublic (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp0s3\n  sources: \n  services: cockpit dhcpv6-client ssh\n  ports: \n  protocols: \n  masquerade: no\n  forward-ports: \n  source-ports: \n  icmp-blocks: host-redirect network-redirect\n  rich rules: \n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --runtime-to-permanent\nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --panic-on\n[sudo] password for donnie: \nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --panic-off\n[sudo] password for donnie: \nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --query-panic\n[sudo] password for donnie: \nno\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --get-log-denied\n[sudo] password for donnie: \noff\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --set-log-denied=all\nsuccess\n[donnie@localhost ~]$ sudo firewall-cmd --get-log-denied\nall\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --set-log-denied=multicast\n[sudo] password for donnie: \nsuccess\n[donnie@localhost ~]$ sudo firewall-cmd --get-log-denied\nmulticast\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --runtime-to-permanent\nsuccess\n[donnie@localhost ~]$\n```", "```\nAug 20 14:57:21 localhost kernel: FINAL_REJECT: IN=enp0s3 OUT= MAC=ff:ff:ff:ff:ff:ff:00:1f:29:02:0d:5f:08:00 SRC=192.168.0.225 DST=255.255.255.255 LEN=140 TOS=0x00 PREC=0x00\n TTL=64 ID=62867 DF PROTO=UDP SPT=21327 DPT=21327 LEN=120\n```", "```\nsudo nmap -sN 192.168.0.8\nAug 20 15:06:15 localhost kernel: STATE_INVALID_DROP: IN=enp0s3 OUT= MAC=08:00:27:10:66:1c:00:1f:29:02:0d:5f:08:00 SRC=192.168.0.225 DST=192.168.0.8 LEN=40 TOS=0x00 PREC=0x00 TTL=42 ID=27451 PROTO=TCP SPT=46294 DPT=23 WINDOW=1024 RES=0x00 URGP=0\n```", "```\nsudo firewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"200.192.0.0/24\" service name=\"http\" drop'\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --info-zone=dmz\n  dmz (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp0s3\n  sources:\n  services: ssh http https\n  ports: 10000/tcp 636/tcp 637/tcp 638/udp\n. . .\n. . .\n  rich rules:\n  rule family=\"ipv4\" source address=\"200.192.0.0/24\" service name=\"http\"\n drop\n [donnie@localhost ~]$\n```", "```\nsudo firewall-cmd --add-rich-rule='rule service name=\"ntp\" audit limit value=\"1/m\" accept'\n```", "```\nman firewalld.richlanguage\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<zone>\n  <short>Public</short>\n  <description>For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.</description>\n  <service name=\"ssh\"/>\n  <service name=\"dhcpv6-client\"/>\n  <service name=\"cockpit\"/>\n  <rule family=\"ipv4\">\n    <source address=\"192.168.0.225\"/>\n    <service name=\"http\"/>\n    <drop/>\n  </rule>\n</zone>\n```", "```\n[donnie@localhost ~]$ sudo iptables -L\nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination         \nACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED\nACCEPT     all  --  anywhere             anywhere            \nINPUT_direct  all  --  anywhere             anywhere            \nINPUT_ZONES_SOURCE  all  --  anywhere             anywhere            \nINPUT_ZONES  all  --  anywhere             anywhere            \nDROP       all  --  anywhere             anywhere             ctstate INVALID\nREJECT     all  --  anywhere             anywhere             reject-with icmp-host-prohibited\n```", "```\nChain IN_public_allow (1 references)\ntarget     prot opt source               destination         \nACCEPT     tcp  --  anywhere             anywhere             tcp dpt:ssh ctstate NEW\nACCEPT     tcp  --  anywhere             anywhere             tcp dpt:domain ctstate NEW\nACCEPT     udp  --  anywhere             anywhere             udp dpt:domain ctstate NEW\nChain IN_public_deny (1 references)\ntarget     prot opt source               destination         \nREJECT     icmp --  anywhere             anywhere             icmp host-redirect reject-with icmp-host-prohibited\n```", "```\n[donnie@localhost core]$ ls\nbase.py fw_config.pyc fw_helper.pyo fw_ipset.py fw_policies.pyc fw_service.pyo fw_zone.py icmp.pyc ipset.pyc logger.pyo rich.py base.pyc fw_config.pyo fw_icmptype.py fw_ipset.pyc fw_policies.pyo fw_test.py fw_zone.pyc icmp.pyo ipset.pyo modules.py rich.pyc base.pyo fw_direct.py fw_icmptype.pyc fw_ipset.pyo fw.py fw_test.pyc fw_zone.pyo __init__.py ipXtables.py modules.pyc rich.pyo ebtables.py fw_direct.pyc fw_icmptype.pyo fw_nm.py fw.pyc fw_test.pyo helper.py __init__.pyc ipXtables.pyc modules.pyo watcher.py ebtables.pyc fw_direct.pyo fw_ifcfg.py fw_nm.pyc fw.pyo fw_transaction.py helper.pyc __init__.pyo ipXtables.pyo prog.py watcher.pyc ebtables.pyo fw_helper.py fw_ifcfg.pyc fw_nm.pyo fw_service.py fw_transaction.pyc helper.pyo io logger.py prog.pyc watcher.pyo fw_config.py fw_helper.pyc fw_ifcfg.pyo fw_policies.py fw_service.pyc fw_transaction.pyo icmp.py ipset.py logger.pyc prog.pyo\n[donnie@localhost core]$\n```", "```\nsudo firewall-cmd --direct --get-rules ipv4 mangle PREROUTING\nsudo firewall-cmd --direct --get-rules ipv6 mangle PREROUTING\n```", "```\nsudo firewall-cmd --direct --add-rule ipv4 mangle PREROUTING 0 -m conntrack --ctstate INVALID -j DROP\nsudo firewall-cmd --direct --add-rule ipv4 mangle PREROUTING 1 -p tcp ! --syn -m conntrack --ctstate NEW -j DROP\nsudo firewall-cmd --direct --add-rule ipv6 mangle PREROUTING 0 -m conntrack --ctstate INVALID -j DROP\nsudo firewall-cmd --direct --add-rule ipv6 mangle PREROUTING 1 -p tcp ! --syn -m conntrack --ctstate NEW -j DROP\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --direct --get-rules ipv4 mangle PREROUTING\n0 -m conntrack --ctstate INVALID -j DROP\n1 -p tcp '!' --syn -m conntrack --ctstate NEW -j DROP\n[donnie@localhost ~]$ sudo firewall-cmd --direct --get-rules ipv6 mangle PREROUTING\n0 -m conntrack --ctstate INVALID -j DROP\n1 -p tcp '!' --syn -m conntrack --ctstate NEW -j DROP\n[donnie@localhost ~]$\n```", "```\n. . .\n. . .\nChain PREROUTING_direct (1 references)\ntarget prot opt source destination \nDROP all -- anywhere anywhere ctstate INVALID\nDROP tcp -- anywhere anywhere tcp flags:!FIN,SYN,RST,ACK/SYN ctstate NEW\n. . .\n. . .\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --runtime-to-permanent\n[sudo] password for donnie: \nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo ls -l /etc/firewalld\ntotal 20\n-rw-r--r--. 1 root root  532 Aug 26 13:17 direct.xml\n. . .\n. . .\n[donnie@localhost ~]$\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<direct>\n  <rule priority=\"0\" table=\"mangle\" ipv=\"ipv4\" chain=\"PREROUTING\">-m conntrack --ctstate INVALID -j DROP</rule>\n  <rule priority=\"1\" table=\"mangle\" ipv=\"ipv4\" chain=\"PREROUTING\">-p tcp '!' --syn -m conntrack --ctstate NEW -j DROP</rule>\n  <rule priority=\"0\" table=\"mangle\" ipv=\"ipv6\" chain=\"PREROUTING\">-m conntrack --ctstate INVALID -j DROP</rule>\n  <rule priority=\"1\" table=\"mangle\" ipv=\"ipv6\" chain=\"PREROUTING\">-p tcp '!' --syn -m conntrack --ctstate NEW -j DROP</rule>\n</direct>\n```", "```\n[donnie@localhost ~]$ sudo nft list ruleset\n. . .\n. . .\ntable ip firewalld {\n    chain nat_PREROUTING {\n        type nat hook prerouting priority -90; policy accept;\n        jump nat_PREROUTING_ZONES_SOURCE\n        jump nat_PREROUTING_ZONES\n    }\n    chain nat_PREROUTING_ZONES_SOURCE {\n    }\n. . .\n. . .\n[donnie@localhost ~]$\n```", "```\n sudo firewall-cmd --get-zones\n sudo firewall-cmd --get-default-zone\n sudo firewall-cmd --get-active-zones\n```", "```\n man firewalld.zones\n man firewalld.zone\n```", "```\nsudo firewall-cmd --list-all-zones\n```", "```\n sudo firewall-cmd --get-services\n sudo firewall-cmd --info-service=dropbox-lansync\n```", "```\n sudo firewall-cmd --set-default-zone=dmz\n sudo firewall-cmd --permanent --add-service={http,https}\n sudo firewall-cmd --info-zone=dmz\n sudo firewall-cmd --permanent --info-zone=dmz\n```", "```\n sudo firewall-cmd --reload\n sudo firewall-cmd --info-zone=dmz\n sudo firewall-cmd --list-services\n```", "```\n sudo firewall-cmd --permanent --add-port=10000/tcp\n sudo firewall-cmd --list-ports\n sudo firewall-cmd --reload\n sudo firewall-cmd --list-ports\n sudo firewall-cmd --info-zone=dmz\n```", "```\n sudo firewall-cmd --permanent --remove-port=10000/tcp\n sudo firewall-cmd --reload\n sudo firewall-cmd --list-ports\n sudo firewall-cmd --info-zone=dmz\n```", "```\nsudo firewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"200.192.0.0/24\" service name=\"http\" drop'\n```", "```\nsudo firewall-cmd --permanent --add-icmp-block={host-redirect,network-redirect}\n```", "```\nsudo firewall-cmd --set-log-denied=all\n```", "```\nsudo firewall-cmd --info-zone=dmz\nsudo firewall-cmd --info-zone=dmz --permanent\n```", "```\nsudo firewall-cmd --runtime-to-permanent\nsudo firewall-cmd --info-zone=dmz --permanent\n```", "```\nsudo iptables -L\n```", "```\nsudo nft list ruleset\n```", "```\nsudo firewall-cmd --direct --add-rule ipv4 mangle PREROUTING 0 -m conntrack --ctstate INVALID -j DROP\nsudo firewall-cmd --direct --add-rule ipv4 mangle PREROUTING 1 -p tcp ! --syn -m conntrack --ctstate NEW -j DROP\nsudo firewall-cmd --direct --add-rule ipv6 mangle PREROUTING 0 -m conntrack --ctstate INVALID -j DROP\nsudo firewall-cmd --direct --add-rule ipv6 mangle PREROUTING 1 -p tcp ! --syn -m conntrack --ctstate NEW -j DROP\n```", "```\nsudo firewall-cmd --direct --get-rules ipv4 mangle PREROUTING\nsudo firewall-cmd --direct --get-rules ipv6 mangle PREROUTING\nsudo firewall-cmd --runtime-to-permanent\n```", "```\nsudo less /etc/firewalld/direct.xml\n```", "```\nsudo nmap -sX ipv4_address_of_Test-VM\nsudo nmap -6 -sX ipv6_address_of_Test-VM\nsudo iptables -t mangle -L -v\nsudo ip6tables -t mangle -L -v\n```", "```\nsudo nmap -sW ipv4_address_of_Test-VM\nsudo nmap -6 -sW ipv6_address_of_Test-VM\nsudo iptables -t mangle -L -v\nsudo ip6tables -t mangle -L -v\n```", "```\napropos firewall\n```"]