["```\n    $ sudo yum install git-all\n $ sudo apt-get install git-all\n\n```", "```\n    $ mkdir MyProject\n $ cd MyProject\n\n```", "```\n    $ git init\n\n```", "```\n    $ git update-server-info\n\n```", "```\n    $ git clone http://github.com/ProjectName\n\n```", "```\n    $ git clone clif@172.16.183.130:gitTest\n clif@172.16.183.130's password:\n\n```", "```\n    $ vim SomeFile.sh\n $ git add SomeFile.sh\n\n```", "```\n    $ echo \"my test file\" >testfile.txt\n $ git add testfile.txt\n\n```", "```\n    $ git add *.c\n\n```", "```\n    $ vim OtherFile.sh\n $ git add OtherFile.sh\n $ git commit\n\n```", "```\n    # Please enter the commit message for your changes. Lines starting   \n    # with '#' will be ignored, and an empty message aborts the commit. \n #\n # Committer: Clif Flynt <clif@cflynt.com>\n #\n # On branch branch1\n # Changes to be committed:\n #   (use \"git reset HEAD <file>...\" to unstage)\n #\n #       modified:   SomeFile.sh\n #       modified:   OtherFile.sh\n\n```", "```\n    git commit -am \"Add and Commit all modified files.\"\n\n```", "```\n    $ git checkout OldBranchName\n\n```", "```\n    $ git checkout -b MyBranchName\n Switched to a new branch 'MyBranchName'\n\n```", "```\n    $ git branch\n * MyBranchName\n master\n\n```", "```\n    $ git checkout originalBranch \n $ git checkout -b modsToOriginalBranch\n # Edit, test\n $ git commit -a -m \"Comment on modifications to originalBranch\"\n $ git checkout originalBranch \n $ git merge modsToOriginalBranch\n\n```", "```\n    $ git branch -d MyBranchName\n\n```", "```\n    $ git checkout master\n $ git checkout -b newFeature\n # Edits, adds and commits.\n $ git format-patch master\n 0001-Patch-add-new-feature-to-menu.patch\n 0002-Patch-support-new-feature-in-library.patch\n\n```", "```\n    $ git log\n commit 82567395cb97876e50084fd29c93ccd3dfc9e558\n Author: Clif Flynt <clif@example.com>\n Date:   Thu Dec 15 13:38:28 2016 -0500\n\n Fixed reported bug #1\n\n commit 721b3fee54e73fd9752e951d7c9163282dcd66b7\n Author: Clif Flynt <clif@example.com>\n Date:   Thu Dec 15 13:36:12 2016 -0500\n\n Created new feature\n\n```", "```\n    $ git format-patch SHA1\n\n```", "```\n    $ git format-patch 721b\n $ git format-patch 721b3fee54e73fd9752e951d7c9163282dcd66b7\n\n```", "```\n    $ git format-patch -1 master\n\n```", "```\n    $ git format-patch -2 bleedingEdge\n\n```", "```\n    $ git apply --check 0001-Patch-new-feature.patch\n error: patch failed: feature.txt:2\n error: feature.txt: patch does not apply\n\n```", "```\n    $ git apply 0001-Patch-new-feature.patch\n\n```", "```\n    $ git push origin MyBranchName\n\n```", "```\n    $ git push origin master:NewBranchName\n\n```", "```\n    # On remote\n $ git merge NewBranchName\n\n```", "```\n    get fetch SITENAME\n\n```", "```\n    $ get fetch origin\n\n```", "```\n    $ get fetch Username@Address:Project\n\n```", "```\n    $ git pull origin\n $ git pull Username@Address:Project\n\n```", "```\n    $ git status\n # On branch master\n # Your branch is ahead of 'origin/master' by 1 commit.\n #\n # Changed but not updated:\n #   (use \"git add <file>...\" to update what will be committed)\n #   (use \"git checkout -- <file>...\" to discard changes in working   \n     directory)\n #\n #modified:   newFeature.tcl\n\n```", "```\n# Your branch is ahead of 'origin/master' by 1 commit. \n\n```", "```\n    #modified:   newFeature.tcl\n git config --global user.name \"Your Name\"\n git config --global user.email you@example.com\n\n```", "```\n    git commit --amend --author='Your Name <you@example.com>'\n 1 files changed, 1 insertions(+), 0 deletions(-)\n create mode 100644 testfile.txt\n\n```", "```\n    $ git log\n commit fa9ef725fe47a34ab8b4488a38db446c6d664f3e\n Author: Clif Flynt <clif@noucorp.com>\n Date:   Fri Dec 16 20:58:40 2016 -0500\n Fixed bug # 1234\n\n```", "```\n    $ git blame testGit.sh \n d5f62aa1 (Flynt 2016-12-07 09:41:52 -0500 1) Created testGit.sh\n 063d573b (Flynt 2016-12-07 09:47:19 -0500 2) Edited on master repo.\n 2ca12fbf (Flynt 2016-12-07 10:03:47 -0500 3) Edit created remotely   \n    and merged.\n\n```", "```\n # Pull the current (buggy) code into a git repository\n $ git checkout buggyBranch\n\n # Initialize git bisect.\n $ git bisect start\n\n # Mark the current commit as bad\n $ git bisect bad\n\n # Mark the last known good release tag\n # Git pulls a commit at the midpoint for testing.\n\n $ git bisect good v2.5\n Bisecting: 3 revisions left to test after this (roughly 2 steps)\n [6832085b8d358285d9b033cbc6a521a0ffa12f54] New Feature\n\n # Compile and test\n # Mark as good or bad\n # Git pulls next commit to test\n $ git bisect good\n Bisecting: 1 revision left to test after this (roughly 1 step)\n [2ca12fbf1487cbcd0447cf9a924cc5c19f0debf9] Merged. Merge branch   \n    'branch1'\n\n```", "```\n    $ git push origin --tags\n\n```", "```\n    $ git tag\n release-1.0\n release-1.0beta\n release-1.1\n\n```", "```\n    $ git tag ReleaseCandidate-1\n\n```", "```\n    $ git log --pretty=oneline\n 72f76f89601e25a2bf5bce59551be4475ae78972 Initial checkin\n fecef725fe47a34ab8b4488a38db446c6d664f3e Added menu GUI\n ad606b8306d22f1175439e08d927419c73f4eaa9 Added menu functions\n 773fa3a914615556d172163bbda74ef832651ed5 Initial action buttons\n\n $ git tag menuComplete ad606b\n\n```", "```\n    $ git tag -a tagWithExplanation\n # git opens your editor to create the annotation\n\n```", "```\n    $ git tag -a tagWithShortMessage -m \"A short description\"\n\n```", "```\n    $ git show tagWithShortMessage\n\n tag tagWithShortmessage\n Tagger: Clif Flynt <clif@cflynt.com>\n Date:   Fri Dec 23 09:58:19 2016 -0500\n\n A short description\n ...\n\n```", "```\n    $ git tag\n tag1\n tag2\n tag3 \n $ git tag -d tag2\n $ git tag\n tag2\n tag3F\n\n```", "```\n    $ fossil help\n Usage: fossil help COMMAND\n Common COMMANDs:  (use \"fossil help -a|-all\" for a complete list)\n add        cat        finfo      mv         revert     timeline \n ...\n\n```", "```\n    $ fossil new myProject.fossil\n project-id: 855b0e1457da519d811442d81290b93bdc0869e2\n server-id:  6b7087bce49d9d906c7572faea47cb2d405d7f72\n admin-user: clif (initial password is \"f8083e\")\n\n $ fossil init myProject.fossil\n project-id: 91832f127d77dd523e108a9fb0ada24a5deceedd\n server-id:  8c717e7806a08ca2885ca0d62ebebec571fc6d86\n admin-user: clif (initial password is \"ee884a\")\n\n```", "```\n    $ fossil ui\n Listening for HTTP requests on TCP port 8080\n\n #> fossil ui -P 80\n Listening for HTTP requests on TCP port 80\n\n```", "```\n    $ fossil server /home/projects/projectOne.fossil\n\n```", "```\n    $ cd /home/projects\n $ ls\n projectOne.fossil\n\n $ fossil server\n Listening for HTTP requests on TCP port 8080\n\n```", "```\n    $ fossil clone http://RemoteSite:port projectName.fossil\n\n```", "```\n    $ fossil clone http://example.com/ProjectName project.fossil\n\n```", "```\n    $ mkdir newFeature\n $ cd newFeature\n\n```", "```\n    $ fossil open ../project.fossil\n\n```", "```\n    $ mkdir fix_1.0_Bug\n $ cd fix_1.0_Bug\n\n```", "```\n    $ fossil open ../project.fossil release_1.0\n\n```", "```\n    $ echo \"example\" >example.txt\n $ fossil add example.txt\n ADDED  example.txt\n\n $ fossil commit\n # Enter a commit message for this check-in. Lines beginning with #   \n    are ignored.\n #\n # user: clif\n # tags: trunk \n #\n # ADDED      example.txt\n\n $ echo \"Line 2\" >>example.txt\n $ fossil commit\n # Enter a commit message for this check-in. Lines beginning with #    \n    are ignored.\n #\n # user: clif\n # tags: trunk\n #\n # EDITED     example.txt\n\n```", "```\n    $ vim example.txt\n $ vim otherExample.txt\n $ fossil commit\n # Enter a commit message for this check-in. Lines beginning with #    \n    are ignored.\n #\n # user: clif\n # tags: trunk\n #\n # EDITED     example.txt, otherExample.txt\n\n```", "```\n        $ fossil branch new NewBranchName Basis-Id\n New branch: 9ae25e77317e509e420a51ffbc43c2b1ae4034da\n\n```", "```\n        $ fossil checkout NewBranchName\n\n```", "```\n    $ fossil branch new test_rework_parse_logic trunk\n New branch: 9ae25e77317e509e420a51ffbc43c2b1ae4034da\n\n $ fossil checkout test_rework_parse_logic \n\n```", "```\n    $ fossil checkout trunk\n\n # Make Changes\n\n $ fossil commit --branch test_rework_parse_logic\n\n```", "```\n        $ fossil checkout trunk\n\n```", "```\n        $ fossil commit --branch new_logic\n\n```", "```\n        $ fossil checkout trunk\n $ fossil merge new_logic\n $ fossil commit\n\n```", "```\n    $ fossil setting autosync off\n $ fossil setting autosync on\n\n```", "```\n    $ fossil push\n\n```", "```\n    $ fossil pull\n\n```", "```\n    $ fossil checkout\n\n```", "```\n    $ fossil update\n UPDATE main.tcl\n -------------------------------------------------------------------   \n    ------------\n updated-to:   47c85d29075b25aa0d61f39d56f61f72ac2aae67 2016-12-20    \n    17:35:49 UTC\n tags:         trunk\n comment:      Ticket 1234abc workaround (user: clif)\n changes:      1 file modified.\n \"fossil undo\" is available to undo changes to the working checkout.\n\n```", "```\n    $ fossil status\n repository:   /home/clif/myProject/../myProject.fossil\n local-root:   /home/clif/myProject/\n config-db:    /home/clif/.fossil\n checkout:     47c85d29075b25aa0d61f39d56f61f72ac2aae67 2016-12-20     \n    17:35:49 UTC\n parent:       f3c579cd47d383980770341e9c079a87d92b17db 2016-12-20     \n    17:33:38 UTC \n tags:         trunk\n comment:      Ticket 1234abc workaround (user: clif) \n EDITED     main.tcl\n\n```", "```\n    child:         abcdef123456789...  YYYY-MM-DD HH:MM::SS UTC\n\n```", "```\n    $ fossil ui\n Listening for HTTP requests on TCP port 8080\n\n $ konqueror 127.0.0.1:8080\n\n```", "```\n    $ fossil diff -from ID-1 -to ID-2FILENAME\n\n```", "```\n    $ fossil diff -from 47c85 -to 7a7e25 main.tcl\n\n Index: main.tcl\n ==================================================================\n --- main.tcl\n +++ main.tcl\n @@ -9,10 +9,5 @@\n\n set max 10\n set min 1\n + while {$x < $max} { \n - for {set x $min} {$x < $max} {incr x} {\n -   process $x\n - }\n -\n\n```", "```\n$ fossil blame main.tcl\n7806f43641 2016-12-18    clif: # main.tcl\n06e155a6c2 2016-12-19    clif: # Clif Flynt\nb2420ef6be 2016-12-19    clif: # Packt fossil Test Script\na387090833 2016-12-19    clif:\n76074da03c 2016-12-20    clif: for {set i 0} {$i < 10} {incr\ni} {\n76074da03c 2016-12-20    clif: puts \"Buy my book\"\n2204206a18 2016-12-20    clif: }\n7a7e2580c4 2016-12-20    clif:\n\n```", "```\n$ fossil bisect reset\n$ fossil bisect good 63e1e1\n$ fossil bisect bad 47c85d\nUPDATE main.tcl\n-----------------------------------------------------------------------\nupdated-to:   f64ca30c29df0f985105409700992d54e 2016-12-20 17:05:44 UTC\ntags:         trunk\ncomment:      Reworked flaky test. (user: clif)\nchanges:      1 file modified.\n \"fossil undo\" is available to undo changes to the working checkout.\n 2 BAD     2016-12-20 17:35:49 47c85d29075b25aa\n 3 CURRENT 2016-12-20 17:05:44 f64ca30c29df0f98\n 1 GOOD    2016-12-19 23:03:22 63e1e1290f853d76\n\n```", "```\n$ fossil bisect status\n2016-12-20 17:35:49 47c85d2907 BAD\n2016-12-20 17:33:38 f3c579cd47\n2016-12-20 17:30:03 c33415c255 CURRENT NEXT\n2016-12-20 17:12:04 7a7e2580c4\n2016-12-20 17:10:35 24edea3616\n2016-12-20 17:05:44 f64ca30c29 GOOD\n\n```", "```\n    $ fossil tag add TagName Identifier\n\n```", "```\n # Tag the current tip of the trunk as release_1.0\n        $ fossil add tag release_1.0 trunk\n\n        # Tag the last commit on December 15 as beta_release_1\n        $ fossil add tag beta_release_1 2016-12-16\n\n```", "```\n    $ fossil add tag newTag trunk\n $ fossil branch new newTagBranch newTag\n $ fossil checkout newTagBranch\n\n```", "```\n    $ fossil add tag myNewTag 2016-12-21\n $ fossil checkout myNewTag\n # edit and change\n $ fossil commit -branch myNewTag\n\n```"]