- en: Chapter 3. Package Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章 包管理
- en: You've installed a basic system, now it's time to install additional software.
    Or, if you've selected some tasks during installation, you want to see what's
    installed and maybe remove some you won't use. Maybe your boss has asked for a
    report on what's installed. Or what about security updates?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经安装了基础系统，现在是时候安装额外的软件了。或者，如果您在安装时选择了一些任务，您可能想查看已安装的软件，并可能删除一些您不会使用的。也许您的老板要求提供已安装软件的报告。或者安全更新呢？
- en: All of these, and more, are the province of the Debian package management system.
    In this chapter, we'll cover package managers, software selection and maintenance,
    how to update your system, and how to set up automatic updating.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些以及更多内容，都是Debian包管理系统的范畴。在本章中，我们将介绍包管理器、软件选择和维护、如何更新系统以及如何设置自动更新。
- en: Note
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**A note for beginners**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**针对初学者的注意事项**'
- en: This section assumes that you are familiar with using the root account. Information
    on accessing root account functions is available at [https://wiki.debian.org/Root](https://wiki.debian.org/Root),
    and in the Debian reference manual at [http://www.debian.org/doc/manuals/debian-reference/](http://www.debian.org/doc/manuals/debian-reference/).
    Quick help for commands mentioned in this chapter (as well as most Linux commands)
    can be obtained by executing `man <command name>` or `info <command name>` from
    the command line, or using the help button available in most graphical applications.
    The Debian reference manual also contains more detailed information on using the
    package manager commands in this chapter.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本节假设您已经熟悉使用root账户。有关访问root账户功能的信息，请访问[https://wiki.debian.org/Root](https://wiki.debian.org/Root)，以及Debian参考手册中的[http://www.debian.org/doc/manuals/debian-reference/](http://www.debian.org/doc/manuals/debian-reference/)。有关本章中提到的命令（以及大多数Linux命令）的快速帮助，可以通过在命令行中执行`man
    <command name>`或`info <command name>`来获得，或者使用大多数图形应用程序中提供的帮助按钮。Debian参考手册还包含有关使用本章中包管理器命令的更详细信息。
- en: Package managers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包管理器
- en: The Debian package manager started out as a simple, command line utility, **dpkg**,
    with an additional utility called **dselect** that allowed more complex package
    selection and dependency resolution via a menu-based, curses interface. Eventually,
    additional utilities were developed to provide a better interface, better automatic
    dependency resolution, or both. The current standard package manager is Synaptic,
    a full-blown GUI application that runs in a graphical window manager, and provides
    extensive selection and reporting features.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Debian包管理器最初是作为一个简单的命令行工具**dpkg**开始的，另附一个名为**dselect**的工具，通过基于菜单的curses界面提供更复杂的包选择和依赖解决方案。最终，开发了更多的工具来提供更好的界面、更好的自动依赖解决，或两者兼具。当前的标准包管理器是Synaptic，这是一个完全成熟的GUI应用程序，运行在图形窗口管理器中，提供广泛的选择和报告功能。
- en: We'll start at the beginning.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从头开始。
- en: dpkg and dselect
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: dpkg和dselect
- en: These were the first package management tools for Debian. The `dpkg` command
    still does all of the work, since all the newer tools use it as a backend. As
    such, it has all the functions required to install, remove, configure, and report
    on packages. It is a command line tool.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是Debian最初的包管理工具。`dpkg`命令仍然完成所有工作，因为所有更新的工具都将其用作后端。因此，它具有安装、删除、配置和报告包所需的所有功能。它是一个命令行工具。
- en: One of the limitations of dpkg is that it does very little in the way of dependency
    checking, other than to offer an error message when there is a dependency problem.
    It requires the user to examine the dependency report and include the necessary
    packages during installation. Another limitation is that dpkg only works on packages
    that have already been downloaded. However, both of these limitations are addressed
    by the dselect utility.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: dpkg的一个限制是它在依赖关系检查方面做得很少，除了在出现依赖问题时提供错误信息外。它要求用户查看依赖报告并在安装过程中包含必要的包。另一个限制是dpkg只对已经下载的包有效。然而，这两个限制都可以通过dselect工具来解决。
- en: The `dselect` command is a menu-driven utility that provides access to information
    on packages in the Debian repositories, and also checks and helps resolve software
    dependencies. This greatly simplifies package selection and installation. Once
    packages are selected and all dependencies satisfied, either automatically or
    with user assistance, `dpkg` is run automatically to perform the actual installation.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`dselect` 命令是一个基于菜单的工具，提供访问 Debian 仓库中软件包的信息，并检查和帮助解决软件依赖关系。这大大简化了软件包选择和安装的过程。一旦选择了软件包并且所有依赖关系都得到满足（无论是自动完成还是通过用户帮助），`dpkg`
    会自动运行以执行实际安装。'
- en: Advanced Package Tool
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级软件包工具
- en: The **Advanced Package Tool** (**APT**) was developed to provide a better command
    line tool, that provides the download and dependency resolution of dselect without
    requiring a separate utility for installation. Think of it as an all-in-one command
    line tool that can select and install or remove packages, and automatically resolve
    dependencies.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级软件包工具**（**APT**）是为了提供更好的命令行工具而开发的，它可以提供下载和依赖关系解决功能，且无需单独的工具进行安装。可以把它看作是一个全能的命令行工具，能够选择、安装或移除软件包，并自动解决依赖关系。'
- en: APT is actually a set of utilities that include apt-get, the basic package installation
    tool, plus several other command line tools with an `apt` prefix that provide
    additional functions, such as reporting on available software, and other basic
    local repository maintenance functions.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: APT 实际上是一套包含 apt-get 的实用工具集合，apt-get 是基本的软件包安装工具，还包含其他几个以 `apt` 为前缀的命令行工具，提供附加功能，例如报告可用软件以及其他基本的本地仓库维护功能。
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `man apt` command is a good starting point, as it references other man pages
    for the additional commands. The Debian reference manual also has a lot of information
    on these and other package management commands
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`man apt` 命令是一个很好的起点，它引用了其他手册页以提供附加命令。Debian 的参考手册也包含了很多关于这些及其他软件包管理命令的信息。'
- en: This tool is fast and, except in unusual circumstances, handles dependencies
    without requiring user intervention. It is the basic tool used for automatic,
    unattended software installation and updating.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具快速且除非在特殊情况下，否则无需用户干预即可处理依赖关系。它是用于自动化、无人值守的软件安装和更新的基本工具。
- en: aptitude
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: aptitude
- en: aptitude is a frontend for the APT suite of tools, with added functions that
    make it a little more like dselect, where it offers finer-grained dependency checking,
    and resolves dependencies with user assistance rather than autonomously. As such,
    it is sometimes more successful than dselect or apt-get in resolving dependencies
    in ways that require fewer major software changes. Like dselect, it is menu-driven
    (using the curses interface), with command line functions as well. Due to the
    user assistance sometimes required for dependency resolution, it is less suited
    to unattended or automatic software updating. However, it will frequently find
    simpler solutions, involving fewer changes, when compared to APT.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: aptitude 是 APT 工具集的前端，具有附加功能，使其更像 dselect，提供更精细的依赖关系检查，并通过用户帮助而非自动化方式解决依赖关系。因此，它在依赖关系解决时，有时比
    dselect 或 apt-get 更成功，能够以更少的重大软件变更解决问题。像 dselect 一样，它是基于菜单的（使用 curses 界面），也有命令行功能。由于有时需要用户协助来解决依赖关系，它不太适合无人值守或自动化的软件更新。然而，它通常会找到更简单的解决方案，涉及较少的变更，和
    APT 相比。
- en: Synaptic
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Synaptic
- en: Synaptic is a package manager with a complete GUI interface and no command line
    capability. It offers most of the capabilities of aptitude along with many of
    the repository handling features of dselect. Like the menu-based dselect and aptitude
    utilities, it provides a software list divided into sections of interest, such
    as databases, development, editors, and many more, which allow an administrator
    to browse available software more effectively. It also has search functions which
    allow easy discovery of packages for specific purposes.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Synaptic 是一个没有命令行功能的完整图形用户界面的软件包管理器。它提供了 aptitude 大部分功能，并且拥有 dselect 的许多仓库处理功能。像基于菜单的
    dselect 和 aptitude 工具一样，它提供了一个将软件按兴趣分区的列表，例如数据库、开发、编辑器等，允许管理员更有效地浏览可用软件。它还具有搜索功能，便于查找特定用途的软件包。
- en: Tip
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Best practices are as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践如下：
- en: For general use – Synaptic
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于一般使用——Synaptic
- en: For automated installation – APT
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于自动化安装——APT
- en: For dependency resolution in difficult cases – aptitude
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于困难情况中的依赖关系解决——aptitude
- en: Package selection and maintenance
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件包选择和维护
- en: Debian software is grouped together in a release. All of the software in a release
    is available as a set of purchased or downloaded media (CDs, DVDs, or new with
    Debian 7, Blue-ray Discs), or as individual packages grouped in an online repository.
    While dpkg works only on packages already downloaded (or on media mounted locally),
    the other package management utilities understand offline media, and local and
    remote repositories, which must be configured.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Debian软件按发行版进行分组。一个发行版中的所有软件都可以作为一套购买的或下载的媒体（CD、DVD，或者在Debian 7中，新加入了蓝光光盘）提供，或者作为按包分组的单独软件包在在线仓库中提供。虽然`dpkg`仅适用于已下载的软件包（或本地挂载的媒体上的软件包），其他的包管理工具支持离线媒体、本地和远程仓库，并且这些都需要进行配置。
- en: Configuring media or repositories
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置媒体或仓库
- en: All of the configuration for media or repositories resides in `/etc/apt`, in
    a file called `sources.list` and any files in `/etc/apt/sources.list.d` with a
    `.list` extension. These files can be modified manually using your preferred editor,
    manipulated by various APT utilities such as `apt-add-repository` or `apt-spy`,
    or via a menu item in the Synaptic GUI. Details on how each method works are available
    in various man pages, such as those for `sources.list`, `apt-add-repository` and
    `apt-spy`, and so on, or in the help files for Synaptic. However, since they all
    depend on the same configuration files and format, the required entries are all
    similar.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 媒体或仓库的所有配置都位于`/etc/apt`目录下，具体在一个名为`sources.list`的文件中，此外，`/etc/apt/sources.list.d`目录下的所有以`.list`扩展名结尾的文件也包含配置。这些文件可以通过你喜欢的编辑器手动修改，也可以通过各种APT工具（如`apt-add-repository`或`apt-spy`）进行操作，或者通过Synaptic图形界面中的菜单项来进行配置。关于每种方法如何工作的详细信息可以在各种手册页中找到，例如`sources.list`、`apt-add-repository`和`apt-spy`的手册页，或者Synaptic的帮助文件中也有相关内容。然而，由于它们都依赖于相同的配置文件和格式，因此所需的条目是相似的。
- en: Each line includes an indicator of whether the repository contains binary packages
    or source packages (from which binary packages can be built), the location of
    the repository, the identity of the release, and the sections from which software
    may be selected. Generally, an entry for the media from which you installed Debian
    has already been made during the installation process, along with an entry for
    the online repositories if they were used during installation as well.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 每行包括指示仓库是包含二进制包还是源代码包（从源代码包可以构建二进制包）、仓库的位置、发行版的身份标识以及可以选择软件的部分。通常，你在安装过程中使用的媒体来源条目会在安装时自动添加，如果在安装过程中还使用了在线仓库，也会同时添加相关条目。
- en: All package sources are identified by a URI, described in the `sources.list`
    man page. The release is identified by its release name (such as **squeeze** for
    Debian 6, or **wheezy** for Debian 7) or by a generic term such as stable, which
    refers to whatever the current stable release is.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 所有软件包源通过URI进行标识，具体描述可以参考`sources.list`的手册页。发行版通过其发行版名称进行标识（例如Debian 6的**squeeze**，或Debian
    7的**wheezy**），也可以通过类似“stable”这样的通用术语进行标识，指当前的稳定版。
- en: Note
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 说明
- en: The current Debian stable release is Debian 7, code named wheezy, released on
    4 May, 2013\. At the time of writing, stable is a synonym for wheezy. Debian releases
    are named in order to make the mirroring of various distributions easier. The
    code names to date are all taken from the movie *Toy Story*. This tradition apparently
    began in 1996 when Bruce Perens, who worked for Pixar at that time, took command
    of the Debian Project.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的Debian稳定版是Debian 7，代号为wheezy，于2013年5月4日发布。撰写时，stable是wheezy的同义词。Debian的发布版名称是为了简化各种发行版的镜像过程。迄今为止的代号均来源于电影*玩具总动员*。这一传统显然始于1996年，当时在Pixar工作的Bruce
    Perens接管了Debian项目。
- en: 'Taking all these together, a set of repositories as they might appear in `/etc/apt/sources.list`
    would look like the following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 综合来看，可能出现在`/etc/apt/sources.list`中的一组仓库会是如下所示：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 说明
- en: '**Beginner''s note**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**初学者说明**'
- en: Some of the lines in the example are too long for the page and are split into
    two lines, using the common convention of adding a backslash (\) at the end of
    the first line to indicate it is continued. In reality, these lines should not
    be split in the APT sources configuration files.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中的某些行过长，因此分为两行，使用常见的约定方法，即在第一行的末尾添加反斜杠（\）表示该行被继续。实际上，在APT源配置文件中，这些行不应被拆分。
- en: Let's take the lines one at a time.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐行分析。
- en: The first line begins with a `#`, meaning this entry is disabled. This entry
    was made by a network installation, wherein a minimal CD is mounted, and basic
    software is installed to allow the remainder of the software to be installed from
    online repositories as listed in the later lines. Only the main section is required,
    as shown at the end of the line.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行以`#`开始，表示该条目被禁用。此条目由网络安装创建，在这种安装中，一个最小的CD被挂载，并安装了基础软件，以便剩余的软件可以从后续行中列出的在线仓库安装。只需要主部分，如行末所示。
- en: The next two lines are for binaries (`deb`) and source packages (`deb-src`),
    to be obtained from an HTTP server ([http://ftp.us.debian.org/debian](http://ftp.us.debian.org/debian)).
    The release is wheezy, and all three sections—main, contrib, and non-free—will
    be available. Following the main repository lines are two lines for binary and
    source package updates. This is where security updates to the stable release are
    available.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的两行是二进制包（`deb`）和源代码包（`deb-src`），可以从HTTP服务器（[http://ftp.us.debian.org/debian](http://ftp.us.debian.org/debian)）获取。该发行版是wheezy，所有三个部分——main、contrib和non-free——都可以使用。在主仓库行之后是两行用于二进制包和源包更新的内容。这里是获取稳定版本安全更新的地方。
- en: Tip
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Even if you prefer to use media for the release, rather than online repositories,
    you should include the update repositories, as this is the only way to obtain
    security fixes that are released as necessary.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你更倾向于使用媒体进行发布，而不是在线仓库，你也应该包括更新仓库，因为这是获取必要的安全修复的唯一途径。
- en: Finally, there is a comment, and two lines for what used to be called the 'volatile'
    repository, and is now just referred to by the release code name followed by `-updates`.
    This repository contains packages that are routinely updated throughout the life
    of the release, much more often than the security update repository. Packages
    that include virus definitions are examples of software included in this repository.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 最后是一个注释，还有两行曾经被称为“volatile”仓库的内容，现在仅由发行版代号后跟`-updates`来表示。这个仓库包含在发行版生命周期中经常更新的包，更新频率远高于安全更新仓库。包含病毒定义的包就是该仓库中的软件示例。
- en: While the various methods of configuring the repositories have slight differences,
    the same basic information will be required, no matter which method you use. Also,
    since all of the utilities use the same configuration files and format, information
    entered, deleted, or modified by one method will be immediately visible to all
    of the utilities.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然配置仓库的各种方法略有不同，但无论你使用哪种方法，所需的基本信息都是相同的。此外，由于所有工具都使用相同的配置文件和格式，通过一种方法输入、删除或修改的信息会立即在所有工具中可见。
- en: All of the previous lines were pre-configured by the installation procedure,
    and did not need to be modified. However, there are often reasons to modify or
    add repositories. You may want to add repositories for software that isn't available
    directly from Debian, or modify the URL to use a different, better performing
    server, or different access method.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所有前面的行都是由安装程序预配置的，无需修改。然而，通常有理由修改或添加仓库。你可能想添加一些Debian中无法直接获得的软件仓库，或者修改URL以使用不同的、更高效的服务器或不同的访问方式。
- en: Note
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For example, HTTP is more resistant to network delays or error, while FTP is
    somewhat faster. Also, not all mirrors support both methods, so if you change
    servers, you may need to change the access method as well.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，HTTP对网络延迟或错误的抵抗力更强，而FTP稍微快一些。此外，并非所有镜像都支持这两种方法，因此如果你更换服务器，可能也需要更改访问方式。
- en: 'There are a number of non-Debian repositories that contain software that is
    not included in the standard Debian release. Usually, this is due to licensing
    issues, or because development takes place outside of the Debian Project policies
    and there is no sponsor to integrate it into Debian. Some of the more useful ones
    are as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些非Debian仓库包含不在标准Debian发行版中的软件。通常，这是由于许可问题，或者因为开发工作在Debian项目的政策之外进行，并且没有赞助商将其集成到Debian中。以下是一些更有用的仓库：
- en: '**Deb Multimedia**: As it says, this is primarily a multimedia package that
    can''t be included in the normal distribution'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Deb Multimedia**：顾名思义，这是一个主要用于多媒体的包，不能包含在正常的发行版中。'
- en: '**Webmin**: This is a web-based system administration software'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Webmin**：这是一个基于Web的系统管理软件。'
- en: '**Oracle**: This provides Oracle Express software'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oracle**：提供Oracle Express软件。'
- en: '**Skype**: This provides the Skype software'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Skype**：提供Skype软件。'
- en: '**MongoDB**: This is a software from the NoSQL MongoDB project'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MongoDB**：这是来自 NoSQL MongoDB 项目的软件'
- en: 'As an example, the following is a `/etc/apt/sources.list.d/webmin.list` file
    for the Webmin archive just mentioned:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 作为示例，以下是前面提到的 Webmin 仓库的 `/etc/apt/sources.list.d/webmin.list` 文件：
- en: '[PRE1]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Generally, sites that offer such repositories will include instructions for
    configuring the sources list file for their repository.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，提供此类仓库的网站会包含如何配置其仓库的源列表文件的说明。
- en: The significance of the release name
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发行版名称的重要性
- en: One of the more subtle changes often made, other than adding non-Debian repositories,
    has very important implications. Note that the release name in most of the lines
    from the previous Debian release `sources.list` is wheezy. This means that the
    packages available through the package managers will always be from the Debian
    7 release. Some administrators change the release name to stable. This has both
    advantages and disadvantages.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 除了添加非 Debian 仓库之外，通常进行的一个更为微妙的更改具有非常重要的意义。请注意，在之前的 Debian 发行版 `sources.list`
    中，大多数行的发行版名称是 wheezy。这意味着通过包管理器可用的软件包将始终来自 Debian 7 版本。一些管理员将发行版名称更改为 stable。这既有优点，也有缺点。
- en: One advantage is that, when a new major version is released, your package managers
    will immediately recognize this and update package lists and dependencies accordingly.
    The disadvantage related is that major releases involve major changes in package
    dependencies. While package managers can handle this, such major changes usually
    result in many new packages being installed to satisfy new dependencies, many
    old ones being deleted due to changing dependencies or obsolescence, and major
    version changes that often change the way the software behaves. These changes
    can be quite disruptive to server operation, or to developers' or users' habits.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一个优点是，当发布新主版本时，您的包管理器会立即识别并更新软件包列表和依赖关系。相关的缺点是，主版本通常会涉及软件包依赖关系的重大变化。虽然包管理器可以处理这些变化，但此类重大变化通常会导致许多新软件包被安装以满足新依赖关系，许多旧软件包由于依赖关系变化或过时而被删除，同时主版本的变化通常也会改变软件的行为方式。这些变化可能对服务器操作、开发人员或用户的使用习惯造成很大干扰。
- en: Tip
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Best practice to ensure stability is to leave the official release name in place
    until you are ready to upgrade to the next release. Then change the name in the
    package manager configuration, and perform a manual upgrade.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保稳定性，最佳做法是保持官方发行版名称不变，直到您准备好升级到下一个版本。然后更改包管理器配置中的名称，并执行手动升级。
- en: Selecting packages
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择软件包
- en: Once you have the repositories that you want configured, you need to retrieve
    information about what is in the repositories. This includes not only package
    lists, but package descriptions, contents, and dependencies. This is done by updating
    your package cache, after which you can browse, select, install, upgrade, and
    delete packages.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您配置了所需的仓库，您需要获取有关仓库中内容的信息。这不仅包括软件包列表，还包括软件包描述、内容和依赖关系。这可以通过更新软件包缓存来完成，之后您就可以浏览、选择、安装、升级和删除软件包。
- en: Updating your package cache
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新您的软件包缓存
- en: The package information is updated simply by the refresh menu entry in Synaptic,
    or the aptitude or apt-get `update` command to update the package information
    cache. This should be done regularly to ensure that the information you have on
    available packages is current. Once you have the repositories configured and have
    updated the package information cache, you can select and install software from
    any or all of them as desired. There are two basic methods for selecting packages.
    command line and selection lists.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 软件包信息的更新只需在 Synaptic 中使用刷新菜单项，或使用 aptitude 或 apt-get 的 `update` 命令来更新软件包信息缓存。应定期执行此操作，以确保您所拥有的可用软件包信息是最新的。一旦您配置好了仓库并更新了软件包信息缓存，就可以根据需要选择并安装来自任何一个或所有仓库的软件包。选择软件包有两种基本方法：命令行和选择列表。
- en: Command-line selection
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 命令行选择
- en: This is the simplest and fastest method to install one or a few packages and
    their dependencies, but it requires that you know what packages you want to install.
    There are several utilities that can be used to search package names and descriptions,
    which will provide you with the means to find the proper package names. The most
    common of these is `apt-cache`. Once you know what package or packages you want
    to install, you can use apt-get or the command line format of aptitude or dselect
    to quickly download and install the packages.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是安装一个或几个包及其依赖关系的最简单和最快的方法，但需要您知道要安装的包。有几个工具可以用来搜索包的名称和描述，这将为您提供查找正确包名称的方法。其中最常见的是`apt-cache`。一旦您知道要安装的包或包，您可以使用apt-get或aptitude或dselect的命令行格式快速下载和安装这些包。
- en: Selection lists
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择列表
- en: Both aptitude and dselect provide a basic, interactive interface as well. You
    can navigate through a list of available packages, classified according to sections,
    or you can search for packages using a number of criteria. The interface is based
    on the simple curses library, and can seem cumbersome at times, although it is
    an improvement over the command line utilities mentioned previously. One advantage
    of these interfaces (as well as the command line utilities) is that they can be
    used in a terminal environment and do not require a graphic desktop environment
    be installed. They are frequently used on high-performance servers where a graphic
    desktop environment is not installed for security or performance reasons.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: aptitude和dselect都提供了基本的交互界面。您可以浏览按部门分类的可用包列表，或者可以使用多种标准搜索包。界面基于简单的curses库，有时可能显得笨重，但是相比之前提到的命令行工具，它是一种改进。这些界面（以及命令行工具）的一个优点是它们可以在终端环境中使用，无需安装图形桌面环境。它们经常用于安装了高性能服务器的地方，其中安全性或性能原因未安装图形桌面环境。
- en: On the other hand, Synaptic provides a full GUI interface for browsing, searching,
    and selecting packages, as well as configuring repositories, selecting installation
    options, and providing information on available and installed packages. It requires
    a graphic desktop environment, such as GNOME or KDE, in order to operate.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，Synaptic提供了一个完整的GUI界面，用于浏览、搜索和选择包，以及配置存储库、选择安装选项，并提供有关可用和已安装包的信息。它需要图形桌面环境，例如GNOME或KDE，才能运行。
- en: Note
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Synaptic can be run remotely, over a Secure Shell connection, from a system
    that does have a graphic window manager installed. Some administrators install
    Synaptic on servers without graphical desktops and use it in this manner to avoid
    security or performance issues of graphic environments on the server itself.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Synaptic可以通过安全外壳连接远程运行，从已安装图形窗口管理器的系统中使用。一些管理员在没有图形桌面的服务器上安装Synaptic，并以这种方式使用它，以避免服务器本身图形环境的安全或性能问题。
- en: Meta packages
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 元包
- en: One of the most useful package types is called **meta packages**. These are
    packages that contain no software themselves, but that require other packages
    to be installed, and thus provide a unified set of software for a particular purpose.
    This works because, although no actual software is in the meta package, the package
    manager will select and install all of the required dependent packages, providing
    a complete set of features in a single, easy installation step.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最有用的包类型之一称为**元包**。这些包本身不包含任何软件，但需要安装其他包，因此为特定目的提供了统一的软件集。这是因为虽然元包中没有实际软件，但包管理器会选择并安装所有必需的依赖包，从而在单个简单的安装步骤中提供完整的功能集。
- en: 'Frequently, there are multiple packages with slightly different names that
    install a slightly different set of dependencies. A good example is GNOME. You
    can install the GNOME meta package, which will provide a complete GNOME installation,
    including many extras. Or, you can elect to install `gnome-core`, which provides
    only the basic desktop environment, and select from any of the additional packages
    that provide additional features and functions, such as:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 经常有多个略有不同名称的包，安装了稍有不同的依赖关系。GNOME就是一个很好的例子。您可以安装GNOME元包，它将提供完整的GNOME安装，包括许多附加功能。或者，您可以选择安装`gnome-core`，它只提供基本的桌面环境，并从提供附加功能和功能的其他包中进行选择，例如：
- en: evolution (e-mail software, similar to Outlook)
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: evolution（类似于Outlook的电子邮件软件）
- en: gnome-documents (document management features)
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: gnome-documents（文档管理功能）
- en: gnome-games
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: gnome-games
- en: gnome-media (multimedia applications)
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: gnome-media（多媒体应用）
- en: libreoffice-gnome (office suite) and others
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: libreoffice-gnome（办公套件）和其他
- en: One minor problem with meta packages is that there is no easy way to search
    for them. Many do have 'meta' in their descriptions, which can facilitate some
    searches, but this is not universally true. The GNOME packages mentioned previously
    do not follow this convention as of Debian 7\. Nevertheless, they are often fairly
    obvious, and not too difficult to find.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 元软件包的一个小问题是，找不到它们的简便方法。许多元软件包在其描述中确实包含“meta”字样，这可以帮助某些搜索，但这并不总是适用。前面提到的GNOME软件包在Debian
    7中就没有遵循这一惯例。不过，它们通常还是比较明显，且不难找到。
- en: A word about dependency resolution
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于依赖项解决
- en: dselect, APT, aptitude, and Synaptic, all provide some form of automatic dependency
    resolution. In rare cases, a dependency can't be resolved automatically, and user
    intervention is required. aptitude will calculate alternatives and ask the user
    to select from them. APT and Synaptic generally require the user to add packages
    to the command line or selection list manually.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: dselect、APT、aptitude和Synaptic都提供某种形式的自动依赖解决。在少数情况下，依赖无法自动解决，需要用户干预。aptitude会计算出替代方案并要求用户选择。APT和Synaptic通常需要用户手动将软件包添加到命令行或选择列表中。
- en: Such problems generally only occur in the testing and unstable releases, where
    software dependencies are constantly updated and some may not completely resolve
    until all of the software involved has been updated and placed in the release.
    However, one common source of this problem occurs in the stable release as well,
    and is due to a dependency on a **virtual package**.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这种问题通常只出现在测试版和不稳定版本中，软件依赖项会不断更新，某些问题可能直到所有相关软件都已更新并放入发布版后才会完全解决。然而，这个问题也常见于稳定版，原因是依赖于**虚拟软件包**。
- en: A virtual package is not the name of an actual package, but the name of a library
    or function that any one of a number of packages can provide. Since there are
    usually multiple packages that can satisfy the dependency, the user must choose
    one to manually install, after which the remainder of the original dependencies
    can be satisfied automatically. This rarely occurs during a standard upgrade,
    and almost never during a distribution upgrade, where such virtual packages are
    selected automatically.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟软件包并不是实际软件包的名称，而是一个库或功能的名称，多个软件包都可以提供这个功能。由于通常有多个软件包可以满足该依赖项，用户必须手动选择一个进行安装，之后其余的原始依赖项可以自动解决。这种情况在标准升级过程中很少发生，在发行版升级过程中几乎从不发生，因为这些虚拟软件包会自动选择。
- en: Note
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In general, you will only see this problem, and then rarely, when installing
    single packages manually.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你只会在手动安装单个软件包时，且很少发生此问题。
- en: Removing packages
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除软件包
- en: Removing packages is also handled by any of the package managers. Something
    to be aware of, however, is that apt-get and Synaptic do not automatically remove
    dependencies after the package that depends on them is removed. The command `apt-get
    autoremove` should be used to do this, no matter which package manager was used
    for installation and removal. aptitude does this automatically.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 删除软件包也可以通过任何软件包管理工具来处理。然而需要注意的是，apt-get和Synaptic在删除依赖它们的软件包后，不会自动移除这些依赖项。应使用命令`apt-get
    autoremove`来执行此操作，无论是通过哪个包管理器安装和删除软件包。aptitude会自动完成这一操作。
- en: Keeping current
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持最新
- en: After installing the software you need for your system, it is good practice
    to check for updates at regular intervals. In particular, security updates are
    released as soon as possible after a security flaw in any Debian software is identified.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装完系统所需的软件后，定期检查更新是一种良好的做法。特别是，安全更新会在发现Debian软件的安全漏洞后尽快发布。
- en: It is easy to update a Debian system. After updating the package cache (see
    the previous section on *Updating your package cache*) so that it holds current
    information on all software in the repositories, the Synaptic mark all upgrades
    menu item, or the apt-get or aptitude `upgrade` command will update all software
    with any newer versions available.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 更新Debian系统很简单。在更新软件包缓存（参见前一节关于*更新你的软件包缓存*）以便它包含仓库中所有软件的最新信息后，可以通过Synaptic中的“标记所有升级”菜单项，或使用apt-get或aptitude的`upgrade`命令来更新所有有新版本的软件。
- en: Automatic updates
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动更新
- en: It is possible to perform automatic, unattended updates to a system, but there
    are some potential problems. Setting it up is quite simple. Just install the unattended-upgrades
    package. If you aren't asked during installation if you want to enable automatic
    security upgrades, run the command `dpkg-reconfigure -plow unattended-upgrades`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 可以执行自动、无人值守的系统更新，但也存在一些潜在的问题。设置过程非常简单，只需安装`unattended-upgrades`软件包。如果在安装过程中没有询问是否启用自动安全升级，可以运行命令`dpkg-reconfigure
    -plow unattended-upgrades`。
- en: Generally, only security upgrades will be automatically installed, which will
    minimize potential problems, which include modified dependencies and changes that
    modify how the software is configured or how it operates. It is possible to allow
    other upgrades by modifying the configuration file in `/etc/apt/apt.conf.d/50unattended-upgrades`.
    The file is commented to help identify the modifications desired, generally just
    removing the `//` in front of the lines you want to enable. Note that enabling
    anything other than security updates can result in errors (when dependency issues
    are encountered) or system disruption (when the upgrade modifies software behavior
    or configuration). This is especially true if the stable release name is used,
    which can result in very major changes when a new stable version is released.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，只有安全升级会被自动安装，这将最大限度地减少潜在问题，包括修改过的依赖项和修改软件配置或操作方式的变化。可以通过修改`/etc/apt/apt.conf.d/50unattended-upgrades`中的配置文件来允许其他升级。该文件中有注释，帮助识别所需的修改，通常只需要去掉希望启用的行前面的`//`。请注意，启用安全更新以外的任何内容可能会导致错误（当遇到依赖问题时）或系统中断（当升级修改软件行为或配置时）。特别是使用稳定版名称时，当发布新稳定版时，可能会带来非常大的变化。
- en: Tip
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Best practice is to allow automatic installation of security upgrades only (use
    the default configuration). The package information cache for all packages will
    be updated in any case, so you can manually upgrade the rest of the packages periodically,
    allowing you to address any unusual upgrade issues as they arise.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践是只允许自动安装安全升级（使用默认配置）。所有软件包的信息缓存无论如何都会更新，因此你可以定期手动升级其他软件包，以便在出现任何异常升级问题时进行处理。
- en: Foreign packages
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 外部软件包
- en: What do you do when a package doesn't exist in Debian? There are several options.
    One mentioned previously is to add non-Debian repositories to the repository configuration.
    After a Synaptic refresh, apt-get, or aptitude `update`, all of the package information
    in the repository will be available to the Debian package managers.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在 Debian 中没有某个软件包，应该怎么办？有几个选项。之前提到的一个方法是将非 Debian 仓库添加到仓库配置中。在进行 Synaptic
    刷新、apt-get 或 aptitude `update` 后，仓库中的所有软件包信息将可以被 Debian 包管理器访问。
- en: If, however, the software isn't included in any repository, there are a couple
    of options available.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果该软件不包含在任何仓库中，仍然有几种可用的选项。
- en: Note
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'There is actually one additional option: just install such software from its
    original source. This technique is not recommended because it places the software
    completely outside of the package management system. Future system upgrades that
    involve required libraries can cause the software to behave strangely or even
    break completely, and finding the reason can be quite frustrating. This technique
    should be used as a last resort only.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 其实还有一个额外的选项：直接从原始来源安装该软件。这种方法不推荐使用，因为它将软件完全置于包管理系统之外。涉及必需库的未来系统升级可能会导致软件出现异常行为，甚至完全损坏，且查找原因可能非常令人沮丧。此方法应仅作为最后手段使用。
- en: Alien
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Alien
- en: If the package exists in some other Linux distribution, it can often be converted
    to a Debian package. This is done using a package called **alien**. Alien provides
    commands to convert between a number of package formats (including Red Hat RPM,
    Stampede SLP, Slackware TGZ, Solaris PKG, and Debian DEB).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果某个软件包存在于其他 Linux 发行版中，通常可以将其转换为 Debian 包。这可以通过一个名为**alien**的软件包来完成。Alien 提供了命令来转换多种包格式（包括
    Red Hat RPM、Stampede SLP、Slackware TGZ、Solaris PKG 和 Debian DEB）。
- en: Tip
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Before using alien, note the warnings in the man page.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 alien 之前，请注意查看手册页中的警告。
- en: In general, the conversion itself is fairly straightforward. Although the results
    cannot be guaranteed, the converted package often will install okay under Debian.
    Any problems that do occur are most likely to be caused by different library dependency
    names, or even differences in software level identification.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，转换过程相对简单。虽然结果无法保证，但转换后的包通常可以在 Debian 上成功安装。任何出现的问题很可能是由于库依赖名称不同，或甚至是软件版本标识的差异。
- en: All is not lost when this happens, however. Alien can perform a partial conversion,
    essentially stopping at the point where it has created the temporary directory
    from which it normally builds the Debian package. You can then go into the directory
    and make the necessary modifications, and then complete the build manually.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当发生这种情况时，所有的工作并没有白费。Alien 可以执行部分转换，本质上是在它创建了一个临时目录后停止，通常该目录是从中构建 Debian 包的目录。然后，您可以进入该目录并进行必要的修改，之后手动完成构建。
- en: Manual builds
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 手动构建
- en: It is also possible to build Debian packages yourself, either from a partial
    alien conversion (as previously discussed), or from scratch using the original
    software. The procedure can vary from simple to complex, depending on what the
    package is to provide, and is well covered in the Debian maintainer's guide and
    the Debian policy manual, both available online or as installable packages in
    Debian, and in many other online resources. A good online starting place is the
    Debian packaging Wiki page at [https://wiki.debian.org/HowToPackageForDebian](https://wiki.debian.org/HowToPackageForDebian).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以自行构建 Debian 包，无论是从部分 alien 转换（如前所述）还是从原始软件开始构建。该过程可能从简单到复杂不等，取决于包要提供的内容，并且在
    Debian 维护者指南和 Debian 政策手册中有详细说明，这些手册可以在线获取或作为可安装的包在 Debian 中使用，也可以在许多其他在线资源中找到。一个好的在线起点是
    Debian 打包 Wiki 页面：[https://wiki.debian.org/HowToPackageForDebian](https://wiki.debian.org/HowToPackageForDebian)。
- en: Tip
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Manual builds, either from scratch or from a partial alien conversion, are the
    recommended way to handle software that cannot be obtained in standard Debian
    format.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 手动构建，无论是从头开始还是从部分 alien 转换开始，都是处理无法以标准 Debian 格式获取的软件的推荐方法。
- en: 'Details vary greatly, depending on the actual software involved. Generally,
    a package is built from source code, but it is also possible to build a package
    from a binary only software release as well. The general procedure for this is
    as follows:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 具体细节因实际使用的软件而异。通常，包是从源代码构建的，但也可以仅从二进制软件版本构建包。一般的构建过程如下：
- en: Obtain the source (or binary files) and place in an appropriate package building
    directory.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取源代码（或二进制文件），并将其放入适当的包构建目录中。
- en: Create the necessary Debian packaging files, which include additional documentation
    as necessary, optional script files specific to Debian packages, files to control
    the package building process, and files required by Debian package managers.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建必要的 Debian 打包文件，包括必要时的额外文档、特定于 Debian 包的可选脚本文件、控制打包过程的文件，以及 Debian 包管理器所需的文件。
- en: Test the build. If necessary, add patches to correct any problems in packaging,
    or that are required for the software to compile or run properly in a Debian environment.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试构建。如果必要，添加补丁以修正打包中的任何问题，或是为了在 Debian 环境中正确编译或运行软件所需的补丁。
- en: Repeat steps 2 and 3 until the final product installs and runs on your distribution.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤 2 和 3，直到最终产品在您的发行版上安装并运行。
- en: 'The packages available to Debian developers are included in the distribution
    for anyone to use. The primary ones used in building your own packages are:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 可供 Debian 开发者使用的软件包已经包含在发行版中，任何人都可以使用。用于构建自己包的主要工具包括：
- en: build-essential (packages essential for building Debian packages)
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: build-essential（构建 Debian 包所需的核心包）
- en: dpkg-dev (package development tools)
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dpkg-dev（包开发工具）
- en: fakeroot (allows users to build as if they were the root user)
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fakeroot（允许用户像 root 用户一样进行构建）
- en: dh-make (tools to create files in the debian package build directory)
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dh-make（用于在 Debian 包构建目录中创建文件的工具）
- en: debhelper (helper programs for the debian/rules file)
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: debhelper（Debian/rules 文件的辅助程序）
- en: cdbs (optional, additional helper programs for the debian/rules file)
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cdbs（可选的、用于 Debian/rules 文件的附加辅助程序）
- en: quilt (debian package patch management)
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: quilt（Debian 包补丁管理）
- en: It is all but impossible to give any general example, as every package will
    differ in all but the first step. However, there are many good examples and tutorials
    available online, and the full package source of all Debian packages included
    in the distribution is available for anyone to examine and learn from.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎不可能给出任何通用示例，因为每个软件包在除了第一步之外的所有步骤中都会有所不同。然而，网上有许多很好的示例和教程，而且所有Debian发行版中包含的软件包的完整源代码都可以供任何人查看和学习。
- en: Upgrading your system
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级你的系统
- en: As mentioned previously, it is simple to update your system. The commands (or
    menu items) for upgrading your system to the next official release are different
    from the standard updating commands. The apt-get command `dist-upgrade` or the
    aptitude `full-upgrade` will perform the necessary special calculations to upgrade
    to the next major distribution release after the package information cache has
    been updated (either using the normal `update` command if you have configured
    the release name as stable, or after changing to the new release name and executing
    the `update` command). The reason for the special commands is that there are major
    changes in package dependencies between official releases, and the way some software
    is configured, as well as the removal of obsolete packages, all of which require
    special calculations not involved in a normal package upgrade.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，更新系统是非常简单的。升级系统到下一个官方版本的命令（或菜单项）与标准更新命令不同。apt-get命令`dist-upgrade`或aptitude的`full-upgrade`会在更新软件包信息缓存后，执行必要的特殊计算，以便升级到下一个主要版本（通过正常的`update`命令，如果你已将发布名称配置为稳定版，或者在更改为新的发布名称并执行`update`命令后）。之所以需要这些特殊命令，是因为官方发布版本之间存在包依赖关系的重大变化，某些软件配置的方式，以及淘汰过时软件包的方式，这些都需要特别的计算，而不是普通包升级所涉及的内容。
- en: Note
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Synaptic can also handle a full distribution upgrade, but instead of a different
    command, it handles such upgrades when 'smart upgrade' is set in Preferences instead
    of 'default upgrade'.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: Synaptic也可以处理完整的发行版升级，但它并不是通过不同的命令来处理，而是在首选项中将‘智能升级’设置为默认升级时进行此类升级。
- en: Prior to the upgrade
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 升级前
- en: '**Read the release notes!** This can''t be emphasized enough. The Debian developers
    are careful to include all the important details on what has changed between releases,
    and any special steps required prior to and after the upgrade process.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**阅读发布说明！** 这一点必须强调。Debian开发者会仔细地将版本间的变化和升级过程前后所需的特别步骤包含在发布说明中。'
- en: 'There are two ways to handle a major upgrade: all-at-once, and a little at
    a time (which we''ll refer to as a partial upgrade). The all-at-once upgrade basically
    involves a single command that updates all packages. The partial upgrade method
    involves selecting a group of packages and updating them and their dependencies.
    This reduces the dependency calculations to a more easily handled subset. Generally,
    one selects one of the meta packages, such as GNOME or Apache2, or a selected
    set of packages to update, and uses the `install` command in either apt-get or
    aptitude, or selects the packages in dselect, aptitude, or Synaptic. After they
    are upgraded, the next set is chosen and updated, until all packages have been
    updated, along with any new dependencies or removals required. At some point,
    after the majority of software has been upgraded, the remainder of the upgrade
    can be handled all at once.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 处理重大升级有两种方式：一次性升级和分步升级（我们称之为部分升级）。一次性升级基本上涉及一个更新所有软件包的命令。部分升级方法则是选择一组软件包，更新它们及其依赖关系。这将依赖关系计算减少到一个更易处理的子集。通常，选择其中一个元包，如GNOME或Apache2，或选择一组软件包进行更新，并使用`install`命令通过apt-get或aptitude，或在dselect、aptitude或Synaptic中选择软件包。升级后，选择下一组软件包进行更新，直到所有软件包以及所需的新依赖关系或删除项都被更新为止。在大多数软件已经升级后，剩下的升级可以一次性处理。
- en: Choosing a subset of packages is fairly simple. The apt-get `dist-upgrade` command
    and aptitude `full-upgrade` command will provide information on what will be added,
    upgraded, and removed and ask you to confirm the selection. At this point, you
    can tell them not to perform the upgrade, then review the packages proposed for
    upgrading, and select one or a few to use with the apt-get or aptitude command
    line `install` command (which upgrades already installed packages). A similar
    procedure works with Synaptic.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 选择软件包的子集相当简单。apt-get `dist-upgrade` 命令和 aptitude `full-upgrade` 命令将提供关于将添加、升级和移除的信息，并要求您确认选择。在这一点上，您可以告诉它们不要执行升级，然后检查建议升级的软件包，并选择一个或多个与
    apt-get 或 aptitude 命令行 `install` 命令一起使用（这会升级已安装的软件包）。类似的过程适用于 Synaptic。
- en: Tip
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: One way to ease the upgrade process is to perform a standard package upgrade
    first. This will perform the simpler, standard package upgrades that don't require
    major changes in dependencies. Once this is done, the full distribution upgrade
    will involve fewer packages
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 简化升级过程的一种方法是首先执行标准的软件包升级。这将执行那些不需要进行主要依赖更改的简单标准软件包升级。完成此步骤后，完整的发行版升级将涉及更少的软件包。
- en: During the upgrade
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 升级期间
- en: You've selected the packages to upgrade (or are performing an all at once upgrade),
    and started the process. The first thing to note is what packages are going to
    be removed. If one or more of them appear to be packages you need, cross-check
    them with the packages being installed to see if they are being replaced by a
    new package with similar functions. If they are not, make a note to follow the
    upgrade with a separate installation of whatever packages are required.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 你已选择升级的软件包（或者正在执行一次性升级），并开始了这个过程。首先要注意的是哪些软件包将被移除。如果其中有一个或多个是你需要的软件包，请与要安装的软件包进行交叉检查，看看它们是否被一个具有类似功能的新软件包替代。如果没有，记得在升级完成后另行安装所需的软件包。
- en: During a distribution upgrade, the system can generally remain in operation,
    although there will be slight disruptions when a package requires certain services
    to be restarted or libraries to be loaded.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在发行版升级期间，系统通常可以继续运行，尽管当某个软件包要求重新启动某些服务或加载库时会有轻微的中断。
- en: Tip
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: These disruptions are more severe than a normal upgrade, particularly in cases
    where a package is removed and replaced with a different one to fulfill the same
    function, or removed because it is obsolete. Therefore, you may want to inform
    users prior to the upgrade, and keep system activity to a minimum.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这些中断比正常升级更严重，特别是在一个软件包被移除并替换为完成相同功能的不同软件包，或者因其过时而被移除的情况下。因此，您可能希望在升级之前通知用户，并将系统活动保持最低限度。
- en: The next thing to watch for is the upgrade notes. Major changes are in how some
    software works are displayed (and e-mailed to the root account for later checking
    as well) in order to notify the installer of necessary post-installation steps
    to be taken.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个要注意的是升级说明。一些软件工作方式的重大更改会显示出来（并发送到 root 账户以便稍后检查），以便通知安装程序需要采取的必要的安装后步骤。
- en: Finally, when the administrator has made changes to the configuration of a package,
    the upgrade process will notify him/her of the non-default configuration and ask
    for help in resolving the differences. This involves leaving the current local
    version in place, replacing it with the developers' version, or pausing the installation
    so the differences can be examined and resolved manually.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，当管理员对软件包的配置进行更改后，升级过程将通知他/她非默认配置，并要求帮助解决差异。这涉及保留当前的本地版本、替换为开发者版本，或者暂停安装以便手动检查和解决差异。
- en: Tip
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Often there are new options or defaults that should be added to the old configuration.
    Best practice is to either resolve the changes immediately, or keep the old configuration
    and cross-check it later with the new default configuration (which is placed in
    the same directory with a modified name to keep it inactive but available for
    just this reason).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 常常有新的选项或默认设置应添加到旧的配置中。最佳实践是立即解决这些更改，或保留旧的配置，并稍后与新的默认配置进行交叉检查（新的默认配置以修改后的名称放置在同一目录中，以使其处于非活动状态但仅供这个原因使用）。
- en: After the upgrade
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 升级后
- en: Once the distribution upgrade is complete, there are still a few steps that
    should be taken. First, if the configuration file issues weren't resolved during
    installation, now is the time to do this. The new file is in the same place as
    the old one, with an added `dpkg-new` extension. If the installer selected the
    developers' version, the old configuration is there with a `dpkg-old` extension.
    Either way, the administrator can check them for differences and make the necessary
    changes.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦分发版升级完成，仍然有一些步骤需要执行。首先，如果在安装过程中未解决配置文件的问题，现在是时候进行处理了。新文件与旧文件放在相同的位置，且文件名带有`dpkg-new`扩展名。如果安装程序选择了开发者版本，旧配置文件则带有`dpkg-old`扩展名。无论哪种情况，管理员可以检查它们的差异，并进行必要的更改。
- en: Next, if there are major changes in software operation, any applications that
    use the software should be modified, or the configuration updated to recreate
    the old behavior if possible. A good example of this issue is major changes to
    how PHP works, which often necessitates re-coding web pages that used the changed
    features or modifying the configuration when it supports operation in a legacy
    mode. Other major changes may affect users, such as the change from GNOME 2 to
    GNOME 3, which involves a major change in the user experience. Also, any post-installation
    steps noted in the release notes should be taken.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，如果软件操作发生重大变化，任何使用该软件的应用程序都应该进行修改，或者更新配置以尽可能恢复旧的行为。一个很好的例子是PHP操作方式的重大变化，这通常需要重新编写使用了已更改特性的网页，或者在支持以遗留模式运行时修改配置。其他重大变化可能会影响用户，例如从GNOME
    2到GNOME 3的变化，这涉及到用户体验的重大变化。此外，发布说明中提到的任何后安装步骤也应该执行。
- en: Summary
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The package managers in Debian make it easy to upgrade software packages, and
    even upgrade to a new, major release level. Upgrades don't require major server
    downtime, although if they involve major software changes that modify how the
    software is configured or behaves, additional work may be required after the upgrade
    to return service to normal. Non-Debian repositories can be added so that the
    package managers can update non-Debian software just as easily as official Debian
    packages. If software isn't available in Debian format, it can be packaged using
    the same tools Debian developers use, so that Debian package managers will handle
    it as well.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Debian中的包管理器使得升级软件包变得非常简单，甚至可以升级到新的主要版本级别。升级不需要长时间的服务器停机，尽管如果涉及到修改软件配置或行为的重大软件更改，可能需要在升级后进行额外的工作以恢复服务到正常状态。可以添加非Debian仓库，以便包管理器可以像更新官方Debian包一样轻松地更新非Debian软件。如果某个软件没有Debian格式，可以使用Debian开发者使用的相同工具进行打包，这样Debian的包管理器也能处理它。
- en: Usually after an installation or upgrade, there are additional steps that must
    be taken. The major one is package configuration, which we will cover in the next
    chapter.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在安装或升级之后，需要执行一些额外的步骤。最主要的是包配置，我们将在下一章中详细讨论。
