- en: Chapter 5. Chatting Off-the-Record
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 离线聊天
- en: 'In this final chapter, we will use the **BeagleBone Black** (**BBB**) to protect
    the last bastion of your online life: real-time chats. With your e-mail protected
    by GPG and your browsing protected by Tor, we''ll use the software called **Off-the-Record**
    (**OTR**) to protect instant messaging chats. OTR addresses a weakness in the
    PGP threat model and we will give an overview of the OTR design objectives before
    building the project. We''ll also consolidate all of your chat networks to be
    managed over an Internet Relay Chat interface, which will run on your BBB. While
    this project doesn''t require any additional hardware other than the BBB, the
    cryptographic concepts and networking interactions are slightly more challenging
    than the previous chapters. At the end of this chapter and the book, you will
    have had exposure to and become familiar with the three most effective tools to
    protect your privacy online.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用**BeagleBone Black**（**BBB**）来保护您在线生活的最后堡垒：实时聊天。通过GPG保护您的电子邮件，使用Tor保护您的浏览，我们将使用名为**Off-the-Record**（**OTR**）的软件来保护即时消息聊天。OTR解决了PGP威胁模型中的一个弱点，我们将在构建项目之前概述OTR的设计目标。我们还将整合所有聊天网络，通过Internet
    Relay Chat接口进行管理，该接口将运行在您的BBB上。尽管这个项目不需要除BBB以外的任何额外硬件，但加密概念和网络交互比前几章稍微更具挑战性。在本章和本书结束时，您将接触并熟悉三种最有效的在线隐私保护工具。
- en: 'In this chapter, you will do the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，您将执行以下操作：
- en: Learn the difference between the cryptographic design between PGP and OTR
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习PGP和OTR之间加密设计的区别
- en: Run an IRC to chat gateway with BitlBee
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用BitlBee运行IRC聊天网关
- en: Incorporate your IRC networks with the IRC bouncer ZNC
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将您的IRC网络与IRC中继器ZNC结合使用
- en: Set up and use OTR chat on BitlBee and ZNC
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在BitlBee和ZNC上设置并使用OTR聊天
- en: Communicating Off-the-Record – a background
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 离线通信背景
- en: Before we investigate OTR, let's consider how we could encrypt our chat sessions.
    We could use GPG for chat. We'd have to know the public key of our correspondent,
    and each time we'd enter a message, it would encrypt and/or sign the message and
    send it along. Some chat networks don't have an equivalent e-mail address, so
    it could be awkward finding and verifying public keys. However, you can certainly
    imagine a chat system that worked this way; it's a slightly more synchronous version
    of GPG with e-mail.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们研究OTR之前，让我们考虑如何加密我们的聊天会话。我们可以使用GPG进行聊天。我们需要知道通信对象的公钥，每次输入信息时，它都会加密和/或签名该信息并发送出去。一些聊天网络没有类似电子邮件地址的东西，所以找到并验证公钥可能会比较麻烦。然而，您完全可以想象出一种这样的聊天系统；它是GPG与电子邮件的一个稍微同步的版本。
- en: Even if those technical problems are addressed there is a bigger issue lurking
    in PGP's design. Let's return to our friends Alice and Bob. Alice and Bob have
    been communicating with GPG for quite some time now. They use GPG flawlessly and
    religiously practice the best security hygiene. Until one day, when somebody gets
    a hold of Bob's private key. Now, there are several ways this could happen. Despite
    Bob's willpower, perhaps he just couldn't resist clicking on the *Watch cuTe kittys
    [sic]* link and malware infected his computer. Perhaps somebody stole his custom
    made GPG key hardware token and guessed his GPG passphrase. Regardless of how
    his private key was leaked, what matters is that now somebody else has it.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 即使解决了那些技术问题，PGP的设计中仍然存在一个更大的问题。让我们回到我们的朋友Alice和Bob。Alice和Bob已经使用GPG进行通信一段时间了。他们使用GPG毫无瑕疵，并且始终如一地践行最佳的安全卫生习惯。直到有一天，有人获取了Bob的私钥。现在，这种情况可能有多种方式发生。尽管Bob有强烈的意志力，也许他就是无法抗拒点击*Watch
    cuTe kittys [sic]*链接，导致恶意软件感染了他的计算机。也许有人偷走了他定制的GPG硬件令牌，并猜出了他的GPG密码。无论Bob的私钥是如何泄露的，重要的是现在别人已经拥有了它。
- en: Bob, vigilant GPG user that he is, immediately revokes his key, which informs
    the world that the key is compromised. This warns others not to use that particular
    key and for future conversations, they should use a new key. But let's not forget
    about Alice and the many communiqués she exchanged with Bob. What's to make of
    Alice? This attacker, who has Bob's private key, can decrypt the entire past communication
    between Alice and Bob. All of it. All of a sudden, their conversation doesn't
    seem so private as Ian Goldberg, the designer of OTR, remarks about privacy in
    GPG communications.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Bob，作为一名警觉的 GPG 用户，立即撤销了他的密钥，通知大家该密钥已经被泄露。这警告其他人不要再使用该密钥，并且在未来的通信中应使用新的密钥。但我们不能忘记
    Alice 和她与 Bob 之间的许多通信。那 Alice 怎么办？这个攻击者，拥有 Bob 的私钥，可以解密 Alice 和 Bob 之间的所有过往通信。所有内容。突然间，他们的对话似乎不再那么私密，正如
    OTR 设计者 Ian Goldberg 所提到的关于 GPG 通信隐私的问题。
- en: Introducing Off-the-Record communication
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引入 Off-the-Record 通信
- en: While GPG has its place, if you are concerned about losing control of your private
    key, then maybe you should consider other tools. One tool, which was designed
    with this threat in mind, is called **Off-the-Record** (**OTR**) which was originally
    published in the paper *Off-the-Record Communication, or, Why Not To Use PGP*
    (Borisov 2004). OTR includes some cryptographic features and design goals that
    differ from PGP. For example, OTR was designed to incorporate *perfect forward
    secrecy*, which ensures that **session keys**, the keys that are encrypting the
    communication traffic, can't be re-derived if the longer term identity key is
    compromised. Also OTR only uses digital signatures for the initial authentication
    step; individual messages are not signed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 GPG 有其作用，但如果你担心失去对私钥的控制，那么你可能需要考虑其他工具。一个专门考虑到这一威胁的工具叫做**Off-the-Record**（**OTR**），最初发布在论文《*Off-the-Record
    Communication, or, Why Not To Use PGP*》（Borisov 2004）中。OTR 包含一些与 PGP 不同的加密功能和设计目标。例如，OTR
    被设计为包含*完美前向保密性*，确保**会话密钥**（即加密通信流量的密钥）在长期身份密钥泄露的情况下不会被重新推导出来。同时，OTR 只在初始认证步骤中使用数字签名；单个消息不会被签名。
- en: The session keys are derived independently by both parties through a **Diffie-Hellman
    Key-Exchange** protocol. The Diffie-Hellman protocol helps to solve a key distribution
    problem. Alice and Bob want to secure their communications with a symmetric cipher,
    but they both need the same key. Using Diffie-Hellman, they can both derive the
    shared key value over an insecure channel, without exposing the value of the key
    to a third party. OTR uses asymmetric cryptography in a Diffie-Hellman key-exchange,
    so that both parties can derive a shared AES key in counter-mode. **AES in counter-mode**
    (**AES-CTR**) uses AES as a stream cipher, the significance of which is discussed
    later in this section.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 会话密钥通过**Diffie-Hellman 密钥交换**协议由双方独立推导。Diffie-Hellman 协议有助于解决密钥分发问题。Alice 和
    Bob 想要用对称加密算法保护他们的通信，但他们都需要相同的密钥。通过使用 Diffie-Hellman，他们可以在不安全的信道上独立推导出共享密钥，而无需将密钥暴露给第三方。OTR
    使用 Diffie-Hellman 密钥交换中的非对称加密，使得双方能够在计数模式下推导出共享的 AES 密钥。**AES 计数模式**（**AES-CTR**）使用
    AES 作为流密码，本节稍后会讨论其重要性。
- en: Note
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A simplified, two-minute description of the Diffie-Hellman Key Exchange is available
    at Khan Academy website [https://www.khanacademy.org/computing/computer-science/cryptography/modern-crypt/v/diffie-hellman-key-exchange--part-2](https://www.khanacademy.org/computing/computer-science/cryptography/modern-crypt/v/diffie-hellman-key-exchange--part-2).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Khan Academy 网站上提供了 Diffie-Hellman 密钥交换的简化版两分钟描述，链接：[https://www.khanacademy.org/computing/computer-science/cryptography/modern-crypt/v/diffie-hellman-key-exchange--part-2](https://www.khanacademy.org/computing/computer-science/cryptography/modern-crypt/v/diffie-hellman-key-exchange--part-2)。
- en: Another feature of OTR that is different than PGP is that OTR was designed with
    repudiability for messages, which is the ability to deny authorship or validity.
    PGP was designed for non-repudiability, which provides a proof, via your digital
    signature, that you indeed created that message. However, with OTR, neither Alice
    nor Bob can prove the other, or themselves, created a particular message. The
    details of this feature are a bit technical, but we'll provide a high-level summary
    since it is a clever use of **Message Authentication Codes** (**MACs**).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: OTR的另一个与PGP不同的特点是，OTR被设计为具有信息否认性，即能够否认消息的作者身份或有效性。PGP则是为了不可否认性而设计的，它通过你的数字签名提供一个证明，证明你确实创建了那条消息。然而，在OTR中，Alice和Bob都无法证明对方或自己创建了某一特定的消息。这个功能的细节稍微有些技术性，但我们将提供一个高级总结，因为这是**消息认证码**（**MACs**）的巧妙应用。
- en: A MAC is a small tag that accompanies a block of data. The tag is computed by
    the sender and is sent to the receiver, who recomputes the value to check that
    the data was not corrupted in transit, which attests the integrity of the data.
    Furthermore, MACs involve a shared-key between parties. So, Alice has the same
    MAC key as Bob. Therefore, when Bob verifies the MAC on a message, he is assured
    that the sender has the same MAC key as himself. In OTR, because Alice and Bob
    have the same MAC key that is applied to individual messages, either one of them
    can create messages to imitate the other. Therefore, neither of them can prove
    that they, nor their communicating partner, definitively produced a message. This
    provides the repudiation feature in OTR.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: MAC是一个附加在数据块上的小标签。标签由发送方计算，并发送给接收方，接收方重新计算该值以检查数据在传输过程中是否被篡改，这验证了数据的完整性。此外，MAC涉及到双方的共享密钥。因此，Alice和Bob拥有相同的MAC密钥。因此，当Bob验证消息上的MAC时，他可以确定发送者和他自己拥有相同的MAC密钥。在OTR中，由于Alice和Bob使用相同的MAC密钥应用于每条独立的消息，因此其中任何一方都可以创建消息来模仿对方。因此，他们都无法证明自己或通信伙伴确实创建了某条消息。这就提供了OTR中的否认功能。
- en: 'The OTR designers incorporate one additional unorthodox feature for a cryptographic
    system: forgeability. OTR is designed so that it is easy to change the ciphertext
    en route to produce a meaningful output when the message is decrypted. This can
    be performed because the designers chose a malleable encryption scheme using a
    stream cipher; in OTR''s case, it uses AES-CTR with a 128-bit key length. In stream
    ciphers, the *meat* of the cipher is generating a key stream, but the actual encryption
    is typically performed by applying the exclusive-OR operation to the plaintext.
    Decryption is performed with the same exclusive-OR function applied to the same
    keystream. An attacker, who can guess the plaintext of the message, can modify
    the ciphertext to produce a different plaintext message of the same length. Therefore,
    the messages can be forged.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: OTR设计者还加入了一个加密系统中额外的不常规特性：可伪造性。OTR的设计使得在消息解密时，能够轻松地改变加密文本，从而产生一个有意义的输出。这之所以能实现，是因为设计者选择了一种易于变动的加密方案，使用的是流密码；在OTR中，它使用的是128位密钥长度的AES-CTR。流密码的*核心*是生成密钥流，但实际的加密通常是通过对明文应用异或操作来进行的。解密则是通过对相同的密钥流应用相同的异或运算来进行的。一个能够猜测消息明文的攻击者，可以修改加密文本，从而生成一个不同的明文消息，且长度相同。因此，消息可以被伪造。
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Exclusive-OR, or XOR, can be used for both encryption and decryption due to
    its logical definition: the XOR of A and B is true if and only if either A or
    B is true. Digital messages are represented as binary streams. The plaintext of
    a message is XORed with a key stream to produce a ciphertext, and when that ciphertext
    is XORed with the same key stream, the plaintext is returned. For example, if
    the plaintext bit is 1 and the key stream bit is 1, the ciphertext will return
    0\. When the ciphertext bit, 0, is applied to the keystream 1, the plaintext bit
    1 is recovered. The Khan Academy has an interactive and visual series on XOR in
    cryptography: [https://www.khanacademy.org/computing/computer-science/cryptography/ciphers/a/xor-bitwise-operation](https://www.khanacademy.org/computing/computer-science/cryptography/ciphers/a/xor-bitwise-operation).'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 异或（Exclusive-OR，或称XOR）由于其逻辑定义，可以用于加密和解密：当且仅当A或B为真时，A与B的XOR为真。数字消息被表示为二进制流。消息的明文与密钥流进行XOR操作以生成密文，当密文与相同的密钥流再次进行XOR操作时，明文会被恢复。例如，如果明文位为1，且密钥流位为1，那么密文将返回0。当密文位0与密钥流1进行XOR操作时，明文位1会被恢复。可参考可汗学院关于XOR在加密中的交互式视觉系列：[https://www.khanacademy.org/computing/computer-science/cryptography/ciphers/a/xor-bitwise-operation](https://www.khanacademy.org/computing/computer-science/cryptography/ciphers/a/xor-bitwise-operation)。
- en: Alice and Bob are still protected from a third party, who doesn't know the MAC
    key, being able to tamper with their immediate conversation. However, OTR includes
    yet another twist. It publishes the MAC keys of the previous conversation once
    it has re-keyed to new MAC keys. Publishing the MAC keys means that anyone who
    has passively monitored the conversation can change the ciphertext, and thus,
    manipulate the plaintext of past messages. This adds another layer of deniability
    to the conversation, as any recorded conversation could be easily manipulated
    and might seem legitimate. Alice and Bob only publish *old* MAC keys, the key
    currently in use is kept secret until the protocol requires them to re-key.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 艾丽丝和鲍勃仍然能够防止第三方篡改他们的即时对话，因为第三方并不知道MAC密钥。然而，OTR加入了另一个复杂因素。当OTR重新生成新的MAC密钥时，它会发布先前对话的MAC密钥。发布MAC密钥意味着任何被动监听对话的人都可以更改密文，从而操控过去消息的明文内容。这为对话增加了另一层否认性，因为任何记录下来的对话都可以被轻松操控，并且看起来可能是合法的。艾丽丝和鲍勃只会发布*旧的*MAC密钥，当前正在使用的密钥会被保密，直到协议要求他们重新密钥。
- en: On the usability of OTR
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于OTR的可用性
- en: Designing cryptosystems is not enough to ensure their adoption; they also need
    to be robust and usable. OTR was not only published as an academic paper, but
    a library was provided as well. OTR was designed to work over any existing **Instant
    Message** (**IM**) protocol with any client that could incorporate the library,
    or plugin. Your favorite IRC client probably has a plugin or library that can
    easily incorporate OTR. In this chapter, we will be using OTR plugins that are
    built in the two IRC applications we will examine.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 设计加密系统并不足以确保它们的采纳；它们还需要是稳健且易于使用的。OTR不仅作为学术论文发布，而且还提供了一个库。OTR被设计成可以在任何现有的**即时消息**（**IM**）协议上工作，并与任何能够集成该库或插件的客户端兼容。你最喜欢的IRC客户端可能已经有一个插件或库，可以轻松集成OTR。在本章中，我们将使用在我们将要检查的两个IRC应用程序中内置的OTR插件。
- en: The design of OTR, specifically the perfect forward secrecy and deniability
    features, have inspired derivates for other protocols besides real-time chatting.
    For example, Open WhisperSystems' TextSecure app for mobile devices uses an OTR-like
    protocol over SMS and other asynchronous IM channels.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: OTR的设计，特别是完美的前向保密性和否认性功能，启发了对其他协议的衍生，除了实时聊天之外。例如，Open WhisperSystems为移动设备开发的TextSecure应用程序在短信和其他异步即时消息通道上使用了类似OTR的协议。
- en: Also, OTR, like Tor and GPG, is recommended by the Freedom of the Press Foundation,
    a U.S. Non-profit organization that *supports and defends public interest journalism*.
    This organization provides education and tutorials on how to use these tools.
    While presented in the contexts of journalists protecting their sources, as Glenn
    Greenwald and Laura Poitras used (Greenwald 2014), the information is applicable
    to any user of privacy enhancing technology.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，OTR（即时消息加密协议）与Tor和GPG一样，得到了美国非盈利组织“新闻自由基金会”的推荐，该基金会*支持并捍卫公共利益新闻*。该组织提供了关于如何使用这些工具的教育和教程。虽然这些工具最初是为保护记者的消息来源而设计的，正如格伦·格林沃尔德和劳拉·波伊特拉斯所使用的（格林沃尔德
    2014年），但该信息对任何使用隐私增强技术的用户都适用。
- en: Using the BeagleBone to protect your online chats
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用BeagleBone来保护你的在线聊天
- en: In this chapter, we'll be using the BBB to run OTR on various IRC gateways.
    The BBB is well suited to act as your personal IRC gateway. It can easily handle
    the IRC connections and act as an always-on server without dramatically increasing
    your electric bill. While IRC may seem archaic, it provides an interface that
    is client independent and modular. We'll eventually build a complete IRC solution,
    one that manages all of your IRC networks. First we will look at the software
    BitlBee, which merges your chat networks like Google Talk and Jabber into IRC.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用BBB在各种IRC网关上运行OTR。BBB非常适合充当您的个人IRC网关。它可以轻松处理IRC连接，并充当一个始终在线的服务器，而不会显著增加您的电费。虽然IRC看起来可能有些过时，但它提供了一种客户端独立且模块化的界面。我们最终将构建一个完整的IRC解决方案，管理您的所有IRC网络。首先，我们将介绍软件BitlBee，它将您的聊天网络，如Google
    Talk和Jabber，合并到IRC中。
- en: Installing BitlBee on the BeagleBone
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在BeagleBone上安装BitlBee
- en: BitlBee is an *IRC to-other-chat-networks gateway*. This means that if you use
    an existing chat program, such as Google Talk, Jabber, Twitter, AIM, or Facebook,
    you can use BitlBee to chat over those protocols via IRC. The first question when
    a non-IRC user hears about BitlBee is, *why would you want to do this?* while
    IRC users respond with excitement. The major benefit is that by using IRC, you
    can effectively chat with buddies over Google Talk using the same client software
    as you use to chat on IRC. This reduces the number of programs you have to learn.
    While this may not seem impressive at first, consider that each program typically
    has its own keyboard shortcuts and distinct interface. Also, each vendor frequently
    changes the appearance of their application, requiring you to re-learn how to
    use the tool. On the other hand, IRC clients are fairly simple in their user interface
    and IRC interactions are fairly standardized.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: BitlBee是一个*IRC到其他聊天网络的网关*。这意味着，如果您使用现有的聊天程序，如Google Talk、Jabber、Twitter、AIM或Facebook，您可以通过IRC使用BitlBee进行这些协议的聊天。当非IRC用户听说BitlBee时，第一个问题是，*为什么要这样做？*
    而IRC用户则会兴奋地响应。主要的好处是，通过使用IRC，您可以通过相同的客户端软件与Google Talk上的朋友聊天，就像在IRC上聊天一样。这减少了您需要学习的程序数量。虽然乍一看这可能并不令人印象深刻，但请考虑到每个程序通常都有自己独特的快捷键和界面。此外，每个厂商经常更改应用程序的外观，迫使您重新学习如何使用该工具。另一方面，IRC客户端的用户界面相对简单，而且IRC交互也相对标准化。
- en: The other reason BitlBee is useful is that it acts as a proxy server for your
    chat networks. Your chat network presence is persistent but you can attach and
    detach your client at will. When you re-attach, you can catch-up on missed instant
    messages. This will prevent receiving a message on one client, like your phone,
    but missing it because you then logged into the chat network with your computer.
    Additionally, BitlBee supports OTR so we can use BitlBee to manage our OTR protected
    conversations.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: BitlBee的另一个用途是作为您聊天网络的代理服务器。您的聊天网络身份是持久的，但您可以随时附加或分离您的客户端。重新连接时，您可以查看错过的即时消息。这可以防止您在一个客户端（例如手机）收到消息，但由于之后在计算机上登录聊天网络而错过消息。此外，BitlBee支持OTR，因此我们可以使用BitlBee管理我们的OTR保护的对话。
- en: 'BitlBee and the OTR plugin are available through the Debian repositories, so
    installing is as easy as:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: BitlBee和OTR插件可以通过Debian软件库获取，因此安装过程非常简单：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The installation procedure will automatically start the BitlBee daemon running
    on port 6667, which is the default IRC port. At this point, you can connect with
    your favorite IRC client to your BitlBee server. This is one of the advantages
    of running BitlBee on your local network from a BBB, it's always on and available
    from any other internal computer or smartphone. Since BitlBee is marshalling your
    accounts, it won't appear as if you are coming online and offline.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程会自动启动BitlBee守护进程，运行在端口6667上，这是默认的IRC端口。此时，您可以使用您喜欢的IRC客户端连接到BitlBee服务器。这是将BitlBee在本地网络上运行的一个优势，它始终在线，并可以从任何其他内部计算机或智能手机访问。由于BitlBee正在管理您的账户，它不会表现得像是您在不断上线和下线。
- en: In this chapter, the IRC client we will use will be ERC, which is the Emacs
    IRC client. ERC is a client that runs inside an Emacs instance and has several
    advantages over traditional IRC clients. First and most important, if you are
    already using Emacs, you can be more efficient if you can use Emacs for other
    tasks. Not only do you save the cognitive friction from task switching, but the
    layout and keyboard commands are already known to you. Also, ERC, like Emacs,
    is extremely modular and flexible. It is, of course, a free software program,
    but there are also many existing modules from nick highlighting to autoaway that
    you can use. Lastly, it's naturally cross-platform; any platform that can run
    Emacs can run ERC.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将使用的 IRC 客户端是 ERC，它是 Emacs 的 IRC 客户端。ERC 是一个运行在 Emacs 实例内的客户端，相比传统的
    IRC 客户端有几个优点。首先，也是最重要的，如果你已经在使用 Emacs，那么你可以通过使用 Emacs 来完成其他任务，提高效率。不仅省去了在任务切换时的认知摩擦，而且
    Emacs 的布局和键盘命令你已经非常熟悉。此外，ERC 和 Emacs 一样，非常模块化和灵活。当然，它是一个自由软件程序，而且有许多现有的模块可供使用，从昵称高亮到自动离线等功能。最后，它自然是跨平台的；任何能够运行
    Emacs 的平台都能运行 ERC。
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'For Emacs users, running an IRC client in Emacs makes sense. After all, dedicated
    Emacs users consider Emacs to be the most portable operating system. If you insist
    on not using Emacs, irssi is a well-respected IRC client alternative: [http://www.irssi.org/](http://www.irssi.org/).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Emacs 用户来说，在 Emacs 中运行 IRC 客户端是合情合理的。毕竟，忠实的 Emacs 用户认为 Emacs 是最具可移植性的操作系统。如果你坚持不使用
    Emacs，irssi 是一个备受尊敬的 IRC 客户端替代品：[http://www.irssi.org/](http://www.irssi.org/)
- en: 'To connect to your BBB BitlBee server with ERC, inside Emacs, type `M-x erc`.
    You''ll be prompted for the IP address. Then hit enter for the default port number
    and enter again for the password. You should join the `&bitlbee` channel and there
    will be one other user in that channel with you, root. The following screenshot
    shows how root interacts with you in the `&bitlbee` channel but also illustrates
    the IRC client interface inside Emacs:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过 ERC 连接到你的 BBB BitlBee 服务器，在 Emacs 中输入 `M-x erc`。系统会提示你输入 IP 地址。然后按回车键选择默认端口号，再次按回车键输入密码。你应该加入
    `&bitlbee` 频道，在这个频道中你将会和一个其他用户（root）一起交流。下面的截图展示了 root 如何与你在 `&bitlbee` 频道中互动，同时也展示了
    Emacs 内部的 IRC 客户端界面：
- en: '![Installing BitlBee on the BeagleBone](img/00020.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![在 BeagleBone 上安装 BitlBee](img/00020.jpeg)'
- en: Creating a BitlBee account
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 BitlBee 账户
- en: 'The first task is to create an account on your BitlBee server. This is a new
    account that will manage your BitlBee connections. Later, we can log back in with
    this account to load our configuration. Otherwise, we would have to repeat the
    following steps each time we connect. Since BitlBee is an IRC gateway, all the
    commands to BitlBee have an IRC feel to them. Registration is performed by typing
    the following command in the `&bitlbee` channel:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个任务是创建一个账户在你的 BitlBee 服务器上。这是一个新的账户，用于管理你的 BitlBee 连接。以后我们可以用这个账户重新登录以加载我们的配置。否则，每次连接时都需要重复以下步骤。由于
    BitlBee 是一个 IRC 网关，所有对 BitlBee 的命令都带有 IRC 的感觉。注册可以通过在 `&bitlbee` 频道中输入以下命令来完成：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Your password will be echoed back to you and the root user should reply with:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你的密码会被回显出来，root 用户应该回复：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: With BitlBee, it's important to get into the habit of saving often. Otherwise,
    changes are not persistent. Saving is simply done by typing `save` into the `&bitlbee`
    channel. Go ahead and save now.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 BitlBee 时，养成经常保存的习惯非常重要。否则，所做的更改不会持久保存。保存操作很简单，只需在 `&bitlbee` 频道中输入 `save`
    即可。现在就保存吧。
- en: Adding a Google Talk account to BitlBee
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Google Talk 账户添加到 BitlBee
- en: A BitlBee account alone is not that useful. We need to add your other social
    media accounts to BitlBee in order to make it useful. The first account we will
    add is a Google Talk account. BitlBee supports other chat services such as Yahoo,
    AIM, XMPP, MSN, Facebook, and Twitter, so you don't have to use a Google account.
    For the full list, refer to [http://wiki.bitlbee.org/FrontPage](http://wiki.bitlbee.org/FrontPage).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅拥有一个 BitlBee 账户并不太有用。我们需要将你的其他社交媒体账户添加到 BitlBee 才能使其发挥作用。我们将添加的第一个账户是 Google
    Talk 账户。BitlBee 支持其他聊天服务，如 Yahoo、AIM、XMPP、MSN、Facebook 和 Twitter，因此你不一定非要使用 Google
    账户。完整列表请参考 [http://wiki.bitlbee.org/FrontPage](http://wiki.bitlbee.org/FrontPage)。
- en: Unfortunately, in May 2013, Google announced its new communications product
    *Hangouts*, which does not support XMPP, which is an IETF standard, but instead
    uses a proprietary protocol. Specifically, Google Hangout does not support server-to-server
    federation support with XMPP. If you have an independent XMPP server, or have
    an account on Jabber.org or the Free Software Foundation's server, it will no
    longer be possible to communicate with Google Hangout users. You can still use
    Google Talk, which fully supports XMPP, but it is not clear when Google will retire
    Google Talk.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，2013 年 5 月，Google 宣布推出了新的通讯产品 *Hangouts*，它不支持 XMPP（这是 IETF 标准），而是使用了一个专有协议。具体来说，Google
    Hangout 不支持与 XMPP 的服务器到服务器联邦支持。如果你有一个独立的 XMPP 服务器，或者在 Jabber.org 或自由软件基金会的服务器上有账户，将不再能够与
    Google Hangout 用户进行通信。你仍然可以使用完全支持 XMPP 的 Google Talk，但尚不清楚 Google 何时会停止支持 Google
    Talk。
- en: Note
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you don't have a Google account, because of valid privacy concerns, you should
    read *Google has most of my e-mail because it has all of yours* by Benjamin Mako
    Hill [http://mako.cc/copyrighteous/google-has-most-of-my-email-because-it-has-all-of-yours](http://mako.cc/copyrighteous/google-has-most-of-my-email-because-it-has-all-of-yours).
    The author didn't use Gmail, but over 50 percent of his e-mails correspondence
    went to Google servers. Unless you are encrypting your e-mail, Google servers
    have your correspondence.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有 Google 账户，出于有效的隐私考虑，你应该阅读 Benjamin Mako Hill 的 *Google has most of my
    e-mail because it has all of yours* [http://mako.cc/copyrighteous/google-has-most-of-my-email-because-it-has-all-of-yours](http://mako.cc/copyrighteous/google-has-most-of-my-email-because-it-has-all-of-yours)。作者没有使用
    Gmail，但超过 50% 的电子邮件通信都去了 Google 的服务器。除非你加密了邮件，否则 Google 服务器会保存你的通信内容。
- en: 'To add your Gmail account in BitlBee, type the following into the `&bitlbee`
    channel:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 BitlBee 中添加你的 Gmail 账户，请在 `&bitlbee` 频道输入以下内容：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The BitlBee root account will respond with:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: BitlBee 根账户会回复如下内容：
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We''ll go ahead and enable `OAuth`:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将继续启用 `OAuth`：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: OAuth is an *authorization framework* that allows third-party access to other
    web services without the need for the third-party application to know your credential,
    for example, password. Limited use access tokens are provided to the third-party
    application to restrict the access on the hosting service. More information is
    available on the OAuth website [http://oauth.net](http://oauth.net).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth 是一个*授权框架*，它允许第三方访问其他 Web 服务，而不需要第三方应用知道你的凭证，例如密码。为第三方应用提供了有限的使用访问令牌，以限制对托管服务的访问。更多信息可以参考
    OAuth 官网 [http://oauth.net](http://oauth.net)。
- en: 'As most people have Google+ accounts now, we have to set the format of the
    nicks to full names. Otherwise, we will see random strings as nicknames:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 由于大多数人现在都有 Google+ 账户，我们需要将昵称的格式设置为全名。否则，我们会看到随机字符串作为昵称：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, enable the account with:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用以下命令启用账户：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'BitlBee will send a private message to a URL for your OAuth login:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: BitlBee 会向一个 URL 发送私信，用于你的 OAuth 登录：
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Clicking on the link will prompt you to accept BitlBee's permissions, which
    should look like the following screenshot. After clicking on **Accept**, you'll
    receive a code, which you can then paste back into the private message window.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 点击链接将提示你接受 BitlBee 的权限，应该会显示如下截图。点击 **接受** 后，你将收到一个代码，然后可以将其粘贴回私信窗口。
- en: '![Adding a Google Talk account to BitlBee](img/00021.jpeg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![将 Google Talk 账户添加到 BitlBee](img/00021.jpeg)'
- en: 'Once complete, back in the `&bitlbee` window, you should see the following
    messages indicating you are logging in to GTalk:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，回到 `&bitlbee` 窗口，你应该会看到以下信息，表示你正在登录 GTalk：
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Don't forget to save!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 别忘了保存！
- en: Adding a Jabber account to BitlBee
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Jabber 账户添加到 BitlBee
- en: 'If you have a Jabber (XMPP) account, you can go ahead and add that to Bitlbee.
    The syntax is similar to the prior example:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个 Jabber (XMPP) 账户，你可以继续将其添加到 BitlBee。语法与之前的示例类似：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The root user should return with something like:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 根用户应返回类似如下内容：
- en: '[PRE11]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Turn the account on with:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下命令启用账户：
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You should now see two accounts when you type `account list`. Lastly, save your
    data!
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你输入 `account list` 时，应该能看到两个账户。最后，记得保存你的数据！
- en: Note
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can add your Twitter account as well and tweet from IRC. However, you'll
    need BitlBee version 3.2.1 or greater; otherwise, you will receive SSL errors
    when trying to connect to twitter.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以添加 Twitter 账户，并通过 IRC 发推。不过，你需要 BitlBee 版本 3.2.1 或更高版本；否则，当你尝试连接 Twitter
    时会遇到 SSL 错误。
- en: One of the many benefits of joining the Free Software Foundation as a member
    is the use of the FSF's XMPP server. Through federation, users can reach you at
    your FSF username at the member.fsf.org server. Similarly, fellows of the Free
    Software Foundation Europe also have XMPP privileges. For more information, visit
    the respective FSF sites at [https://www.fsf.org/associate/benefits](https://www.fsf.org/associate/benefits)
    and [https://fsfe.org/fellowship/index.en.html](https://fsfe.org/fellowship/index.en.html),
    respectively.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 加入自由软件基金会成为会员的众多好处之一是使用 FSF 的 XMPP 服务器。通过联合，用户可以在 member.fsf.org 服务器上通过您的 FSF
    用户名与您联系。同样，自由软件基金会欧洲的成员也享有 XMPP 特权。欲了解更多信息，请访问各自的 FSF 网站：[https://www.fsf.org/associate/benefits](https://www.fsf.org/associate/benefits)
    和 [https://fsfe.org/fellowship/index.en.html](https://fsfe.org/fellowship/index.en.html)。
- en: Adding OTR to your BitlBee server
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向 BitlBee 服务器添加 OTR
- en: 'We installed the OTR plugin for BitlBee already, so it''s ready to support
    OTR. Prior to an encrypted conversation, we must first generate a key pair. For
    each account you have registered with BitlBee, you can have unique key pairs.
    View your account list and then generate an OTR key with:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经为 BitlBee 安装了 OTR 插件，因此它已准备好支持 OTR。在加密对话之前，我们必须先生成一对密钥。对于您在 BitlBee 注册的每个账户，您都可以拥有唯一的密钥对。查看您的账户列表，然后使用以下命令生成
    OTR 密钥：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After a few seconds, root will inform you that OTR key generation is complete.
    At any point, you can view information on your OTR keys with:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟后，root 将通知您 OTR 密钥生成完成。在任何时候，您都可以使用以下命令查看您的 OTR 密钥信息：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This will provide the key fingerprints for each account. You are now ready to
    have an encrypted chat.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为每个账户提供密钥指纹。您现在已准备好进行加密聊天。
- en: Managing contacts in BitlBee
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 BitlBee 中管理联系人
- en: 'Your contacts, or buddy list, should have been available when BitlBee authenticated
    your account. You can view your buddy list in the `&bitlbee` window with the `blist`
    command. This table will show the nick, the handle at the specific account, and
    the status of each contact. BitlBee converts the handle into IRC-friendly names,
    which are the "nicks" in the first column. It can become confusing when people
    use the same handle on separate accounts. BitlBee allows you to rename nicks to
    help manage this problem. For example, BitlBee will append duplicate nicks with
    an underscore, but you can rename them with the following command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您的联系人或好友列表应在 BitlBee 验证您的账户时已经可用。您可以在 `&bitlbee` 窗口中使用 `blist` 命令查看您的好友列表。此表将显示昵称、特定账户的用户名以及每个联系人的状态。BitlBee
    会将用户名转换为 IRC 友好的名称，这些名称在第一列是 "nicks"。当多人在不同账户上使用相同用户名时，这可能会导致混淆。BitlBee 允许您重命名昵称来帮助管理此问题。例如，BitlBee
    会在重复昵称后附加下划线，但您可以使用以下命令对其进行重命名：
- en: '[PRE15]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Adding contacts is also straightforward with the familiar command syntax:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 添加联系人也可以使用熟悉的命令语法：
- en: '[PRE16]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Just remember to check your account list to know which account number to use.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 只需记得查看您的账户列表，以了解使用哪个账户号码。
- en: Chatting with BitlBee
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与 BitlBee 聊天
- en: 'Chatting can be performed directly in the `&bitlbee` channel. Use IRC syntax
    to specify the nick and BitlBee will direct it to the appropriate service. A basic
    chat session, between `maxine` and `gabriel_ice_japper`, would look like this:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 聊天可以直接在`&bitlbee`频道进行。使用 IRC 语法指定昵称，BitlBee 会将其定向到适当的服务。一个基本的聊天会话，`maxine` 和
    `gabriel_ice_japper` 之间的聊天，看起来会是这样的：
- en: '[PRE17]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Alternatively, you can use the `/query` command to open a new window and chat
    directly with the user. With this method, you don't have to specify the user's
    nick each time because you and your buddy are in a private chat.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以使用 `/query` 命令打开一个新窗口，直接与用户聊天。通过这种方式，您无需每次都指定用户的昵称，因为您和您的好友在一个私人聊天中。
- en: Tip
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'For those new to IRC, the following tutorial is a good introduction: [http://www.irchelp.org/irchelp/irctutorial.html](http://www.irchelp.org/irchelp/irctutorial.html).
    For those looking for ERC-specific help, the Emacs Wiki has some resources: [http://www.emacswiki.org/emacs/ErcBasics](http://www.emacswiki.org/emacs/ErcBasics).'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 IRC 新手，以下教程是一个很好的入门：[http://www.irchelp.org/irchelp/irctutorial.html](http://www.irchelp.org/irchelp/irctutorial.html)。对于寻找
    ERC 特定帮助的用户，Emacs Wiki 提供了一些资源：[http://www.emacswiki.org/emacs/ErcBasics](http://www.emacswiki.org/emacs/ErcBasics)。
- en: Chatting with OTR in BitlBee
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 BitlBee 中使用 OTR 进行聊天
- en: 'To initiate an OTR protected chat, type:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动 OTR 保护的聊天，请输入：
- en: '[PRE18]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: While we are connected at this point and the chat session will be encrypted,
    we are left with the problem of how do we really know who we are chatting with?
    This question may seem existential, but it is an important one. A common attack
    on a communication protocol is a **Man-In-The-Middle** (**MITM**) attack. The
    canonical setup of the MITM attack involves two parties who wish to communicate,
    Alice and Bob, and the malicious meddler Mallory. Alice initiates a connection
    with Bob, but it is usurped by Mallory and likewise with the connection from Bob
    to Alice. Alice thinks she is talking to Bob, but really she is talking to Mallory,
    who is forwarding messages to Bob and vice versa. At this point, Mallory can direct
    and manipulate the conversation at will.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们此时已经连接并且聊天会话会被加密，但我们仍然面临一个问题，那就是如何真正知道我们在与谁聊天？这个问题看起来可能很抽象，但它是一个重要问题。通信协议常见的一种攻击是**中间人攻击**（**MITM**）。MITM
    攻击的经典设置涉及两个希望通信的双方——艾丽斯和鲍勃，以及恶意干扰者马洛里。艾丽斯与鲍勃发起连接，但被马洛里篡改，鲍勃与艾丽斯之间的连接也同样被篡改。艾丽斯认为自己在与鲍勃交谈，但实际上她在与马洛里交谈，马洛里把消息转发给鲍勃，反之亦然。此时，马洛里可以随意引导和操控对话。
- en: To defeat this, we need to authenticate the receiving party. In OTR, you could
    verify the key fingerprint of your partner. This requires you to have swapped
    OTR fingerprints *a priori* and it might not be very convenient to carry your
    OTR fingerprint with you at all times. The other mechanism is to use the **Socialist
    Millionaire Problem** to authenticate your buddy. The Socialist Millionaire Problem
    is discussed in more detail in the following subsection, for now, think of it
    as a question and answer game where the answer would only be known by the person
    with whom you are communicating.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止这种情况，我们需要验证接收方的身份。在 OTR 中，你可以验证你伙伴的密钥指纹。这要求你们事先交换过 OTR 指纹，并且可能不太方便随时携带你的
    OTR 指纹。另一种机制是使用**社会主义百万富翁问题**来验证你的朋友。社会主义百万富翁问题将在以下小节中详细讨论，现在可以把它当作一个问答游戏，答案只有与你通信的人才知道。
- en: 'To initiate the protocol in BitlBee, type something like the following:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 BitlBee 中发起协议，请输入类似以下内容：
- en: '[PRE19]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Presumably, you and Gabriel Ice were out at dinner last night and he would
    know the type of beer you ordered. When phrasing the question, it''s good to include
    instructions of how to type it. Else, it would result in an incorrect response
    and probably confuse your partner, who despite the drinks, distinctly remembers
    you drinking an IPA. If your partner responds correctly, you should see:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 假设昨晚你和加布里埃尔·艾斯一起吃晚餐，他应该知道你点了什么类型的啤酒。在提问时，最好给出如何输入问题的说明。否则，可能会导致不正确的回答，并可能让你的伙伴困惑，尽管喝了几杯酒，他仍然清楚地记得你喝的是
    IPA。如果你的伙伴正确回答，你应该会看到：
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This mechanism is one-way; Gabriel must initiate the protocol in order to fully
    trust you as well. This portion of the exchange looks like this:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这个机制是单向的；加布里埃尔必须首先发起协议，才能完全信任你。这部分交换流程如下所示：
- en: '[PRE21]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Congratulations! You have connected and authenticated and may chat away with
    OTR and BitlBee! If you are using GTalk and are also logged in to Google with
    your browser, you may notice the encrypted messages going back and forth. You
    can probably log out of GTalk from your browser, but just for fun, if you are
    logged in, you will see the OTR messages, which look like this:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已成功连接并完成身份验证，现在可以通过 OTR 和 BitlBee 进行聊天了！如果你使用的是 GTalk 并且也通过浏览器登录了 Google，你可能会注意到加密消息在不断传输。你可能会选择退出浏览器中的
    GTalk，但为了好玩，如果你仍然登录，你将看到 OTR 消息，它们看起来像这样：
- en: '[PRE22]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Understanding the Socialist Millionaire Problem
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解社会主义百万富翁问题
- en: Even a well-designed protocol such as OTR can have subtle design flaws. For
    those looking to add cryptography to your project, there is a well-known saying,
    *don't roll your own crypto*, which means don't invent your own cryptography because
    the odds are against you and one mistake can undermine your security. Plus even
    seasoned cryptographers don't get everything right on the first try. Fortunately,
    releasing the research, design, and code helps with the peer review process.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是像 OTR 这样的设计精良的协议，也可能存在一些微妙的设计缺陷。对于那些希望在项目中加入加密技术的人，有一句著名的警告，*不要自创加密技术*，意思是不要自己发明加密技术，因为概率不利于你，且一旦犯错，可能会破坏你的安全性。而且，即便是经验丰富的加密专家也不可能一开始就做对所有事情。幸运的是，发布研究、设计和代码有助于同行评审过程。
- en: In response to some critiques on OTR's authentication phase, the authors improved
    their protocol (Alexander 2007). Prior to this paper, OTR users had to verify
    the fingerprint of OTR keys out-of-band. While this works, it has a human factor
    drawback as it is inconvenient and not very scalable to hand out OTR keys to peoplewith
    whom you may want to securely communicate. However, two parties may share more
    intimate knowledge about each other that would prove their authenticity.The problem
    then becomes how do Alice and Bob share some secret information without revealing
    it to each other. The researchers discovered that this problem is a re-statement
    of the Socialist Millionaire Problem where two millionaires want to know whether
    they are equally wealthy without revealing to each other the quantity of their
    wealth.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 针对一些关于OTR认证阶段的批评，作者改进了他们的协议（Alexander 2007）。在这篇论文之前，OTR用户需要通过带外的方式验证OTR密钥的指纹。虽然这种方式可行，但由于其不便和扩展性差，存在一个人为因素的缺点，因为你可能需要向你想要进行安全通信的人分发OTR密钥。然而，双方可能共享更多关于彼此的亲密知识来验证他们的真实性。问题就变成了，爱丽丝和鲍勃如何在不互相透露的情况下共享某些秘密信息。研究人员发现，这个问题是社会主义百万富翁问题的再表述，其中两个百万富翁想知道他们是否同样富有，但又不能互相透露他们的财富数量。
- en: The mathematics behind this problem rely on a technique called a **zero-knowledge
    proof**. A zero knowledge proof allows someone to attest to the correctness of
    a statement without providing any additional information about the said statement.
    The details and proof of OTR's zero-knowledge proofs are beyond the scope of this
    book and described in detail in (Alexander 2007).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题背后的数学原理依赖于一种叫做**零知识证明**的技术。零知识证明允许某人证明一个陈述的正确性，而无需提供关于该陈述的任何额外信息。OTR的零知识证明的详细信息和证明超出了本书的范围，并在（Alexander
    2007）中进行了详细描述。
- en: The implication of using the Socialist Millionaire Problem in OTR is that Alice
    can ask Bob a specific question that only Bob would know. If Mallory is masquerading
    as Bob and if Alice chose a good question to which Mallory doesn't know the answer,
    Mallory won't gain any additional information about the answer if she guesses
    wrong. For example, Alice asks Mallory, pretending to be Bob, who her favorite
    guitarist is. Bob knows that Alice is a *Who* fan and the answer is none other
    then Pete Townshend. Mallory does not know this detail so she provides an admirable,
    but incorrect, answer of Jimmy Page. Alice will see the protocol fail and know
    that Bob is not who he appears to be. But Mallory will not know any other information
    about the answer other than that Jimmy Page is not correct. However, it is too
    late for Mallory because Alice no longer trusts her and terminates the connection.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在OTR中使用社会主义百万富翁问题的含义是，爱丽丝可以问鲍勃一个只有鲍勃知道的特定问题。如果马洛里假装成鲍勃，并且爱丽丝选择了一个马洛里不知道答案的好问题，马洛里如果猜错了将无法获得任何额外的信息。例如，爱丽丝问马洛里（假装成鲍勃）她最喜欢的吉他手是谁。鲍勃知道爱丽丝是*Who*乐队的粉丝，答案自然是皮特·汤申德。马洛里并不知道这个细节，所以她给出了一个令人钦佩但错误的答案——吉米·佩奇。爱丽丝会看到协议失败，并知道鲍勃并非他所表现出来的那个人。但马洛里不会知道关于答案的其他信息，除了吉米·佩奇是不正确的。然而，马洛里已经晚了，因为爱丽丝不再信任她并终止了连接。
- en: Marshalling your IRC connections with a Bouncer
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用中继器管理你的IRC连接
- en: 'Now that BitlBee is running on the BeagleBone, you can enjoy OTR-protected
    instant messaging, but we can improve the setup. Currently, we are connecting
    to BitlBee directly from your IRC client. This is fine if you have one client.
    But, if you are chatting with your laptop and then get up and go, you may want
    to continue a conversation on your phone. For this, we will need a more persistent
    proxy connection. The problem can be stated in a more general way: how can we
    maintain a persistent connection to all of our IRC networks, including BitlBee.
    For this, we''ll need an IRC bouncer.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在BitlBee已经在BeagleBone上运行，你可以享受OTR保护的即时消息传递，但我们可以改进这个设置。目前，我们是直接通过你的IRC客户端连接到BitlBee。如果你只有一个客户端，这样做没问题。但是，如果你正在用笔记本聊天，然后站起来走开，你可能希望在手机上继续对话。为此，我们需要一个更持久的代理连接。这个问题可以更一般地表述：我们如何保持与所有IRC网络（包括BitlBee）的持久连接。为此，我们需要一个IRC中继器（Bouncer）。
- en: IRC bouncers act as a proxy server and maintain your connection to an IRC server.
    This may be useful on servers that don't support nick registration and you want
    to maintain your nick. As mentioned in the previous use case, bouncers generally
    support multiple clients which will allow you to have a near seamless IRC conversation
    as you switch devices. Since we are using BitlBee as an IRC gateway to our XMPP
    and instant message networks, we can combine IRC connections as well and have
    all of this managed by the bouncer.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: IRC代理服务器充当代理服务器并维持你与IRC服务器的连接。这在那些不支持昵称注册且你希望保持昵称的服务器上非常有用。如前面使用案例所述，代理服务器通常支持多个客户端，这将使你在切换设备时能几乎无缝地进行IRC对话。由于我们正在使用BitlBee作为我们的IRC网关，连接到XMPP和即时消息网络，我们也可以将IRC连接合并，并由代理服务器来管理这一切。
- en: The modern uses of IRC
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IRC的现代用途
- en: 'IRC was invented in 1988 and it was one of the first global, real-time, chat
    networks. While social networks may have replaced much of the casual conversation
    on the Internet, IRC still has its place. While those conversations still continue
    on IRC, there is a group that routinely hangs out on IRC that should be of interest
    to the readers of this book: open source developers. Most well-maintained open
    source projects have a corresponding IRC channel where at all hours, you can generally
    find help.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: IRC发明于1988年，它是全球首批实时聊天网络之一。尽管社交网络可能已取代了互联网上许多随意的对话，IRC仍然占有一席之地。尽管这些对话依然在IRC上进行，但有一个群体定期聚集在IRC上，他们应该是本书读者感兴趣的：开源开发者。大多数维护良好的开源项目都有一个对应的IRC频道，你可以在任何时候寻求帮助。
- en: For open source projects, the two biggest IRC networks are **freenode** and
    **oftc**. In fact, every major software and hardware package in this book has
    a corresponding IRC channel where you can ask for help. There are a few benefits
    to using IRC over other mediums. For active channels, it is beneficial and encouraged
    to **lurk** prior to adding to the conversation. Lurking is just passively watching
    the conversation. You may, and probably will, learn something just by reading
    the existing conversation. Also, if you do have a problem or a question, IRC is
    a real-time chat, so you potentially can quickly resolve your issue. It's also
    a more informal medium than a public mailing list. If you have some trepidation
    about asking your question on a mailing list, IRC is the place to ask.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 对于开源项目，两个最大的IRC网络是**freenode**和**oftc**。实际上，本书中每一个主要的软件和硬件包都有一个对应的IRC频道，你可以在其中寻求帮助。使用IRC相较于其他媒介有一些优势。对于活跃的频道，在参与对话之前，通常建议并鼓励先**潜水**。潜水就是被动地观察对话。你可能会，也很可能会，仅仅通过阅读现有对话就学到一些东西。此外，如果你有问题或疑问，IRC是一个实时聊天，因此你可能能够迅速解决你的问题。它也是一个比公共邮件列表更为非正式的媒介。如果你对在邮件列表上提问有所顾虑，IRC是一个更合适的提问平台。
- en: Note
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'On freenode, the relevant channels are: `#sparkfun`, for general electronics
    questions and to chat with some SparkFun employees and customers, `#beagle`, home
    to BeagleBone enthusiasts, `#gnupg`, for GPG-related questions, and `#cryptotronix`,
    which is the author''s channel about open source crypto hardware. On oftc ([irc.oftc.net](http://irc.oftc.net)),
    you can check out the `#bitlbee` channel for help on BitlBee or `#tor` to talk
    about Tor.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在freenode上，相关频道包括：`#sparkfun`，用于一般电子学问题，以及与一些SparkFun员工和客户聊天，`#beagle`，这是BeagleBone爱好者的聚集地，`#gnupg`，用于GPG相关问题，和`#cryptotronix`，这是作者关于开源加密硬件的频道。在oftc（[irc.oftc.net](http://irc.oftc.net)）上，你可以查看`#bitlbee`频道以获取关于BitlBee的帮助，或者`#tor`讨论Tor。
- en: IRC, like any shared communication medium, has certain **netiquette** that users
    expect everyone to follow. Surprisingly, there is an RFC that defines netiquette
    guidelines (RFC 1855). It's certainly worth a read, but you should be ok if you
    follow these tips. First of all, *don't ask to ask*. This means, don't ask in
    an IRC channel if you can ask a question. You can just ask your question directly.
    While there are operators in channels, IRC typically doesn't follow the raise-your-hand-and-wait-to-be-called-on
    approach. Secondly, don't *flood* the channel. This means not to paste a large
    amount of text into the channel as it will cause all connected clients to rapidly
    scroll the text off of the screen. Instead, use a paste service like that provided
    by Debian ([http://paste.debian.net/](http://paste.debian.net/)) and then paste
    the link in the IRC channel, while explaining what is contained in the linked
    information. Lastly, be patient. As previously stated, many people lurk on IRC
    in the background and may not immediately see your question. Depending on the
    time at which you asked your question, it's reasonable to wait 30 minutes or so.
    On an active channel, you'll probably get a response quicker than that, just don't
    keep asking the question repeatedly.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: IRC，像任何共享的通信媒介一样，拥有一定的**网络礼仪**，用户期望每个人都遵守这些礼仪。令人惊讶的是，有一份RFC定义了网络礼仪的指南（RFC 1855）。这篇文档确实值得一读，但如果你遵循以下建议，应该就没有问题。首先，*不要询问是否可以提问*。这意味着，在IRC频道中不要问是否可以提问。你可以直接提出你的问题。虽然频道中有管理员，但IRC通常不遵循举手等待被叫到的方式。其次，*不要刷屏*。这意味着不要将大量文本粘贴到频道中，因为这会导致所有连接的客户端快速滚动文本，文本很快就会消失在屏幕之外。你可以使用像Debian提供的粘贴服务（[http://paste.debian.net/](http://paste.debian.net/)），然后将链接粘贴到IRC频道中，同时解释链接中包含的内容。最后，要有耐心。正如前面所说，许多人在IRC上背景潜伏，可能不会立刻看到你的问题。根据你提问的时间，等待大约30分钟是合理的。在活跃的频道中，你可能会更快得到回应，但不要反复提问同样的问题。
- en: Downloading and installing the IRC bouncer ZNC
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载并安装IRC跳板ZNC
- en: 'We''ll be using the IRC bouncer package called ZNC. ZNC is a well-maintained
    and up-to-date package and like all good open source software, has an IRC channel:
    `#znc` on freenode. The packages in the Debian repository are a bit old, so we''ll
    install ZNC from source. Download the source tarball by issuing the following
    command:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用名为ZNC的IRC跳板软件包。ZNC是一个维护良好且与时俱进的软件包，像所有优秀的开源软件一样，它也有一个IRC频道：`#znc`，位于freenode上。Debian仓库中的软件包略显陈旧，因此我们将从源代码安装ZNC。通过执行以下命令下载源代码压缩包：
- en: '[PRE23]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We want to develop the good habit of checking signatures on downloaded software.
    The 1.4 release is signed by Alexey Sokolov, whose GPG fingerprint is: `D582 3CAC
    B477 191C AC00 7555 5AE4 20CC 0209 989E`. You can download his public key with
    the following command:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想培养检查下载软件签名的良好习惯。1.4版本的签名者是Alexey Sokolov，他的GPG指纹是：`D582 3CAC B477 191C AC00
    7555 5AE4 20CC 0209 989E`。你可以使用以下命令下载他的公钥：
- en: '[PRE24]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Next, download the signature file for the release:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，下载发布版本的签名文件：
- en: '[PRE25]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Lastly, verify the signature over the downloaded software:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，验证下载软件的签名：
- en: '[PRE26]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'While this procedure adds a few steps, it should soon become second nature.
    If you don''t perform these steps, when there is a signature file available, you
    are assuming that the software you downloaded is the software that was posted.
    Even though there are checksums built into the TCP, which you are using when you
    use `wget`, it does not guarantee that the file is the correct file since there
    is an opportunity for a MITM attack. Regardless of your paranoia level, it''s
    good practice to verify the software each time. In fact, a quick bash script will
    help here since it''s standard practice to append `.sig` to the end of the file:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个过程增加了一些步骤，但很快就会变成一种第二天性。如果你不执行这些步骤，当有签名文件可用时，你就假设下载的软件就是发布的软件。尽管TCP内置了校验和，你在使用`wget`时会使用它，但这并不能保证文件是正确的，因为存在MITM攻击的可能性。无论你的疑虑有多大，验证每次下载的软件都是个好习惯。事实上，一个简单的bash脚本可以帮助你，因为标准做法是将`.sig`附加到文件的末尾：
- en: '[PRE27]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'If you add that function to your `.bashrc` or equivalent, you can just type
    `wgetsig <url>` to grab the file, the signature, and run them through GPG. Now
    that you can trust that the software you downloaded is the software that was posted,
    you can finally extract the package:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将该功能添加到你的`.bashrc`或等效文件中，你只需输入`wgetsig <url>`来抓取文件、签名，并通过GPG进行验证。现在，你可以相信下载的软件就是发布的那个软件，可以开始解压软件包了：
- en: '[PRE28]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'To build ZNC from source, you''ll want to install the following dependencies:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要从源代码构建ZNC，您需要安装以下依赖项：
- en: '[PRE29]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Most software tarballs support the `confgure-make-make install` dance and this
    one is no different. You can build and install with the following:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数软件tar包都支持`configure-make-make install`的操作流程，这个也不例外。您可以使用以下命令构建和安装：
- en: '[PRE30]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Building ZNC on the BBB will take a while because it will build each of the
    ZNC modules as well, so go enjoy some coffee.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在BBB上构建ZNC会花费一些时间，因为它还会构建每个ZNC模块，所以去享受一些咖啡吧。
- en: Configure ZNC to manage your IRC connections
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置ZNC以管理您的IRC连接
- en: 'Before we configure ZNC, let''s step back and examine our system architecture.
    We have at least three distinct pieces of hardware involved: the machine on which
    your IRC client is running, the BBB, and the machines running IRC servers. One
    of those machines is the BBB since it''s running the BitlBee IRC server. Examine
    the following deployment diagram:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们配置ZNC之前，让我们退后一步，检查我们的系统架构。我们至少有三个不同的硬件部件参与其中：运行您的IRC客户端的机器，BBB以及运行IRC服务器的机器。其中一个机器是BBB，因为它运行BitlBee
    IRC服务器。查看以下部署图：
- en: '![Configure ZNC to manage your IRC connections](img/00022.jpeg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![配置ZNC以管理您的IRC连接](img/00022.jpeg)'
- en: 'Let''s start with the BBB, depicted by the center cube. The BBB is running
    two modules: ZNC and BitlBee. ZNC is the module to which multiple IRC clients
    can connect. ZNC is connected to the BitlBee module, which is a process also running
    on the same hardware. ZNC is also connected to one or more different IRC servers.
    BitlBee maintains connections to various XMPP or chat servers but since BitlBee
    itself is an IRC server, you connect to it through ZNC. Once everything is set
    up, you will only have to worry about connecting to ZNC.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从BBB开始，由中心方块表示。BBB正在运行两个模块：ZNC和BitlBee。ZNC是多个IRC客户端可以连接的模块。ZNC连接到BitlBee模块，后者也是在同一硬件上运行的进程。ZNC还连接到一个或多个不同的IRC服务器。BitlBee维护与各种XMPP或聊天服务器的连接，但由于BitlBee本身是IRC服务器，您通过ZNC连接到它。一旦一切设置好，您只需担心连接到ZNC。
- en: 'ZNC needs a configuration file and the easiest way to generate the configuration
    file is to run the following command:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: ZNC需要一个配置文件，生成配置文件的最简单方法是运行以下命令：
- en: '[PRE31]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This will launch an interactive command-line interface. You'll need to create
    a new ZNC username that is not associated with any BitlBee or IRC systems. You
    will also have to decide what port to run the service. If you pick a port number
    in the private range, `49152` to `65535`, you'll have less of a chance of colliding
    with another service. For this example, port `50000` was chosen. There are quite
    a few ZNC modules, but you'll want to enable the `webadmin` module to easily configure
    ZNC. Lastly, be sure to enable SSL. It will generate a self-signed certificate,
    at which most browsers will grumble when connecting. Alternatively, you can create
    a full **Public Key Infrastructure** (**PKI**), complete with your own certificate
    authority, and supply the server certificate to ZNC.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动一个交互式命令行界面。您需要创建一个新的ZNC用户名，该用户名与任何BitlBee或IRC系统都没有关联。您还需要决定运行服务的端口号。如果选择私有范围内的端口号，即`49152`到`65535`，则与其他服务发生冲突的可能性较小。在此示例中，选择了端口`50000`。ZNC有许多模块，但您需要启用`webadmin`模块以便轻松配置ZNC。最后，请确保启用SSL。它将生成一个自签名证书，大多数浏览器连接时会抱怨。或者，您可以创建一个完整的**公钥基础设施**（**PKI**），并向ZNC提供服务器证书。
- en: Note
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: PKIs are a bookworthy subtopic. An introduction to the complexities to PKI is
    well documented by Peter Gutmann in *Everything you Never Wanted to Know about
    PKI but were Forced to Find Out* at [http://www.cs.auckland.ac.nz/~pgut001/pubs/pkitutorial.pdf](http://www.cs.auckland.ac.nz/~pgut001/pubs/pkitutorial.pdf).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: PKI是一个值得写书的子主题。关于PKI复杂性的介绍由Peter Gutmann在*Everything you Never Wanted to Know
    about PKI but were Forced to Find Out*中有详细记录，链接为[http://www.cs.auckland.ac.nz/~pgut001/pubs/pkitutorial.pdf](http://www.cs.auckland.ac.nz/~pgut001/pubs/pkitutorial.pdf)。
- en: 'The example configuration session is listed as follows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 示例配置会话如下所示：
- en: '[PRE32]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Adding OTR to your ZNC server
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在您的ZNC服务器上添加OTR
- en: While BitlBee has our XMPP and chat networks covered with OTR, our IRC networks
    are OTR-less at the moment. If you don't plan on using OTR, then you can still
    use the BBB as your IRC gateway and enjoy a consolidated IRC platform. Since OTR
    has to be initiated by one of the communicating parties, this chat configuration
    will interoperate with any IRC system. But, if you want OTR over your other IRC
    channels, then there are two methods to resolve this. First of all, you can use
    OTR from your IRC client. This will provide an end-to-end OTR session from your
    client to your communicating party, assuming they are using OTR from their client.
    However, most, but not all clients have an OTR-plugin. The other approach, the
    one that will be presented here, is to use OTR inside ZNC.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然BitlBee已为我们的XMPP和聊天网络提供了OTR支持，但我们的IRC网络目前没有OTR支持。如果你不打算使用OTR，那么仍然可以将BBB作为IRC网关，并享受一个统一的IRC平台。由于OTR必须由通讯的一方启动，因此此聊天配置将与任何IRC系统兼容。但如果你希望在其他IRC频道上使用OTR，那么有两种方法可以解决这个问题。首先，你可以在IRC客户端中使用OTR。这将为你的客户端和通讯方之间提供端到端的OTR会话，前提是他们也在客户端使用OTR。不过，大多数客户端（但不是所有客户端）都带有OTR插件。另一种方法，就是本文将介绍的方法，是在ZNC内部使用OTR。
- en: There are pros and cons to this approach. The benefit is that for all of your
    chat networks, regardless of your client, you will have the same OTR key. Therefore,
    once your buddies authenticate you and trust your key, they can keep that trust
    even when you switch to a different IRC network. Also, you will no longer need
    to run an OTR plugin on your client. However, the OTR session is terminated at
    ZNC. Therefore, it is extremely important to have a secure connection from your
    client to ZNC. At minimum, you should turn on the SSL option as previously mentioned.
    With that self-signed certificate, you are susceptible to a MITM attack, though,
    so it may be worth your time to generate a certificate authority and issue a certificate
    to your ZNC server. The reason you are at risk is that it's fairly easy to generate
    a self-signed certificate as ZNC does. At minimum, you should take note of the
    public key generated in the self-signed certificate and only trust the SSL connection
    if your ZNC server presents that known key. This technique is known as **certificate
    pinning**. As previously mentioned, generating PKIs is a nuanced task, so I'll
    leave this as a (moderately difficult) exercise for the reader.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法有其优缺点。好处是，对于所有的聊天网络，无论你使用哪个客户端，你都会拥有相同的OTR密钥。因此，一旦你的朋友验证并信任了你的密钥，即使你切换到不同的IRC网络，他们也能继续信任你。此外，你不再需要在客户端上运行OTR插件。然而，OTR会话会在ZNC处终止。因此，从客户端到ZNC的连接必须非常安全。至少，你应该像之前提到的那样启用SSL选项。不过，使用自签名证书时，你仍然可能面临中间人攻击（MITM），因此可能值得花时间生成一个证书颁发机构（CA），并为你的ZNC服务器签发证书。你面临风险的原因是，生成自签名证书比较简单，而ZNC也是如此。至少，你应该记下自签名证书中生成的公钥，并且只有当ZNC服务器提供该已知密钥时，才信任SSL连接。这种技术被称为**证书钉扎**。正如之前提到的，生成PKI是一个细致的任务，因此我将把这个（适度困难的）练习留给读者。
- en: Another option, if you don't want to deal with SSL, is that you can `ssh` into
    your BBB and run an IRC client on localhost. This will still provide confidentiality
    for your messages between your computer and the server (the BBB) but it will restrict
    the IRC clients available to you since the IRC client would be running on the
    BBB. For the rest of this chapter, we will continue with the SSL approach.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选择是，如果你不想处理SSL，你可以通过`ssh`连接到你的BBB，并在localhost上运行IRC客户端。这仍然可以为你和服务器（BBB）之间的消息提供机密性，但它将限制你使用的IRC客户端，因为IRC客户端会运行在BBB上。在本章的剩余部分，我们将继续使用SSL方法。
- en: 'The ZNC OTR module is fairly new, so it must be built from source. It also
    depends on a version of OTR that is not available in Debian wheezy, but it is
    available as a backport. Edit your apt-sources file to add the backport repository:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: ZNC的OTR模块相对较新，因此必须从源代码编译。它还依赖于一个在Debian wheezy中不可用的OTR版本，但可以通过回溯仓库获取。请编辑你的apt-sources文件，添加回溯仓库：
- en: '[PRE33]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Add the following line to the end:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件末尾添加以下行：
- en: '[PRE34]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Then perform:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 然后执行：
- en: '[PRE35]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'To install the newer version of OTR, enter the following command:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装更新版本的OTR，请输入以下命令：
- en: '[PRE36]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Clone the `znc-otr` module repository:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 克隆`znc-otr`模块的代码库：
- en: '[PRE37]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Enter the directory and type `make`. You should see:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 进入目录并键入`make`。你应该会看到：
- en: '[PRE38]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Copy `otr.so` to `~/.znc/modules` and note, you may have to create the modules
    directory. The `znc-otr` module is now installed, but not loaded.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 将`otr.so`复制到`~/.znc/modules`目录，并注意，你可能需要创建该modules目录。`znc-otr`模块现在已经安装，但尚未加载。
- en: Adding your networks to ZNC
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将你的网络添加到 ZNC
- en: 'With all of the components installed, we can now configure ZNC. Since we''ve
    enabled the ZNC `webadmin` module, we can use our browser to configure our bouncer
    and add accounts. You can access the `webadmin` module by typing the URL of your
    BBB followed by the port number of ZNC as follows:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装所有组件后，我们现在可以配置 ZNC。由于我们已经启用了 ZNC 的 `webadmin` 模块，因此可以使用浏览器来配置我们的代理并添加账户。你可以通过输入
    BBB 的 URL 后跟 ZNC 的端口号来访问 `webadmin` 模块，格式如下：
- en: '[PRE39]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Log in with your username and password. On the right-hand side of the page,
    there will be a navigation menu as shown in the following screenshot:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 使用你的用户名和密码登录。在页面的右侧，会显示如下截图中的导航菜单：
- en: '![Adding your networks to ZNC](img/00023.jpeg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![将你的网络添加到 ZNC](img/00023.jpeg)'
- en: 'Click on **Your Settings**. Then scroll down to the **Networks** section and
    click on **Add**. Here you can add your BitlBee settings we previously created.
    The **Network Name** is BitlBee and the **Nickname** is the BitlBee user you created.
    Under **Servers of this IRC Network**, enter the following and replace the password
    with your BitlBee password:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**你的设置**。然后向下滚动到**网络**部分，点击**添加**。在这里，你可以添加之前创建的 BitlBee 设置。**网络名称**为 BitlBee，**昵称**为你创建的
    BitlBee 用户名。在**此 IRC 网络的服务器**下，输入以下内容并将密码替换为你的 BitlBee 密码：
- en: '`localhost 6667 password`'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`localhost 6667 password`'
- en: 'Scroll to the bottom of the page and click on **Add Network** to save. Now
    you can go back to the **Your Settings** page and add other IRC networks in a
    similar manner. For this chapter, let''s add a freenode account as we''ll be using
    it to demonstrate how to use OTR over IRC. If you don''t have one, you can make
    up a nick and enter the following in the **Servers of this IRC network** section:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动到页面底部，点击**添加网络**来保存。现在你可以返回**你的设置**页面，以类似的方式添加其他 IRC 网络。在本章中，我们将添加一个 freenode
    账户，因为我们将用它来演示如何在 IRC 上使用 OTR。如果你没有，可以编造一个昵称，并在**此 IRC 网络的服务器**部分输入以下内容：
- en: '`chat.freenode.net +6697`'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '`chat.freenode.net +6697`'
- en: The +6697 indicates to ZNC that you want to connect to freenode using SSL on
    port 6697, which is the semi-official IRC TLS port. You can add channels by clicking
    on Add under **Channels** and ZNC will not only keep you in the channel when your
    client detaches, but will playback the channel's conversation. You can specify
    how many lines to playback by changing the **Buffer Count** setting in the **Channel
    Info** screen.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: +6697 表示你希望通过 SSL 使用端口 6697 连接到 freenode，这也是半官方的 IRC TLS 端口。你可以通过点击**频道**下的“添加”来添加频道，ZNC
    不仅会在客户端断开时将你保留在频道内，还会回放频道的对话内容。你可以通过在**频道信息**页面更改**缓冲区计数**设置来指定回放的行数。
- en: Connecting to ZNC from your IRC client
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从你的 IRC 客户端连接到 ZNC
- en: You can now connect to ZNC from your IRC client. Depending on the client, you
    should be able to set your username and password in the `server password` field.
    If you receive an *incorrect password* warning and you are sure that you typed
    in the password correctly, set your password to `username:password`. You need
    to do this if using ERC. More specifically, you should connect with `M-x erc-tls`
    and supply the IP of your BBB, the port number of ZNC, username, and the password
    in the previous format.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以从你的 IRC 客户端连接到 ZNC。根据客户端的不同，你应该能够在 `server password` 字段中设置用户名和密码。如果你收到*密码错误*的警告，并且确认密码输入正确，请将密码设置为
    `username:password`。如果使用 ERC，必须这样做。更具体地说，你应该使用 `M-x erc-tls` 连接，并提供 BBB 的 IP 地址、ZNC
    的端口号、用户名和之前格式的密码。
- en: 'If you''ve added multiple networks, the first messages you should see are the
    following when you make your connection to your BBB:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你添加了多个网络，当你连接到 BBB 时，首先应该看到以下信息：
- en: '[PRE40]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'These messages are from a **virtual user**. The prefix for virtual users is
    an `*` and this user is `status`. While ZNC is connected to multiple networks,
    you are only seeing the BitlBee network at the moment. Here you can interact with
    BitlBee like we did in a previous section. As long as ZNC and BitlBee are running,
    ZNC will remain connected to BitlBee and you can attach and detach at will. To
    use OTR on an actual IRC network, like freenode, we need to attach ZNC to the
    other network. There are two ways to do this. We can, as `status` reminded us,
    jump to that network with the following command, assuming you named your freenode
    network *freenode*:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这些消息来自**虚拟用户**。虚拟用户的前缀是 `*`，这个用户是 `status`。虽然 ZNC 已连接到多个网络，但你目前只看到 BitlBee 网络。在这里，你可以像之前的章节中一样与
    BitlBee 进行互动。只要 ZNC 和 BitlBee 运行，ZNC 将保持与 BitlBee 的连接，你可以随时附加或分离。要在实际的 IRC 网络（如
    freenode）上使用 OTR，我们需要将 ZNC 附加到其他网络。有两种方法可以做到这一点。正如 `status` 提醒我们的，假设你将 freenode
    网络命名为 *freenode*，可以通过以下命令跳转到该网络：
- en: '[PRE41]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This will take your existing session and *jump* it over to freenode. While you
    may be in the same client window, you are now talking on a different IRC network
    since we switched from BitlBee to freenode. If you use GNU screen or tmux, we
    just performed a similar action as we would have had we switched to a new screen.
    The session is still running; we are just looking at a different instance. This
    method has the benefit of only using one connection from your client to ZNC, but
    it can be a bit confusing.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把你现有的会话 *跳转* 到 freenode。虽然你可能仍在同一个客户端窗口中，但现在你正通过一个不同的 IRC 网络聊天，因为我们已经从 BitlBee
    切换到了 freenode。如果你使用 GNU screen 或 tmux，我们刚刚执行了一个类似的操作，就像切换到一个新的屏幕一样。会话仍在运行，我们只是查看了不同的实例。这种方法的好处是只使用了一个从客户端到
    ZNC 的连接，但可能会有些混淆。
- en: 'Alternatively, you can open another ZNC connection. To indicate to ZNC that
    you want the new session to attach to a different network, you must use a different
    syntax. Your username must be in the form `username/network` and if you were sending
    the username in the password field, as you must with ERC, the format is `username/network:password`.
    So, in this example the username is:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以打开另一个 ZNC 连接。为了让 ZNC 知道你希望新的会话连接到不同的网络，你必须使用不同的语法。你的用户名必须是 `username/network`
    形式，如果你像在 ERC 中那样把用户名发送到密码字段中，则格式为 `username/network:password`。所以，在这个例子中，用户名是：
- en: '[PRE42]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Using either method, connect to freenode via IRC.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 使用任一方法，通过 IRC 连接到 freenode。
- en: Establishing OTR connections through ZNC
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 ZNC 建立 OTR 连接
- en: Now that we are using ZNC to manage our IRC traffic, let's establish an OTR
    session. The process is similar to what we did with BitlBee and by the end of
    this, you should be well-versed in establishing identity with OTR. For this experiment,
    you will either need a crypto-savy friend, a begrudging significant other, or
    a separate IRC account. Basically, you need somebody with whom you can chat via
    OTR.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们正在使用 ZNC 来管理 IRC 流量，接下来我们来建立一个 OTR 会话。这个过程与我们在 BitlBee 上所做的类似，完成后你应该能熟练地使用
    OTR 来建立身份验证。在这个实验中，你需要一个懂加密的朋友、一个不情愿的另一半，或者一个单独的 IRC 账户。基本上，你需要一个可以通过 OTR 与其聊天的人。
- en: 'Now that you are logged onto freenode or your favorite IRC network, initiate
    a chat with another user. On most clients, this will open the conversation in
    a new window when you type the following command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经登录到 freenode 或你喜欢的 IRC 网络，可以与其他用户发起聊天。在大多数客户端中，当你输入以下命令时，这将会在新窗口中打开对话：
- en: '[PRE43]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'At this point, you can enjoy an old-fashioned, unencrypted chat with your buddy.
    To chat with OTR, we first need to generate a key, like we did with BitlBee. In
    ZNC, there is a virtual user, `*otr`, similar to the `*status` user, to whom you
    direct OTR commands. First, you should generate a keypair by typing in the following
    command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以与朋友享受一场传统的、未加密的聊天。要进行 OTR 聊天，我们首先需要生成一个密钥，就像我们在 BitlBee 中所做的那样。在 ZNC 中，有一个虚拟用户
    `*otr`，与 `*status` 用户类似，你可以向该用户发出 OTR 命令。首先，你应该输入以下命令来生成一个密钥对：
- en: '[PRE44]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Remember, all virtual users in ZNC have the `*` prefix. This will probably
    open a new window with the `*otr` user and you should see something like this:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，ZNC 中所有虚拟用户都有 `*` 前缀。这可能会打开一个新窗口，显示 `*otr` 用户，你应该看到类似这样的内容：
- en: '[PRE45]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Now you can initiate an OTR conversation. If you want to initiate the OTR conversation,
    type the following:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以发起一个 OTR 会话。如果你想发起 OTR 会话，输入以下命令：
- en: '[PRE46]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Otherwise, your buddy can initiate the OTR conversation and ZNC-OTR will automatically
    proceed with the protocol. Unlike BitlBee, the question is not part of the authenticate
    command, so you must type that first on your own. If Alice and Bob are talking,
    the conversation prior to the authenticate step would look like:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，你的好友可以启动 OTR 对话，ZNC-OTR 会自动继续协议。与 BitlBee 不同，问题不是身份验证命令的一部分，因此你必须先自行输入问题。如果
    Alice 和 Bob 正在交谈，身份验证步骤之前的对话可能是这样的：
- en: '[PRE47]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The command to initiate authentication is of the format: `/msg *otr auth username
    answer`. Continuing our example, the command would look like the following, where
    the answer to the question is *tworkeffx*:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 启动身份验证的命令格式为：`/msg *otr auth username answer`。继续我们之前的例子，命令如下，其中问题的答案是 *tworkeffx*：
- en: '[PRE48]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'This will prompt your buddy to participate in the OTR authentication phase
    and what he sees on his screen depends on the IRC client he is using. The `*otr`
    user should respond with something like the following messages:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这将提示你的好友参与 OTR 身份验证阶段，他在屏幕上看到的内容取决于他使用的 IRC 客户端。`*otr` 用户应该用类似以下的消息回应：
- en: '[PRE49]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'As `*otr` reminds us, there are two methods to authenticate the user. We are
    using method number 1, which is the Socialist Millionaire Protocol. Your buddy,
    Bob, responded with your answer and you have authenticated him. Bob should conduct
    a similar exchange and the format for the answer is:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 正如`*otr`所提示的那样，身份验证有两种方法。我们使用的是第一种方法，即社会主义百万富翁协议。你的好友 Bob 给出了你的答案，你已经验证了他。Bob
    也应该进行类似的交换，答案的格式是：
- en: '[PRE50]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: And now, you can enjoy an encrypted chat session.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以享受加密的聊天会话了。
- en: Extending the project
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展项目
- en: Currently, your BeagleBone is only serving your local network. You can enable
    port forwarding, like you did with your Tor server to open it up to the Internet
    to allow access to ZNC while you are on-the-go. If you do this, be sure that you
    are using SSL and consider using a Dynamic DNS service so you don't have to remember
    your IP address.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，你的 BeagleBone 仅服务于你的本地网络。你可以像设置 Tor 服务器时那样启用端口转发，将其开放到互联网，让你在外出时也能访问 ZNC。如果你这么做，务必确保使用
    SSL，并考虑使用动态 DNS 服务，这样你就不必记住 IP 地址。
- en: The ZNC and BitlBee packages are quite extensible. Moreover, since they are
    IRC servers, you can run an IRC **bot** in your ZNC server. There are several
    popular IRC bot packages and perhaps the most well known is Eggdrop ([http://www.eggheads.org/](http://www.eggheads.org/)).
    A custom bot on your BBB IRC server can interact with you from IRC to hardware.
    For example, if you add a temperature sensor on your BBB, you can query the bot
    to find out the temperature in the room. If you add a ZigBee radio to your BBB
    and attach the same temperature sensor to a corresponding ZigBee radio outside,
    powered by a battery, the bot can tell you the temperature outside. If you become
    an avid IRC user, you will enjoy combining the hardware electronics project with
    your BBB bot.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: ZNC 和 BitlBee 软件包具有很强的扩展性。此外，由于它们是 IRC 服务器，你可以在 ZNC 服务器上运行一个 IRC **机器人**。有几个流行的
    IRC 机器人软件包，可能最著名的是 Eggdrop（[http://www.eggheads.org/](http://www.eggheads.org/)）。在你的
    BBB IRC 服务器上定制一个机器人可以让它在 IRC 和硬件之间进行交互。例如，如果你在 BBB 上添加了一个温度传感器，你可以查询机器人以了解房间的温度。如果你在
    BBB 上添加了 ZigBee 无线电，并将相同的温度传感器连接到一个由电池供电的 ZigBee 无线电上，机器人就能告诉你外面的温度。如果你成为一个热衷的
    IRC 用户，你会喜欢将硬件电子项目与 BBB 机器人结合起来。
- en: If you want to involve the CryptoCape to add some hardware protection, you could
    store ZNC's SSL certificate in the TPM. The TPM can store RSA keys and the keys
    can be generated such that the private key remains in the TPM. While there would
    be significant programming to connect the various components, this would certainly
    be a fun and challenging project!
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用 CryptoCape 来增加一些硬件保护，你可以将 ZNC 的 SSL 证书存储在 TPM 中。TPM 可以存储 RSA 密钥，并且可以生成私钥保持在
    TPM 中。虽然连接各个组件需要进行大量编程，但这无疑会是一个有趣且具有挑战性的项目！
- en: Summary
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to use another privacy tool, OTR. We used OTR
    with two different applications and examined how OTR authentication works. We
    also have our BBB set up to act as an IRC gateway to our chat networks and to
    manage all of our IRC communication.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你学习了如何使用另一个隐私工具——OTR。我们将 OTR 用于两个不同的应用，并研究了 OTR 身份验证的工作原理。我们还设置了 BBB，将其作为
    IRC 网关连接到我们的聊天网络，并管理所有的 IRC 通信。
- en: In this book, we've taken three of the most popular and well-respected privacy
    and security applications and used them on the BeagleBone Black. The small form
    factor, low power consumption, and extendibility of the BBB makes it an ideal
    privacy aid. The software and hardware used in this book makes heavy use of cryptography,
    which is inherently a social and often controversial technology. We've also learned
    some of modern cryptography's social-political struggles along the way. Finally,
    you don't need to be a secret agent to communicate privately and securely; the
    best tools are freely available. You can improve these tools by using them and
    providing your feedback to the developers.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们挑选了三款最受欢迎且备受尊重的隐私与安全应用，并在 BeagleBone Black 上使用它们。BBB 的小巧体积、低功耗以及扩展性使其成为理想的隐私助手。本书所用的软件和硬件大量依赖密码学，而密码学本身是一个社会化且常常具争议的技术。我们也在过程中了解到了一些现代密码学的社会政治斗争。最后，你无需成为一名特工就能进行私密且安全的通信；最好的工具是免费提供的。你可以通过使用这些工具并向开发者提供反馈来改进它们。
- en: Happy hacking!
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 快乐黑客！
- en: Appendix A. Selected Bibliography
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 A. 参考文献精选
- en: Chapter 1
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章
- en: Gibb, Alicia. "The death of patents and what comes after." Accessed September
    3, 2014\. [https://www.youtube.com/watch?v=z__Sbw1Ax4o](https://www.youtube.com/watch?v=z__Sbw1Ax4o).
    TEDx Stockholm, 2012.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gibb, Alicia. "The death of patents and what comes after." 访问于 2014年9月3日。 [https://www.youtube.com/watch?v=z__Sbw1Ax4o](https://www.youtube.com/watch?v=z__Sbw1Ax4o)。TEDx
    Stockholm, 2012年。
- en: BeagleBone Black Wiki. "WIFI Adapters." Accessed September 3, 2014\. [http://elinux.org/Beagleboard:BeagleBoneBlack#WIFI_Adapters](http://elinux.org/Beagleboard:BeagleBoneBlack#WIFI_Adapters).
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BeagleBone Black Wiki. "WIFI 适配器。" 访问于 2014年9月3日。 [http://elinux.org/Beagleboard:BeagleBoneBlack#WIFI_Adapters](http://elinux.org/Beagleboard:BeagleBoneBlack#WIFI_Adapters)。
- en: 'Batsov, Bozhidar. "Package Management in Emacs: The Good, the Bad and the Ugly."
    Accessed September 3, 2014\. [http://batsov.com/articles/2012/02/19/package-management-in-emacs-the-good-the-bad-and-the-ugly/](http://batsov.com/articles/2012/02/19/package-management-in-emacs-the-good-the-bad-and-the-ugly/).
    2012.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Batsov, Bozhidar. "Package Management in Emacs: The Good, the Bad and the Ugly."
    访问于 2014年9月3日。 [http://batsov.com/articles/2012/02/19/package-management-in-emacs-the-good-the-bad-and-the-ugly/](http://batsov.com/articles/2012/02/19/package-management-in-emacs-the-good-the-bad-and-the-ugly/)。2012年。'
- en: Batsov, Bozhidar. "Prelude." Accessed September 3, 2014\. [https://github.com/bbatsov/prelude](https://github.com/bbatsov/prelude).
    2014.
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Batsov, Bozhidar. "Prelude." 访问于 2014年9月3日。 [https://github.com/bbatsov/prelude](https://github.com/bbatsov/prelude)。2014年。
- en: Cygwin. Accessed September 3, 2014\. [https://www.cygwin.com](https://www.cygwin.com).
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cygwin. 访问于 2014年9月3日。 [https://www.cygwin.com](https://www.cygwin.com)。
- en: Boneh, Dan. "Cryptography I." Accessed September 3, 2014\. [https://www.coursera.org/course/crypto](https://www.coursera.org/course/crypto).
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Boneh, Dan. "Cryptography I." 访问于 2014年9月3日。 [https://www.coursera.org/course/crypto](https://www.coursera.org/course/crypto)。
- en: Boneh, Dan. "Cryptography II." Accessed September 3, 2014\. [https://www.coursera.org/course/crypto2](https://www.coursera.org/course/crypto2).
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Boneh, Dan. "Cryptography II." 访问于 2014年9月3日。 [https://www.coursera.org/course/crypto2](https://www.coursera.org/course/crypto2)。
- en: Molloy, Derek. "Setting up a C++ Cross-Development Platform." Accessed September
    3, 2014\. [http://derekmolloy.ie/beaglebone/ setting-up-eclipse-on-the-beaglebone-for-c-development/](http://derekmolloy.ie/beaglebone/%20setting-up-eclipse-on-the-beaglebone-for-c-development/).
    2013.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Molloy, Derek. "Setting up a C++ Cross-Development Platform." 访问于 2014年9月3日。
    [http://derekmolloy.ie/beaglebone/ setting-up-eclipse-on-the-beaglebone-for-c-development/](http://derekmolloy.ie/beaglebone/%20setting-up-eclipse-on-the-beaglebone-for-c-development/)。2013年。
- en: edX. "Introduction to Linux." Accessed September 3, 2014\. [https://www.edx.org/course/linuxfoundationx/linuxfoundationx-lfs101x-introduction-1621](https://www.edx.org/course/linuxfoundationx/linuxfoundationx-lfs101x-introduction-1621).
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: edX. "Introduction to Linux." 访问于 2014年9月3日。 [https://www.edx.org/course/linuxfoundationx/linuxfoundationx-lfs101x-introduction-1621](https://www.edx.org/course/linuxfoundationx/linuxfoundationx-lfs101x-introduction-1621)。
- en: eLinux Wiki. "BeagleBone Black Serial." Accessed September 3, 2014\. [http://elinux.org/Beagleboard:BeagleBone_Black_Serial](http://elinux.org/Beagleboard:BeagleBone_Black_Serial).
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: eLinux Wiki. "BeagleBone Black Serial." 访问于 2014年9月3日。 [http://elinux.org/Beagleboard:BeagleBone_Black_Serial](http://elinux.org/Beagleboard:BeagleBone_Black_Serial)。
- en: EmacsWiki. "Emacs Newbie." Accessed September 3, 2014\. [http://www.emacswiki.org/emacs/EmacsNewbie](http://www.emacswiki.org/emacs/EmacsNewbie).
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EmacsWiki. "Emacs Newbie." 访问于 2014年9月3日。 [http://www.emacswiki.org/emacs/EmacsNewbie](http://www.emacswiki.org/emacs/EmacsNewbie)。
- en: EmacsWiki. "Viper Mode." Accessed September 3, 2014\. [http://www.emacswiki.org/emacs/ViperMode](http://www.emacswiki.org/emacs/ViperMode).
    2014.
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EmacsWiki. "Viper Mode." 访问于 2014年9月3日。 [http://www.emacswiki.org/emacs/ViperMode](http://www.emacswiki.org/emacs/ViperMode)。2014年。
- en: Corey, Gerald. "BeagleBone Black System Reference Manual. Beagleboard.org."
    Accessed September 3, 2014\. [https://github.com/CircuitCo/BeagleBone-Black/ blob/master/BBB_SRM.pdf?raw=true](https://github.com/CircuitCo/BeagleBone-Black/%20blob/master/BBB_SRM.pdf?raw=true).
    2014.
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Corey, Gerald. "BeagleBone Black系统参考手册. Beagleboard.org." 访问日期：2014年9月3日。 [https://github.com/CircuitCo/BeagleBone-Black/
    blob/master/BBB_SRM.pdf?raw=true](https://github.com/CircuitCo/BeagleBone-Black/%20blob/master/BBB_SRM.pdf?raw=true).
    2014年。
- en: Hertzog, Raphael, and Roland Mas. *The Debian Administrator's Handbook*. Freexian
    SARL. 2013.
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hertzog, Raphael, 和 Roland Mas. *Debian管理员手册*. Freexian SARL. 2013年。
- en: Homebrew. Accessed September 3, 2014\. [http://brew.sh/](http://brew.sh/).
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Homebrew. 访问日期：2014年9月3日。 [http://brew.sh/](http://brew.sh/).
- en: Axelson, Jan. "Using Eclipse to Cross-compile Applications for Embedded Systems."
    Accessed September 3, 2014\. [http://janaxelson.com/eclipse1.htm](http://janaxelson.com/eclipse1.htm).
    2014.
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Axelson, Jan. "使用Eclipse为嵌入式系统交叉编译应用程序." 访问日期：2014年9月3日。 [http://janaxelson.com/eclipse1.htm](http://janaxelson.com/eclipse1.htm).
    2014年。
- en: Katz, Jonathan. "Cryptography." Accessed September 3, 2014\. [https://www.coursera.org/course/cryptography](https://www.coursera.org/course/cryptography).
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Katz, Jonathan. "密码学." 访问日期：2014年9月3日。 [https://www.coursera.org/course/cryptography](https://www.coursera.org/course/cryptography).
- en: Katz, Jonathan, and Yehuda Lindell. *Introduction to Modern Cryptography (Chapman
    & Hall/Crc Cryptography and Network Security Series)*. Chapman & Hall/CRC. 2007.
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Katz, Jonathan, 和 Yehuda Lindell. *现代密码学导论（Chapman & Hall/Crc密码学与网络安全系列）*. Chapman
    & Hall/CRC. 2007年。
- en: Khan Academy. "Electricity and magnetism." Accessed September 3, 2014\. [https://www.khanacademy.org/science/physics/electricity-and-magnetism](https://www.khanacademy.org/science/physics/electricity-and-magnetism).
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Khan Academy. "电学与磁学." 访问日期：2014年9月3日。 [https://www.khanacademy.org/science/physics/electricity-and-magnetism](https://www.khanacademy.org/science/physics/electricity-and-magnetism).
- en: Khan Academy. "Journey into cryptography." Accessed September 3, 2014\. [https://www.khanacademy.org/computing/computer-science/cryptography](https://www.khanacademy.org/computing/computer-science/cryptography).
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Khan Academy. "密码学入门." 访问日期：2014年9月3日。 [https://www.khanacademy.org/computing/computer-science/cryptography](https://www.khanacademy.org/computing/computer-science/cryptography).
- en: 'Murphy, Sean, and Fred Piper. *Cryptography: A Very Short Introduction.* Oxford
    University Press. 2002.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Murphy, Sean, 和 Fred Piper. *密码学：极短的介绍.* 牛津大学出版社. 2002年。
- en: nixCraft. "Ubuntu / Debian Linux Regenerate OpenSSH Host Keys." Accessed September
    3, 2014\. [http://www.cyberciti.biz/faq/howto-regenerate-openssh-host-keys/](http://www.cyberciti.biz/faq/howto-regenerate-openssh-host-keys/).
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: nixCraft. "Ubuntu / Debian Linux重新生成OpenSSH主机密钥." 访问日期：2014年9月3日。 [http://www.cyberciti.biz/faq/howto-regenerate-openssh-host-keys/](http://www.cyberciti.biz/faq/howto-regenerate-openssh-host-keys/).
- en: Nmap.org. "Microsoft Windows binaries." Accessed September 3, 2014\. [http://nmap.org/download.html#windows](http://nmap.org/download.html#windows).
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nmap.org. "微软Windows二进制文件." 访问日期：2014年9月3日。 [http://nmap.org/download.html#windows](http://nmap.org/download.html#windows).
- en: OSHWA. [http://www.oshwa.org/definition/](http://www.oshwa.org/definition/).
    2013.
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OSHWA. [http://www.oshwa.org/definition/](http://www.oshwa.org/definition/).
    2013年。
- en: 'Paar, Christof, and Jan Pelzl. *Understanding Cryptography: A Textbook for
    Students and Practitioners*. Springer Publishing Company, Incorporated. 2009.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paar, Christof, 和 Jan Pelzl. *理解密码学：学生与从业者的教材*. 施普林格出版公司. 2009年。
- en: Munroe, Randall. "Permanence." Accessed September 3, 2014\. [https://xkcd.com/910/](https://xkcd.com/910/).
    2008.
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Munroe, Randall. "永恒性." 访问日期：2014年9月3日。 [https://xkcd.com/910/](https://xkcd.com/910/).
    2008年。
- en: Munroe, Randall. "Real Programmers." Accessed September 3, 2014\. [https://xkcd.com/378/](https://xkcd.com/378/).
    2008.
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Munroe, Randall. "真正的程序员." 访问日期：2014年9月3日。 [https://xkcd.com/378/](https://xkcd.com/378/).
    2008年。
- en: Chua, Sacha. "How to Learn Emacs." Accessed September 3, 2014\. [http://sachachua.com/blog/wp-content/uploads/2013/05/How-to-Learn-Emacs-v2-Large.png](http://sachachua.com/blog/wp-content/uploads/2013/05/How-to-Learn-Emacs-v2-Large.png).
    2013.
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chua, Sacha. "如何学习Emacs." 访问日期：2014年9月3日。 [http://sachachua.com/blog/wp-content/uploads/2013/05/How-to-Learn-Emacs-v2-Large.png](http://sachachua.com/blog/wp-content/uploads/2013/05/How-to-Learn-Emacs-v2-Large.png).
    2013年。
- en: Scherz, Paul. *Practical Electronics for Inventors*. McGraw-Hill. 3rd edition.
    2013\.
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scherz, Paul. *发明者的实用电子学*. 麦格劳-希尔. 第三版. 2013年。
- en: 'Stallman, Richard M. "Emacs the extensible, customizable self-documenting display
    editor." *In Proceedings of the ACM SIGPLAN SIGOA Symposium on Text Manipulation*:
    147–56\. ACM, New York, NY, USA. 1981\. Also available at [http://doi.acm.Org/10.1145/800209.806466](http://doi.acm.Org/10.1145/800209.806466).'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Stallman, Richard M. "Emacs：可扩展的、可定制的自文档化显示编辑器." *收录于ACM SIGPLAN SIGOA文本操作研讨会论文集*:
    147–56. ACM, 纽约, 美国. 1981年. 也可以通过 [http://doi.acm.Org/10.1145/800209.806466](http://doi.acm.Org/10.1145/800209.806466)
    获取。'
- en: 'Stallman, Richard M. *Gnu Emacs Manual: For Version 24.3*. Free Software Foundation,
    17th edition. 2013.'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stallman, Richard M. *Gnu Emacs手册：版本24.3*. 自由软件基金会，第17版。2013年。
- en: VirtualBox.org. Accessed September 3, 2014\. [https://www.virtualbox.org/](https://www.virtualbox.org/).
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VirtualBox.org. 访问日期：2014年9月3日。 [https://www.virtualbox.org/](https://www.virtualbox.org/).
- en: Chapter 2
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章
- en: Adafruit Industries. "Adafruit's BeagleBone IO Python Library". Accessed September
    3, 2014\. [https://github.com/adafruit/adafruit-beaglebone-io-python](https://github.com/adafruit/adafruit-beaglebone-io-python).
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adafruit Industries. "Adafruit的BeagleBone IO Python库". 访问日期：2014年9月3日。 [https://github.com/adafruit/adafruit-beaglebone-io-python](https://github.com/adafruit/adafruit-beaglebone-io-python).
- en: Appelbaum, Jacob and Nick Mathewson. *Pluggable transports for circumvention*.
    2010\. Accessed September 3, 2014\. [https://gitweb.torproject.org/torspec.git/blob/refs/heads/master:/proposals/180-pluggable-transport.txt](https://gitweb.torproject.org/torspec.git/blob/refs/heads/master:/proposals/180-pluggable-transport.txt).
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Appelbaum, Jacob 和 Nick Mathewson. *用于规避的可插拔传输*. 2010年。访问日期：2014年9月3日。 [https://gitweb.torproject.org/torspec.git/blob/refs/heads/master:/proposals/180-pluggable-transport.txt](https://gitweb.torproject.org/torspec.git/blob/refs/heads/master:/proposals/180-pluggable-transport.txt)。
- en: Dingledine, Roger. "Yes, we know about the Guardian article.". Accessed September
    3, 2014\. [https://blog.torproject.org/blog/yes-we-know-about-guardian-article](https://blog.torproject.org/blog/yes-we-know-about-guardian-article).
    2013.
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dingledine, Roger. "是的，我们知道《卫报》文章。". 访问日期：2014年9月3日。 [https://blog.torproject.org/blog/yes-we-know-about-guardian-article](https://blog.torproject.org/blog/yes-we-know-about-guardian-article).
    2013年。
- en: Dingledine, Roger and Nick Mathewson. *Design of a blocking-resistant anonymity
    system*. Technical Report 2006-11-001, The Tor Project, [https://research.torproject.org/techreports/blocking-2006-11.pdf](https://research.torproject.org/techreports/blocking-2006-11.pdf).
    November 2006.
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dingledine, Roger 和 Nick Mathewson. *阻止抗性匿名系统的设计*. 技术报告2006-11-001，Tor项目，[https://research.torproject.org/techreports/blocking-2006-11.pdf](https://research.torproject.org/techreports/blocking-2006-11.pdf)。2006年11月。
- en: 'Dingledine, Roger, Nick Mathewson, and Paul Syverson. "In Proceedings of the
    13th Conference on USENIX Security Symposium - Volume 13, SSYM''04." *Tor: The
    second-generation onion router*: 21\. USENIX Association. Berkeley, CA, USA. 2004\.
    [http://dl.acm.org/citation.cfm?id=1251375.1251396](http://dl.acm.org/citation.cfm?id=1251375.1251396).'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Dingledine, Roger, Nick Mathewson, 和 Paul Syverson. "在第13届USENIX安全会议——第13卷SSYM''04上发表的论文。"
    *Tor: 第二代洋葱路由器*：21。USENIX协会。美国加利福尼亚州伯克利市。2004年。 [http://dl.acm.org/citation.cfm?id=1251375.1251396](http://dl.acm.org/citation.cfm?id=1251375.1251396).'
- en: Electronic Frontier Foundation. "The Legal FAQ for Tor Relay Operators." Accessed
    September 3, 2014\. [https://www.torproject.org/eff/tor-legal-faq.html.en](https://www.torproject.org/eff/tor-legal-faq.html.en).
    2014
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子前沿基金会. "Tor中继操作员的法律常见问题解答." 访问日期：2014年9月3日。 [https://www.torproject.org/eff/tor-legal-faq.html.en](https://www.torproject.org/eff/tor-legal-faq.html.en).
    2014年
- en: 'Fuss, Juergen, Tobias Pulls, and Philipp Winter. "Scramblesuit: a polymorphic
    network protocol to circumvent censorship." *Proceedings of the 12th ACM workshop
    on Workshop on Privacy in the electronic society, WPES''13*: 213-24\. New York,
    NY, USA: ACM. 2013\. Also available at [http://doi.acm.org/10.1145/2517840.2517856](http://doi.acm.org/10.1145/2517840.2517856).'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fuss, Juergen, Tobias Pulls, 和 Philipp Winter. "Scramblesuit：一种多态网络协议，用于规避审查。"
    *第12届ACM隐私工作坊，WPES'13*：213-24。纽约，美国：ACM。2013年。也可在 [http://doi.acm.org/10.1145/2517840.2517856](http://doi.acm.org/10.1145/2517840.2517856)
    获取。
- en: Grusin, Mike. "Serial LCD quickstart." Accessed September 3, 2014\. [https://www.sparkfun.com/tutorials/246](https://www.sparkfun.com/tutorials/246).
    2011.
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Grusin, Mike. "串行LCD快速入门." 访问日期：2014年9月3日。 [https://www.sparkfun.com/tutorials/246](https://www.sparkfun.com/tutorials/246).
    2011年。
- en: 'Kadianakis, George. "New obfsproxy transport: scramblesuit." Accessed September
    3, 2014\. [https://lists.torproject.org/pipermail/tor-relays/2014-February/003886.html](https://lists.torproject.org/pipermail/tor-relays/2014-February/003886.html).
    2014'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kadianakis, George. "新型obfsproxy传输：scramblesuit." 访问日期：2014年9月3日。 [https://lists.torproject.org/pipermail/tor-relays/2014-February/003886.html](https://lists.torproject.org/pipermail/tor-relays/2014-February/003886.html).
    2014年
- en: speedtest-cli. Accessed September 3, 2014\. [https://github.com/sivel/speedtest-cli](https://github.com/sivel/speedtest-cli).
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: speedtest-cli. 访问日期：2014年9月3日。 [https://github.com/sivel/speedtest-cli](https://github.com/sivel/speedtest-cli).
- en: Tails. Accessed September 3, 2014\. [https://tails.boum.org/](https://tails.boum.org/).
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tails. 访问日期：2014年9月3日。 [https://tails.boum.org/](https://tails.boum.org/).
- en: Tor Atlas. Accessed September 3, 2014\. [https://atlas.torproject.org/](https://atlas.torproject.org/).
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tor Atlas. 访问日期：2014年9月3日。 [https://atlas.torproject.org/](https://atlas.torproject.org/).
- en: Tor Globe. Accessed September 3, 2014\. [https://globe.torproject.org/](https://globe.torproject.org/).
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tor Globe. 访问时间：2014年9月3日。 [https://globe.torproject.org/](https://globe.torproject.org/).
- en: Tor Metrics. "Directly connecting users from Turkey." Accessed September 3,
    2014\. [https://metrics.torproject.org/users.html?graph=userstats-relay-country&start=2014-01-04&end=2014-04-04&country=tr&events=off#userstats-relay-country](https://metrics.torproject.org/users.html?graph=userstats-relay-country&start=2014-01-04&end=2014-04-04&country=tr&events=off#userstats-relay-country).
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tor Metrics. "直接连接来自土耳其的用户。" 访问时间：2014年9月3日。 [https://metrics.torproject.org/users.html?graph=userstats-relay-country&start=2014-01-04&end=2014-04-04&country=tr&events=off#userstats-relay-country](https://metrics.torproject.org/users.html?graph=userstats-relay-country&start=2014-01-04&end=2014-04-04&country=tr&events=off#userstats-relay-country).
- en: Tor Project. "Installing Tor on Debian/Ubuntu." Accessed September 3, 2014\.
    [https://www.torproject.org/docs/debian](https://www.torproject.org/docs/debian).
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tor Project. "在Debian/Ubuntu上安装Tor。" 访问时间：2014年9月3日。 [https://www.torproject.org/docs/debian](https://www.torproject.org/docs/debian).
- en: 'Tor Project. *Tc: A Tor control protocol (Version 1)*. Accessed September 3,
    2014\. [https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=control-spec.txt](https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=control-spec.txt).'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Tor Project. *Tc: 一个Tor控制协议（版本1）*。 访问时间：2014年9月3日。 [https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=control-spec.txt](https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=control-spec.txt).'
- en: Tor Stem. Accessed September 3, 2014\. [https://stem.torproject.org/](https://stem.torproject.org/).
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tor Stem. 访问时间：2014年9月3日。 [https://stem.torproject.org/](https://stem.torproject.org/).
- en: Tor Stem. "Tutorials." Accessed September 3, 2014\. [https://stem.torproject.org/tutorials.html](https://stem.torproject.org/tutorials.html).
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tor Stem. "教程。" 访问时间：2014年9月3日。 [https://stem.torproject.org/tutorials.html](https://stem.torproject.org/tutorials.html).
- en: Chapter 3
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章
- en: Atmel. "ATAES 132." Accessed September 3, 2014\. [http://www.atmel.com/devices/ataes132.aspx](http://www.atmel.com/devices/ataes132.aspx).
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Atmel. "ATAES 132." 访问时间：2014年9月3日。 [http://www.atmel.com/devices/ataes132.aspx](http://www.atmel.com/devices/ataes132.aspx).
- en: Beagleboard forum. Accessed September 3, 2014\. [https://groups.google.com/forum/#!forum/beagleboard](https://groups.google.com/forum/#!forum/beagleboard).
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Beagleboard论坛。 访问时间：2014年9月3日。 [https://groups.google.com/forum/#!forum/beagleboard](https://groups.google.com/forum/#!forum/beagleboard).
- en: eLinux Wiki. "BeagleBone Black." Accessed September 3, 2014\. [http://elinux.org/Beagleboard:BeagleBoneBlack](http://elinux.org/Beagleboard:BeagleBoneBlack).
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: eLinux Wiki. "BeagleBone Black." 访问时间：2014年9月3日。 [http://elinux.org/Beagleboard:BeagleBoneBlack](http://elinux.org/Beagleboard:BeagleBoneBlack).
- en: Chaos Computer Club. "Chaos Computer Club Breaks Apple TouchID." Accessed September
    3, 2014\. [http://www.ccc.de/en/updates/2013/ccc-breaks-apple-touchid](http://www.ccc.de/en/updates/2013/ccc-breaks-apple-touchid).
    2013.
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chaos Computer Club. "Chaos Computer Club 破解了Apple TouchID。" 访问时间：2014年9月3日。
    [http://www.ccc.de/en/updates/2013/ccc-breaks-apple-touchid](http://www.ccc.de/en/updates/2013/ccc-breaks-apple-touchid).
    2013年。
- en: Datko, Josh. "BeagleBone Black ATmega Flasher." Accessed September 3, 2014\.
    [https://github.com/jbdatko/BBB_ATmega328P_flasher](https://github.com/jbdatko/BBB_ATmega328P_flasher).
    2014.
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datko, Josh. "BeagleBone Black ATmega Flasher." 访问时间：2014年9月3日。 [https://github.com/jbdatko/BBB_ATmega328P_flasher](https://github.com/jbdatko/BBB_ATmega328P_flasher).
    2014年。
- en: Datko, Josh. "Cryptotronix:CryptoCape." Accessed September 3, 2014\. [http://elinux.org/Cryptotronix:CryptoCape](http://elinux.org/Cryptotronix:CryptoCape).
    2014.
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datko, Josh. "Cryptotronix:CryptoCape." 访问时间：2014年9月3日。 [http://elinux.org/Cryptotronix:CryptoCape](http://elinux.org/Cryptotronix:CryptoCape).
    2014年。
- en: Datko, Josh. "CryptoCape Device Tree Source." Accessed September 3, 2014\. [https://github.com/beagleboard/linux/blob/3.8/firmware/capes/BB-BONE-CRYPTO-00A0.dts](https://github.com/beagleboard/linux/blob/3.8/firmware/capes/BB-BONE-CRYPTO-00A0.dts).
    2014.
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datko, Josh. "CryptoCape 设备树源文件。" 访问时间：2014年9月3日。 [https://github.com/beagleboard/linux/blob/3.8/firmware/capes/BB-BONE-CRYPTO-00A0.dts](https://github.com/beagleboard/linux/blob/3.8/firmware/capes/BB-BONE-CRYPTO-00A0.dts).
    2014年。
- en: Datko, Josh. "EClet" Accessed September 3, 2014\. [https://github.com/cryptotronix/eclet](https://github.com/cryptotronix/eclet).
    2014
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datko, Josh. "EClet" 访问时间：2014年9月3日。 [https://github.com/cryptotronix/eclet](https://github.com/cryptotronix/eclet).
    2014年。
- en: Datko, Josh. "Hashlet." Accessed September 3, 2014\. [https://github.com/cryptotronix/hashlet](https://github.com/cryptotronix/hashlet).
    2014.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datko, Josh. "Hashlet。" 访问时间：2014年9月3日。 [https://github.com/cryptotronix/hashlet](https://github.com/cryptotronix/hashlet).
    2014年。
- en: Electronic Frontier Foundation. "Https Everywhere." Accessed September 3, 2014\.
    [https://www.eff.org/https-everywhere](https://www.eff.org/https-everywhere).
    2014.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子前沿基金会. "Https Everywhere." 访问时间：2014年9月3日。 [https://www.eff.org/https-everywhere](https://www.eff.org/https-everywhere).
    2014年。
- en: Gellesaug, David and Nicole Perlroth. "Russian hackers amass over a billion
    internet passwords. New York Times." [http://www.nytimes.com/2014/08/06/technology/russian-gang-said-to-amass-more-than-a-billion-stolen-internet-credentials.html](http://www.nytimes.com/2014/08/06/technology/russian-gang-said-to-amass-more-than-a-billion-stolen-internet-credentials.html).
    2014.
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gellesaug, David 和 Nicole Perlroth. "俄罗斯黑客窃取超过十亿条互联网密码。纽约时报." [http://www.nytimes.com/2014/08/06/technology/russian-gang-said-to-amass-more-than-a-billion-stolen-internet-credentials.html](http://www.nytimes.com/2014/08/06/technology/russian-gang-said-to-amass-more-than-a-billion-stolen-internet-credentials.html)。2014年。
- en: Texas Instrument. "AM335x Crypto Performance." Accessed September 3, 2014\.
    [http://processors.wiki.ti.com/index.php/AM335x_Crypto_Performance](http://processors.wiki.ti.com/index.php/AM335x_Crypto_Performance).
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 德州仪器公司. "AM335x 加密性能." 访问日期：2014年9月3日。[http://processors.wiki.ti.com/index.php/AM335x_Crypto_Performance](http://processors.wiki.ti.com/index.php/AM335x_Crypto_Performance)。
- en: Munroe, Randall. "Heartbleed explanation." Accessed September 3, 2014\. [https://xkcd.com/1354/](https://xkcd.com/1354/).
    2014.
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Munroe, Randall. "Heartbleed 解释." 访问日期：2014年9月3日。[https://xkcd.com/1354/](https://xkcd.com/1354/)。2014年。
- en: MythBusters. "Crimes and Myth-Demeanors 2." Episode 59\. Accessed September
    3, 2014\. [https://www.youtube.com/watch?v=3Hji3kp_i9k](https://www.youtube.com/watch?v=3Hji3kp_i9k).
    2006
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MythBusters. "犯罪与神话诋毁 2." 第59集。访问日期：2014年9月3日。[https://www.youtube.com/watch?v=3Hji3kp_i9k](https://www.youtube.com/watch?v=3Hji3kp_i9k)。2006年。
- en: NXP Semiconductor. *I2C-Bus Specification and User Manual*. [http://www.nxp.com/documents/user_manual/UM10204.pdf](http://www.nxp.com/documents/user_manual/UM10204.pdf).
    2014.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NXP 半导体公司. *I2C 总线规范和用户手册*. [http://www.nxp.com/documents/user_manual/UM10204.pdf](http://www.nxp.com/documents/user_manual/UM10204.pdf)。2014年。
- en: O'Flynn, Colin. "Clock Glitch Attack Examples - Bypassing Password Check." Accessed
    September 3, 2014\. [https://www.youtube.com/watch?v=Ruphw98JWE&list=UUqc9MJwX_R1pQC6A353JmJg](https://www.youtube.com/watch?v=Ruphw98JWE&list=UUqc9MJwX_R1pQC6A353JmJg).
    2014.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: O'Flynn, Colin. "时钟故障攻击示例 - 绕过密码检查." 访问日期：2014年9月3日。[https://www.youtube.com/watch?v=Ruphw98JWE&list=UUqc9MJwX_R1pQC6A353JmJg](https://www.youtube.com/watch?v=Ruphw98JWE&list=UUqc9MJwX_R1pQC6A353JmJg)。2014年。
- en: Oliveira, David. "BeagleBone Cape EEPROM Generator." Accessed September 3, 2014\.
    [https://github.com/picoflamingo/BBCape_EEPROM](https://github.com/picoflamingo/BBCape_EEPROM).
    2013.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oliveira, David. "BeagleBone Cape EEPROM 生成器." 访问日期：2014年9月3日。[https://github.com/picoflamingo/BBCape_EEPROM](https://github.com/picoflamingo/BBCape_EEPROM)。2013年。
- en: Petazzoni, Thomas. "Device Tree for Dummies." Embedded Linux Conference Europe.
    [https://www.youtube.com/watch?v=m_NyYEBxfn8](https://www.youtube.com/watch?v=m_NyYEBxfn8).
    2013.
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Petazzoni, Thomas. "Dummies 的设备树." 嵌入式 Linux 大会欧洲站。[https://www.youtube.com/watch?v=m_NyYEBxfn8](https://www.youtube.com/watch?v=m_NyYEBxfn8)。2013年。
- en: 'Skorobogatov, Dr Sergei. *Physical Attacks on Tamper Resistance: Progress and
    Lessons*. 2nd ARO Special Workshop on Hardware Assurance. [http://www.cl.cam.ac.uk/~sps32/ARO_2011.pdf](http://www.cl.cam.ac.uk/~sps32/ARO_2011.pdf).
    2011.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Skorobogatov, Dr Sergei. *物理攻击与防篡改技术：进展与教训*. 第二届 ARO 硬件保障专题研讨会。[http://www.cl.cam.ac.uk/~sps32/ARO_2011.pdf](http://www.cl.cam.ac.uk/~sps32/ARO_2011.pdf)。2011年。
- en: Chapter 4
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章
- en: Appelbaum, Jacob. "GPG Configuration." Accessed September 3, 2014\. [https://github.com/ioerror/duraconf/raw/master/configs/gnupg/gpg.conf](https://github.com/ioerror/duraconf/raw/master/configs/gnupg/gpg.conf).
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Appelbaum, Jacob. "GPG 配置." 访问日期：2014年9月3日。[https://github.com/ioerror/duraconf/raw/master/configs/gnupg/gpg.conf](https://github.com/ioerror/duraconf/raw/master/configs/gnupg/gpg.conf)。
- en: 'Appelbaum, Jacob, Joseph A. Calandrino, William Clarkson, Edward W. Felten,
    Ariel J. Feldman, J. Alex Halderman, Nadia Heninger, Seth D. Schoen, and William
    Paul. *Lest We Remember: Cold-boot Attacks on Encryption Keys*. 52(5): 91-98\.
    Commun. ACM. 2009\. Also available at [http://doi.acm.org/10.1145/1506409.1506429](http://doi.acm.org/10.1145/1506409.1506429).'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Appelbaum, Jacob, Joseph A. Calandrino, William Clarkson, Edward W. Felten,
    Ariel J. Feldman, J. Alex Halderman, Nadia Heninger, Seth D. Schoen 和 William
    Paul. *愿我们记住：冷启动攻击对加密密钥的影响*. 52(5): 91-98\. 《计算机协会通信》. 2009年。也可以在 [http://doi.acm.org/10.1145/1506409.1506429](http://doi.acm.org/10.1145/1506409.1506429)
    上获取。'
- en: 'Borisov, Nikita, George Danezis, and Ian Goldberg. DP5: *A Private Presence
    Service*. Technical Report 2014-10\. The Tor Project. [http://cacr.uwaterloo.ca/techreports/2014/cacr2014-10.pdf](http://cacr.uwaterloo.ca/techreports/2014/cacr2014-10.pdf).
    2014.'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Borisov, Nikita, George Danezis 和 Ian Goldberg. DP5: *私人存在服务*. 技术报告 2014-10\.
    Tor 项目。[http://cacr.uwaterloo.ca/techreports/2014/cacr2014-10.pdf](http://cacr.uwaterloo.ca/techreports/2014/cacr2014-10.pdf)。2014年。'
- en: Datko, Josh. "CryptoCape Trusted Platform Module." Accessed September 3, 2014\.
    [http://cryptotronix.com/cryptocape-tpm/](http://cryptotronix.com/cryptocape-tpm/).
    2014.
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datko, Josh. "CryptoCape 受信平台模块." 访问日期：2014年9月3日。[http://cryptotronix.com/cryptocape-tpm/](http://cryptotronix.com/cryptocape-tpm/)。2014年。
- en: Free Software Foundation. "Email Self-Defense." Accessed September 3, 2014\.
    [https://emailselfdefense.fsf.org/en/index.html](https://emailselfdefense.fsf.org/en/index.html).
    2014.
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自由软件基金会。"电子邮件自我防护。" 访问日期：2014年9月3日。[https://emailselfdefense.fsf.org/en/index.html](https://emailselfdefense.fsf.org/en/index.html)。2014年。
- en: Free Software Foundation. *The GNU Privacy Handbook*. [https://www.gnupg.org/gph/en/manual.html](https://www.gnupg.org/gph/en/manual.html).
    1999.
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自由软件基金会。*GNU隐私手册*。[https://www.gnupg.org/gph/en/manual.html](https://www.gnupg.org/gph/en/manual.html)。1999年。
- en: 'Greenwald, Glenn. *No Place to Hide: Edward Snowden, the NSA, and the U.S.
    Surveillance State*. 2014\. Metropolitan Books. USA.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Greenwald, Glenn。*无处可藏：爱德华·斯诺登、NSA与美国监控国家*。2014年。大都会出版社，美国。
- en: 'Gutmann, Peter. "An Open-Source Cryptographic Coprocessor." *Proceedings of
    the 9th Conference on USENIX Security Symposium - Volume 9, SSYM''00*: 8-8\. USENIX
    Association, Berkeley, CA, USA. 2000\. Also available at [http://dl.acm.org/citation.cfm?id=1251306.1251314](http://dl.acm.org/citation.cfm?id=1251306.1251314).'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gutmann, Peter. "一个开源加密协处理器。" *第九届USENIX安全会议论文集 - 第9卷，SSYM'00*：8-8。USENIX协会，加利福尼亚州伯克利市，美国。2000年。也可以在[http://dl.acm.org/citation.cfm?id=1251306.1251314](http://dl.acm.org/citation.cfm?id=1251306.1251314)找到。
- en: HAVEGE. Accessed September 3, 2014\. [http://www.irisa.fr/caps/projects/hipsor/](http://www.irisa.fr/caps/projects/hipsor/).
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HAVEGE。 访问日期：2014年9月3日。[http://www.irisa.fr/caps/projects/hipsor/](http://www.irisa.fr/caps/projects/hipsor/)。
- en: Huang, Bunnie. "On Hacking MicroSD Cards." Accessed September 3, 2014\. [http://www.bunniestudios.com/blog/?p=3554](http://www.bunniestudios.com/blog/?p=3554).
    2013.
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Huang, Bunnie。"关于破解MicroSD卡。" 访问日期：2014年9月3日。[http://www.bunniestudios.com/blog/?p=3554](http://www.bunniestudios.com/blog/?p=3554)。2013年。
- en: 'Langner, Ralph. *Stuxnet: Dissecting a Cyberwarfare Weapon*. 9(3): 49-51\.
    IEEE Security and Privacy. 2011\. Also available at [http://dx.doi.org/10.1109/MSP.2011.67](http://dx.doi.org/10.1109/MSP.2011.67).'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Langner, Ralph。*Stuxnet：解剖一款网络战武器*。9(3)：49-51。IEEE安全与隐私。2011年。也可以在[http://dx.doi.org/10.1109/MSP.2011.67](http://dx.doi.org/10.1109/MSP.2011.67)找到。
- en: 'Levy, Steven. *Crypto: How the Code Rebels Beat the Government: Saving Privacy
    in the Digital Age*. Penguin USA, New York, NY, USA. 2001.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Levy, Steven。*加密：代码叛逆者如何击败政府：在数字时代拯救隐私*。企鹅出版社，美国纽约。2001年。
- en: Marlinspike, Moxie. "A Critique of Lavabit." Accessed September 3, 2014\. [http://www.thoughtcrime.org/blog/lavabit-critique/](http://www.thoughtcrime.org/blog/lavabit-critique/).
    2013.
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Marlinspike, Moxie。 "对Lavabit的批评。" 访问日期：2014年9月3日。[http://www.thoughtcrime.org/blog/lavabit-critique/](http://www.thoughtcrime.org/blog/lavabit-critique/)。2013年。
- en: Microsoft. "United States' Malware Infection Rate More than Doubles in the First
    Half of 2013." Accessed September 3, 2014\. [http://blogs.technet.com/b/security/archive/2014/03/31/united-states-malware-infection-rate-more-than-doubles-in-the-first-half-of-2013.aspx](http://blogs.technet.com/b/security/archive/2014/03/31/united-states-malware-infection-rate-more-than-doubles-in-the-first-half-of-2013.aspx).
    2014.
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软。"2013年上半年美国恶意软件感染率翻倍。" 访问日期：2014年9月3日。[http://blogs.technet.com/b/security/archive/2014/03/31/united-states-malware-infection-rate-more-than-doubles-in-the-first-half-of-2013.aspx](http://blogs.technet.com/b/security/archive/2014/03/31/united-states-malware-infection-rate-more-than-doubles-in-the-first-half-of-2013.aspx)。2014年。
- en: National Archives. "Frequently Asked Questions About Optical Storage Media."
    Accessed September 3, 2014\. [http://www.archives.gov/records-mgmt/initiatives/temp-opmedia-faq.html](http://www.archives.gov/records-mgmt/initiatives/temp-opmedia-faq.html).
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 国家档案馆。"关于光学存储介质的常见问题。" 访问日期：2014年9月3日。[http://www.archives.gov/records-mgmt/initiatives/temp-opmedia-faq.html](http://www.archives.gov/records-mgmt/initiatives/temp-opmedia-faq.html)。
- en: Opsahl, Kurt. "Why Metadata Matters." Accessed September 3, 2014\. [https://www.eff.org/deeplinks/2013/06/why-metadata-matters](https://www.eff.org/deeplinks/2013/06/why-metadata-matters).
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Opsahl, Kurt. "为什么元数据很重要。" 访问日期：2014年9月3日。[https://www.eff.org/deeplinks/2013/06/why-metadata-matters](https://www.eff.org/deeplinks/2013/06/why-metadata-matters)。
- en: riseup.net. "OpenPGP Best Practices." Accessed September 3, 2014\. [https://help.riseup.net/en/security/message-security/openpgp/best-practices](https://help.riseup.net/en/security/message-security/openpgp/best-practices).
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: riseup.net。"OpenPGP最佳实践。" 访问日期：2014年9月3日。[https://help.riseup.net/en/security/message-security/openpgp/best-practices](https://help.riseup.net/en/security/message-security/openpgp/best-practices)。
- en: Shirey, R. "Internet Security Glossary. RFC 4949 (Informational)." Accessed
    September 3, 2014\. [http://www.ietf.org/rfc/rfc4949.txt](http://www.ietf.org/rfc/rfc4949.txt).
    2007.
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shirey, R. "互联网安全词汇表。RFC 4949（信息性）。" 访问日期：2014年9月3日。[http://www.ietf.org/rfc/rfc4949.txt](http://www.ietf.org/rfc/rfc4949.txt)。2007年。
- en: Trusted Computing Group. "TPM 1.2 Specification." Accessed September 3, 2014\.
    [http://www.trustedcomputinggroup.org/resources/tpm_main_specification](http://www.trustedcomputinggroup.org/resources/tpm_main_specification).
    2011.
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Trusted Computing Group. "TPM 1.2规范。" 访问日期：2014年9月3日。[http://www.trustedcomputinggroup.org/resources/tpm_main_specification](http://www.trustedcomputinggroup.org/resources/tpm_main_specification)，2011年。
- en: 'Tygar, J. D. and Alma Whitten. "Why Johnny can''t encrypt: A Usability Evaluation
    of PGP 5.0." *Proceedings of the 8th Conference on USENIX Security Symposium -
    Volume 8, SSYM''99*: 14-14\. USENIX Association Berkeley, CA, USA. 1999\. Also
    available at [http://dl.acm.org/citation.cfm?id=1251421.1251435](http://dl.acm.org/citation.cfm?id=1251421.1251435).'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tygar, J. D. 和 Alma Whitten. "为什么Johnny不能加密：PGP 5.0的可用性评估。" *第8届USENIX安全研讨会会议记录
    - 第8卷，SSYM'99*：14-14。USENIX协会，伯克利，加利福尼亚州，美国，1999年。也可在[http://dl.acm.org/citation.cfm?id=1251421.1251435](http://dl.acm.org/citation.cfm?id=1251421.1251435)获取。
- en: Zimmermann, Philip R. *PGP Source Code and Internals*. MIT Press, Cambridge,
    MA, USA. 1995.
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zimmermann, Philip R. *PGP源代码与内部实现*。麻省理工学院出版社，剑桥，马萨诸塞州，美国，1995年。
- en: Zimmermann, Philip R. *The Official PGP User's Guide*. MIT Press, Cambridge,
    MA, USA. 1995.
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zimmermann, Philip R. *PGP官方用户指南*。麻省理工学院出版社，剑桥，马萨诸塞州，美国，1995年。
- en: Chapter 5
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章
- en: 'Alexander, Chris and Ian Goldberg. "Improved User authentication in Off-the-Record
    Messaging." *Proceedings of the 2007 ACM Workshop on Privacy in Electronic Society,
    WPES ''07*: 41-47, New York, NY, USA. ACM. 2007\. Also available at [http://doi.acm.org/10.1145/1314333.1314340](http://doi.acm.org/10.1145/1314333.1314340).'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alexander, Chris 和 Ian Goldberg. "在Off-the-Record消息中改进用户身份验证。" *2007年ACM电子社会隐私研讨会论文集，WPES
    '07*：41-47，纽约，纽约州，美国。ACM，2007年。也可在[http://doi.acm.org/10.1145/1314333.1314340](http://doi.acm.org/10.1145/1314333.1314340)获取。
- en: 'Borisov, Nikita, Eric Brewer, and Ian Goldberg. "Off-the-Record Communication,
    or, Why not to use PGP." *Proceedings of the 2004 ACM Workshop on Privacy in the
    Electronic Society, WPES ''04*: 77-84, New York, NY, USA. ACM 2004\. Also available
    at [http://doi.acm.org/10.1145/1029179.1029200](http://doi.acm.org/10.1145/1029179.1029200).'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Borisov, Nikita, Eric Brewer 和 Ian Goldberg. "Off-the-Record通信，或者，为什么不使用PGP。"
    *2004年ACM电子社会隐私研讨会论文集，WPES '04*：77-84，纽约，纽约州，美国。ACM，2004年。也可在[http://doi.acm.org/10.1145/1029179.1029200](http://doi.acm.org/10.1145/1029179.1029200)获取。
- en: Cruise, Brit. "Walkthrough of Diffie-Gellman Key Exchange." Accessed September
    3, 2014\. [https://www.khanacademy.org/computing/computer-science/cryptography/modern-crypt/v/diffie-hellman-key-exchange—part-2](https://www.khanacademy.org/computing/computer-science/cryptography/modern-crypt/v/diffie-hellman-key-exchange%E2%80%94part-2).
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cruise, Brit. "Diffie-Gellman密钥交换的操作指南。" 访问日期：2014年9月3日。[https://www.khanacademy.org/computing/computer-science/cryptography/modern-crypt/v/diffie-hellman-key-exchange—part-2](https://www.khanacademy.org/computing/computer-science/cryptography/modern-crypt/v/diffie-hellman-key-exchange%E2%80%94part-2)。
- en: EggHEADS.ORG. "Eggdrop." Accessed September 3, 2014\. [http://www.eggheads.org/](http://www.eggheads.org/).
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EggHEADS.ORG. "Eggdrop." 访问日期：2014年9月3日。[http://www.eggheads.org/](http://www.eggheads.org/)。
- en: EmacsWiki. "ERC Basics." Accessed September 3, 2014\. [http://www.emacswiki.org/emacs/ErcBasics](http://www.emacswiki.org/emacs/ErcBasics).
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EmacsWiki. "ERC基础。" 访问日期：2014年9月3日。[http://www.emacswiki.org/emacs/ErcBasics](http://www.emacswiki.org/emacs/ErcBasics)。
- en: fellowship. "Join FSFE's Community." Accessed September 3, 2014\. [https://fsfe.org/fellowship/index.en.html](https://fsfe.org/fellowship/index.en.html).
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fellowship. "加入FSFE的社区。" 访问日期：2014年9月3日。[https://fsfe.org/fellowship/index.en.html](https://fsfe.org/fellowship/index.en.html)。
- en: Google. "What is Google Talk?." Accessed September 3, 2014\. [https://developers.google.com/talk/](https://developers.google.com/talk/).
    2013.
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google. "什么是Google Talk？" 访问日期：2014年9月3日。[https://developers.google.com/talk/](https://developers.google.com/talk/)，2013年。
- en: Gutmann, Peter. *Everything you Never Wanted to Know about PKI but were Forced
    to Find Out*. Accessed September 3, 2014\. [https://www.cs.auckland.ac.nz/~pgut001/pubs/pkitutorial.pdf](https://www.cs.auckland.ac.nz/~pgut001/pubs/pkitutorial.pdf).
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gutmann, Peter. *你从未想知道的关于PKI的一切，但你被迫了解的*。访问日期：2014年9月3日。[https://www.cs.auckland.ac.nz/~pgut001/pubs/pkitutorial.pdf](https://www.cs.auckland.ac.nz/~pgut001/pubs/pkitutorial.pdf)。
- en: Hill, Benjamin. "Google has Most of my Email Because it Has All of Yours." Accessed
    September 3, 2014\. [http://mako.cc/copyrighteous/google-has-most-of-my-email-because-it-has-all-of-yours](http://mako.cc/copyrighteous/google-has-most-of-my-email-because-it-has-all-of-yours).
    2014.
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hill, Benjamin. "Google拥有我大部分的电子邮件，因为它也拥有你所有的电子邮件。" 访问日期：2014年9月3日。[http://mako.cc/copyrighteous/google-has-most-of-my-email-because-it-has-all-of-yours](http://mako.cc/copyrighteous/google-has-most-of-my-email-because-it-has-all-of-yours)，2014年。
- en: IRC Help. "An IRC Tutorial." Accessed September 3, 2014\. [http://www.irchelp.org/irchelp/irctutorial.html](http://www.irchelp.org/irchelp/irctutorial.html).
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IRC 帮助. "IRC 教程." 访问日期：2014年9月3日 [http://www.irchelp.org/irchelp/irctutorial.html](http://www.irchelp.org/irchelp/irctutorial.html).
- en: irssi. "Irssi IRC Client." Accessed September 3, 2014\. [http://www.irssi.org/](http://www.irssi.org/).
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: irssi. "Irssi IRC 客户端." 访问日期：2014年9月3日 [http://www.irssi.org/](http://www.irssi.org/).
- en: Khan Academy. "XOR Bitwise Operation." Accessed September 3, 2014 [https://www.khanacademy.org/computing/computer-science/cryptography/ciphers/a/xor-bitwise-operation](https://www.khanacademy.org/computing/computer-science/cryptography/ciphers/a/xor-bitwise-operation).
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可汗学院. "XOR 位运算." 访问日期：2014年9月3日 [https://www.khanacademy.org/computing/computer-science/cryptography/ciphers/a/xor-bitwise-operation](https://www.khanacademy.org/computing/computer-science/cryptography/ciphers/a/xor-bitwise-operation).
- en: OAuth. Accessed September 3, 2014\. [http://oauth.net/](http://oauth.net/).
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OAuth. 访问日期：2014年9月3日 [http://oauth.net/](http://oauth.net/).
- en: Rasata, Jeanne. Free Software Foundation. "Associate Member Benefits." Accessed
    September 3, 2014\. [https://www.fsf.org/associate/benefits](https://www.fsf.org/associate/benefits).
    2012.
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rasata, Jeanne. 自由软件基金会. "会员权益." 访问日期：2014年9月3日 [https://www.fsf.org/associate/benefits](https://www.fsf.org/associate/benefits).
    2012年.
- en: ZNC Wiki. "ZNC." Accessed September 3, 2014\. [http://wiki.znc.in/ZNC](http://wiki.znc.in/ZNC).
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ZNC Wiki. "ZNC." 访问日期：2014年9月3日 [http://wiki.znc.in/ZNC](http://wiki.znc.in/ZNC).
