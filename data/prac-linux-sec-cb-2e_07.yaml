- en: Security Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全工具
- en: 'In this chapter, we will discuss the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将讨论以下内容：
- en: Linux sXID
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux sXID
- en: Port Sentry
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Port Sentry
- en: Using Squid Proxy
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Squid Proxy
- en: Open SSL Server
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Open SSL 服务器
- en: Trip Wire
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Trip Wire
- en: Shorewall
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shorewall
- en: OSSEC
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OSSEC
- en: Snort
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snort
- en: Rsync and Grsync—backup tool
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rsync 和 Grsync—备份工具
- en: Linux sXID
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux sXID
- en: In Linux, normally a file has permissions to read, write, and execute. Apart
    from these permissions, it can also have special permissions such as SUID (Set
    owner User ID) and SGID. Due to these permissions, it is possible for a user to
    log in from their account and still run a particular file/program with the permissions
    of the actual file owner (which can be root also). sXid is the tool for monitoring
    SUID/SGID on a regular basis. Using this tool, we can track changes in the SUID/SGID
    of files and folders.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 中，通常一个文件具有读取、写入和执行权限。除了这些权限外，文件还可以具有特殊权限，如 SUID（设置所有者用户 ID）和 SGID。由于这些权限，用户可以从他们的帐户登录，并以实际文件所有者的权限（也可以是
    root）运行某个特定文件/程序。sXid 是定期监控 SUID/SGID 的工具。使用该工具，我们可以跟踪文件和文件夹的 SUID/SGID 变化。
- en: Getting ready
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To use this tool, we need to install the sXid package on our Linux system.
    We can either use the `apt-get` command to install the package, or we can download
    the package and manually configure and install it.To install the sXid package,
    we run the following command:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此工具，我们需要在 Linux 系统上安装 sXid 软件包。我们可以使用 `apt-get` 命令来安装软件包，或者下载软件包并手动配置和安装它。要安装
    sXid 软件包，我们运行以下命令：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/e1969764-cfc4-4196-9d5b-21fbc4e85c7b.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e1969764-cfc4-4196-9d5b-21fbc4e85c7b.png)'
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'To start monitoring the `suid/sgid` of files and folders, we configure the
    tool as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始监控文件和文件夹的 `suid/sgid`，我们将工具配置如下：
- en: 'Once the installation completes, we start editing the `/etc/sxid.conf` file to
    use the tool as we require. Open the file in the editor of your choice:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，我们开始编辑 `/etc/sxid.conf` 文件，以根据需要使用该工具。用您选择的编辑器打开文件：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the configuration file, look for the following line:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在配置文件中，查找以下行：
- en: '![](img/af76b953-182b-4376-99ab-629632580aa5.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/af76b953-182b-4376-99ab-629632580aa5.png)'
- en: Change the value for `EMAIL` to any other email ID, if you wish to have the
    output of changes whenever `sxid` is run sent to your email ID.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望每次运行 `sxid` 时将更改的输出发送到您的电子邮件 ID，请将 `EMAIL` 的值更改为其他电子邮件 ID。
- en: 'Next, look for the line that reads `KEEP_LOGS` and change the value to a numerical
    value of your choice. This number defines how many log files to keep:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，查找包含`KEEP_LOGS`的行，并将其值更改为您选择的数字值。此数字定义了要保留的日志文件数量：
- en: '![](img/a2e6ae13-82da-40ad-b38a-1d0a0a2f89ee.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a2e6ae13-82da-40ad-b38a-1d0a0a2f89ee.png)'
- en: 'If you wish to get the logs even when sXid finds no changes, then change the
    value for `ALWAYS_NOTIFY` to yes:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您希望即使 sXid 未发现任何变化时也能收到日志，请将 `ALWAYS_NOTIFY` 的值更改为 yes：
- en: '![](img/2e7653e9-2a1c-4cb1-98da-8222c23cf123.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e7653e9-2a1c-4cb1-98da-8222c23cf123.png)'
- en: 'We can define a list of directories, separated with spaces, for the `SEARCH `option, for
    sXID to use as a starting point for its search. However, if we wish to exclude
    any directory from the search, we can specify it under the `EXCLUDE `option:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以为 `SEARCH` 选项定义一个以空格分隔的目录列表，作为 sXid 搜索的起始点。然而，如果我们希望排除任何目录，可以在 `EXCLUDE`
    选项下指定该目录：
- en: '![](img/bdbbb258-53ed-40cf-9c05-1ba185e8fae1.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bdbbb258-53ed-40cf-9c05-1ba185e8fae1.png)'
- en: Suppose we have a directory, `/usr/local/share`, to be searched, and the `/usr/local` directory
    has been mentioned in the exclude list; it will still be searched. This becomes
    useful for excluding a main directory, and only specifying one.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个目录 `/usr/local/share` 需要被搜索，而 `/usr/local` 目录已被列入排除列表，但它仍会被搜索。这在排除主目录并只指定一个目录时非常有用。
- en: There are many more options in `/etc/sxid.conf`, which can be configured as
    per our requirements. Once we are done with editing the file, save and close the
    file.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/etc/sxid.conf` 中有更多选项，可以根据我们的需求进行配置。完成编辑后，保存并关闭文件。'
- en: 'Now, if we want to run sxid manually for spot-checking, we use the following
    command:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们希望手动运行 sxid 进行抽查，可以使用以下命令：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](img/ecb966fd-fbcb-43a0-bfb2-981df97b0c63.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ecb966fd-fbcb-43a0-bfb2-981df97b0c63.png)'
- en: Here, the `-c` option helps to define the path of the config file, if it is
    not automatically picked up by the command. The `-k` option runs the tool.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`-c` 选项帮助定义配置文件的路径，如果命令没有自动选择该路径。`-k` 选项用于运行该工具。
- en: How it works...
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We first install the sxid package and then we configure it by editing the `/etc/sxid.conf` file as
    per our requirements. Once the configuration has been done, we run sXid manually
    to perform spot-checking. We can even add an entry in `crontab` to run sXid automatically
    at a defined interval, if we wish to.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先安装 sxid 包，然后根据我们的要求编辑 `/etc/sxid.conf` 文件进行配置。配置完成后，我们手动运行 sXid 进行抽查。我们甚至可以在
    `crontab` 中添加一个条目，以便在定义的间隔时间内自动运行 sXid（如果需要的话）。
- en: Port Sentry
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Port Sentry
- en: As a system administrator, one major concern would be to protect the system
    from network intrusions. This is where PortSentry comes into the picture. It has
    the ability to detect scans on a host system, and react to those scans in a way
    we choose.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 作为系统管理员，一个主要的关注点是保护系统免受网络入侵。这就是 PortSentry 发挥作用的地方。它具有检测主机系统上扫描活动的能力，并根据我们选择的方式对这些扫描作出反应。
- en: Getting ready
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'To demonstrate the implementation and use of PortSentry, we need two systems
    on the same network, which can ping each other. Also, we need the Nmap package
    on one system, which will be used as a client, and on the other system, we will
    install and configure the PortSentry package. To install the `nmap` package, use
    the `apt-get install nmap` command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示 PortSentry 的实现和使用，我们需要两个在同一网络中的系统，且这两个系统可以相互 ping 通。此外，我们还需要在一个系统上安装 Nmap
    包，它将作为客户端，另一个系统上我们将安装并配置 PortSentry 包。要安装 `nmap` 包，可以使用 `apt-get install nmap`
    命令：
- en: '![](img/40ece4d2-39f1-4a42-b113-7f6d779e8fa2.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40ece4d2-39f1-4a42-b113-7f6d779e8fa2.png)'
- en: How to do it...
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'On the first system, we install the PortSentry package, using the following
    command:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一台系统上，我们使用以下命令安装 PortSentry 包：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](img/31d61286-3436-41d0-9181-cafea6ad4e79.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/31d61286-3436-41d0-9181-cafea6ad4e79.png)'
- en: During the installation process, a window will open containing some information
    about PortSentry. Just click `Ok `to continue.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装过程中，会弹出一个包含有关 PortSentry 信息的窗口。只需点击 `Ok` 继续。
- en: 'As soon as the installation completes, PortSentry starts monitoring on TCP
    and UDP ports. We can verify this by checking the `/var/log/syslog` file by using
    the following command:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装完成，PortSentry 就开始监控 TCP 和 UDP 端口。我们可以通过使用以下命令检查 `/var/log/syslog` 文件来验证这一点：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/d4b379fd-46c9-429b-a30c-a2227b4be695.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d4b379fd-46c9-429b-a30c-a2227b4be695.png)'
- en: We can see messages related to `portsentry` in the log.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在日志中看到与 `portsentry` 相关的消息。
- en: 'Now on the second machine, which we are using as a client, run the `nmap` command
    as shown here:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在第二台我们用作客户端的机器上，运行如下所示的 `nmap` 命令：
- en: '![](img/b42e7bbf-9164-4d06-a8ae-65bf56456fe1.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b42e7bbf-9164-4d06-a8ae-65bf56456fe1.png)'
- en: We can also use any other `nmap` command to perform a TCP or UDP scan on the
    first system, which has `portsentry` running. To check Nmap commands, see [Chapter
    1](f7bbe70d-3eb5-4946-b10a-46b36214b311.xhtml), *Linux Security Problem.* In the
    previous result, we can see that nmap is able to scan successfully even when PortSentry
    is running on the first system. We can even try to ping the server system from
    the client to see if it is working after installing Portsentry.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用任何其他 `nmap` 命令对第一个运行 `portsentry` 的系统进行 TCP 或 UDP 扫描。要查看 Nmap 命令，请参见
    [第1章](f7bbe70d-3eb5-4946-b10a-46b36214b311.xhtml)，*Linux 安全问题*。在之前的结果中，我们可以看到，即使在第一个系统上运行
    PortSentry，nmap 也能够成功扫描。我们甚至可以尝试从客户端 ping 服务器系统，看看在安装 PortSentry 后是否仍然有效。
- en: 'Now, let''s configure PortSentry by editing the `/etc/portsentry/portsentry.conf` file on
    the server system. After opening it in the editor of your choice, look for the
    lines shown here and change the value to `1`:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们通过编辑服务器系统上的 `/etc/portsentry/portsentry.conf` 文件来配置 PortSentry。打开文件后，查找显示的行并将值更改为
    `1`：
- en: '![](img/ea0d1ebc-1d88-4b6f-ba9f-c721920ddcf9.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea0d1ebc-1d88-4b6f-ba9f-c721920ddcf9.png)'
- en: 'Scroll down and then find and uncomment this line:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并找到并取消注释此行：
- en: '![](img/e671fb24-32cc-4a46-b6f0-53715d5514a2.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e671fb24-32cc-4a46-b6f0-53715d5514a2.png)'
- en: 'Next, uncomment the following line:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，取消注释以下行：
- en: '![](img/23ce2619-9031-48e5-84f0-ca1337cf0a47.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23ce2619-9031-48e5-84f0-ca1337cf0a47.png)'
- en: Once done, save and close the file.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，保存并关闭文件。
- en: 'Next, edit the `/etc/default/portsentry` file:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，编辑 `/etc/default/portsentry` 文件：
- en: '![](img/c17a2340-2df6-47ff-9bde-d68d54b95535.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c17a2340-2df6-47ff-9bde-d68d54b95535.png)'
- en: In the lines shown here, we need to mention for which protocol Portsentry should
    be working, TCP or ATCP.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里显示的行中，我们需要提到 Portsentry 应该工作在哪个协议上，TCP 还是 ATCP。
- en: 'Now, edit the `/etc/portsentry/portsentry.ignore.static` file and add a line
    at the bottom, as shown here:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，编辑 `/etc/portsentry/portsentry.ignore.static` 文件，并在文件底部添加一行，如下所示：
- en: '![](img/2affcb21-9bbb-448d-989b-17a4b96657c3.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2affcb21-9bbb-448d-989b-17a4b96657c3.png)'
- en: Here, `192.168.1.104` is the IP address of the client machine that we are trying
    to block.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`192.168.1.104` 是我们尝试阻止的客户端机器的 IP 地址。
- en: 'Now, restart the Portsentry service by running this command:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用以下命令重启 Portsentry 服务：
- en: '![](img/b2a2faba-ed05-4de2-b5c6-172e73be3329.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b2a2faba-ed05-4de2-b5c6-172e73be3329.png)'
- en: 'Once the previous steps are complete, we will again try to run `nmap` on the
    client machine and see if it still works properly:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成前面的步骤后，我们将再次尝试在客户端机器上运行 `nmap`，并查看它是否仍然正常工作：
- en: '![](img/a63c4e15-2e95-4680-9d03-b9ff100c767d.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a63c4e15-2e95-4680-9d03-b9ff100c767d.png)'
- en: We can see that nmap is now not able to scan the IP address.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，nmap 现在无法扫描该 IP 地址。
- en: 'If we try to ping the server from the client, even that does not work:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们尝试从客户端 ping 服务器，即使是这个操作也无法成功：
- en: '![](img/31e73368-6515-485a-b2e6-9e0248fc04d7.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/31e73368-6515-485a-b2e6-9e0248fc04d7.png)'
- en: 'If we check the `/etc/hosts.deny` file, we shall see the following line has
    automatically been added:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们检查 `/etc/hosts.deny` 文件，我们会看到以下行已经自动添加：
- en: '![](img/1f6d2cf3-fa4c-4dd4-8b1d-d08243d27721.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f6d2cf3-fa4c-4dd4-8b1d-d08243d27721.png)'
- en: 'Similarly, when we check the `/var/lib/portsentry/portsentry.history` file,
    we get the a result similar to the last line in this screenshot:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，当我们检查 `/var/lib/portsentry/portsentry.history` 文件时，我们会得到类似于此截图最后一行的结果：
- en: '![](img/9c1e42cf-2c1c-4c7c-8112-dec4d3542e9d.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9c1e42cf-2c1c-4c7c-8112-dec4d3542e9d.png)'
- en: How it works...
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: We use two systems. The first system acts as a Portsentry server while the other
    as a client. On the first system, we install the Portsentry package and on the
    second system we install nmap, which will be used to demonstrate the workings
    of Portsentry. Now we perform an Nmap scan from the client machine on the server.
    We can see that it works fine. After this, we configure Portsentry as per our
    requirements by editing various files. Once editing is complete, restart the portsentry
    service and then again try to perform an Nmap scan from the client on the server.
    We see that now the scan does not work properly.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了两台系统。第一台系统充当 Portsentry 服务器，另一台充当客户端。在第一台系统上，我们安装 Portsentry 软件包，在第二台系统上安装
    nmap，用于演示 Portsentry 的工作原理。现在，我们在客户端机器上对服务器执行 Nmap 扫描，看到它正常工作。完成此操作后，我们根据需求编辑各种文件来配置
    Portsentry。编辑完成后，重启 portsentry 服务，然后再次尝试从客户端对服务器执行 Nmap 扫描。我们看到现在扫描无法正常工作。
- en: Using Squid proxy
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Squid 代理
- en: Squid is a web proxy application with a variety of configurations and uses.
    Squid has a large number of access controls and supports different protocols,
    such as HTTP, HTTPS, FTP, and SSL. In this section, we will see how to use Squid
    as an HTTP proxy.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Squid 是一款功能强大的 Web 代理应用，具有多种配置和用途。Squid 拥有大量的访问控制功能，并支持多种协议，如 HTTP、HTTPS、FTP
    和 SSL。在本节中，我们将学习如何使用 Squid 作为 HTTP 代理。
- en: Getting ready
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To install and use Squid on a particular system and network, ensure that the
    system has enough physical memory, because Squid also works as a cache proxy server,
    and thus needs space for maintaining the cache. We are using an Ubuntu system
    for our example and Squid is available in Ubuntu repositories. So, we need to
    ensure that our system is up to date. To do this, we run this command:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要在特定系统和网络上安装和使用 Squid，请确保该系统有足够的物理内存，因为 Squid 也作为缓存代理服务器工作，因此需要空间来维护缓存。我们在本例中使用的是
    Ubuntu 系统，Squid 可以在 Ubuntu 仓库中找到。所以，我们需要确保系统是最新的。为此，我们运行此命令：
- en: '[PRE5]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'And then we run this command:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们运行此命令：
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: How to do it...
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To install and configure Squid on our system, we have to follow these steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要在我们的系统上安装和配置 Squid，我们需要按照以下步骤进行：
- en: 'The first step is to install the Squid package using the following command:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是使用以下命令安装 Squid 软件包：
- en: '![](img/8949a700-2ace-4b66-9c26-6c3a332a9b25.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8949a700-2ace-4b66-9c26-6c3a332a9b25.png)'
- en: 'As soon as Squid is installed, it will start running with a default configuration,
    which is defined to block all the HTTP/HTTPS traffic on the network. To check
    this, we just need to configure the browser on any system on the network to use
    the IP address of the Proxy system, as shown here:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 Squid 安装完成，它将以默认配置启动，默认配置是阻止所有网络上的 HTTP/HTTPS 流量。要检查这一点，我们只需要配置网络中任意系统的浏览器，使用代理系统的
    IP 地址，如下所示：
- en: '![](img/cdf910a6-e11d-4918-bd21-365af0fde6af.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cdf910a6-e11d-4918-bd21-365af0fde6af.png)'
- en: 'Once done, we can now try to access any website and we shall see an error screen,
    as shown in the following screenshot:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，我们可以尝试访问任何网站，并且会看到一个错误页面，如下图所示：
- en: '![](img/763ad532-8981-4468-9aaf-e5ade4633691.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/763ad532-8981-4468-9aaf-e5ade4633691.png)'
- en: 'Now, we shall start configuring our proxy server to get it to work as per our
    requirements. For this, we will edit the `/etc/squid3/squid.conf` file in the
    editor of our choice. Once the file is open in the editor, search for the category
    that reads `TAG: visible_hostname`. Under this category, add a line, `visible_hostname
    ourProxyServer`:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '现在，我们将开始配置我们的代理服务器，以使其按照我们的要求工作。为此，我们将在我们选择的编辑器中编辑`/etc/squid3/squid.conf`文件。一旦在编辑器中打开文件，搜索读取`TAG:
    visible_hostname`的类别。在此类别下，添加一行，`visible_hostname ourProxyServer`：'
- en: '![](img/7fd91c34-78bc-4488-bcc5-21f1591cff33.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7fd91c34-78bc-4488-bcc5-21f1591cff33.png)'
- en: Here, `ourProxyServer` is the name we have given to our Proxy server.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`ourProxyServer`是我们给代理服务器起的名称。
- en: 'Next, search for the category that reads `TAG: cache_mgr` and add a line, `cache_mgr
    email@yourdomainname`. Here, mention the email ID of the administrator who can
    be contacted instead of `email@yourdomainname`:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '接下来，搜索类别为`TAG: cache_mgr`并添加一行，`cache_mgr email@yourdomainname`。在此处，提及可以联系的管理员电子邮件地址，而不是`email@yourdomainname`：'
- en: '![](img/5f6f2e93-4386-497e-b268-c34557217e7f.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5f6f2e93-4386-497e-b268-c34557217e7f.png)'
- en: 'Next, we search for the line that reads as shown in the following screenshot.
    The `http_port` variable defines the port on which Squid would listen. The default
    port is `3128`, but we can change it to any other port that is not being used.
    We can even define more than one port for Squid to listen to, as shown here:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们搜索如下截图所示的行。`http_port`变量定义了Squid监听的端口。默认端口是`3128`，但我们可以将其更改为任何未使用的端口。我们甚至可以定义多个Squid要监听的端口，如下所示：
- en: '![](img/61ae9caf-e434-4af2-8a46-8f24967480cf.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/61ae9caf-e434-4af2-8a46-8f24967480cf.png)'
- en: 'Now, we need to add a rule for allowing traffic on the network computers as
    per our requirements. For this, we will search for the line that reads `acl localnet
    src 10.0.0.8`. Here, we add our rule, `acl localnetwork src 192.168.1.0/24`, as
    shown in the following screenshot:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，根据我们的需求，我们需要添加一条允许网络计算机上流量的规则。为此，我们将搜索读取`acl localnet src 10.0.0.8`的行。在这里，我们添加我们的规则，`acl
    localnetwork src 192.168.1.0/24`，如下面的截图所示：
- en: '![](img/1903c82f-a318-4831-9c76-7c6fd1214851.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1903c82f-a318-4831-9c76-7c6fd1214851.png)'
- en: In the previous rule that we added, `acl `is used to define a new rule and `localnetwork` is
    the name we have given to our rule. `src` defines the source of the traffic that
    will come to the Proxy server. We define the network IP address with the subnet
    in bits as shown here. We can add as many rules as we wish to, according to our
    requirements.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们添加的前面的规则中，`acl`用于定义一个新规则，`localnetwork`是我们给规则起的名称。`src`定义了要发送到代理服务器的流量源。我们按位数定义了网络IP地址与子网，如此处所示。根据我们的需求，我们可以添加任意数量的规则。
- en: 'Next, search for the line that reads `http_access allow localhost` and, below
    this, add the line `http_access allow localnetwork` to start using the rule we
    added in the previous step and allow traffic:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，搜索读取`http_access allow localhost`的行，并在其下方添加`http_access allow localnetwork`的行，以开始使用我们在上一步中添加的规则并允许流量：
- en: '![](img/6bcc9ff1-1782-4c71-bf27-97724c92feb3.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6bcc9ff1-1782-4c71-bf27-97724c92feb3.png)'
- en: 'Once we are done with the previous configuration steps, we restart the Squid
    service using this command:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成前述配置步骤后，我们使用此命令重新启动Squid服务：
- en: '[PRE7]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, our Squid proxy server is running. To check, we can try to access the
    IP address of the Proxy server from the browser of any system on the network:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们的Squid代理服务器正在运行。为了检查，我们可以尝试从网络上任何系统的浏览器访问代理服务器的IP地址：
- en: '![](img/e8e0fca8-51f1-46ad-b3ef-0804848fb68e.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e8e0fca8-51f1-46ad-b3ef-0804848fb68e.png)'
- en: The previous error screen tells us that the Squid proxy is working fine. Now,
    we can try to visit any other website and it should open as per the rule we have
    added in the configuration file of Squid.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的错误屏幕告诉我们Squid代理运行正常。现在，我们可以尝试访问任何其他网站，它应该按照我们在Squid配置文件中添加的规则打开。
- en: How it works...
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理如下...
- en: We start with installing the Squid package. Once the package is installed, we
    edit its configuration file, `/etc/squid3/squid.conf`, and add the hostname, email
    id of the administrator, and port on which Squid should listen. Then, we create
    the rule to allow traffic for all systems on the same network. Once we save all
    the configurations, we restart the Squid service and our proxy server is now working.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从安装Squid包开始。安装完包后，我们编辑其配置文件`/etc/squid3/squid.conf`，并添加主机名、管理员的电子邮件ID以及Squid应该监听的端口。然后，我们创建一条规则，以允许同一网络上所有系统的流量。一旦保存了所有配置，我们重新启动Squid服务，我们的代理服务器就可以工作了。
- en: Open SSL server
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打开SSL服务器
- en: SSL (Secure Sockets Layer) is a protocol used for transmitting sensitive information
    over the internet. This could include information such as account passwords and
    credit card details. SSL is most commonly used in conjunction with web browsing
    over the HTTP protocol. The OpenSSL library provides an implementation of the
    SSL and TLS (Transport Layer Security) protocols.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: SSL（安全套接层）是一种用于在互联网上传输敏感信息的协议。这些信息可能包括账户密码和信用卡详细信息。SSL通常与HTTP协议一起用于网页浏览。OpenSSL库提供了SSL和TLS（传输层安全）协议的实现。
- en: Getting ready
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'To demonstrate the use of OpenSSL, we need two systems. One will be used as
    a server on which we shall install the OpenSSL package, and also Apache. The second
    system will be used as a client. To install Apache, we run the following command:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示OpenSSL的使用，我们需要两台系统。一个将作为服务器，我们将在其上安装OpenSSL软件包以及Apache。第二台系统将作为客户端。要安装Apache，我们运行以下命令：
- en: '![](img/cd804bf7-4edd-4ae3-a6a2-c3f38832a6a8.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd804bf7-4edd-4ae3-a6a2-c3f38832a6a8.png)'
- en: How to do it...
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will now see how to create a self-signed certificate using OpenSSL for Apache.
    This will help encrypt traffic to the server:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将展示如何使用OpenSSL为Apache创建一个自签名证书。这将有助于加密流向服务器的流量：
- en: 'We start with installing the OpenSSL package on the first system using the
    following command:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先在第一个系统上使用以下命令安装OpenSSL软件包：
- en: '![](img/6f757658-ac54-4f17-8907-cf00f96c2a9c.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6f757658-ac54-4f17-8907-cf00f96c2a9c.png)'
- en: 'Once OpenSSL is installed, we need to enable SSL support, which comes as standard
    in the Apache package for Ubuntu. To do this, we run this command:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装了OpenSSL，我们需要启用SSL支持，Ubuntu的Apache包默认已包含此功能。为此，我们运行以下命令：
- en: '![](img/ce439d3f-c7b3-4d3c-84df-1e3a97583259.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ce439d3f-c7b3-4d3c-84df-1e3a97583259.png)'
- en: 'After enabling SSL support, restart Apache using this command:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 启用SSL支持后，使用以下命令重新启动Apache：
- en: '[PRE8]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, create a directory inside Apache''s configuration directory. This is the
    place where we shall keep the certificate files that we will be making in the
    next step:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在Apache的配置目录中创建一个目录。这是我们将在下一步中创建的证书文件存放的位置：
- en: '[PRE9]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, we will create the key and the certificate using the following command:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用以下命令创建密钥和证书：
- en: '![](img/7f00292e-1745-43fb-a752-b3da2342a9cb.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f00292e-1745-43fb-a752-b3da2342a9cb.png)'
- en: In the previous command, `req -x509` specifies that we will be creating a self-signed
    certificate that will adhere to X.509 CSR (Certificate Signing Request) management.
    `-nodes` specifies that the key file will be created without being protected with
    any password. `-days 365` tells us that the certificate being created will be
    valid for one year. `-newkeyrsa:2048` tells us that the private key file and the
    certificate file will both be created at the same time, and the key generated
    will be 2048 bits long. The next parameter, `-keyout`, specifies the name for
    the private key that will be created. And the `-out` parameter mentions the name
    of the certificate file being created.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个命令中，`req -x509`指定我们将创建一个符合X.509证书签名请求（CSR）管理的自签名证书。`-nodes`指定密钥文件将创建时不受密码保护。`-days
    365`告诉我们创建的证书将在一年内有效。`-newkeyrsa:2048`表示密钥文件和证书文件将同时创建，并且生成的密钥将是2048位长。下一个参数`-keyout`指定将创建的私钥的名称。`-out`参数指定创建的证书文件的名称。
- en: When the key and certificate files are being created, you will be asked a few
    questions. Provide the details of your configuration. However, the option that
    reads `Common Name (e.g. server FQDN or YOUR name)` is important and we have to
    provide either the domain name or the server's public IP.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建密钥和证书文件时，系统会问你几个问题。提供你的配置细节。然而，其中一个问题是`Common Name（例如服务器FQDN或您的名字）`，这是非常重要的，我们必须提供域名或服务器的公共IP。
- en: 'Next, we need to edit the `/etc/apache2/sites-available/default` file to configure
    Apache to use the key file and the certificate file created in the previous steps.
    Find and edit the lines shown here. For `ServerName`, we have provided the IP
    address of the Apache server system:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要编辑`/etc/apache2/sites-available/default`文件，配置Apache使用在前一步中创建的密钥文件和证书文件。找到并编辑此处显示的行。对于`ServerName`，我们提供了Apache服务器系统的IP地址：
- en: '![](img/2df135ef-08d3-44cb-8452-4c1139d16fba.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2df135ef-08d3-44cb-8452-4c1139d16fba.png)'
- en: 'In the same file, scroll to the end of the file, and before the `<VirtualHost>`
    block closes, add the lines given here. Mention the key file name and certificate
    file name that were used while creating these files:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在同一个文件中，滚动到文件末尾，在`<VirtualHost>`块关闭之前，添加此处给出的行。指定在创建这些文件时使用的密钥文件名和证书文件名：
- en: '![](img/6c6ff34a-8dd6-4db9-9adc-1134b2c5e68b.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6c6ff34a-8dd6-4db9-9adc-1134b2c5e68b.png)'
- en: 'Now, on the client system, open any browser and visit the Apache server''s
    public IP using the `https:// protocol`, as shown here:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在客户端系统上，打开任何浏览器并使用`https://协议`访问 Apache 服务器的公共 IP，如下所示：
- en: '![](img/af1df6b0-fe0f-4b9a-84ae-8cc2794236f9.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/af1df6b0-fe0f-4b9a-84ae-8cc2794236f9.png)'
- en: The browser will show a warning message regarding the connection not being secure,
    because the certificate is not signed by any trusted authorities.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器将显示关于连接不安全的警告信息，因为证书没有被任何受信任的机构签名。
- en: 'Click on `I Understand the Risks` and then click on the `Add Exception` button to
    add the certificate in the browser:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`我了解风险`，然后点击`添加例外`按钮，将证书添加到浏览器中：
- en: '![](img/2b00b062-5bab-4774-9fd5-29e113630c85.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2b00b062-5bab-4774-9fd5-29e113630c85.png)'
- en: 'The next windows will show some information about the server. To proceed further
    and add the certificate, click on `Confirm Security Exception`:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来的窗口将显示有关服务器的一些信息。要继续并添加证书，请点击`确认安全例外`：
- en: '![](img/b16f9aab-8fb9-498a-8dd7-0440279f396c.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b16f9aab-8fb9-498a-8dd7-0440279f396c.png)'
- en: If you wish to check out more details about the certificate, click on `View` in
    the previous screen and you will get a new window showing the complete details
    of the certificate.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您希望查看证书的更多详细信息，请点击上一屏幕中的`查看`，您将获得一个新窗口，显示证书的完整信息。
- en: 'Once the certificate has been added successfully, web page loading will complete,
    as shown here:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦证书成功添加，网页加载将完成，如下所示：
- en: '![](img/40f8fda4-6fb9-4210-9ecd-c99dcee8e18f.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40f8fda4-6fb9-4210-9ecd-c99dcee8e18f.png)'
- en: How it works...
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We use two systems in this setup. The first is the Apache server on which we
    install the OpenSSL package. The second system works as a client, from which we
    will try to connect to the Apache web server. After installing Apache and the
    OpenSSL package on the first system, we enable SSL support for Apache. Then, we
    create the server key and server certificate file using the OpenSSL tool and a
    few arguments. After this, we edit the `/etc/apache2/sites-available/default` file so
    that Apache can use the key and certificate that we have created. Once done, we
    try to access the Apache web server through the browser on the client machine.
    We see that it asks for the new certificate to be added to the browser and, after
    doing this, we are able to visit the web browser using the HTTPS protocol.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在此设置中使用了两个系统。第一个是安装了 OpenSSL 包的 Apache 服务器。第二个系统作为客户端，我们将尝试从该客户端连接到 Apache
    Web 服务器。在第一个系统上安装 Apache 和 OpenSSL 包后，我们启用 Apache 的 SSL 支持。接着，我们使用 OpenSSL 工具和一些参数创建服务器密钥和服务器证书文件。完成后，我们编辑`/etc/apache2/sites-available/default`文件，以便
    Apache 能够使用我们创建的密钥和证书。完成后，我们尝试通过客户端机器上的浏览器访问 Apache Web 服务器。我们看到它要求将新的证书添加到浏览器中，添加完成后，我们就能够使用
    HTTPS 协议访问网页。
- en: There's more...
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'We have seen how OpenSSL can be used to create self-signed certificates. Apart
    from creating self-signed certificates, there are various other use cases for
    OpenSSL. Here, we will see a few of them:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何使用 OpenSSL 创建自签名证书。除了创建自签名证书之外，OpenSSL 还有其他多种使用场景。在这里，我们将看到其中的一些：
- en: 'If we want to create a new **Certificate Signing Request** (**CSR**) and a
    new private key, we can do so by using the command shown here:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想创建一个新的**证书签名请求**（**CSR**）和一个新的私钥，可以使用如下所示的命令：
- en: '![](img/0a55a3a9-baec-4c76-85fd-531b91f8f89e.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a55a3a9-baec-4c76-85fd-531b91f8f89e.png)'
- en: 'During the process, it will ask for a few details. Enter the details as shown
    here:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此过程中，它会要求提供一些详细信息。请输入此处所示的详细信息：
- en: '![](img/e1b99a72-b2e2-4adc-b3f3-52c01091bef3.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e1b99a72-b2e2-4adc-b3f3-52c01091bef3.png)'
- en: 'We can see the two files created in the present directory:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到当前目录中创建的两个文件：
- en: '![](img/cd22168d-8916-4b7a-9190-b0ffac6960bc.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd22168d-8916-4b7a-9190-b0ffac6960bc.png)'
- en: 'If we want to check the CSR before getting it signed by the CA, we can do so
    as shown here:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想在将证书签名之前检查 CSR，可以按照这里所示进行操作：
- en: '![](img/315a3f9c-0ac3-4218-ae3d-283d7ddb2ac7.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/315a3f9c-0ac3-4218-ae3d-283d7ddb2ac7.png)'
- en: Likewise, there are other commands that can be used with OpenSSL.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，还有其他可以与 OpenSSL 一起使用的命令。
- en: Tripwire
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Tripwire
- en: With the increasing numbers of attacks on servers nowadays, administering the
    server while ensuring security is becoming a complex problem. To be sure that
    every attack has been effectively blocked is difficult to know. Tripwire is a
    host-based Intrusion **Detection System** (**IDS**), which can be used to monitor
    different filesystem data points and then alert us if any file is modified or
    changed.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 随着如今服务器攻击次数的增加，在确保安全的同时管理服务器正变得越来越复杂。要确保每次攻击都已有效阻止是很难知道的。Tripwire 是一个基于主机的入侵**检测系统**（**IDS**），它可以用来监控不同的文件系统数据点，并在文件被修改或更改时提醒我们。
- en: Getting ready
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备中
- en: We only need to install the Tripwire package on our Linux system to configure
    our IDS. In the next section, we will see how to install and configure the tool.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要在 Linux 系统上安装 Tripwire 包来配置我们的 IDS。在接下来的部分中，我们将看到如何安装和配置该工具。
- en: How to do it...
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will discuss how to install and configure Tripwire on our Ubuntu system
    in the following steps:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的步骤中讨论如何在我们的 Ubuntu 系统上安装和配置 Tripwire：
- en: 'The first step will be to install the Tripwire package using `apt-get`, as
    shown here:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是使用`apt-get`安装 Tripwire 包，如下所示：
- en: '![](img/ccdfe7e0-4889-4d15-a2dc-8286296ea12a.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ccdfe7e0-4889-4d15-a2dc-8286296ea12a.png)'
- en: During the installation process, it will show an information window. Click OK
    to continue.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装过程中，会显示一个信息窗口。点击 OK 继续。
- en: 'In the next window, select Internet Site for type of mail configuration and
    click Ok:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个窗口中，选择 Internet Site 作为邮件配置类型，然后点击 Ok：
- en: '![](img/2e4c4a18-9095-4f70-a9b0-7de25f490228.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e4c4a18-9095-4f70-a9b0-7de25f490228.png)'
- en: 'In the next window, it will ask for `system mail name`. Enter the domain name
    of the system on which you are configuring Tripwire:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个窗口中，它将要求输入`system mail name`。请输入您正在配置 Tripwire 的系统的域名：
- en: '![](img/cc555bc2-8664-4f68-9485-540c2918a7a1.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc555bc2-8664-4f68-9485-540c2918a7a1.png)'
- en: Press Ok on the next screen to continue.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕中按 Ok 继续。
- en: Now, we will be asked if we want to create a passphrase for Tripwire. Select
    Yes and continue.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将被问到是否要为 Tripwire 创建一个密码短语。选择 Yes 并继续。
- en: 'Now, we will be asked if we want to rebuild the configuration file. Select
    Yes and continue:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将被问到是否希望重新构建配置文件。选择 Yes 并继续：
- en: '![](img/9eb1b6a5-30ac-43aa-8c8e-427886f7b58a.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9eb1b6a5-30ac-43aa-8c8e-427886f7b58a.png)'
- en: 'Next, select Yes to rebuild the policy file of Tripwire:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择 Yes 以重新构建 Tripwire 的策略文件：
- en: '![](img/316fb681-17cf-4412-9a02-ed287d043bf0.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/316fb681-17cf-4412-9a02-ed287d043bf0.png)'
- en: 'Next, provide the passphrase you wish to configure for Tripwire:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，提供您希望为 Tripwire 配置的密码短语：
- en: '![](img/f5a97217-907f-4445-8c89-891802bede57.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5a97217-907f-4445-8c89-891802bede57.png)'
- en: It will also ask you to re-confirm the passphrase in the next screen.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 它还会要求您在下一屏中重新确认密码短语。
- en: 'Next, provide a passphrase for the local key and also re-confirm it in the
    next screen:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，为本地密钥提供一个密码短语，并在下一屏中重新确认：
- en: '![](img/fae8d505-e8a8-4f14-b754-2ff9fabc7ec5.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fae8d505-e8a8-4f14-b754-2ff9fabc7ec5.png)'
- en: 'The next screen confirms that the installation process has completed successfully.
    Click Ok to complete the installation:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一屏确认安装过程已成功完成。点击 Ok 完成安装：
- en: '![](img/6e5de291-3b5d-43a3-998f-b8d1e7d48412.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6e5de291-3b5d-43a3-998f-b8d1e7d48412.png)'
- en: 'Once the installation has been completed successfully, our next step would
    be to initialize the Tripwire database. To do so, we run the command shown here:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装成功完成，我们的下一步是初始化 Tripwire 数据库。为此，我们运行这里显示的命令：
- en: '![](img/3678c8b5-8bd1-4a58-bcb9-5562214cebc0.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3678c8b5-8bd1-4a58-bcb9-5562214cebc0.png)'
- en: In the output shown here, we can see that an error called `No such file or directory` is
    displayed for many filenames. This happens because Tripwire scans for every file
    mentioned in its configuration file, whether it exists on the system or not.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里显示的输出中，我们可以看到许多文件名显示了一个名为`No such file or directory`的错误。这是因为 Tripwire 会扫描其配置文件中提到的每个文件，无论它是否存在于系统中。
- en: If we wish to remove the error shown previously, we have to edit the `/etc/tripwire/tw.pol` file and
    comment the lines for the file/directory that is not present in our system. We
    can even leave it as it is if we wish to, as it does not hamper Tripwire.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望删除之前显示的错误，我们必须编辑`/etc/tripwire/tw.pol`文件，并注释掉文件/目录中不存在的行。如果我们愿意，也可以保持原样，因为这不会影响
    Tripwire。
- en: In case we get any error related to "Segmentation fault", we may have to edit
    /etc/tripwire/twpol.txt file to disable the devices/files for which the error
    appears, as shown below -
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们遇到与“分段错误”相关的错误，可能需要编辑`/etc/tripwire/twpol.txt`文件，禁用出现该错误的设备/文件，如下所示 -
- en: '![](img/ba1435ce-82be-4045-b3d9-b8216bc60a9e.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ba1435ce-82be-4045-b3d9-b8216bc60a9e.jpg)'
- en: 'We shall now test how Tripwire is working. To do so, we will create a new file
    by running this command:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在来测试Tripwire的工作情况。为此，我们将运行以下命令创建一个新文件：
- en: '[PRE10]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You can choose any name for the file.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为文件选择任何名称。
- en: 'Now, run the Tripwire interactive command to test it''s working. To do so,
    the command is as follows:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行Tripwire的交互命令来测试它的工作情况。为此，命令如下：
- en: '[PRE11]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](img/943a76c0-a64e-4bd9-ac21-29c5b082a1fe.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](img/943a76c0-a64e-4bd9-ac21-29c5b082a1fe.png)'
- en: 'We will get the output shown previously. Tripwire checks all the files/directories
    and if there are any modifications, it will be shown in the result:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到之前显示的输出。Tripwire会检查所有文件/目录，如果有任何修改，它会显示在结果中：
- en: '![](img/1902779c-25bb-45ee-8bb4-2d17d2c0f3e0.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1902779c-25bb-45ee-8bb4-2d17d2c0f3e0.png)'
- en: In our case, it displays the line shown previously, which tells us that a file,
    `tripwire_testing`, has been added in the `/root` directory. If we wish to keep
    the changes shown, just save the resulting file that was automatically opened
    in your editor. While saving the result, you will be prompted for the local passphrase.
    Enter the passphrase that you configured during the installation of Tripwire.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，它显示了之前提到的那一行，告诉我们在`/root`目录下添加了一个名为`tripwire_testing`的文件。如果我们希望保留这些变化，只需保存自动在编辑器中打开的结果文件。在保存时，会提示你输入本地密码短语。请输入在安装Tripwire时配置的密码短语。
- en: 'Finally, we add an entry in `crontab` to run Tripwire automatically to check
    for the changes in the file/directory. Open the `/etc/crontab` file in the editor
    of your choice and add this line:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们在`crontab`中添加一条记录，以便自动运行Tripwire检查文件/目录的变化。使用你喜欢的编辑器打开`/etc/crontab`文件，并添加这一行：
- en: '![](img/1fadbe8c-94d7-4748-b692-430794e5bad2.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1fadbe8c-94d7-4748-b692-430794e5bad2.png)'
- en: Here, `00 6` tells us that Tripwire will check daily at 6 o'clock.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`00 6`表示Tripwire将每天6点进行检查。
- en: How it works...
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We first install the Tripwire package and during the installation, we fill in
    the details as asked. Once the installation completes, we initialize the tripwire
    database. After this, we check whether tripwire is working properly or not. For
    this, we first create a new file at any location, and then we run the tripwire
    interactive command. Once the command completes, we see in the output that it
    shows the new file has been added. This confirms that Tripwire is working perfectly.
    We then edit the Crontab configuration to run Tripwire automatically at a particular
    interval.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先安装Tripwire软件包，并在安装过程中填写要求的详细信息。安装完成后，我们初始化Tripwire数据库。之后，我们检查Tripwire是否正常工作。为此，我们首先在任意位置创建一个新文件，然后运行Tripwire的交互命令。命令执行完成后，我们会看到输出显示新文件已添加。这确认了Tripwire正在完美运行。然后我们编辑Crontab配置，以便在特定时间间隔自动运行Tripwire。
- en: Shorewall
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Shorewall
- en: Want to set up a Linux system as a firewall for a small network? Shorewall helps
    us to configure an enterprise-level firewall via standard Shorewall tools. Shorewall
    is actually built on Iptables, but it makes it easier to configure things.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 想要将Linux系统设置为小型网络的防火墙吗？Shorewall帮助我们通过标准的Shorewall工具配置企业级防火墙。Shorewall实际上是建立在Iptables之上的，但它简化了配置过程。
- en: Getting ready
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: A Linux system with two network cards installed and working is needed for configuring
    Shorewall. One card will be used as an external network interface and the second
    will be used as an internal network interface. In our example, we are using `eth0`
    as external and `eth1` as internal. Configure both cards as per the network configuration.
    Make sure that you are able to ping another system on the local network and also
    something on the external network, the internet. On this system, we will be installing
    the Shorewall package and then configuring it as per our requirements.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 配置Shorewall需要一台安装并正常工作的带有两个网卡的Linux系统。一个网卡将用作外部网络接口，另一个将用作内部网络接口。在我们的示例中，我们使用`eth0`作为外部接口，`eth1`作为内部接口。根据网络配置配置两个网卡。确保能够ping通本地网络中的另一台系统，并且能够连接到外部网络，即互联网。在这台系统上，我们将安装Shorewall软件包，并根据我们的需求进行配置。
- en: How to do it...
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We begin with installing Shorewall on our system using the `apt-get` command:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们从使用`apt-get`命令在系统上安装Shorewall开始：
- en: '![](img/5395b3fc-45a0-4c50-b2ef-49f9227cb132.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: 我们添加了一条规则：如果数据包从`net`发送到`fw`，并且使用`tcp`协议且端口号为`80`，则`accept`该数据包。
- en: 'Once the installation is complete, try to start Shorewall. You will get an
    error message as shown here:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，尝试启动Shorewall。你会看到如下错误信息：
- en: '![](img/a3f65b1f-39c5-405e-a704-371e9ec9fa21.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a3f65b1f-39c5-405e-a704-371e9ec9fa21.png)'
- en: This means we need to first configure Shorewall before it can start running.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/5395b3fc-45a0-4c50-b2ef-49f9227cb132.png)'
- en: 'To configure Shorewall, edit the `/etc/default/shorewall` file in the editor
    of your choice. Look for the line that reads `startup=0` and change its value
    to `1`:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要配置Shorewall，编辑`/etc/default/shorewall`文件，并选择你喜欢的编辑器。寻找包含`startup=0`的行，将其值改为`1`：
- en: '![](img/d11844d9-044e-4d80-9694-19be5b39389f.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d11844d9-044e-4d80-9694-19be5b39389f.png)'
- en: 'Next, edit the `/etc/shorewall/shorewall.conf` file and find the line that
    reads `IP_FORWARDING`. Verify that its value is set to `On`:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，编辑`/etc/shorewall/shorewall.conf`文件，并找到包含`IP_FORWARDING`的行。验证其值是否设置为`On`：
- en: '![](img/4c889d15-97e9-40b4-bd0c-5307d991bd30.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4c889d15-97e9-40b4-bd0c-5307d991bd30.png)'
- en: The configuration files of Shorewall are located in the `/etc/shorewall` directory.
    The minimum files that are essential for it to work are interfaces, policy, rules,
    and zones. If any of these files are not found in the `/etc/shorewall` directory
    after its installation, we can find the same files in the `/usr/share/doc/shorewall/default-config/` directory.
    Copy the required files from this location to the `/etc/shorewall` directory.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Shorewall的配置文件位于`/etc/shorewall`目录中。要使其工作，必需的最小文件是interfaces、policy、rules和zones。如果在安装后`/etc/shorewall`目录中找不到这些文件，可以在`/usr/share/doc/shorewall/default-config/`目录中找到相同的文件。将所需的文件从该位置复制到`/etc/shorewall`目录。
- en: 'Now, edit the `/etc/shorewall/interfaces` file and add the lines shown in the
    following screenshot:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，编辑`/etc/shorewall/interfaces`文件，并添加以下截图所示的行：
- en: '![](img/d6f9d931-b50b-42e3-b182-5fe4d999129f.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d6f9d931-b50b-42e3-b182-5fe4d999129f.png)'
- en: We are referring to `eth0` as `net` in our configuration and `eth1` as `local`.
    You can choose any other name, as long as it is alphanumeric and `5` characters
    or less.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在配置中将`eth0`称为`net`，将`eth1`称为`local`。你可以选择其他任何名称，只要它是字母数字组合且不超过`5`个字符。
- en: 'Next, edit the `/etc/shorewall/zones` file. Zone is mainly used to set whether
    to use `ipv4` or `ipv6`:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，编辑`/etc/shorewall/zones`文件。Zone主要用于设置是否使用`ipv4`或`ipv6`：
- en: '![](img/bcf0a55f-7b45-4f20-a0ce-46e6136f502b.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bcf0a55f-7b45-4f20-a0ce-46e6136f502b.png)'
- en: In the previous configuration, `fw` refers to `me` or the shorewall firewall
    itself. The next two lines define `ipv4` for both the network interfaces.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的配置中，`fw`指的是`me`或Shorewall防火墙本身。接下来的两行定义了两个网络接口的`ipv4`。
- en: 'Now, edit the `/etc/shorewall/policy` policy file. This file is mainly used
    to set the overall policy of who is allowed to go where. Each line in this file
    is processed from top to bottom and each is read in the following format: if a
    packet is sent from the ____ to the __, then ______ it:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，编辑`/etc/shorewall/policy`策略文件。此文件主要用于设置整体策略，规定谁可以去哪里。该文件中的每一行都从上到下处理，并按照以下格式读取：如果数据包从____发送到__，则______它：
- en: '![](img/92628c47-c372-4647-b459-ba8ca2a1466f.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](img/92628c47-c372-4647-b459-ba8ca2a1466f.png)'
- en: 'In our example, if we read the first policy, it will be read as follows: if
    a packet is sent from the local to the net, then accept it. You can add as many
    policies as you want in the same way, and the Shorewall firewall will work accordingly.'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，如果我们读取第一条策略，它的含义是：如果数据包从本地发送到网络，则接受该数据包。你可以按照相同的方式添加任意数量的策略，Shorewall防火墙会相应地工作。
- en: 'Finally, we edit the `/etc/shorewall/rules` file. This file is used to create
    exceptions to the policy. It is mainly used if you wish to allow people from the
    external network into the internal network. A sample rules files is shown here:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们编辑`/etc/shorewall/rules`文件。此文件用于创建政策的例外。它主要用于允许外部网络的人进入内部网络。以下是一个示例规则文件：
- en: '![](img/a4fd086a-c6ed-4dde-b3be-56e1fcac9b45.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a4fd086a-c6ed-4dde-b3be-56e1fcac9b45.png)'
- en: 'We have added a rule that says: `accept` a packet if it is sent from the `net`
    to the `fw` using the protocol of `tcp` on port number `80`.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们需要首先配置Shorewall，才能让其开始运行。
- en: 'Once we are done with configuring the previous files as per our requirements,
    we can test the settings by running this command:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们根据需求完成了配置前述文件，就可以通过运行此命令来测试设置：
- en: '[PRE12]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In the output shown, scroll to the bottom, and if it says `Shorewall configuration
    verified`, it means the settings have been done properly and now shorewall can
    be used as a firewall:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在显示的输出中，滚动到底部，如果看到`Shorewall configuration verified`，则表示设置已正确完成，现在shorewall可以作为防火墙使用：
- en: '![](img/e9628bf5-0dbf-400a-adb2-e90edaba435e.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e9628bf5-0dbf-400a-adb2-e90edaba435e.png)'
- en: 'Now, restart the `shorewall` service to apply the settings:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，重启`shorewall`服务以应用设置：
- en: '[PRE13]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: How it works...
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'We begin with installing shorewall on the system, which has two network interface
    cards. Once the installation is done, we edit the `/etc/default/shorewall` file
    and also the `/etc/shorewall/shorewall.conf` file. Then, we edit or create these
    files in the `/etc/shorewall` location: interfaces, policy, rules, and zones.
    And, we add the lines in each file as per the requirements given. Once the editing
    is done, we check that everything is fine and then we start the `shorewall` service
    to start our firewall.'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从在系统上安装shorewall开始，该系统有两个网络接口卡。安装完成后，我们编辑`/etc/default/shorewall`文件以及`/etc/shorewall/shorewall.conf`文件。然后，我们编辑或创建以下文件：interfaces、policy、rules和zones，并根据给定的要求在每个文件中添加相应的行。编辑完成后，我们检查一切是否正常，然后启动`shorewall`服务以启动防火墙。
- en: OSSEC
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OSSEC
- en: As a system administrator, we may want to keep track of authorized and unauthorized
    activity on your server. OSSEC may be the solution for this. It's an open source
    host-based intrusion detection system, which can be used for tracking server activity.
    When properly configured, OSSEC can perform log analysis, integrity checking,
    rootkit detection, time-based alerting, and many other things.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 作为系统管理员，我们可能希望跟踪服务器上的授权和未授权活动。OSSEC可能是解决方案。它是一个开源的基于主机的入侵检测系统，可用于跟踪服务器活动。当正确配置时，OSSEC可以执行日志分析、完整性检查、rootkit检测、基于时间的警报等多种功能。
- en: Getting ready
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'To install and configure OSSEC, we will use an Ubuntu server. Additional packages
    such as gcc, libc, Apache, and PHP may be needed for compiling and running OSSEC.
    Also, if we want real-time alerting to work, a separate package would be needed
    for this. To install all the essential packages, run the command shown here:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安装和配置OSSEC，我们将使用Ubuntu服务器。可能需要额外的包，如gcc、libc、Apache和PHP，用于编译和运行OSSEC。此外，如果我们希望实时警报功能正常工作，还需要一个单独的包。要安装所有必需的包，请运行此处显示的命令：
- en: '![](img/fe91c673-3f00-4ab2-a8ff-27ed4224ddfb.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fe91c673-3f00-4ab2-a8ff-27ed4224ddfb.png)'
- en: How to do it...
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In this section, we will learn how OSSEC can be installed and configured to
    monitor a local Ubuntu server. We will also test OSSEC against any file modifications:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何安装和配置OSSEC以监控本地Ubuntu服务器。我们还将测试OSSEC以检测任何文件修改：
- en: 'Our first step will be to download the latest version of OSSEC from its GitHub
    repository using the following command:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的第一步是使用以下命令从其GitHub仓库下载最新版本的OSSEC：
- en: '![](img/f8157bf9-d15d-4a3c-b34d-3ea0b328b5d6.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f8157bf9-d15d-4a3c-b34d-3ea0b328b5d6.png)'
- en: 'Depending on where the download has been saved after completion, extract the
    downloaded file with the following command:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据下载文件保存的位置，使用以下命令解压下载的文件：
- en: '![](img/2c73cdb9-ae4a-4578-a5e9-47dda2db335d.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2c73cdb9-ae4a-4578-a5e9-47dda2db335d.png)'
- en: 'Move inside the extracted directory and list its contents. We will see an install.sh
    script, which will be used to install OSSEC:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入解压后的目录并列出其内容。我们将看到一个install.sh脚本，将用于安装OSSEC：
- en: '![](img/717b361a-c0ac-4d76-bae2-3a556b9b785b.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/717b361a-c0ac-4d76-bae2-3a556b9b785b.png)'
- en: 'Run install.sh as shown here to install OSSEC:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下所示运行install.sh来安装OSSEC：
- en: '![](img/78b70848-419d-4210-909c-28e41c471ecb.png)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![](img/78b70848-419d-4210-909c-28e41c471ecb.png)'
- en: When prompted, we will select our language. So, if our language is English,
    then we will type `en` and press *Enter*.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 当提示时，我们将选择我们的语言。所以，如果我们的语言是英语，那么我们将输入`en`并按*Enter*键。
- en: 'Once we press *Enter*, the following output will be seen:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们按下*Enter*，将会看到以下输出：
- en: '![](img/e8837813-e6da-4c5d-b9a3-bcae440e222d.png)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e8837813-e6da-4c5d-b9a3-bcae440e222d.png)'
- en: 'Press *Enter* again to continue. In the next screen, it will ask you to choose
    the kind of installation we want. Type `local` to monitor the server on which
    OSSEC is being installed, and then press *Enter*:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次按*Enter*键继续。在下一屏幕上，它会让你选择想要的安装类型。输入`local`来监控正在安装OSSEC的服务器，然后按*Enter*键：
- en: '![](img/205e71ff-c5bb-4d19-8312-1b9d95984598.png)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![](img/205e71ff-c5bb-4d19-8312-1b9d95984598.png)'
- en: 'Next, we will choose the install location for OSSEC. The default install location
    is `/var/ossec`. Press Enter to continue:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将选择 OSSEC 的安装位置。默认安装位置是 `/var/ossec`。按 Enter 键继续：
- en: '![](img/b5640e9f-91ec-4199-9c01-f69467e10d06.png)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b5640e9f-91ec-4199-9c01-f69467e10d06.png)'
- en: 'We can configure OSSEC to get email notifications to our local email address.
    Type `y` and press Enter to do this:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以配置 OSSEC，以便将电子邮件通知发送到本地邮箱地址。键入 `y` 并按 Enter 键进行此操作：
- en: '![](img/d501403c-f4ce-4ceb-a78c-62439372e343.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d501403c-f4ce-4ceb-a78c-62439372e343.png)'
- en: 'In the next step, we will be asked if we want to run the integrity check daemon
    and rootkit detection engine. Enter `Y` for both and press *Enter* to continue:'
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一步中，我们将被询问是否要运行完整性检查守护进程和 rootkit 检测引擎。对于两者都输入 `Y` 并按 *Enter* 键继续：
- en: '![](img/aadffc18-4dfe-494d-9243-132acef2e235.png)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aadffc18-4dfe-494d-9243-132acef2e235.png)'
- en: 'Next, we will enable active response:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将启用主动响应：
- en: '![](img/d69baec1-dfde-4e8e-8f47-b94c56b789b9.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d69baec1-dfde-4e8e-8f47-b94c56b789b9.png)'
- en: 'Proceed further to enable the firewall-drop response:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 继续进行以启用防火墙丢弃响应：
- en: '![](img/44bba6c0-a756-44b5-90c3-ec51a3785393.png)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![](img/44bba6c0-a756-44b5-90c3-ec51a3785393.png)'
- en: 'We can add IPs to the white list, if we want. Otherwise, type `n` and press
    *Enter* to continue:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，我们可以将 IP 添加到白名单中。否则，键入 `n` 并按 *Enter* 键继续：
- en: '![](img/731933b9-edba-4dd0-8b0d-4d9dee8e8f26.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/731933b9-edba-4dd0-8b0d-4d9dee8e8f26.png)'
- en: Next, press *Enter* to enable remote Syslog.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，按 *Enter* 键启用远程 Syslog。
- en: 'Once all the configuration is done, press *Enter* to start installation. Once
    the installation starts, the output shown here will appear:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦所有配置完成，按 *Enter* 键开始安装。安装开始后，将显示如下输出：
- en: '![](img/1545caf2-9d5f-483d-bf4e-bdd010d83934.png)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1545caf2-9d5f-483d-bf4e-bdd010d83934.png)'
- en: 'When the installation is complete, the following output will be seen:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，将看到以下输出：
- en: '![](img/fab2d89f-e599-40d3-aec7-84ba6876a7c1.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fab2d89f-e599-40d3-aec7-84ba6876a7c1.png)'
- en: 'After completing the installation, we can check the status of OSSEC with the
    following command:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，我们可以通过以下命令检查 OSSEC 的状态：
- en: '![](img/e48c870d-aba7-48b8-8405-6f3e8578f550.png)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e48c870d-aba7-48b8-8405-6f3e8578f550.png)'
- en: 'To start OSSEC, run the following command:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启动 OSSEC，请运行以下命令：
- en: '![](img/e3e8d3ed-ba3a-4799-b2bb-14e3e81325a8.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e3e8d3ed-ba3a-4799-b2bb-14e3e81325a8.png)'
- en: 'As soon as OSSEC starts, we will get an email alert. Type `mail` to check the
    mail, which will look like the following:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 OSSEC 启动，我们将收到邮件警报。键入 `mail` 来查看邮件，邮件内容将类似于以下内容：
- en: '![](img/4b203e4b-da74-46f6-a6a5-2c560042d705.png)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4b203e4b-da74-46f6-a6a5-2c560042d705.png)'
- en: Our next step is to edit the main configuration file of OSSEC, which is the
    `/var/ossec/etc/ossec.conf` file. Open the `ossec.conf` configuration file using
    an editor like nano.
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的下一步是编辑 OSSEC 的主配置文件，即 `/var/ossec/etc/ossec.conf` 文件。使用像 nano 这样的编辑器打开 `ossec.conf`
    配置文件。
- en: 'When we open the file, it will show us the email configurations we specified
    during installation. We can change this setting at any time:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们打开文件时，它将显示我们在安装过程中指定的电子邮件配置。我们可以随时更改此设置：
- en: '![](img/74a321a9-a3f6-4b10-b2a6-c9d1d27164df.png)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![](img/74a321a9-a3f6-4b10-b2a6-c9d1d27164df.png)'
- en: 'According to the default configuration, OSSEC does not alert us when a new
    file is added to the server. We can change this setting by adding a new line just
    under the section, as shown here:'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据默认配置，OSSEC 在服务器上添加新文件时不会提醒我们。我们可以通过在该部分下方添加一行来更改此设置，如下所示：
- en: '![](img/9846d0f7-045b-40bd-b054-0071373ba150.png)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9846d0f7-045b-40bd-b054-0071373ba150.png)'
- en: 'If we want OSSEC to send real-time alerts, we will have to make changes in
    the list of directories that OSSEC should check. To do this, we need to modify
    the following two lines to make OSSEC report changes in real time. Make the changes
    as shown here:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望 OSSEC 发送实时警报，则需要更改 OSSEC 应检查的目录列表。为此，我们需要修改以下两行，以使 OSSEC 实时报告变更。按如下所示进行更改：
- en: '![](img/b0feaf19-eb7c-4220-9cca-3bec0f195ae1.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0feaf19-eb7c-4220-9cca-3bec0f195ae1.png)'
- en: 'Next, modify the `local_rules.xml` rules file, which is located inside the `/var/ossec/rul``es`
    directory, to include the rules for new files added to the system:'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，修改 `local_rules.xml` 规则文件，该文件位于 `/var/ossec/rules` 目录中，以包括新添加到系统的文件规则：
- en: '![](img/5ca07289-2832-459b-85a4-5cbe8fb098ce.png)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ca07289-2832-459b-85a4-5cbe8fb098ce.png)'
- en: 'When the previously mentioned changes are done, save and close the file. Then,
    restart OSSEC:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在完成前述更改后，保存并关闭文件。然后，重启 OSSEC：
- en: '![](img/1df94d18-fe6a-4100-8d32-36cd595ea86b.png)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1df94d18-fe6a-4100-8d32-36cd595ea86b.png)'
- en: 'Now, we will check whether OSSEC is working or not. Let''s try to make few
    changes in `/etc/network/interfaces`. If OSSEC is working fine, we should receive
    an email alert mentioning that something has changed in the system. An alert such
    as the following will be seen:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将检查 OSSEC 是否正常工作。让我们尝试在`/etc/network/interfaces`中做一些更改。如果 OSSEC 工作正常，我们应该会收到一封电子邮件警告，提到系统发生了变化。我们会看到类似以下的警告：
- en: '![](img/918c655c-f547-4168-b9bf-652fc5e1713d.png)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![](img/918c655c-f547-4168-b9bf-652fc5e1713d.png)'
- en: How it works...
  id: totrans-298
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We first install OSSEC on our Ubuntu server and during the installation, we
    provide the details of where we would like to receive the alerts being generated
    by OSSEC. We also enable the daemons that we want to use for monitoring also during
    the installation process. After the installation completes, we make changes in
    the configuration file to receive an alert every time a new file is added to the
    server. Other necessary changes are also done in the respective configuration
    files to get alerts from OSSEC.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先在我们的 Ubuntu 服务器上安装 OSSEC，并在安装过程中提供我们希望接收 OSSEC 生成的警报的详细信息。我们还在安装过程中启用希望用于监控的守护进程。安装完成后，我们在配置文件中进行更改，以便每次向服务器添加新文件时收到警报。还在相关配置文件中做了其他必要的更改，以便从
    OSSEC 获取警报。
- en: Snort
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Snort
- en: 'In today''s enterprise environments, where security is a major issue, there
    are lots of tools available for securing network infrastructure and communication
    over the internet. Snort is one of those tools, available for free as it is open
    source. It is a lightweight network intrusion detection and prevention system.
    Snort works in three different modes: sniffer mode, packet logging mode, and network
    intrusion detection system mode.'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 在今天的企业环境中，安全性是一个主要问题，有许多工具可以用来保护网络基础设施和互联网通信。Snort 就是其中之一，作为开源工具，它是免费的。它是一个轻量级的网络入侵检测和防御系统。Snort
    有三种不同的工作模式：嗅探模式、数据包日志记录模式和网络入侵检测系统模式。
- en: Getting ready
  id: totrans-302
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Before getting started with the installation of Snort, ensure that our system
    is up to date and install the required dependencies on it. To install the required
    dependencies, we run the following command:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始安装 Snort 之前，确保我们的系统是最新的，并且安装所需的依赖项。要安装所需的依赖项，我们运行以下命令：
- en: '![](img/ac079b4d-6734-437c-8797-1e1076eb638e.png)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac079b4d-6734-437c-8797-1e1076eb638e.png)'
- en: How to do it...
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Snort can be installed on Ubuntu, either from its source code or through the
    deb package. In this section, we will install Snort using the deb package:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: Snort 可以在 Ubuntu 上安装，无论是从源代码安装，还是通过 deb 包安装。在本节中，我们将通过 deb 包安装 Snort：
- en: 'To get started, we install on our Ubuntu system, using the `apt-get` command,
    as shown here:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始，我们在我们的 Ubuntu 系统上使用`apt-get`命令进行安装，如下所示：
- en: '![](img/8c2bec16-47c3-466f-a88a-fed29b775f5b.png)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8c2bec16-47c3-466f-a88a-fed29b775f5b.png)'
- en: 'During the installation, we will be asked to select the interface on which
    Snort should listen for packets. The default interface selected is `eth0`, as
    shown here:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装过程中，我们将被要求选择 Snort 监听数据包的接口。默认选择的接口是`eth0`，如下所示：
- en: '![](img/d290f619-a6a7-42d9-9aa0-c5ccce7dfdbf.png)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d290f619-a6a7-42d9-9aa0-c5ccce7dfdbf.png)'
- en: 'Select the interface according to our system configuration:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据我们的系统配置选择接口：
- en: '![](img/e1e7e21e-473a-4bcf-9ccc-4fe1be246737.png)'
  id: totrans-312
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e1e7e21e-473a-4bcf-9ccc-4fe1be246737.png)'
- en: 'Now, let''s get started with the sniffer mode of Snort. In sniffer mode, Snort
    reads the network''s traffic and displays the human-readable translation. To test
    Snort in Sniffer mode, type the following command:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们开始使用 Snort 的嗅探模式。在嗅探模式下，Snort 读取网络流量并显示人类可读的翻译。要在嗅探模式下测试 Snort，请输入以下命令：
- en: '![](img/64f8a927-1f02-4c3a-863b-ab3a6236a4c3.png)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![](img/64f8a927-1f02-4c3a-863b-ab3a6236a4c3.png)'
- en: 'In the output shown here, we can see the headers of traffic detected by Snort
    between the system, the router, and the internet:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里显示的输出中，我们可以看到 Snort 检测到的系统、路由器和互联网之间的流量头信息：
- en: '![](img/3670fbe1-1219-4602-b7d2-c8b78aaf2250.png)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3670fbe1-1219-4602-b7d2-c8b78aaf2250.png)'
- en: 'The following output displays a summary of the traffic analyzed by Snort:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下输出显示了 Snort 分析的流量摘要：
- en: '![](img/3a0e48f0-d1f2-4bff-a11f-501c89b1b713.png)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a0e48f0-d1f2-4bff-a11f-501c89b1b713.png)'
- en: 'If we want Snort to show the data too, we can run the following command:'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望 Snort 也显示数据，可以运行以下命令：
- en: '[PRE14]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](img/0ccf8ad6-3f30-4648-8dee-6b47b50166c2.png)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0ccf8ad6-3f30-4648-8dee-6b47b50166c2.png)'
- en: This will give the output shown previously.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 这将给出之前显示的输出。
- en: 'Now, let''s get started with using the packet logger mode of Snort. If we want
    Snort to show just the traffic headers and log the complete traffic details on
    disk, we need to first specify a directory where Snort can save its reports. For
    this, we move inside `/var/log/snort` and create a directory with any name, as
    shown here:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们开始使用 Snort 的数据包记录器模式。如果我们希望 Snort 仅显示流量标头并将完整的流量详细信息记录在磁盘上，我们需要首先指定一个目录，Snort
    可以在其中保存其报告。为此，我们进入 `/var/log/snort` 并创建一个任意名称的目录，如下所示：
- en: '![](img/0b18e411-c318-408f-b2b5-b16883573d9f.png)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b18e411-c318-408f-b2b5-b16883573d9f.png)'
- en: 'Now, run the command shown here and Snort''s log will be saved inside the `logs_snort`
    directory:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行这里显示的命令，Snort 的日志将保存在 `logs_snort` 目录内：
- en: '![](img/7468f218-cec1-4876-8608-a629a0834a66.png)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7468f218-cec1-4876-8608-a629a0834a66.png)'
- en: 'Once we have logged enough packets, we stop the command. Now, we can check
    inside our `logs_snort` directory and see that a file has been created:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们捕获了足够的数据包，我们停止命令。现在，我们可以检查 `logs_snort` 目录内部，看到已创建了一个文件：
- en: '![](img/371cef63-1a5e-4b28-957a-f0a6622afef9.png)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
  zh: '![](img/371cef63-1a5e-4b28-957a-f0a6622afef9.png)'
- en: 'If we want to read the content of this log file, which was created in the previous
    step, we run this command:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要读取前一步骤中创建的日志文件的内容，我们可以运行以下命令：
- en: '![](img/25d7d717-2127-4da9-bb92-86cfe2c3fadd.png)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25d7d717-2127-4da9-bb92-86cfe2c3fadd.png)'
- en: We can see the complete output, as shown previously.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到完整的输出，如前所示。
- en: How it works...
  id: totrans-332
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Snort works in three different modes: sniffer mode, packet logging mode, and
    network intrusion detection system mode. Based on the arguments used when running
    Snort, the respective mode gets initiated and we can capture and monitor logs
    accordingly.'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: Snort 可以在三种不同的模式下工作：sniffer 模式、数据包日志模式和网络入侵检测系统模式。根据运行 Snort 时使用的参数，相应的模式会被启动，我们可以相应地捕获和监视日志。
- en: Rsync and Grsync – backup tool
  id: totrans-334
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rsync 和 Grsync – 备份工具
- en: '**Remote sync** (**Rsync**) is a local and remote file synchronization tool.
    Using its algorithm, it can efficiently copy and sync files, which allows us to
    transfer only the differences between two sets of files. Grsync is a GUI frontend
    for the Rsync tool. Being cross-platform, it works on Linux, Windows, and macOS.'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '**远程同步** (**Rsync**) 是一种本地和远程文件同步工具。使用其算法，它可以高效地复制和同步文件，允许我们仅传输两组文件之间的差异。Grsync
    是 Rsync 工具的 GUI 前端。作为跨平台工具，它可以在 Linux、Windows 和 macOS 上运行。'
- en: Getting ready
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Due to its popularity on Linux and Unix-like systems, Rsync comes pre-installed
    in most Linux distributions by default. However, if it is not installed, we can
    install it by running the following command:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在 Linux 和类 Unix 系统上的流行，Rsync 大多数 Linux 发行版默认安装了。然而，如果没有安装，我们可以通过运行以下命令来安装它：
- en: '![](img/ec231faa-5f7b-4816-be69-b027dfaa048e.png)'
  id: totrans-338
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ec231faa-5f7b-4816-be69-b027dfaa048e.png)'
- en: 'Unlike Rsync, Grsync does not come pre-installed in Linux distributions. To
    install Grsync on Ubuntu, run the following command:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Rsync 不同，Grsync 在 Linux 发行版中并不预装。要在 Ubuntu 上安装 Grsync，请运行以下命令：
- en: '![](img/713973d3-7e55-4864-bb56-98269fc3e62f.png)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![](img/713973d3-7e55-4864-bb56-98269fc3e62f.png)'
- en: To use Rsync and Grsync for remote file syncing, it's essential to have SSH
    access enabled on both the systems, and rsync and grsync should be installed on
    both systems.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Rsync 和 Grsync 进行远程文件同步，需要确保两个系统都启用了 SSH 访问，并且在两个系统上都安装了 rsync 和 grsync。
- en: How to do it...
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: In this section, we will see how to use rsync and grsync to synchronize files/directories
    locally, as well as remotely from one system to another.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到如何使用 rsync 和 grsync 将文件/目录在本地同步，以及从一个系统远程同步到另一个系统。
- en: 'Let''s start by creating two test directories on one system and also create
    some test files inside one of the directories. To do this, we run the following
    commands:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从一个系统开始创建两个测试目录，并在其中一个目录内创建一些测试文件。为此，我们运行以下命令：
- en: '![](img/0f87db92-a2f7-49d4-90f1-1e4514483423.png)'
  id: totrans-345
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0f87db92-a2f7-49d4-90f1-1e4514483423.png)'
- en: Here, we have created two directories, `dir1` and `dir2`, and `dir1` has five
    empty files created inside it.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们创建了两个目录，`dir1` 和 `dir2`，并且在 `dir1` 中创建了五个空文件。
- en: 'If we want to sync the contents of `dir1` to `dir2` locally, we can do so by
    using the following command:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要在本地将 `dir1` 的内容同步到 `dir2`，可以使用以下命令：
- en: '![](img/27d498d1-92d6-43cd-8b3d-c89b3b3db82e.png)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![](img/27d498d1-92d6-43cd-8b3d-c89b3b3db82e.png)'
- en: The `-r` option refers to a recursive method, and the trailing slash (`/`) at
    the end of `dir1` refers to the contents of `dir1`.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '`-r` 选项表示递归方法，`dir1` 后面的斜杠 (`/`) 指的是 `dir1` 的内容。'
- en: 'If we want to sync the `dir1` directory to another system remotely, we can
    do so by using the following command:'
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想将`dir1`目录同步到另一个远程系统，可以使用以下命令：
- en: '![](img/9428ce22-a665-43ba-acb2-0ced91114b13.png)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9428ce22-a665-43ba-acb2-0ced91114b13.png)'
- en: Here, we mention the destination address preceded by the username of the destination
    system. When we run the command, it will ask for the password of the remote user.
    Once the password is entered, the syncing will be done.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们提到目标系统的用户名前缀后的目标地址。当我们运行命令时，它会要求输入远程用户的密码。一旦输入密码，同步就会完成。
- en: 'Once the previous command completes its working, we can check on the remote
    system and see that the `dir1` directory has been synced on the remote system,
    as seen here:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦之前的命令完成工作，我们可以检查远程系统，看到`dir1`目录已同步到远程系统，如下所示：
- en: '![](img/cc68de14-d8c8-470c-9d9f-cc08a35826b7.png)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc68de14-d8c8-470c-9d9f-cc08a35826b7.png)'
- en: 'Now, let''s see how to use Grsync for syncing files using a GUI. We can launch
    Grsync either through the Application Menu or through the command line, using
    the `grsync` command. The default interface of Grsync looks like this:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用 Grsync 通过图形界面同步文件。我们可以通过应用菜单或使用`grsync`命令在命令行中启动 Grsync。Grsync
    的默认界面如下所示：
- en: '![](img/648c2edd-303d-48fa-8a14-40181c70c94d.png)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![](img/648c2edd-303d-48fa-8a14-40181c70c94d.png)'
- en: 'To back up a directory (`/root/backup`) from the local system to the remote
    system, enter the source and destination details as shown here:'
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将本地系统中的目录（`/root/backup`）备份到远程系统，请按照如下所示输入源和目标的详细信息：
- en: '![](img/458e5a42-6531-4407-9670-21d8aede0688.png)'
  id: totrans-358
  prefs: []
  type: TYPE_IMG
  zh: '![](img/458e5a42-6531-4407-9670-21d8aede0688.png)'
- en: 'After entering the previous details, go to the File menu and click on Simulation
    to verify that the details entered are collected:'
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入完上述详细信息后，转到文件菜单，点击“模拟”以验证输入的详细信息是否已收集：
- en: '![](img/ed23a94b-7009-48e5-be72-0258cebb3b26.png)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed23a94b-7009-48e5-be72-0258cebb3b26.png)'
- en: Once you click on Simulation, it will prompt you to enter the password of the
    remote user.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击“模拟”，系统会提示你输入远程用户的密码。
- en: 'If the details entered are correct and everything is OK, a Completed Successfully
    message will appear, as shown here:'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果输入的详细信息正确且一切正常，将出现“已成功完成”消息，如下所示：
- en: '![](img/8b37b156-9280-4ea4-97ab-c19bee1a24c0.png)'
  id: totrans-363
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8b37b156-9280-4ea4-97ab-c19bee1a24c0.png)'
- en: 'Now, we can start the file transfer by clicking on the Execute option in the
    File menu:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过点击文件菜单中的“执行”选项开始文件传输：
- en: '![](img/ebd422f5-2840-437d-b7bf-ed8546c66c4b.png)'
  id: totrans-365
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ebd422f5-2840-437d-b7bf-ed8546c66c4b.png)'
- en: Again, it will prompt for the remote user password. Provide the password to
    proceed.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，它会提示输入远程用户密码。提供密码后继续操作。
- en: 'Depending on the contents of the directory, the process may take some time.
    Once it completes, a Completed Successfully message will appear as shown here:'
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据目录的内容，过程可能需要一些时间。一旦完成，将显示“已成功完成”消息，如下所示：
- en: '![](img/6d78c542-fff7-464d-b174-b4b5d4c7b163.png)'
  id: totrans-368
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d78c542-fff7-464d-b174-b4b5d4c7b163.png)'
- en: 'We can verify that the transfer was successful by checking for the backup files
    on the remote system:'
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过检查远程系统中的备份文件来验证传输是否成功：
- en: '![](img/96e0ae31-32e7-40d0-ad24-f53093036597.png)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
  zh: '![](img/96e0ae31-32e7-40d0-ad24-f53093036597.png)'
- en: How it works...
  id: totrans-371
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Rsync and Grsync are synchronization tools that work locally, as well as remotely.
    While Rsync is a command-line tool, Grsync provides a GUI to Rsync. Using different
    options available in these tools, we can manage backup synchronization between
    two systems.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: Rsync 和 Grsync 是可以本地和远程工作的同步工具。Rsync 是一个命令行工具，而 Grsync 为 Rsync 提供了一个图形用户界面（GUI）。通过使用这些工具中的不同选项，我们可以管理两个系统之间的备份同步。
