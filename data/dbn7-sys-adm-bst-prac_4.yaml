- en: Chapter 4. Basic Package Configuration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 基本软件包配置
- en: Debian depends heavily on the configuration methods used by the upstream developers
    of each package, supplemented by the Debian developers' modifications and additions
    to standardize package configuration, and make the administrator's life easier.
    In this chapter, we will cover the standard location of configuration files, utilities
    available to assist in configuration, trends in configuration file management,
    and some examples.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Debian在很大程度上依赖每个软件包的上游开发者所使用的配置方法，并通过Debian开发者对配置的修改和补充，来标准化软件包配置，从而让管理员的工作更加轻松。在本章中，我们将介绍配置文件的标准位置、可用的配置辅助工具、配置文件管理的趋势以及一些示例。
- en: Configuration files
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置文件
- en: Most configuration files reside in the `/etc` directory hierarchy. In general,
    most packages place their configuration files in a subdirectory named after the
    software. In cases where the upstream developers do not do this, the Debian package
    usually modifies the behavior. A good example is the **BIND** DNS server software.
    Traditionally, the base configuration is placed in `/etc/named.conf`, with any
    other configuration files placed in the `/var/lib/named` directory. The Debian
    BIND package places all configuration files in `/etc/bind9` and its subdirectory.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数配置文件位于`/etc`目录层次中。通常，大多数软件包将其配置文件放置在一个以软件名称命名的子目录中。如果上游开发者没有这样做，Debian 软件包通常会修改其行为。一个很好的例子是**BIND**
    DNS 服务器软件。传统上，基本配置文件放置在`/etc/named.conf`中，其他配置文件放置在`/var/lib/named`目录中。Debian
    BIND 软件包将所有配置文件放在`/etc/bind9`及其子目录中。
- en: 'In addition, there is a `/etc/`default directory, in which commonly modified
    options are placed in a file matching the package name. Again, using BIND, the
    file is `/etc/default/bind9`, and contains two simple options: whether the `resolvconf`
    dynamic resolver is being used, and what options the server should be run with.
    We''ll cover this directory first.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个`/etc/`default目录，其中包含常见的修改选项，这些选项被放置在与软件包名称匹配的文件中。同样，以BIND为例，文件是`/etc/default/bind9`，其中包含两个简单的选项：是否使用`resolvconf`动态解析器，以及服务器应使用的运行选项。我们将首先介绍这个目录。
- en: /etc/default
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: /etc/default
- en: The configuration files in this directory are intended to control the standard
    initialization scripts found in `/etc/init.d` (known as `init` scripts), or the
    way various system libraries behave. They contain environment variable definitions
    that are used by system libraries or in the `init` scripts, to control execution
    options, software module loading, and anything else that can be controlled dynamically.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 该目录中的配置文件旨在控制在`/etc/init.d`中找到的标准初始化脚本（即`init`脚本）或控制各种系统库的行为。它们包含环境变量定义，这些定义由系统库或`init`脚本使用，以控制执行选项、软件模块加载以及可以动态控制的其他内容。
- en: In the case of definitions used by the `init` scripts, the variables usually
    include a definition of command line options to be used. In some cases, setting
    one of the variables modifies the behavior of the script. For example, setting
    `RESOLVCONF` to anything but `no` in `/etc/default/bind9` will cause the `init`
    script to use the `resolvconf` utility to add an appropriate resolver line for
    the local loopback interface during initialization (and remove it during shutdown).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`init`脚本使用的定义，变量通常包括要使用的命令行选项的定义。在某些情况下，设置其中一个变量会修改脚本的行为。例如，在`/etc/default/bind9`中将`RESOLVCONF`设置为除了`no`以外的任何值，会导致`init`脚本使用`resolvconf`工具，在初始化时为本地回环接口添加适当的解析器行（并在关机时将其移除）。
- en: For those scripts that apply to system libraries, they generally define default
    behavior for commands or software that the libraries affect. A good example of
    this is `/etc/default/nss`, which controls how the **Name Service Switch** (**NSS**)
    functions in the GNU C library. In particular, it controls what information the
    library will consider authoritative for NSS calls, as well as the behavior of
    certain function calls.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些应用于系统库的脚本，它们通常定义影响这些库的命令或软件的默认行为。一个很好的例子是`/etc/default/nss`，它控制**名称服务切换**（**NSS**）在GNU
    C库中的功能。特别是，它控制库会认为哪些信息是NSS调用的权威信息，以及某些函数调用的行为。
- en: Note
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意事项
- en: In special cases, the default definition file may not be a single file, but
    a subdirectory of `/etc/default`. This is done to split information into groups
    of related variables, both for ease of update, and to allow local modifications
    that won't be overwritten when configuration files are replaced.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些特殊情况下，默认的定义文件可能不是单一的文件，而是 `/etc/default` 的一个子目录。这是为了将信息分割成相关变量的组，既便于更新，也便于进行本地修改，而不至于在配置文件被替换时被覆盖。
- en: /etc/<package name>
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: /etc/<软件包名称>
- en: Configuration files are placed in `/etc` by most software developers, and this
    is standard practice for Debian packages. If the file is fairly simple, and the
    only file required, it is often placed directly in `/etc` with a `.conf` extension,
    such as /`etc/inetd.conf` for the `openbsd-inetd` package. For packages that require
    a more complex configuration, usually via multiple configuration files, those
    files are placed in a subdirectory of `/etc` which is generally named after the
    package. A good example of this is the `apache2` package, which has its configuration
    files in `/etc/apache2` and its subdirectories.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数软件开发者将配置文件放置在 `/etc` 目录下，这也是 Debian 软件包的标准做法。如果文件相对简单，且只需要一个文件，它通常会直接放在 `/etc`
    下，并以 `.conf` 扩展名结尾，例如 `/etc/inetd.conf` 就是 `openbsd-inetd` 包的配置文件。对于需要更复杂配置的包，通常通过多个配置文件进行配置，这些文件会放在
    `/etc` 的一个子目录下，该子目录通常会以软件包的名称命名。一个很好的例子就是 `apache2` 包，它的配置文件位于 `/etc/apache2`
    及其子目录中。
- en: Multiple files in a subdirectory are used for a number of reasons. In some cases,
    it is because the original software uses different files for different purposes.
    In other cases, it is done to organize configuration items into a more manageable
    and understandable group. Occasionally, Debian developers have modified the package
    to organize the configuration to simplify or streamline administration.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在子目录中使用多个文件有多种原因。在某些情况下，是因为原始软件将不同的文件用于不同的目的。在其他情况下，则是为了将配置项组织成更易于管理和理解的组。有时，Debian
    开发者还会修改包的配置，进行简化或优化管理。
- en: A good example of this is Apache. Normal Apache configuration is either by a
    single file or multiple files that are included by the master configuration file.
    Traditionally, **SSL** (**Secure Sockets Layer**) certificates and keys, and Virtual
    Host configuration files are contained in subdirectory, but all major options
    are configured in one or a few files in the main directory. Debian has actually
    split the configuration into many files in various subdirectories. This allows
    Debian to supply separate packages that provide certain features via individual
    configuration files that are added to the proper directory, rather than requiring
    modification of the primary configuration files. Also, there are subdirectories
    for modules and virtual hosts prefixed by `available-` or `enabled-`. This allows
    a simple script to activate or deactivate modules and virtual hosts easily and
    quickly.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的例子就是 Apache。正常的 Apache 配置通常是通过一个单一的文件或多个文件来进行，这些文件会被主配置文件包含。传统上，**SSL**（**安全套接字层**）证书和密钥，以及虚拟主机配置文件通常存放在子目录中，但所有主要的选项都在主目录中的一个或几个文件中进行配置。实际上，Debian
    将配置拆分成多个文件，分布在不同的子目录中。这使得 Debian 能够提供独立的软件包，通过单独的配置文件提供特定功能，这些配置文件会被添加到适当的目录中，而不需要修改主配置文件。此外，还有以
    `available-` 或 `enabled-` 为前缀的子目录用于模块和虚拟主机。这使得通过简单的脚本可以轻松快速地激活或停用模块和虚拟主机。
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As it's not yet available in the stable release, Debian developers are taking
    this concept further in future releases, by providing a config-available and config-enabled
    directory, as well as allowing features to be activated and deactivated without
    editing config files or installing or removing feature packages. This will probably
    be available in Debian 8, code-named **Jessie**.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在稳定版中尚未可用，Debian 开发者在未来的版本中将进一步推广这一概念，提供一个 `config-available` 和 `config-enabled`
    目录，并允许在不编辑配置文件或安装/移除功能包的情况下激活或停用功能。这个功能可能会在 Debian 8（代号 **Jessie**）中提供。
- en: Initial configuration
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初始配置
- en: One of the stability requirements for Debian is that when a package is installed,
    it should not adversely affect the system. Often, this is as simple as providing
    a standard configuration, such as Apache's simple **It works!** page. In other
    cases, however, at least some information must be provided during installation
    in order to create a basic, working configuration. This is handled by having the
    installation procedure ask the necessary questions during the installation process
    in order to create a working configuration. In fact, Debian developers have created
    the extensive `debconf` subsystem for this purpose.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 的一个稳定性要求是，当安装一个包时，它不应对系统产生不利影响。通常，这只需要提供一个标准配置，比如 Apache 的简单 **It works!**
    页面。然而，在其他情况下，安装过程中至少必须提供一些信息，以创建一个基本的、可用的配置。这个问题通过在安装过程中询问必要的问题来处理，从而创建一个可用的配置。事实上，Debian
    开发者为此创建了广泛的 `debconf` 子系统。
- en: The `debconf` subsystem provides the ability to configure packages before, during,
    and after installation, and it is integrated into all Debian packages that require
    configuration. It supports a number of frontend user interfaces, prewritten answers
    that can be input to the installation process, a simple interface for asking questions
    and providing the answers to the installation scripts, and even ways to reconfigure
    packages any time after installation. In general, this method of configuration
    provides only the most commonly used configuration options. More complex configurations
    must be handled by using any utilities provided by the packages, or by editing
    the configuration files directly.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`debconf` 子系统提供了在安装前、安装过程中和安装后配置包的能力，并且它被集成到所有需要配置的 Debian 包中。它支持多种前端用户界面、可输入到安装过程中的预设答案、一个简单的界面用于提问并提供安装脚本的答案，甚至可以在安装后随时重新配置包。一般来说，这种配置方式只提供最常用的配置选项。更复杂的配置必须通过使用包中提供的任何工具，或直接编辑配置文件来处理。'
- en: Even if you edit configuration files directly, Debian administrators have passed
    on various techniques to the developers to ease this process. In some cases, they
    have created alternative and more understandable configuration files that are
    scanned and used to create the actual, complex configuration by scripts provided
    in the package. A good example of this is the GRUB2 boot loader. An administrator
    makes whatever modifications to the configuration files in `/etc/default` and
    `/etc/grub.d`, and then runs `update-grub` to create the actual file that GRUB
    uses to load the operating system. The script then executes the necessary commands
    for creating and installing the configuration, as well as the necessary updates
    of other files affected by GRUB reconfiguration. This is just one example of how
    various utilities created by the Debian developers and other third parties have
    simplified Debian administration.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你直接编辑配置文件，Debian 管理员也向开发者传授了各种技巧，以简化这一过程。在某些情况下，他们创建了替代的、更易理解的配置文件，这些文件会被扫描并用于通过包中提供的脚本创建实际的复杂配置。一个很好的例子是
    GRUB2 启动加载程序。管理员对 `/etc/default` 和 `/etc/grub.d` 中的配置文件进行修改，然后运行 `update-grub`
    来生成 GRUB 用于加载操作系统的实际文件。脚本接着会执行创建和安装配置所需的命令，以及对其他受 GRUB 重新配置影响的文件进行必要的更新。这只是 Debian
    开发者和其他第三方创建的各种工具如何简化 Debian 管理的一个例子。
- en: Another good example is sendmail. Administrators often modify the files and
    various database files required by sendmail to tailor it for large, corporate
    installations. However, instead of compiling the configuration and databases,
    then forcing sendmail to load the new configuration, a single command, `sendmailconfig`,
    will perform all of the necessary steps at once, with minimal interruption in
    server operation.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个好的例子是 sendmail。管理员通常会修改 sendmail 所需的文件和各种数据库文件，以使其适应大型企业安装。然而，与其编译配置和数据库，然后强制
    sendmail 加载新配置，不如使用一个命令 `sendmailconfig`，它可以一次性完成所有必要的步骤，且对服务器的操作干扰最小。
- en: Configuration utilities
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置工具
- en: So, what are some of the utilities provided for Debian administration? We've
    already mentioned a couple of specialized ones for GRUB and sendmail. There are
    many others that handle specific software or services, either included in the
    Debian package itself, or in a separate package. Here, however, we're concerned
    with more general utilities. The two main ones are `dpkg-reconfigure` and `gadmin`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，Debian管理中提供的一些工具有哪些呢？我们已经提到了一些专门用于GRUB和sendmail的工具。还有许多其他工具处理特定的软件或服务，可能包含在Debian包中，或作为单独的软件包提供。然而，在这里，我们关注的是更通用的工具。两个主要工具是`dpkg-reconfigure`和`gadmin`。
- en: dpkg-reconfigure
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: dpkg-reconfigure
- en: This utility reruns the same configuration scripts that run during installation.
    It is run from the command line, and options can be used to vary the level of
    complexity of the questions asked. It is generally used when extensive, local
    modifications aren't required and the administrator just wants to update the basic
    configuration as provided by the installation scripts. It is also useful if the
    basic configuration has been corrupted, or changes made that have caused the package
    to stop working, to return it to the configuration provided immediately after
    installation.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具重新运行安装过程中运行的相同配置脚本。它从命令行运行，并且可以使用选项来调整提问的复杂度。通常在不需要进行大规模本地修改时使用，管理员只需更新安装脚本提供的基本配置。如果基本配置已被损坏，或者所做的更改导致软件包无法正常工作，这个工具也非常有用，可以将配置恢复到安装后的状态。
- en: It is generally not useful if the configuration requires options that are not
    commonly used, or if the configuration requires extensive local modifications
    that aren't normally covered by the installation scripts, except perhaps to return
    the configuration to a post-installation condition as noted previously.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果配置要求包含不常用的选项，或需要进行大规模本地修改，而这些修改通常不会由安装脚本覆盖，通常就没有什么用处，除非仅仅是为了将配置恢复到安装后状态，如前所述。
- en: gadmin
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: gadmin
- en: 'This is actually a suite of packages, each covering a different major service.
    Unfortunately, this is not as universal as `dpkg-reconfigure`, but it does handle
    more complex configurations. The following services are covered as of Debian 7:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上是一套软件包，每个软件包涵盖一个不同的主要服务。不幸的是，它不像`dpkg-reconfigure`那样通用，但它确实处理更复杂的配置。以下是Debian
    7中所涵盖的服务：
- en: Bind (DNS)
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bind（DNS）
- en: OpenVPN (both client and server)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenVPN（客户端和服务器）
- en: ProFTPD (FTP)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ProFTPD（FTP）
- en: RSYNC
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RSYNC
- en: Samba (Windows Shares)
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Samba（Windows共享）
- en: It is a graphical tool, based on **GTK** (**GIMP Tool Kit**). It was developed
    to provide some administrator functions under the GNOME desktop environment. It
    will handle fairly complex configurations.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个基于**GTK**（**GIMP工具包**）的图形工具。它的开发目的是在GNOME桌面环境下提供一些管理员功能。它将处理相当复杂的配置。
- en: Desktop configuration
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 桌面配置
- en: So far, we have been discussing server configuration. User configuration of
    a desktop environment is actually a little easier, as both **GNOME** (**GNU Object
    Model Environment**) and **KDE** (**K Desktop Environment**), as well as other
    desktop managers, provide a full suite of utilities gathered in one menu area
    that allows the user to easily configure things such as desktop appearance, behavior,
    window themes, login behavior, and system and session services relevant to their
    environment.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在讨论服务器配置。用户配置桌面环境实际上要容易一些，因为**GNOME**（**GNU对象模型环境**）和**KDE**（**K桌面环境**）以及其他桌面管理器都提供了一整套工具，这些工具集中在一个菜单区域，用户可以轻松地配置桌面外观、行为、窗口主题、登录行为以及与环境相关的系统和会话服务。
- en: Other utilities
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他工具
- en: Finally, there are a number of packages that were created for the express purpose
    of configuring individual services. There are software packages that provide graphic
    or command line configuration tools for any number of other software packages.
    The packages vary in complexity and usage, as they are usually provided by third
    parties. They can be found by using any of the search capable Debian package managers.
    **Synaptic** is probably the easiest as it allows one to easily browse descriptions
    after searching.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，有一些软件包是专门为配置个别服务而创建的。这些软件包提供图形界面或命令行配置工具，适用于许多其他软件包。由于它们通常由第三方提供，因此这些软件包的复杂性和使用方式各异。可以通过任何支持搜索功能的Debian包管理器找到它们。**Synaptic**可能是最简单的，因为它允许用户在搜索后轻松浏览描述信息。
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Many of the third-party utilities are not aware of modifications Debian makes
    to the configuration file layout in order to ease administration, upgrades, and
    stability. Often, they use the upstream configuration file layout, or sometimes
    even the author's idea of a better layout. Although the Debian package upgrade
    procedure will handle this as a local configuration file modification, it does
    make extra work for the administrator during upgrades. Keep this in mind when
    deciding whether to use third-party configuration utilities.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 许多第三方工具并未意识到 Debian 对配置文件布局所做的修改，以简化管理、升级和稳定性。它们通常使用上游的配置文件布局，或者有时甚至是作者认为更好的布局。尽管
    Debian 的软件包升级程序会将此视为本地配置文件的修改，但这确实增加了管理员在升级过程中的工作量。在决定是否使用第三方配置工具时，请记住这一点。
- en: The next section will cover the preferred methods for local configuration in
    Debian.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将介绍在 Debian 中本地配置的首选方法。
- en: Local configuration trends
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地配置趋势
- en: Because Debian upgrades often affect configuration files, the developers have
    crafted techniques to lower the impact of upgrades on locally modified configurations.
    In particular, they are moving to provide separate local configuration files and
    special directories that help maintain local changes during upgrades.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Debian 升级通常会影响配置文件，开发者已经制定了降低升级对本地修改配置影响的技术，特别是他们正在提供独立的本地配置文件和特殊目录，帮助在升级过程中保持本地更改。
- en: Local configuration files
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地配置文件
- en: Many software packages are moving to a multiple file configuration system. Debian
    developers are using this feature to protect local changes by instructing administrators
    to place their modifications in a file with a `.local` extension. In other cases,
    such as the Apache configuration directories, files are placed in specified subdirectories
    (`conf.d` and `sites-available` in this case), and may be named freely, as long
    as they don't conflict with file names used by standard Debian or upstream configurations.
    In these cases, the Debian developers have modified the configuration files so
    they contain commands to include local configuration files, overriding the standard
    files as necessary. In any case, a savvy administrator will use such separate
    files for local configuration changes when possible, so that they are unaffected
    by package updates.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 许多软件包正在转向多文件配置系统。Debian 开发者正在利用这一特性，通过指示管理员将修改放入 `.local` 扩展名的文件中来保护本地更改。在其他情况下，比如
    Apache 配置目录，文件被放置在指定的子目录中（此例中为 `conf.d` 和 `sites-available`），并且可以自由命名，只要不与 Debian
    或上游配置使用的文件名冲突。在这些情况下，Debian 开发者修改了配置文件，使其包含命令以包含本地配置文件，并在必要时覆盖标准文件。无论如何，成熟的管理员在可能的情况下会使用这样的独立文件来进行本地配置更改，这样它们就不会受到软件包更新的影响。
- en: One of the side effects of this separation of local configuration files is that
    the update procedure will no longer ask you whether to install the developers'
    configuration, leave the local configuration, or reconcile the two. Generally,
    this is what you want, as your local changes will remain in place, and any new
    features will have reasonable defaults that shouldn't cause problems. However,
    in cases where there are possible major changes to the configuration defaults,
    a pop-up description of the changes occurs during the upgrade (requiring acknowledgement),
    and is also emailed to the root account. Even without this, though, it is good
    practice to browse the package documentation for configuration advice and the
    configuration files for any obvious changes, after the upgrade is complete.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这种本地配置文件分离的副作用之一是更新过程将不再询问你是否安装开发者的配置、保留本地配置或将两者合并。通常情况下，这是你所希望的，因为你的本地更改将保持不变，并且任何新特性都会有合理的默认设置，不会引发问题。然而，在可能会有重大配置默认更改的情况下，升级过程中会弹出描述变更的窗口（需要确认），并且也会发送电子邮件到
    root 账户。尽管如此，即便没有这些提示，完成升级后，浏览软件包文档以获取配置建议，并检查配置文件中的明显变化，仍然是一种良好的做法。
- en: Configuration subdirectories
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置子目录
- en: Many software packages not only support separate, local configuration files,
    but also provide a special subdirectory to help organize and manage multiple configuration
    files. In some cases, the files in these directories require a specific extension
    in order to be considered active or enabled. This makes it easy to enable or disable
    software features. In other cases, all files in the directory are considered as
    part of the configuration, and a different method is used to enable and disable
    specific files or features, such as used in the Debian Apache software packages.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 许多软件包不仅支持独立的本地配置文件，还提供了一个特殊的子目录，帮助组织和管理多个配置文件。在某些情况下，这些目录中的文件需要特定的扩展名才能被认为是激活或启用的。这使得启用或禁用软件功能变得更为简便。在其他情况下，目录中的所有文件都被视为配置的一部分，并使用不同的方法来启用和禁用特定的文件或功能，例如
    Debian Apache 软件包中使用的方法。
- en: In any case, Debian developers usually recommend care in adding your own files,
    usually by including the word local somewhere in the name, or by placing them
    in directories that are provided specifically for local files.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，Debian 开发者通常建议在添加自己的文件时要小心，通常是通过在文件名中包含 "local" 字样，或者将其放置在专门为本地文件提供的目录中。
- en: Configuration advice
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置建议
- en: So, how do you know what configuration facilities are provided and what the
    recommended approach to local configuration is? The best place to begin is the
    `README.debian` file that comes with the package. It is a requirement of the **Debian
    Policy** manual that this file explains any special configuration issues, how
    configuration under Debian differs from the configuration provisions of the original
    software developers, and recommended ways to handle local configuration. It also
    explains any utilities Debian has added to aid in software configuration. This
    file exists in `/usr/share/doc/<package name>`, which also contains any original
    software documentation, plus any added by the Debian developers. This directory
    is standard with nearly all Debian packages, and is mandatory for any that have
    extensive documentation or special configuration issues.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何知道提供了哪些配置设施，以及推荐的本地配置方法是什么呢？最好的起点是软件包中随附的 `README.debian` 文件。根据 **Debian
    政策** 手册的要求，该文件会解释任何特殊的配置问题，说明 Debian 中的配置与原始软件开发者的配置方式有何不同，以及处理本地配置的推荐方法。它还会解释
    Debian 为帮助软件配置而添加的任何工具。该文件位于 `/usr/share/doc/<package name>` 目录中，该目录还包含任何原始软件文档以及
    Debian 开发者添加的文档。几乎所有 Debian 软件包都有这个标准目录，并且对于那些有大量文档或特殊配置问题的软件包而言，这是必需的。
- en: Note
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Some packages have such extensive documentation that it is provided in a separate
    package so that it can be installed on a separate system providing faster, local
    access to the information without requiring space or processing on the server
    on which the software is installed.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一些软件包的文档非常详尽，以至于文档被拆分成独立的软件包，安装在单独的系统上，以便提供更快速的本地访问，无需占用已安装软件的服务器空间或处理能力。
- en: Let's take a look at some examples that involve fairly complex configuration
    file sets.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一些涉及较为复杂配置文件集的示例。
- en: Apache configuration
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache 配置
- en: Here we will look at the Apache web server software configuration and see how
    Debian handles it. The details on what the configuration actually does will not
    be covered, as they are complex and covered in the package documentation. However,
    we will look at how the files are set up, and what procedures are provided by
    Debian for configuration maintenance.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将查看 Apache Web 服务器软件的配置，并了解 Debian 如何处理它。关于配置实际功能的细节将不在本节中讨论，因为这些内容较为复杂，并且已在软件包文档中详细描述。然而，我们将讨论文件的设置方式，以及
    Debian 提供的配置维护程序。
- en: The first thing to observe about the Debian Apache packages is that the type
    of server, threaded, non-threaded, event-driven, or multi-user, is determined
    by which package is installed to satisfy the server dependency in the main apache2
    meta package. In addition, the documentation is split off into a separate package,
    which places the Apache manuals in a web directory and adds the necessary configuration
    files so that Apache can serve them up as web pages.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Debian Apache 软件包，首先要注意的是，服务器的类型（线程型、非线程型、事件驱动型或多用户型）是通过安装哪个软件包来满足主 apache2
    元包中的服务器依赖关系来确定的。此外，文档被拆分到一个单独的软件包中，该包将 Apache 手册放置在 Web 目录中，并添加必要的配置文件，以便 Apache
    可以将它们作为网页提供。
- en: Configuration files
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置文件
- en: 'The basic configuration file layout is as follows and is also documented in
    the `/etc/apache2/apache2.conf`:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 基本配置文件的布局如下所示，并且也记录在 `/etc/apache2/apache2.conf` 中：
- en: '![Configuration files](img/3118OS_04_01.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![配置文件](img/3118OS_04_01.jpg)'
- en: The files shown are the only ones that are considered part of the actual apache2
    configuration by virtue of being included by commands in the main configuration
    file or one of the files it includes. Note that there is also a `sites-available`
    and a `mods-available` directory that are not automatically included in the configuration.
    The files in these latter two directories are included by virtue of links pointing
    to them from the `mods-enabled` and `sites-enabled` directories, which we will
    cover shortly.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 显示的文件是通过主配置文件或它所包含的文件中的命令包含的，因此它们被视为实际 Apache2 配置的一部分。请注意，还有一个 `sites-available`
    和一个 `mods-available` 目录，这些目录不会自动包含在配置中。它们中的文件通过从 `mods-enabled` 和 `sites-enabled`
    目录指向它们的链接被包含，我们将在稍后讨论这些内容。
- en: 'In general, configuration changes will be limited to the `ports.conf` file,
    adding or modifying files in `conf.d`, and the links in `mods-enabled` and `sites-enabled`
    directories (and the files they point to). Any files you modify that are provided
    as part of one of the Debian packages will, of course, be checked during upgrades
    and you will be prompted for the proper action. Such files are generally only:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，配置更改将仅限于 `ports.conf` 文件、在 `conf.d` 中添加或修改文件，以及 `mods-enabled` 和 `sites-enabled`
    目录中的链接（以及它们指向的文件）。您修改的任何作为 Debian 包一部分提供的文件，在升级过程中都会被检查，系统会提示您采取适当的行动。这些文件通常仅限于：
- en: '`envvars`: This is the file containing environment variables used by Apache
    and the `apache2ctl` utility'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`envvars`：这是包含 Apache 和 `apache2ctl` 工具使用的环境变量的文件。'
- en: '`ports.conf`: This is the file that controls which ports and IP addresses Apache
    listens on'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ports.conf`：这是控制 Apache 监听的端口和 IP 地址的文件。'
- en: '`.conf` extension files in `mods-available` directory: These are the files
    which control the configuration of a module when loaded'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mods-available` 目录中的 `.conf` 扩展名文件：这些文件控制加载模块时的配置。'
- en: '`default` and `default-ssl` in `sites-available` directory: These are the files
    which control the behavior of the default web service'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sites-available` 目录中的 `default` 和 `default-ssl`：这些文件控制默认 Web 服务的行为。'
- en: 'files in the `conf.d` directory: These are the files that are part of add-on
    packages, such as `phpmyadmin`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`conf.d` 目录中的文件：这些文件是附加包的一部分，例如 `phpmyadmin`。'
- en: Modifications to these files should, of course, be kept to a minimum, but sometimes
    they are necessary. Most local configuration will be done by adding files to the
    `conf.d` directory, or to the `sites-available` directory (along with appropriate
    links in the `sites-enabled` directory), where virtual hosts are configured.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 对这些文件的修改应尽量保持在最小范围，但有时是必要的。大多数本地配置将通过将文件添加到 `conf.d` 目录或 `sites-available` 目录（并在
    `sites-enabled` 目录中创建适当的链接）来完成，这里配置虚拟主机。
- en: Note
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In Debian 7, the files are only included if they begin with a letter or number.
    It does not include `.dpkg` and do not contain anything other than letters, numbers,
    and underscores. In Debian 8, only files that end in `.conf` or `.load` will be
    included.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Debian 7 中，只有以字母或数字开头的文件才会被包含。它不包括 `.dpkg` 文件，并且不包含任何除字母、数字和下划线之外的字符。在 Debian
    8 中，只有以 `.conf` 或 `.load` 结尾的文件会被包含。
- en: Enabling sites and modules
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启用站点和模块
- en: As mentioned previously, site and module configurations and options are placed
    in the `sites-available` and `mods-available` directories. They are not included
    unless there is a link to them in the `sites-enabled` or `mods-enabled` directory.
    Instead of making the links manually, use the `a2enmod` and `a2dismod` commands
    to enable or disable modules, and the `a2ensite` and `a2dissite` commands to enable
    or disable specific site configurations.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，站点和模块的配置及选项被放置在 `sites-available` 和 `mods-available` 目录中，除非在 `sites-enabled`
    或 `mods-enabled` 目录中有指向它们的链接，否则它们不会被包含。不要手动创建链接，而是使用 `a2enmod` 和 `a2dismod` 命令来启用或禁用模块，使用
    `a2ensite` 和 `a2dissite` 命令来启用或禁用特定的站点配置。
- en: Testing and activating the configuration
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试和激活配置
- en: Once all modifications have been made, and the appropriate sites or modules
    enabled, it is best to test the configuration for obvious errors. While it is
    possible to use the `init` script in `/etc/init.d/apache2` for this, the `apache2ctl`
    utility is specifically intended for, and better suited for this purpose. There
    is a `configtest` command option (detailed in the `apache2ctl` manual page) which
    will perform basic checking on all of the included files. It won't catch all errors,
    but it will catch the majority of them. After you are confident the configuration
    is correct, it is necessary to reload or restart Apache in order for the changes
    to become effective. Again, while the `init` script can handle this, using `apache2ctl`
    is the preferred method.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦所有修改完成，并且启用了适当的站点或模块，最好测试配置以发现明显的错误。虽然可以使用 `/etc/init.d/apache2` 中的 `init`
    脚本来进行测试，但 `apache2ctl` 工具更适合并专门用于此目的。它有一个 `configtest` 命令选项（详见 `apache2ctl` 手册页），可以对所有包含的文件进行基本检查。它不能检测所有错误，但可以捕获大多数错误。在确信配置正确后，需要重新加载或重启
    Apache，才能使更改生效。同样，虽然 `init` 脚本也能处理此事，但使用 `apache2ctl` 是推荐的方式。
- en: There are two ways to get Apache to reload its configuration files, a regular
    restart, or a graceful restart (which doesn't actually restart, it just reloads
    the configuration). The graceful restart is the preferred method because if there
    is some issue with the configuration, especially something the `configtest` was
    unable to catch, the web service continues running with the old configuration,
    avoiding server downtime while you fix the problem. A graceful restart may take
    some time if there are long-running threads, since it waits until all threads
    are idle before reloading the configuration. A full restart forcibly terminates
    all threads and reloads the configuration, and won't restart the server after
    it is fully stopped, if there are configuration errors.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方法可以让 Apache 重新加载其配置文件，一种是常规重启，另一种是优雅重启（它实际上并不重启，而是仅重新加载配置）。优雅重启是首选方法，因为如果配置存在问题，特别是
    `configtest` 无法检测到的问题，Web 服务会继续运行旧的配置，从而避免服务器停机，直到问题修复。优雅重启可能会花费一些时间，如果有长时间运行的线程，它会等到所有线程空闲后再重新加载配置。完全重启会强制终止所有线程并重新加载配置，并且如果存在配置错误，完全停止后不会重启服务器。
- en: Other examples
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他示例
- en: The Apache example should give you a feel for how Debian splits configuration
    files into smaller, more easily managed files, and provides means to ease various
    administration tasks, such as activating and deactivation modules. Other software
    will have different layouts, as well as, different configuration features and
    utilities, all described in the appropriate documentation.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 示例应该能让你了解 Debian 如何将配置文件拆分成更小、更易于管理的文件，并提供简化各种管理任务的手段，例如启用和禁用模块。其他软件可能有不同的布局，以及不同的配置特性和工具，所有这些都在相应的文档中进行了描述。
- en: '**Exim**, for example, uses a single, monolithic configuration file. In order
    to split files out, Debian provides a utility `update-exim4.conf` that combines
    all of the separate configuration files from the `/etc/exim4/conf.d` hierarchy
    into the single file required by the exim4 software. There are several minor variations
    in how this may be done (all explained in the documentation), so that an administrator
    can choose his preferred method.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**Exim** 例如，使用一个单一的、庞大的配置文件。为了拆分这些文件，Debian 提供了一个工具 `update-exim4.conf`，它将
    `/etc/exim4/conf.d` 目录下的所有独立配置文件合并成 Exim4 软件所需的单一文件。这个过程可能有几种小的变动方式（文档中有详细说明），以便管理员选择自己喜欢的方法。'
- en: Debian sendmail, another email package, uses another method. All of its configuration
    files are in the `/etc/mail` hierarchy, and **GNU make** is used after updating
    the configuration to create all of the necessary database and config files. In
    fact, a special utility, `sendmailconfig`, will not only run make for you, it
    will also handle incorporating `/etc/default/sendmail` changes, and reload the
    sendmail configuration after processing is complete.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 的 sendmail 另一个邮件包，使用了不同的方法。它的所有配置文件都位于 `/etc/mail` 目录下，更新配置后，**GNU make**
    被用来创建所有必要的数据库和配置文件。实际上，有一个特殊的工具 `sendmailconfig`，它不仅会为你运行 make，还会处理 `/etc/default/sendmail`
    的变更，并在处理完成后重新加载 sendmail 配置。
- en: All of this shows how the Debian developers provide various methods of making
    configuration easier. Simpler packages may have few, one, or no configuration
    files. Those with larger or more complex configuration won't all be handled identically,
    although the technique of splitting files into smaller, easier to modify pieces
    and providing utilities to ease config administration will be common to most (and,
    per Debian policy, described in the documentation for each package).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都显示了 Debian 开发者提供了多种方法来简化配置。较简单的包可能只有少数、一个或没有配置文件。那些拥有更大或更复杂配置的包不会完全一样处理，尽管将文件拆分成更小、更易于修改的部分并提供工具来简化配置管理的技术对大多数包来说是通用的（并且按照
    Debian 政策，在每个包的文档中有相关描述）。
- en: Summary
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: Although Debian stays close to the upstream software developer's configuration
    methods, the Debian developers frequently modify configuration file layout to
    simplify local configuration and upgrades, and often provide additional utilities
    to ease the administrator's job. Third-party utilities are sometimes available
    as well, but the administrator should understand that the output of these utilities
    may not always follow the Debian configuration layout.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Debian 保持与上游软件开发者的配置方法接近，Debian 开发者经常修改配置文件的布局，以简化本地配置和升级，并且通常提供额外的工具来减轻管理员的工作。第三方工具有时也可以使用，但管理员应该理解，这些工具的输出可能并不总是遵循
    Debian 的配置布局。
- en: Now, with basic software configuration out of the way, it's time to cover more
    system wide administration issues.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在基本的软件配置完成后，是时候讨论一些更广泛的系统管理问题了。
