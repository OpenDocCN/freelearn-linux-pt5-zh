- en: Chapter 7. Puppet Configuration Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。Puppet配置管理
- en: 'The recipes that are covered in this chapter are:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的教程有：
- en: Installing and configuring Puppet Master
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置Puppet Master
- en: Installing and configuring Puppet agent
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置Puppet代理
- en: Defining a simple module to configure time
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义一个简单的模块来配置时间
- en: Defining nodes and node grouping
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义节点和节点分组
- en: Deploying modules to single nodes and node groups
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将模块部署到单个节点和节点组
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Puppet is an "old school" configuration management tool. It helps you enforce
    configurations with great ease although it is more complex than Ansible to use.
    Puppet's declarative language can be compared to a programming language and is
    difficult to master. However, once you understand how it works, it's fairly easy
    to use.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Puppet是一个“老派”的配置管理工具。尽管它比Ansible更复杂，但它使你能够轻松执行配置。Puppet的声明式语言可以与编程语言相提并论，掌握起来比较困难。然而，一旦你理解了它的工作原理，它就相对容易使用。
- en: Puppet is very good at maintaining a strict set of configurations, but if you
    aim at verifying the configurations before applying them, you'll find that Puppet
    is not the sharpest tool in the shed. Puppet does have the `audit` metaparameter
    that you can use in your resources to track changes, but it doesn't let you display
    where it differs from your manifest. In fact it doesn't allow you to add the `audit`
    metaparameter to your "active" module or manifests. It sits in a separate manifest
    that audits the requested resources.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Puppet非常擅长维护严格的配置集，但如果你打算在应用配置之前验证它们，你会发现Puppet并不是最锋利的工具。Puppet确实有`audit`元参数，你可以在资源中使用它来跟踪更改，但它不允许你显示与清单的不同之处。事实上，它不允许你将`audit`元参数添加到你的“活动”模块或清单中。它位于一个单独的清单中，用于审计请求的资源。
- en: The version of Puppet used in these recipes is v3.8 and covers the community
    edition.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程中使用的Puppet版本是v3.8，并涵盖了社区版。
- en: Installing and configuring Puppet Master
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置Puppet Master
- en: The people at Puppet Labs have their own repository servers for puppet, which
    is very easy when it comes down to installing and maintaining the server and agent.
    Although the EPEL repository also provides puppet packages, they tend to be old
    or not up to date. Hence, I recommend using the Puppet Labs' yum repositories.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Puppet Labs的团队为Puppet提供了自己的仓库服务器，这在安装和维护服务器和代理时非常方便。尽管EPEL仓库也提供Puppet包，但它们往往比较旧或未更新。因此，我建议使用Puppet
    Labs的yum仓库。
- en: How to do it…
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'This recipe covers a monolithic install. Perform the following steps:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程涵盖了单体安装。执行以下步骤：
- en: 'Enable the optional channel via the following command; you''ll need this to
    install the Puppet Server component:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下命令启用可选频道；你将需要此命令来安装Puppet Server组件：
- en: '[PRE0]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Download the `puppetlabs` repository installer, as follows:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载`puppetlabs`仓库安装程序，如下所示：
- en: '[PRE1]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, install the `puppetlabs` repository by executing the following:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过执行以下命令安装`puppetlabs`仓库：
- en: '[PRE2]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Install `puppet-server` by typing out this command:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入以下命令安装`puppet-server`：
- en: '[PRE3]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Set up Puppet Master by adding the following to the `[main]` section of `/etc/puppet/puppet.conf`:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将以下内容添加到`/etc/puppet/puppet.conf`的`[main]`部分来设置Puppet Master：
- en: '[PRE4]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, verify the generation of a CA certificate for the `puppet` environment
    through this command line:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过以下命令验证`puppet`环境中CA证书的生成：
- en: '[PRE5]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Press *CTRL* + *C* when it displays the following information:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当显示以下信息时，按*CTRL* + *C*：
- en: '[PRE6]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, allow traffic to the Puppet Master port (`8140/tcp`) via the following
    commands:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过以下命令允许流量访问Puppet Master端口（`8140/tcp`）：
- en: '[PRE7]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Start Puppet Master by executing the following:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令启动Puppet Master：
- en: '[PRE8]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Finally, enable Puppet Master at boot, as follows:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，通过以下命令在启动时启用Puppet Master：
- en: '[PRE9]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: There's more…
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: The basic HTTP daemon that Puppet Master uses is not made to provide service
    for an enterprise. Puppet Labs recommends using Apache with Passenger to provide
    the same service as Puppet Master for a bigger range of systems (more than 10).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Puppet Master使用的基本HTTP守护进程并不适合为企业提供服务。Puppet Labs建议使用Apache和Passenger来为更大范围的系统（超过10个）提供与Puppet
    Master相同的服务。
- en: 'You can either compile the Passenger module yourself, or you can just use `EPEL`
    (for the `rubygem(rack)` package) and the Passenger repository. I choose the latter.
    Here are the steps that you need to perform:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以自己编译Passenger模块，或者直接使用`EPEL`（用于`rubygem(rack)`包）和Passenger仓库。我选择后者。以下是你需要执行的步骤：
- en: 'Install the Passenger repository by running the following command:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令安装Passenger仓库：
- en: '[PRE10]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, download the EPEL repository installer, as follows:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，下载 EPEL 仓库安装程序，如下所示：
- en: '[PRE11]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Install the `rpm` EPEL repository (with `yum`) via the following command:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下命令安装 `rpm` EPEL 仓库（使用 `yum`）：
- en: '[PRE12]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next, install the necessary packages for the Puppet web interface. For this,
    you can execute the following command line:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，安装 Puppet Web 界面所需的必要软件包。你可以执行以下命令行：
- en: '[PRE13]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Set up Puppet Master''s virtual host directories and ownership, as follows:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置 Puppet Master 的虚拟主机目录及其所有权，如下所示：
- en: '[PRE14]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Copy the `rack` configuration file to Puppet Master''s virtual host root using
    the following command:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令将 `rack` 配置文件复制到 Puppet Master 的虚拟主机根目录：
- en: '[PRE15]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next, change the ownership of the `config.ru` file. This is very important!
    You can do this through the following command:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，更改 `config.ru` 文件的所有权。这一点非常重要！你可以通过以下命令来执行：
- en: '[PRE16]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Then, create an Apache virtual host configuration file at `/etc/httpd/conf.d/puppetmaster.conf`
    containing the following:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在 `/etc/httpd/conf.d/puppetmaster.conf` 创建一个 Apache 虚拟主机配置文件，内容如下：
- en: '[PRE17]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Tip
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Make sure that you replace the certificate directives with the certificate file
    paths of your own system.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保将证书指令替换为你自己系统中的证书文件路径。
- en: 'Disable the `puppetmaster` service via the following:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下命令禁用 `puppetmaster` 服务：
- en: '[PRE18]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Use the following command line to stop the `puppetmaster` service:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令行停止 `puppetmaster` 服务：
- en: '[PRE19]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, start Apache, as follows:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，启动 Apache，如下所示：
- en: '[PRE20]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Enable Apache on boot through the following command line:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下命令行在启动时启用 Apache：
- en: '[PRE21]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Check your HTTP daemon''s status using the following:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令检查你的 HTTP 守护进程状态：
- en: '[PRE22]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This will result in the following (similar) output:'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将导致以下（类似的）输出：
- en: '![There''s more…](img/00051.jpeg)'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![还有更多内容…](img/00051.jpeg)'
- en: Puppet can also run in a masterless mode. In this case, you don't install a
    server but only the clients on all the systems that you wish to manage in this
    way.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Puppet 也可以在无主模式下运行。在这种情况下，你不需要安装服务器，只需在所有希望以这种方式进行管理的系统上安装客户端。
- en: See also
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'For more in-depth information about installing Puppet on RHEL, refer to the
    following page:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有关在 RHEL 上安装 Puppet 的更多深入信息，请参考以下页面：
- en: '[https://docs.puppetlabs.com/guides/install_puppet/install_el.html](https://docs.puppetlabs.com/guides/install_puppet/install_el.html)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.puppetlabs.com/guides/install_puppet/install_el.html](https://docs.puppetlabs.com/guides/install_puppet/install_el.html)'
- en: Installing and configuring the Puppet agent
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置 Puppet agent
- en: Unlike Ansible, Puppet requires an agent to be able to enforce configurations.
    This recipe will teach you how to install and configure the puppet agent on a
    system. The only way to mass deploy the Puppet agent is through an orchestration
    tool (such as Ansible).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Ansible 不同，Puppet 需要一个代理来执行配置。本文将教你如何在系统上安装和配置 Puppet agent。大规模部署 Puppet agent
    的唯一方法是通过自动化工具（如 Ansible）。
- en: How to do it…
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'The Puppet agent can be installed and maintained using the same repository
    as the Puppet server: the Puppet Labs repository. Perform the following steps:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Puppet agent 可以使用与 Puppet 服务器相同的仓库进行安装和维护：Puppet Labs 仓库。请执行以下步骤：
- en: 'Download the Puppet Labs repository installer via the following command:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下命令下载 Puppet Labs 仓库安装程序：
- en: '[PRE23]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Install the Puppet Labs repository by executing the following command:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令安装 Puppet Labs 仓库：
- en: '[PRE24]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Use the following command to download the EPEL repository installer:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令下载 EPEL 仓库安装程序：
- en: '[PRE25]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now, install the `rpm` EPEL repository (with `yum`) through the following command
    line:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过以下命令行安装 `rpm` EPEL 仓库（使用 `yum`）：
- en: '[PRE26]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Install the Puppet agent; you can run the following command:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Puppet agent；你可以运行以下命令：
- en: '[PRE27]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Next, configure the agent so that it will connect to your Puppet Master.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，配置代理，使其连接到你的 Puppet Master。
- en: 'Add your Puppet Master to the `[main]` section of `/etc/puppet/puppet.conf`,
    as follows:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的 Puppet Master 添加到 `/etc/puppet/puppet.conf` 的 `[main]` 部分，如下所示：
- en: '[PRE28]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Start the Puppet agent by executing the following command:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令启动 Puppet agent：
- en: '[PRE29]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Then, enable the Puppet agent by running the following:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，通过运行以下命令启用 Puppet agent：
- en: '[PRE30]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Finally, sign the new node''s certificate on Puppet Master, as follows:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在 Puppet Master 上签署新节点的证书，如下所示：
- en: '[PRE31]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: There's more…
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: 'Instead of signing every single certificate individually, you can sign the
    certificate for all systems that have been registered with Puppet Master by executing
    the following:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过执行以下命令，为所有已注册到 Puppet Master 的系统签署证书，而无需单独为每个证书签名：
- en: '[PRE32]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: If you start looking for puppet unit files in `/lib/systemd/system`, you'll
    also find a `puppetagent.service` unit file. The `puppetagent.service` unit file
    is actually a soft link to the `puppet.service` unit file.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你开始在 `/lib/systemd/system` 目录中查找 Puppet 单元文件，你还会发现一个 `puppetagent.service`
    单元文件。`puppetagent.service` 单元文件实际上是指向 `puppet.service` 单元文件的软链接。
- en: If you don't want to set the server property in the `/etc/puppet/puppet.conf`
    file, you can do this by defining a `puppet` DNS entry that points to Puppet Master
    in all the DNS domain zones.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不想在 `/etc/puppet/puppet.conf` 文件中设置服务器属性，你可以通过在所有 DNS 域区中定义指向 Puppet Master
    的 `puppet` DNS 条目来实现这一点。
- en: The Puppet agent is known to consume memory. In order to mitigate this, the
    Puppet agent can be run as a cron job. This would release some memory, but you
    would lose the flexibility of pushing new configurations from Master.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 已知 Puppet 代理会消耗内存。为了减轻这一问题，可以将 Puppet 代理作为定时任务运行。这样可以释放一些内存，但你将失去从 Master 推送新配置的灵活性。
- en: 'This will create a cron job that launches the Puppet agent once every `30`
    minutes, as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个定时任务，每 `30` 分钟启动一次 Puppet 代理，如下所示：
- en: '[PRE33]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The Puppet agent can also be configured to run in the `Masterless` mode. This
    means that you will take care of distributing your puppet modules and classes
    yourself instead of Puppet taking care of this. This implies that you will synchronize
    all modules and classes, even those that are not used by the system, which can
    be a security risk.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Puppet 代理也可以配置为在 `Masterless` 模式下运行。这意味着你将负责自己分发 Puppet 模块和类，而不是由 Puppet 来处理。这意味着你需要同步所有模块和类，即使是那些系统没有使用的，这可能会带来安全风险。
- en: Defining a simple module to configure time
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义一个简单的模块来配置时间
- en: Modules are collections of manifests and files that define how to install and
    configure various components. Manifests contain the instructions to apply to a
    system's configuration. In this recipe, we'll create a simple module to install
    and configure the NTP daemon.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 模块是由清单和文件组成的集合，用于定义如何安装和配置各种组件。清单包含应用于系统配置的指令。在本篇教程中，我们将创建一个简单的模块，用于安装和配置 NTP
    守护进程。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Puppet has a strict way of organizing modules. Your modules should always be
    stored in `/etc/puppet/modules`. Every module is a directory within this directory,
    containing the necessary directories that in turn contain manifests, files, templates,
    and so on.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Puppet 有一套严格的模块组织方式。你的模块应始终存储在 `/etc/puppet/modules` 目录中。每个模块都是该目录下的一个子目录，其中包含必要的子目录，这些子目录分别包含清单、文件、模板等。
- en: How to do it…
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In this recipe, we''ll create the necessary directory structure, manifests,
    and files to configure your system''s time. Perform the following steps:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在本篇教程中，我们将创建必要的目录结构、清单和文件，用于配置系统的时间。请按照以下步骤操作：
- en: 'Create `ntp/manifests` in `/etc/puppet/modules` via the following command:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下命令在 `/etc/puppet/modules` 目录中创建 `ntp/manifests`：
- en: '[PRE34]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Create `ntp/templates` to house all the templates used by the puppet module
    through the following:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下方式在 `/etc/puppet/modules/ntp` 中创建 `ntp/templates` 目录，以存放所有由 Puppet 模块使用的模板：
- en: '[PRE35]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now, create the `install.pp` file in `/etc/puppet/modules/ntp/manifests` with
    the following contents:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在 `/etc/puppet/modules/ntp/manifests` 目录中创建 `install.pp` 文件，内容如下：
- en: '[PRE36]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Create the `config.pp` file in `/etc/puppet/modules/ntp/manifests` with the
    following contents:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `/etc/puppet/modules/ntp/manifests` 目录中创建 `config.pp` 文件，内容如下：
- en: '[PRE37]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Next, create the `ntp.conf.erb` template file in `/etc/puppet/modules/ntp/templates`
    with the following contents:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在 `/etc/puppet/modules/ntp/templates` 目录中创建 `ntp.conf.erb` 模板文件，内容如下：
- en: '[PRE38]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Create the `service.pp` file in `/etc/puppet/modules/ntp/manifests` with the
    following contents:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `/etc/puppet/modules/ntp/manifests` 目录中创建 `service.pp` 文件，内容如下：
- en: '[PRE39]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Finally, create the `init.pp` file that binds them all together in `/etc/puppet/modules/ntp/manifests`
    with the following contents:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在 `/etc/puppet/modules/ntp/manifests` 目录中创建 `init.pp` 文件，将它们全部绑定在一起，内容如下：
- en: '[PRE40]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: How it works...
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: When applying a module to a system, it applies the directives found in the module's
    `init.pp` manifest.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在将模块应用到系统时，它会应用模块 `init.pp` 清单中找到的指令。
- en: As you can see, we created a template file that is "automagically" distributed
    to the clients. Puppet automatically creates a file share for the `templates`
    and `files` directories.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们创建了一个模板文件，它会被“自动”分发到客户端。Puppet 会自动为 `templates` 和 `files` 目录创建文件共享。
- en: As you can see in the `config.pp` file, the template references `ntp/ntp.conf.erb`.
    Puppet will automatically resolve this to the correct location (`ntp/templates/ntp.conf.erb`).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如你在`config.pp`文件中看到的，模板引用了`ntp/ntp.conf.erb`。Puppet会自动将其解析为正确的位置（`ntp/templates/ntp.conf.erb`）。
- en: There's more...
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: I created four manifests to install and configure Puppet. This could be easily
    achieved by just creating one monolithic `init.pp` manifest with the contents
    of the other three files. When you start creating complex manifests, you'll be
    happy to have split them up.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我创建了四个清单来安装和配置Puppet。通过创建一个包含其他三个文件内容的单一`init.pp`清单，这可以轻松实现。当你开始创建复杂的清单时，你会很高兴将它们拆分开来。
- en: 'If you want to have a single location for all the assets (templates and files)
    you use in your modules, you will have to define a separate file share for this
    location in the `/etc/puppet/fileserver.conf` file, as follows:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想将所有模块中使用的资产（模板和文件）存放在一个位置，你需要在`/etc/puppet/fileserver.conf`文件中为该位置定义一个单独的文件共享，具体如下：
- en: '[PRE41]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: See also
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: Read up on Puppet Modules through the link [https://docs.puppetlabs.com/puppet/3.8/reference/modules_fundamentals.html](https://docs.puppetlabs.com/puppet/3.8/reference/modules_fundamentals.html).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 通过链接[https://docs.puppetlabs.com/puppet/3.8/reference/modules_fundamentals.html](https://docs.puppetlabs.com/puppet/3.8/reference/modules_fundamentals.html)了解Puppet模块。
- en: Defining nodes and node grouping
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义节点和节点分组
- en: In order to push a manifest, its classes, and assets to systems, they need to
    be known by Puppet Master. Grouping is practical if you want to push a manifest
    to a number of hosts without having to modify each configuration node.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将清单、类和资产推送到系统，它们需要被Puppet Master所识别。分组非常实用，如果你希望将一个清单推送到多个主机而不需要修改每个配置节点。
- en: How to do it…
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: In contrast to what the title wants you to believe, you cannot create a group
    and add nodes. However, you can group nodes and make them behave in a similar
    way to groups.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 与标题想让你相信的不同，你不能创建一个组并将节点添加进去。然而，你可以将节点分组，并使它们的行为类似于组。
- en: Nodes and node groups are defined in `/etc/puppet/manifests/site.pp` or a file
    at `/etc/puppet/manifests/site.pp`.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 节点和节点组在`/etc/puppet/manifests/site.pp`或`/etc/puppet/manifests/site.pp`文件中定义。
- en: Create the configuration node
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建配置节点
- en: 'Create a `/etc/puppet/manifests/site.pp/rhel7-client.pp` file with the following
    contents:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个`/etc/puppet/manifests/site.pp/rhel7-client.pp`文件，内容如下：
- en: '[PRE42]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Create a node group
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建一个节点组
- en: 'Create a `/etc/puppet/manifests/site.pp/rhel7-clientgroup.pp` file with the
    following contents:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个`/etc/puppet/manifests/site.pp/rhel7-clientgroup.pp`文件，内容如下：
- en: '[PRE43]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: There's more…
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'If you have a strict naming convention, you can use `regular expressions` to
    define your node group. Run the following commands:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有严格的命名规范，你可以使用`regular expressions`来定义你的节点组。运行以下命令：
- en: '[PRE44]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: By default, node names are defined by their certificate name, which is **FQDN**
    (**Fully Qualified Domain Name**) of the system we used to register with Puppet
    Master.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，节点名称由其证书名称定义，即我们用于在Puppet Master上注册的系统的**FQDN**（**完全限定域名**）。
- en: If you don't remember the names of all of your nodes, you can easily find them
    at `/var/lib/puppet/ssl/ca/signed/`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不记得所有节点的名称，你可以轻松地在`/var/lib/puppet/ssl/ca/signed/`中找到它们。
- en: Deploying modules to single nodes and node groups
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将模块部署到单个节点和节点组
- en: Once you define modules and nodes, you can start deploying the modules to your
    nodes. You can do this on various levels, which will be demonstrated in the following
    recipe.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦定义了模块和节点，你就可以开始将模块部署到你的节点。你可以在不同级别上执行此操作，接下来的食谱将展示这一点。
- en: How to do it…
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: In order to deploy a module (or manifest) to a node, your must configure this
    in the node's stanza or a group of nodes that the node belongs to, or you can
    define it on the base level to apply it to every node.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将模块（或清单）部署到一个节点，你必须在该节点的条目中进行配置，或者在该节点所属的节点组中配置，或者你也可以在基础级别定义它，以便应用于每个节点。
- en: Configure to deploy a module or manifest to a single client
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置以将模块或清单部署到单个客户端
- en: 'Edit the client configuration node from the previous recipe and add an include
    statement referring to manifest you want to be applied to the client block. You
    can execute the following command for this:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑前面步骤中的客户端配置节点，并添加一个`include`语句，引用你希望应用于客户端块的清单。你可以执行以下命令来完成：
- en: '[PRE45]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Configure to deploy a module or manifest to a node group
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置以将模块或清单部署到节点组
- en: 'In the same way you edited the single node file, edit the node group configuration
    file and add an include statement to the node group block referring to the manifest
    you want applied. Take a look at the following command:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 以您编辑单节点文件的相同方式，编辑节点组配置文件，并在节点组块中添加一个包含语句，引用您希望应用的清单。请查看以下命令：
- en: '[PRE46]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Configure to deploy to all registered systems
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置以部署到所有注册的系统
- en: 'One will typically have a node configuration file within `/etc/puppet/manifests/site.pp/`,
    or `/etc/puppet/manifests/site.pp` itself, if you work with one monolithic site
    definition, which affects all nodes. Edit `/etc/puppet/manifests/site.pp/default.pp`
    and enter the following code:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 通常会在 `/etc/puppet/manifests/site.pp/` 内，或如果您使用一个单一的站点定义影响所有节点，`/etc/puppet/manifests/site.pp`
    本身会有一个节点配置文件。编辑 `/etc/puppet/manifests/site.pp/default.pp`，并输入以下代码：
- en: '[PRE47]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Deploy to a system
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署到系统
- en: 'On the system with the Puppet Agent installed, execute the following:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装了 Puppet Agent 的系统上，执行以下操作：
- en: '[PRE48]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'When executed, the following will appear:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 执行时，以下内容将出现：
- en: '![Deploy to a system](img/00052.jpeg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![部署到系统](img/00052.jpeg)'
- en: There's more…
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: For testing purposes, there's an alternative to defining nodes and including
    modules.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试目的，定义节点和包含模块有一个替代方案。
- en: 'Copy the manifest(s), files, and templates to your test machine (usually, you
    will develop elsewhere than the production Puppet Master anyway) and execute them
    in the following way:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 将清单、文件和模板复制到您的测试机器（通常，您会在生产 Puppet Master 之外的地方进行开发），并以以下方式执行：
- en: '[PRE49]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Tip
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: By default, Puppet applies all manifests found in `/etc/puppet/manifests/site.pp`.
    As explained in the preceding section, this doesn't need to be a single monolithic
    file containing all your directives. When using it as a directory, it uses all
    the manifests found within this directory, or if the name of a subdirectory ends
    with `.pp`, it interprets all of its contents as manifests as well. It interprets
    all files alphanumerically.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Puppet 会应用 `/etc/puppet/manifests/site.pp` 中找到的所有清单。正如前一节所解释的，这不需要是一个包含所有指令的单一庞大文件。当作为一个目录使用时，它会使用该目录中找到的所有清单，或者如果某个子目录的名称以
    `.pp` 结尾，它也会将该目录中的所有内容作为清单进行解析。它会按字母数字顺序解析所有文件。
