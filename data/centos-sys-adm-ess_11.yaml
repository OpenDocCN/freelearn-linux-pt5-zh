- en: Chapter 11. Graduation Day
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 11 章 毕业日
- en: We have reached the last chapter of *CentOS System Administration Essentials*,
    and you are nearly a Linux Ninja; however, before you can pass with flying colors,
    you will learn some best practices in the deployment of CentOS Linux. This chapter
    will cover the subjects that we have specifically looked at and some other more
    generic CentOS best practices to consider when administering your systems. Additionally,
    we will take a quick peek at the new features that you will find in Enterprise
    Linux 7 from Red Hat and CentOS.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经到达了 *CentOS 系统管理精要* 的最后一章，你已经接近 Linux 忍者；然而，在你可以大获成功之前，你将学习一些在部署 CentOS
    Linux 时需要考虑的最佳实践。本章将涵盖我们专门研究过的主题以及一些其他更通用的 CentOS 最佳实践。此外，我们还将快速浏览 Red Hat 和 CentOS
    的企业版 Linux 7 中的新功能。
- en: '**Securing remote access to your system**: Here, we take a look at OpenSSH
    and some considerations that you may want to review'
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保护远程访问您的系统**：在这里，我们将查看 OpenSSH 和您可能需要审查的一些考虑因素'
- en: '**OpenLDAP best practices**: Here, we ensure that your directory service is
    kept running the way that you want'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenLDAP 最佳实践**：在这里，我们确保您的目录服务按您的意愿运行'
- en: '**Nginx best practices**: A quick guide to some dos and don''ts when configuring
    the web server'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Nginx 最佳实践**：配置 web 服务器时 dos 和 don''ts 的快速指南'
- en: '**Mastering Puppet**: A checklist on what and how to secure on your Linux server.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**精通 Puppet**：在您的 Linux 服务器上安全的事项和如何进行安全设置的清单。'
- en: '**What''s new in CentOS 7**: This guide is predominately aimed at CentOS 6.5,
    but Enterprise Linux 7 is now available for both Red Hat and CentOS, and we will
    take a quick look at the highlights'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CentOS 7 的新特性**：这份指南主要针对 CentOS 6.5，但现在 Red Hat 和 CentOS 都已推出企业版 Linux 7，我们将快速浏览其亮点'
- en: Securing remote access to your system
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护远程访问您的系统
- en: Using **Secure Shell** (**SSH**) is a command method to gain remote access to
    your server. The security is implemented at one level using data encryption, but
    is augmented by server authentication, by default. Clients can compare the public
    key presented by the server against a list of trusted hosts, or as SSH names them,
    `known_hosts`. This is a little like using your web browser to visit HTTPS sites;
    occasionally, we may get warnings saying that the remote host is not trusted or
    cannot be identified. With SSH, instead of the browser holding the public key
    of the server, we have the `~/.ssh/known_hosts` file to store the SSH public key
    of hosts we connect to.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **安全外壳**（**SSH**）是一种通过命令方法远程访问您的服务器的方式。安全性主要通过数据加密来实现，但默认情况下还通过服务器认证进行增强。客户端可以将服务器提供的公钥与信任主机列表（或
    SSH 称为 `known_hosts`）进行比较。这有点像使用您的 Web 浏览器访问 HTTPS 站点；有时我们可能会收到警告，说远程主机不受信任或无法识别。对于
    SSH，我们不是像浏览器保存服务器的公钥那样，而是使用 `~/.ssh/known_hosts` 文件存储我们连接到的主机的 SSH 公钥。
- en: The SSH public key
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SSH 公钥
- en: The default behavior of the SSH client on CentOS and most Linux distributions
    is to prompt the user to accept the remote host's public SSH key when they first
    connect to that host. Unless the key is already present and perhaps preshared,
    on acceptance, the public key from the remote SSH host will be stored in the SSH
    client store for that user. Any subsequent times that the same user connects to
    the same remote host, the client will connect without the prompt as the host is
    already trusted.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS 和大多数 Linux 发行版上 SSH 客户端的默认行为是，在用户首次连接到远程主机时，提示用户接受远程主机的公共 SSH 密钥。除非密钥已经存在并且可能已经预共享，否则一旦接受，远程
    SSH 主机的公钥将存储在该用户的 SSH 客户端存储中。在任何后续的连接中，只要是同一用户连接到同一远程主机，客户端将无需提示即可连接，因为主机已经是可信的。
- en: Analyzing the risks of default settings
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析默认设置的风险
- en: The default settings provide for a convenient, and mostly secure, mechanism
    in which we can obtain the public keys of remote hosts. Potentially, we have an
    issue where the remote host we connect to in the first instance is not the trusted
    host that we wish to connect to. As there is no authentication mechanism in place,
    we have to rely on trust and probability that in the first instance, the connection
    will be made to the correct host and not an imposter.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 默认设置提供了一个方便且大多安全的机制，用于获取远程主机的公钥。但有一个潜在问题，即我们在首次连接时连接的远程主机可能不是我们希望连接的受信任主机。由于没有认证机制，我们必须依赖信任和概率，在第一次连接时，连接将与正确的主机建立而不是冒名顶替者。
- en: To work more securely, we can adjust the client settings so that it may only
    connect to hosts that are already trusted or, in other words, have their public
    key stored in the local keystore. To make this adjustment, we will need to edit
    the `/etc/ssh/ssh_config` file. The `StrictHostKeyChecking` directive is set to
    `ask` by default and should be edited to read `yes` to ensure we only connect
    when we have a preshared key.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更安全地工作，我们可以调整客户端设置，使其仅连接到已经信任的主机，或者换句话说，只有当主机的公钥存储在本地密钥库中时才能连接。为了做出此调整，我们需要编辑`/etc/ssh/ssh_config`文件。`StrictHostKeyChecking`指令默认设置为`ask`，应该编辑为`yes`，以确保只有在我们拥有预共享密钥时才进行连接。
- en: Populating the keystore
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 填充密钥库
- en: If we choose the latter method where we wish the key to be already preshared,
    we need to address the method of populating the keystore. We can copy the server's
    public key to the client store manually or more easily, using the `ssh-keyscan`
    command. The command, although convenient, carries the same risks that are inherent
    to the client prompting to accept the key. If there is a malicious server during
    the scan, we will store the incorrect key. The reality is that the only secure
    method is sending a physical copy of the key to the client. Being able to centralize
    the client keystore would certainly make life much easier, and this can be achieved
    using the `/etc/ssh/ssh_known_hosts` file. This then does allow much easier manual
    population, as we only need the one client file rather than one per user on the
    client machine.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们选择后者方法，要求密钥已经预共享，那么我们需要解决填充密钥库的方法。我们可以手动将服务器的公钥复制到客户端存储，或者更容易地使用`ssh-keyscan`命令。虽然这个命令很方便，但它也带来了客户端提示接受密钥时固有的风险。如果在扫描过程中有恶意服务器，我们就会存储错误的密钥。现实情况是，唯一安全的方法是将密钥的物理副本发送给客户端。能够集中管理客户端密钥库无疑会使生活更加轻松，这可以通过`/etc/ssh/ssh_known_hosts`文件来实现。这样就能更方便地手动填充密钥库，因为我们只需要一个客户端文件，而不是每个用户在客户端机器上都有一个。
- en: Public key authentication
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 公钥认证
- en: Potentially, user passwords pose another security risk to your SSH servers.
    Although the password is encrypted over the wire, users, yes, we all know and
    love them, do share passwords, and perhaps use simple passwords when they should
    not. The settings for this are which authentication types are allowed are controlled
    on the server using the /`etc/ssh/sshd.conf` file. We can disable password-based
    authentication so that users have to use client keys. To disable passwords being
    used by our users for authentication, you will need to edit this file on the remote
    host; look for the `PasswordAuthentication` directive and ensure that it is set
    to `no`; the setting for `PubKeyAuthentication` should be set to `yes`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 用户密码可能会对你的SSH服务器构成另一个安全风险。虽然密码在传输过程中是加密的，但用户——是的，我们都知道并喜爱他们——确实共享密码，并且可能会使用简单的密码，尽管不应该使用。对此的设置是哪些认证类型被允许，这由服务器上的`/etc/ssh/sshd.conf`文件控制。我们可以禁用基于密码的认证，使得用户必须使用客户端密钥。要禁用用户使用密码进行认证，你需要在远程主机上编辑该文件；查找`PasswordAuthentication`指令，并确保其设置为`no`；同时`PubKeyAuthentication`的设置应为`yes`。
- en: 'With this in place, users will need to generate their own public and private
    key pairs on their client devices, using the `ssh-keygen` command. Their public
    keys should be copied to the `~/.ssh/authorized_keys` file on the server; this
    can be achieved using the `ssh-copy-id` command:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在此设置完成后，用户需要在客户端设备上生成自己的公钥和私钥对，可以使用`ssh-keygen`命令。将公钥复制到服务器上的`~/.ssh/authorized_keys`文件中；可以使用`ssh-copy-id`命令来完成此操作：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Root logins
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Root 登录
- en: Root logins to an SSH server should never be allowed; I do not feel this is
    debatable at all on a production server. Users who need to administer the device
    can log in as a standard user and use `sudo` or `su` to gain privileges. This
    again is a controller in the `/etc/ssh/sshd.conf` file and the `PermitRootLogin`
    directive.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 永远不应该允许以root身份登录SSH服务器；对于生产服务器来说，我认为这完全没有争议。需要管理设备的用户可以作为标准用户登录，并使用`sudo`或`su`来获取权限。这个设置同样存在于`/etc/ssh/sshd.conf`文件中的`PermitRootLogin`指令里。
- en: Conclusion
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: SSH provides a secure encryption mechanism to maintain data security across
    the network. Implementing `StrictHostKeyChecking` on the client will also allow
    for host authentication so we can be sure that we are sending our secure information
    to the correct server. To enhance client authentication, disable root logins to
    the server and allow only authentication from clients with preshared user keys.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: SSH 提供了一种安全的加密机制，以维护网络中的数据安全。启用客户端的 `StrictHostKeyChecking` 还可以实现主机认证，这样我们就可以确保将安全信息发送到正确的服务器。为了增强客户端认证，禁用服务器的
    root 登录，并只允许具有预共享用户密钥的客户端进行身份验证。
- en: Best practices of OpenLDAP
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenLDAP 最佳实践
- en: 'We have seen during the course of this book that we can centralize user accounts
    on an OpenLDAP server or, if we want to ease some administration features on CentOS,
    we can use the 389-ds. Either way, the underlying directory is OpenLDAP. Now,
    of course, if the user accounts exits from the directory, then so do our authentication
    tokens (passwords). We need to ensure that this is secure and effective. OpenLDAP
    supports different mechanisms for authentication; each, of course, has advantages
    and disadvantages as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书中看到过，我们可以将用户账户集中管理在 OpenLDAP 服务器上，或者，如果我们想简化 CentOS 上的一些管理功能，可以使用 389-ds。无论哪种方式，底层目录都是
    OpenLDAP。当然，如果用户账户存在于目录中，那么我们的认证令牌（密码）也会存在。我们需要确保这既安全又有效。OpenLDAP 支持不同的认证机制，每种机制当然有其优缺点，如下所示：
- en: '**Simple bind**: Using the simple bind authentication mechanism, clients pass
    a clear text password to authenticate themselves to the server. This carries three
    potential threats: the password can be collected from a network capture, the password
    can be collected by a host spoofing the server''s address, and the password can
    be obtained through a malicious attack on the server. Using LDAPS will protect
    against the first two threats, but not the third. It is best to avoid simple bind
    authentication, if possible.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单绑定**：使用简单绑定认证机制时，客户端将明文密码传递给服务器进行身份验证。这带来了三种潜在威胁：密码可能会被网络抓包收集，密码可能会被伪造服务器地址的主机收集，密码也可能通过对服务器的恶意攻击被获取。使用
    LDAPS 可以防范前两种威胁，但无法防范第三种。最好尽可能避免使用简单绑定认证。'
- en: '**Simple Authentication and Security Layer** (**SASL**) **external**: This
    allows the use of external authentication such as client X.509 certificates (TLS
    public keys) to authenticate users, and can overcome inherent password issues.
    If the LDAP client and LDAP server are on the same machine, it is also possible
    to use the **LDAP over IPC** (**LDAPI**) method of the SASL authentication, where
    the Linux credentials of the user are used to access the directory.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单认证与安全层** (**SASL**) **外部**：这允许使用外部认证，如客户端 X.509 证书（TLS 公钥）来验证用户身份，并且可以克服固有的密码问题。如果
    LDAP 客户端和 LDAP 服务器在同一台机器上，也可以使用 **LDAP over IPC** (**LDAPI**) 的 SASL 认证方法，在该方法中，用户的
    Linux 凭证用于访问目录。'
- en: '**SASL passwords**: It is possible to use password-based authentication with
    SASL, but the threats then are similar to simple bind.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SASL 密码**：可以使用基于密码的认证与 SASL，但随之而来的威胁类似于简单绑定。'
- en: If you use password-based authentication, it is often thought prudent to implement
    a lockout of accounts after so many failed attempts. Although this is possible
    in an OpenLDAP password policy, the reality is that password attacks are often
    more subtle than this in today's environment, and all this provides a mechanism
    for attackers to lock accounts.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用基于密码的身份验证，通常认为在多次失败的尝试后实现账户锁定是谨慎的做法。虽然在 OpenLDAP 密码策略中可以实现这一点，但现实情况是，在当今环境中，密码攻击往往比这更微妙，而这些机制反而为攻击者提供了锁定账户的手段。
- en: It is also becoming more common to allow users to reset their own password if
    they do not remember it. Although this does alleviate a load from the help desk,
    it is often a weak leak in your security chain as the challenge response questions
    often proffered are too easily known or guessed by potential attackers.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 允许用户在忘记密码时重置密码也变得越来越常见。虽然这减轻了帮助台的负担，但这往往是安全链中的一个薄弱环节，因为通常提供的挑战响应问题太容易被潜在攻击者知道或猜到。
- en: In any directory system, there is a schema that describes each object that can
    be created, such as a user or group, and the attributes are properties that can
    exist for that object. Although it is possible to edit the schema for any given
    object or attribute, it is best to create your own definitions if additional attributes
    are required for an object rather than add them directory to the existing schema.
    In the long run, altering existing objects can cause issues with replication to
    other servers if the schema is not identical on all servers.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何目录系统中，都有一个描述可以创建的每个对象（如用户或组）的模式，属性是该对象可能存在的特性。虽然可以编辑任何给定对象或属性的模式，但如果需要为某个对象添加额外的属性，最好创建你自己的定义，而不是直接在现有模式中添加它们。从长远来看，修改现有对象可能会导致在其他服务器上复制时出现问题，特别是如果所有服务器上的模式不完全相同。
- en: Best practices of Nginx
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nginx的最佳实践
- en: If you choose to implement the Nginx web server, there are few things that we
    should take a look at to endure the longevity of your web service.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择部署Nginx web服务器，我们需要注意一些事项，以确保你的网站服务能够长时间稳定运行。
- en: 'From a security perspective, your web server could be accessible to the whole
    world, everyone. For this reason, we should ensure that some basic security threats
    are protected:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 从安全角度来看，你的网站服务器可能对全世界所有人都可访问。因此，我们需要确保保护一些基本的安全威胁：
- en: '**SELinux**: Ensure that we have set SELinux to `Enforcing` on our CentOS system
    that hosts Nginx.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SELinux**：确保在托管Nginx的CentOS系统上将SELinux设置为`Enforcing`模式。'
- en: '**DocumentRoot**: Mount the DocumentRoot structure independently as its own
    filesystem, ensuring that malicious writes will not crash the Linux host if the
    disk fills, and secondly the partition or disk can be mounted with minimal rights,
    for example, `LABEL=web /var/www ext4 ro,nosuid,noexec,nodev,noatime 0 2`.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DocumentRoot**：将DocumentRoot结构独立挂载为自己的文件系统，确保恶意写入不会导致Linux主机崩溃（如果磁盘填满），其次，分区或磁盘可以以最小权限挂载，例如：`LABEL=web
    /var/www ext4 ro,nosuid,noexec,nodev,noatime 0 2`。'
- en: '**Use a host-based firewall**: Allow only incoming TCP ports `80` and `443`.
    Often, only outgoing UDP port `123` along with outgoing dynamic TCP ports need
    to be open, with port `123` being for time synchronization.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用基于主机的防火墙**：只允许传入的TCP端口`80`和`443`。通常，只需要打开传出的UDP端口`123`以及动态传出的TCP端口，端口`123`用于时间同步。'
- en: '**Restrict HTTP methods available to Nginx**. The RFC 2616 allows many HTTP
    access methods; most will not be needed on your server. We can add code similar
    to the following to check for matches that are not equal to GET, HEAD, and POST.
    The code will then disallow other access methods that we do not require, such
    as DELETE, SEARCH, and others:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**限制Nginx可用的HTTP方法**。RFC 2616允许多种HTTP访问方法；大多数方法在你的服务器上是没有必要的。我们可以添加类似以下的代码，检查不等于GET、HEAD和POST的方法，然后拒绝其他不需要的访问方法，如DELETE、SEARCH等：'
- en: '[PRE1]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**User Agents**: We may also choose to block certain user agents, browsers
    that are often associated with scanners, bots, or spammers. The `$httpd_user_agent`
    variable in an HTTP header will show what the browser is, for example Internet
    Explorer, Mozilla, and so on. Other than these normal browsers, there are also
    automated browsers that can access your site through scripts such as `wget` and
    `BBBike`. Try adding this to your `nginx.conf` file to prevent these agents:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户代理**：我们还可以选择阻止某些用户代理，这些浏览器通常与扫描器、机器人或垃圾邮件发送者相关联。HTTP头中的`$httpd_user_agent`变量会显示浏览器的类型，例如Internet
    Explorer、Mozilla等。除了这些常规浏览器，还有一些自动化浏览器可以通过脚本如`wget`和`BBBike`访问你的站点。尝试将以下内容添加到你的`nginx.conf`文件中，以阻止这些代理：'
- en: '[PRE2]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Limit access by IP**: If a particular directory should only be accessible
    to the internal network, then you can use code similar to this in your host configuration:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**限制IP访问**：如果某个特定目录只允许内部网络访问，你可以在主机配置中使用类似以下的代码：'
- en: '[PRE3]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Limit file ownership**: The Nginx web server will run as a named user, `nginx`.
    The temptation is to add the Nginx user as the owner of the DocumentRoot directory
    and all web content therein. This is ill advised as the document owner, user,
    or group can gain additional privileges such as deleting a document that you cannot
    write to. Typically, the `nginx` user should gain access via `others`, and we
    limited `others` to `r-x` on directories and `r--` on files. Typical file permissions
    should be similar to the following:'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**限制文件所有权**：Nginx Web 服务器将以名为 `nginx` 的用户身份运行。诱惑是将 Nginx 用户添加为 DocumentRoot
    目录及其中所有 Web 内容的所有者。这样做不建议，因为文档所有者、用户或组可能会获得额外的权限，比如删除你无法写入的文档。通常，`nginx` 用户应通过
    `others` 获得访问权限，并且我们将 `others` 限制为目录上的 `r-x` 和文件上的 `r--`。典型的文件权限应类似于以下内容：'
- en: '[PRE4]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Mastering Puppet
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 掌握 Puppet
- en: When using the Puppet server to manage your configuration centrally, it is worth
    remembering a few pertinent facts in the setup of the Puppet master.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Puppet 服务器集中管理配置时，记住在设置 Puppet 主机时的几个相关事实是很有价值的。
- en: '**Use modules**: The `/etc/puppet/modules` directory allows the creation of
    modules. Modules are subdirectories created within the Puppet `ModulePath` directive,
    and contains files and configurations that need to be distributed to the client
    as part of its desired state. This simplifies the Puppet configuration, as related
    files are all within the module directory.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用模块**：`/etc/puppet/modules` 目录允许创建模块。模块是在 Puppet `ModulePath` 指令下创建的子目录，包含需要分发到客户端的文件和配置，作为其期望状态的一部分。这简化了
    Puppet 配置，因为相关的文件都在模块目录中。'
- en: '**Use version control**: Puppet itself does not have version control, but we
    can use something like GIT or **subversion** (**svn**) to maintain the previous
    copies of configurations.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用版本控制**：Puppet 本身没有版本控制，但我们可以使用类似 GIT 或 **subversion** (**svn**) 的工具来维护配置的历史版本。'
- en: '**Style**: When writing Puppet configuration, standardizing the syntax style
    helps in maintenance and readability. The Puppet Labs style guide can be found
    at [http://docs.puppetlabs.com/guides/style_guide.html](http://docs.puppetlabs.com/guides/style_guide.html).'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风格**：在编写 Puppet 配置时，标准化语法风格有助于维护和可读性。Puppet Labs 的风格指南可以在[http://docs.puppetlabs.com/guides/style_guide.html](http://docs.puppetlabs.com/guides/style_guide.html)找到。'
- en: What's new in CentOS 7
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CentOS 7 的新特性
- en: CentOS 7 was released in June 2014, along with the earlier release of Red Hat
    Enterprise Linux 7\. Along with the introduction of the Linux kernel 3.10 in this
    release, there are other significant updates to the distribution.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS 7 于 2014 年 6 月发布，同时也发布了早期的 Red Hat Enterprise Linux 7。随着 Linux 内核 3.10
    在本次发布中的引入，发行版也有其他重要更新。
- en: Locale
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地化
- en: 'The system locale information can be conveniently set and displayed using the
    `localectl` command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的本地化信息可以通过 `localectl` 命令方便地设置和显示：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The output can be seen in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 输出可以在以下截图中看到：
- en: '![Locale](img/5920OS_11_01.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![本地化](img/5920OS_11_01.jpg)'
- en: Time and date information
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间和日期信息
- en: 'Similar to the locale information, CentOS 7 includes a simple command to display
    and manage time and date settings on the host system: `/usr/bin/timedatectl`.
    This really is a godsend to us as administrators; even if we only use the command
    to display the output, this one command will display the time, timezone, and NTP
    settings. Take a look at the output of the `timedatectl` command without options
    in the following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 与本地化信息类似，CentOS 7 包含一个简单的命令，用于显示和管理主机系统的时间和日期设置：`/usr/bin/timedatectl`。这对于我们管理员来说真是一个天赐之物；即使我们只使用该命令来显示输出，这个命令也会显示时间、时区和
    NTP 设置。以下截图展示了没有选项的 `timedatectl` 命令输出：
- en: '![Time and date information](img/5920OS_11_02.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![时间和日期信息](img/5920OS_11_02.jpg)'
- en: 'Staying with the `timedatectl` command, we can change the date using the following
    command:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 继续使用 `timedatectl` 命令，我们可以使用以下命令更改日期：
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The time can be set using the same option with time as the argument, shown
    as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用相同的选项和时间作为参数来设置时间，如下所示：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'NTP time synchronization can be enabled and disabled with the following command;
    though, it uses the news system service manager to enable and disable the time
    service:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: NTP 时间同步可以通过以下命令启用和禁用；不过，它使用的是新的系统服务管理器来启用和禁用时间服务：
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This is really a Swiss Army knife of a command; you will get to learn very quickly.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这真是一个多功能的命令；你将会非常快速地学会它。
- en: Managing services
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理服务
- en: '`Systemd` is now the system and service manager in CentOS 7 and replaces Upstart
    as the default init system. This not only replaces Upstart, but is backwards compatible
    with the traditional System V init scripts. For us as administrators, the main
    command to become familiar with is `/usr/bin/systemctl`.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`Systemd`现在是CentOS 7中的系统和服务管理器，取代了Upstart，成为默认的init系统。它不仅替代了Upstart，还与传统的System
    V init脚本向后兼容。对我们管理员来说，最需要熟悉的主要命令是`/usr/bin/systemctl`。'
- en: 'Starting with the `status` subcommand, we can immediately see how `systemctl`
    works well for us. Here, we look at the status of the SSH service:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 从`status`子命令开始，我们可以立即看到`systemctl`如何为我们提供便利。在这里，我们查看SSH服务的状态：
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The output is quite extensive and includes the **Process ID** (**PID**) and
    recent logfile activity. You can view this in the following screenshot.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 输出内容相当详细，包含**进程ID**（**PID**）和最近的日志文件活动。你可以在下面的截图中查看这些内容。
- en: '![Managing services](img/5920OS_11_03.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![管理服务](img/5920OS_11_03.jpg)'
- en: 'We can stop the service using the following command:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下命令停止服务：
- en: '[PRE10]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To disable the autostart of the service, we will use the `disable` subcommand:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要禁用服务的自动启动，我们将使用`disable`子命令：
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'A service that is disabled can still be started by the administrator; the term
    disabled just means that the autostart of the service is disabled. A new feature
    that `systemd` brings is the ability to prevent a service from being started manually:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 一个被禁用的服务仍然可以由管理员启动；“禁用”一词只是意味着该服务的自动启动被禁用了。`systemd`带来的新功能是能够防止手动启动服务：
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Even if an administrator tried to start the service while it is masked, the
    service will not start. If it is required to re-enable the service, then an administrator
    would need to use the `unmask` subcommand:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 即使管理员尝试在服务被掩蔽时启动该服务，服务也不会启动。如果需要重新启用服务，管理员需要使用`unmask`子命令：
- en: '[PRE13]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Additional ways to repair your machine than just using the single user mode
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 除了使用单用户模式修复机器之外，还可以采取其他修复方法
- en: 'In traditional environments, we are perhaps used to using run level 1, or the
    single mode, as the mechanism to place the system into the maintenance mode. The
    concept of run levels has changed with system, and we now have targets rather
    than run levels. To place a running system in maintenance, we can use the following
    command:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统环境中，我们可能习惯于使用运行级别1，或单用户模式，作为将系统置于维护模式的机制。随着system的引入，运行级别的概念发生了变化，现在我们有了目标而不是运行级别。要将正在运行的系统置于维护模式，可以使用以下命令：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You will be prompted for the root user password to complete the operation.
    If this still does not allow you to repair your system, then there is an emergency
    target that starts even fewer services, again allowing only root access:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成操作时，会提示你输入root用户密码。如果这仍然无法修复系统，那么还有一个紧急目标，它会启动更少的服务，只允许root访问：
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The emergency target is much more similar to starting a CentOS 6.5 machine
    with the kernel argument `init=/bin/bash`. You may also have guessed from some
    of these commands that we can also power off and reboot systems with `systemctl`:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 紧急目标与使用`init=/bin/bash`内核参数启动CentOS 6.5机器非常相似。从这些命令中你可能也已经猜到，我们还可以使用`systemctl`关机和重启系统：
- en: '[PRE16]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Of course, the `shutdown` command is still here and can be used for this purpose
    too.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，`shutdown`命令仍然存在，也可以用来执行此操作。
- en: Remote management
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 远程管理
- en: 'The management of remote systems is possible with system too, which also uses
    the same `systemctl` command. If we need to see the status of the `atd` service
    on the host `s1.tup.com`, we can issue the following command:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用system也可以管理远程系统，它也使用相同的`systemctl`命令。如果我们需要查看主机`s1.tup.com`上`atd`服务的状态，可以执行以下命令：
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This simply makes use of an SSH connection to the remote host, so port `22`
    and SSHD must be accessible on the remote host that we monitor.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是利用SSH连接到远程主机，因此`22`端口和SSHD必须在我们监控的远程主机上可访问。
- en: Systemd and nonstandard subcommands
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Systemd 和非标准子命令
- en: The subcommands that are available from `systemctl` through `systemd` are now
    standardized, whereas with System V init scripts, it was possible to have any
    argument or subcommands added to the script. For example, with the Apache HTTPD
    service in CentOS 6.5, we could issue the `service httpd graceful` command. The
    `graceful` argument is unique to the web server, so it is not built as a subcommand
    within `systemctl`; however, the same result can be achieved through the use of
    the `apachectl graceful` command. While on the subject of the Apache web server,
    the default DocumentRoot has changed from `/var/www` to `/usr/share/httpd`.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在通过`systemctl`和`systemd`可用的子命令已标准化，而在System V init脚本中，任何参数或子命令都可以添加到脚本中。例如，在CentOS
    6.5中的Apache HTTPD服务，我们可以发出`service httpd graceful`命令。`graceful`参数是Web服务器特有的，因此它不是作为`systemctl`中的子命令构建的；然而，通过使用`apachectl
    graceful`命令也可以实现相同的结果。谈到Apache Web服务器，默认的DocumentRoot已从`/var/www`更改为`/usr/share/httpd`。
- en: The Samba 4.1 package
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Samba 4.1包
- en: For the Windows domain, file, and print services, Samba 4.1 replaces the aged
    Samba 3, which was supplied with CentOS 6.5 and earlier systems.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows域、文件和打印服务，Samba 4.1替代了老旧的Samba 3，该版本曾随CentOS 6.5及之前版本的系统一起提供。
- en: Filesystem changes
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件系统更改
- en: The default filesystem is now XFS, replacing ext4\. XFS has been around for
    a long time, but is obviously catching the attention of the Enterprise Linux community
    now.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 默认文件系统现在是XFS，取代了ext4。XFS已经存在很长时间，但显然现在正在引起企业Linux社区的关注。
- en: Password policies
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 密码策略
- en: 'The PAM module that enforces password quality now defaults to `pam_pwquality`,
    replacing the older `pam_cracklib`. Editing the `/etc/security/pwquality.conf`
    file will allow you to specify the minimum password length and password complexity.
    The password complexity consists of:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 强制密码质量的PAM模块现在默认为`pam_pwquality`，替代了较老的`pam_cracklib`。编辑`/etc/security/pwquality.conf`文件可以指定最低密码长度和密码复杂性。密码复杂性包括：
- en: '**minclass**: This is the minimum number of character class types, uppercase,
    lowercase, numeric, and non-alphanumeric'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**minclass**：这是最少的字符类别类型数量，包括大写字母、小写字母、数字和非字母数字字符'
- en: '**maxsequence**: This limits the number of consecutive characters of the same
    class, such as `12345` or `bcfag`; both have a sequence of five characters, whereas
    `bcafG` only has a sequence of four characters from the same class (lowercase)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**maxsequence**：此选项限制同一类别字符的连续数量，例如`12345`或`bcfag`；这两个序列都有五个连续字符，而`bcafG`只有四个来自同一类别（小写字母）的字符。'
- en: '**maxrepeat**: This limits the number of repeating characters'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**maxrepeat**：此选项限制重复字符的数量'
- en: The existing file can act as an example, or we can use the manual using the
    `man 5 pwqulality.conf` command for more detailed information.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现有的文件可以作为示例，或者我们可以使用`man 5 pwqulality.conf`命令查看手册以获取更详细的信息。
- en: Summary
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: You are now ready to walk out into the world and declare your new-found knowledge
    of CentOS. I have been able to help you through some simple best practice goals
    to manage the services we looked at throughout this book as well as introduce
    some new elements of CentOS 7\. Of course, for a long time, you will still come
    across plenty of CentOS 6 systems to keep you busy, and most elements are consistent
    from Version 6 to Version 7, but keeping up to date with the latest enhancements
    is always useful.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你准备好走出这个世界，宣布你对CentOS的新知识。我已经帮助你通过一些简单的最佳实践目标来管理我们在本书中所涉及的服务，并介绍了CentOS 7的一些新元素。当然，在很长一段时间里，你仍然会遇到许多CentOS
    6系统来保持忙碌，大部分元素从版本6到版本7保持一致，但跟上最新的增强功能始终是有用的。
