- en: Chapter 1. Debian – Build a Web Server
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章：Debian – 构建一个 Web 服务器
- en: Welcome to *Instant Debian – Build a Web Server*.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到*即时 Debian – 构建一个 Web 服务器*。
- en: With the advent of social computing and the explosion of data and API-based
    economies, web applications are taken to a whole new level. They are not the vehicle
    but the center of gravity of a big part of the IT industry, including the enterprise
    customers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 随着社交计算的到来，以及数据和基于 API 的经济的爆炸性增长，Web 应用程序达到了一个全新的水平。它们不仅仅是载体，而是 IT 行业中一个大部分的重心，包括企业客户。
- en: No longer do companies choose a technology stack just because of features but
    because of reduced time to market, which enables them to grow faster and accommodate
    demand while keeping a sane bottom line.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，公司选择技术栈不再仅仅因为功能，而是因为缩短了上市时间，这使它们能够更快地增长并满足需求，同时保持合理的利润。
- en: Debian has a long-standing tradition as a very flexible GNU/Linux-based distribution,
    in part because of its packaging system and also because it has been made possible
    by a dynamic community of developers and maintainers.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 一直以来都是一个非常灵活的基于 GNU/Linux 的发行版，部分原因是其打包系统，另一个原因是得益于一个充满活力的开发者和维护者社区。
- en: Even though it is a proven platform for web applications, most web developers
    face steep learning curves. Maybe this happens because they are not familiar with
    GNU/Linux, they have an enterprise experience with other packaging systems such
    as RPM, or because they traditionally didn't manage aspects such as performance
    or security.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它是一个经过验证的 Web 应用平台，大多数 Web 开发人员还是面临着陡峭的学习曲线。也许这是因为他们不熟悉 GNU/Linux，或者他们有使用其他打包系统（如
    RPM）的企业经验，或是因为他们传统上没有管理性能或安全性等方面。
- en: Although it's meant to be just a starting point in your Debian journey, the
    standardized instructions in this book, such as using `sudo` or `apt-get`, can
    be replicated across most administrative and development scenarios you will encounter
    in the future.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本书旨在作为你 Debian 之旅的起点，但书中的标准化指令，如使用 `sudo` 或 `apt-get`，可以在你未来遇到的大多数管理和开发场景中复制应用。
- en: The book also outlines an effective approach to performance and scaling by presenting
    different architectures that can help accommodate growth, including cloud computing,
    where Debian can run as a workload to increase your efficiencies.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书还通过展示不同的架构，阐述了一种有效的性能和扩展方法，帮助适应增长，包括云计算，在云中 Debian 可以作为工作负载运行，提升你的效率。
- en: This micro book covers the decision-making process, installation, and configuration
    of a solid foundation on which you can deploy web-based applications on Debian—whether
    they are written on PHP, Perl, Python, or Ruby.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本微型书籍涵盖了决策过程、安装和配置的内容，为你在 Debian 上部署基于 Web 的应用程序打下坚实的基础——无论这些应用程序是用 PHP、Perl、Python
    还是 Ruby 编写的。
- en: Starting off by providing a little knowledge of Debian, this book will guide
    you to a properly configured system that tackles the most common pitfalls DevOps
    encounter, such as partitioning, filesystem permissions, or scaling, thereby providing
    a straightforward approach to Debian for web applications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书首先提供关于 Debian 的一些知识，然后将引导你完成一个适当配置的系统，解决 DevOps 遇到的最常见问题，如分区、文件系统权限或扩展，从而为
    Web 应用程序提供一个简明易懂的 Debian 方法。
- en: Without further ado, we can proceed to the first set of recipes.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 不再多说，我们可以进入第一组配方。
- en: Choosing the right flavor of Debian (Simple)
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择正确的 Debian 版本（简单）
- en: The Debian Project prides itself on producing the Universal Operating System.
    This means that the software the project puts together runs on a broad set of
    hardware (architectures) for several types of purposes, and even for different
    kernels such as Linux, Hurd, or FreeBSD.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 项目以开发通用操作系统为荣。这意味着该项目开发的软件可以在多种硬件架构上运行，适用于多个不同的目的，甚至包括不同的内核，如 Linux、Hurd
    或 FreeBSD。
- en: Choosing the right flavor of Debian for your setup might seem intimidating at
    first, but this recipe will provide you with decision elements to help you reduce
    your time to market with Debian and choose the right architecture and installation
    method, particularly for a web server.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为你的设置选择正确的 Debian 版本可能一开始看起来有些令人生畏，但本配方将为你提供决策要素，帮助你减少使用 Debian 的时间，并选择正确的架构和安装方法，特别是针对
    Web 服务器。
- en: Getting ready
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'At any point in time, Debian has three different branches available for use:
    stable, testing, and unstable. Think of unstable as the cutting edge of free software;
    it has reasonably modern software packages, and sometimes those packages introduce
    changes or features that may break the user experience. After an amount of time
    has passed (usually 10 days, but it depends on the package''s upload priority),
    the new software is considered to be relatively safe to use and is moved to testing.
    Testing can provide a good balance between modern software and relatively reliable
    software. Testing goes through several iterations during the course of several
    years, and eventually it''s frozen for a new stable release. This stable release
    is supported by the Debian Project for a number of years, including feature and
    security updates.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何时间点，Debian 都有三个不同的分支可供使用：稳定版（stable）、测试版（testing）和不稳定版（unstable）。可以把不稳定版看作是自由软件的前沿，它包含了相对较新的软件包，有时这些软件包会引入一些变化或功能，可能会破坏用户体验。经过一段时间（通常是
    10 天，但这取决于软件包的上传优先级）后，新的软件被认为相对安全使用，并被移至测试版。测试版能够在现代软件和相对可靠的软件之间提供良好的平衡。测试版会经过几轮迭代，持续几年，最终会被冻结，作为新的稳定版发布。该稳定版会得到
    Debian 项目的支持，包括特性和安全更新，支持多年。
- en: Chances are you are building something that has an interesting team of people
    to back it up. In such scenarios, web development teams have chosen to go with
    testing, or even unstable, in order to get the latest software available. In other
    cases, conservative teams or groups with less savvy staff have resorted to stable
    because it's consistent for years.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能正在构建一些有趣的团队来支持它。在这种情况下，网页开发团队通常会选择使用测试版，甚至是不稳定版，以便获取最新的软件。在其他情况下，保守的团队或员工技术水平较低的团队则会选择使用稳定版，因为它能在几年内保持一致性。
- en: It is up to you to choose between any, but this book will get you started with
    stable. You can change your **Advanced Packaging Tool** (**APT**) configuration
    later and upgrade to testing and unstable, but the initial installation media
    that we will use will be stable. Also, it is important that developers target
    the production environment as closely as possible. If you use stable for production,
    using stable for development will save a lot of time debugging mismatches.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 选择哪种方法完全取决于你，但本书将带你从稳定版开始。你可以稍后修改 **高级包管理工具** (**APT**) 配置，升级到测试版和不稳定版，但我们使用的初始安装介质将是稳定版。另外，开发者应该尽量让生产环境和开发环境相似。如果你在生产环境中使用稳定版，使用稳定版进行开发将节省大量调试不匹配问题的时间。
- en: You should know which versions of programming languages, modules, libraries,
    frameworks, and databases your application will be targeting, as this will influence
    the selection of your branch. You can go to [packages.debian.org](http://packages.debian.org)
    to check the versions available for a specific package across different branches.
    Choosing testing (outside a freeze period) and unstable will also mean that you'll
    need to have an upgrade strategy where you continuously check for new updates
    (with tools such as cron-apt) and install them if you want to take advantage of
    new bug fixes and so on.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该知道你的应用程序将要针对哪些版本的编程语言、模块、库、框架和数据库，因为这会影响分支的选择。你可以访问 [packages.debian.org](http://packages.debian.org)
    查看不同分支中某个软件包的可用版本。选择测试版（在非冻结期）和不稳定版意味着你需要有一个升级策略，不断检查新的更新（使用如 cron-apt 等工具），并在需要时安装它们，以便利用新的错误修复等。
- en: How to do it…
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Debian offers a plethora of installation methods for the operating system. From
    standard CDs and DVDs, Debian also offers reduced-size installation media, bootable
    USB images, network boot, and other methods. The complexity of installation is
    a relative factor that usually is of no concern for DevOps since installation
    only happens once, while configuration and administration are continuously happening.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 提供了多种操作系统安装方法。除了标准的 CD 和 DVD 外，Debian 还提供了减小尺寸的安装媒体、可启动的 USB 镜像、网络启动和其他安装方法。安装的复杂性是一个相对因素，通常对于
    DevOps 来说并不重要，因为安装只会进行一次，而配置和管理则是持续进行的。
- en: 'Before you start considering replication methods (such as precooked images,
    network distribution, configuration management, and software delivery), you and
    your team can choose from the following installation methods:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在你开始考虑复制方法（例如预制镜像、网络分发、配置管理和软件交付）之前，你和你的团队可以选择以下安装方法：
- en: If you are installing Debian on a third-party provider (such as a cloud vendor),
    they will either provide a Debian image for you, or you can prepare your own in
    virtualization software and upload the disk later.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你是在第三方提供商（例如云服务商）上安装Debian，他们会提供Debian镜像给你，或者你可以在虚拟化软件中准备好自己的镜像，并稍后上传磁盘。
- en: If you are installing on your own hardware (including virtualized environments),
    it's advisable to get either the netinst ISO or the full first DVD ISO. It all
    depends on whether you are installing several servers over the course of several
    months (thus making the DVD obsolete as new updates come out) or have a good Internet
    connection (or proxies and caching facilities, nearby CDNs, and so on) for downloading
    any additional packages that the netinst disk might not contain.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你在自己的硬件上安装（包括虚拟化环境），建议选择netinst ISO或者完整的第一张DVD ISO。这取决于你是否打算在几个月内安装多台服务器（从而随着新更新的发布，DVD版逐渐变得过时），或者你是否有良好的互联网连接（或者代理、缓存设施、附近的CDN等），以便下载netinst镜像可能未包含的其他软件包。
- en: In general, if you are only deploying a handful of servers and have a good Internet
    connection at hand, I'd suggest you choose the amd64 netinst ISO, which we will
    use in this book.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，如果你只是部署少量的服务器，并且手头有良好的互联网连接，我建议你选择amd64 netinst ISO，这也是本书中我们将使用的版本。
- en: There's more…
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: There are several other points that you need to consider while choosing the
    right flavor of Debian. One of them is the architecture you're using and targeting
    for development.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择合适的Debian版本时，你需要考虑一些其他因素。其中之一就是你使用的架构以及你为开发目标所选的架构。
- en: Architectures
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 架构
- en: There are tens of computer architectures available in the market. ARM, Intel,
    AMD, SPARC, and Alpha are all different types of architectures.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有数十种计算机架构可供选择。ARM、Intel、AMD、SPARC和Alpha都是不同类型的架构。
- en: Debian uses the architecture codenames i386 and amd64 for historical reasons.
    i386 actually means an Intel or Intel-compatible, 32-bit processor (x86), while
    amd64 means an Intel or Intel-compatible, 64-bit processor (x86_64). The brand
    of the processor is irrelevant.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Debian出于历史原因，使用了i386和amd64这两个架构代号。i386实际上表示的是一个Intel或兼容Intel的32位处理器（x86），而amd64表示的是一个Intel或兼容Intel的64位处理器（x86_64）。处理器的品牌并不重要。
- en: A few years ago, choosing between the two was tricky as some binary-only, non-free
    libraries and software were not always available for 64-bit processors, and architecture
    mismatches happened. While there were workarounds (such as running a 32-bit-only
    software using special libraries), it was basically a matter of time until popular
    software such as Flash caught up with 64-bit versions—thus, the concern was mainly
    about laptops and desktops.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 几年前，在这两者之间做出选择是一个棘手的问题，因为一些仅限二进制、非自由的库和软件并不总是可以用于64位处理器，架构不匹配的问题也时有发生。虽然有一些解决方法（比如使用特殊库运行仅支持32位的软件），但这基本上只是时间问题，直到像Flash这样的流行软件跟上64位版本的步伐——因此，这个问题主要是关于笔记本电脑和台式机。
- en: Nowadays, if your CPU (and/or your hypervisor) has 64-bit capabilities (most
    Intel do), it's considered a good practice to use the amd64 architecture. We will
    use amd64 in this book. And since Debian 7.0, the multiarch feature has been included,
    allowing more than one architecture to be installed and be active on the same
    hardware.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，如果你的CPU（和/或虚拟化管理程序）支持64位（大多数Intel支持），使用amd64架构被认为是一种良好的做法。在本书中我们将使用amd64架构。而自Debian
    7.0以来，已包括多架构特性，允许在同一硬件上安装并激活多个架构。
- en: While the market seems to settle around 64-bit Intel processors, the choice
    of an architecture is still important because it determines the future availability
    of software that you can choose from Debian. There might be some software that
    is not compiled for or not compatible with your specific architecture, but there
    is software that is independent of the architecture.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管市场似乎已围绕64位Intel处理器稳定下来，但架构的选择仍然很重要，因为它决定了你可以从Debian中选择的软件的未来可用性。可能会有一些软件未针对你的特定架构编译，或者与你的架构不兼容，但也有一些软件与架构无关。
- en: 'DevOps are usually pragmatic when it comes to choosing architectures, so the
    following two questions aim to help you understand what to expect when it comes
    to it:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps通常在选择架构时务实，因此以下两个问题旨在帮助你了解在选择架构时应期待什么：
- en: Will you run your web applications on your own hardware? If so, do you already
    have this hardware or will you procure it?
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你是否会在自己的硬件上运行Web应用？如果是，你是否已经拥有这些硬件，还是需要采购？
- en: If you need to procure hardware, take a look at the existing server hardware
    in your datacenter. Factors such as a preferred vendor, hardware standardization,
    and so on are all important when choosing the right architecture. From the most
    popular 32- or 64-bit Intel and AMD processors, the growing ARM ecosystem, and
    also the more venerable but declining SPARC or Itanium, Debian is available for
    lots of architectures.
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你需要采购硬件，首先看看你数据中心现有的服务器硬件。在选择合适的架构时，诸如首选供应商、硬件标准化等因素都非常重要。从最流行的32位或64位Intel和AMD处理器、日益壮大的ARM生态系统，到更为传统但逐渐衰退的SPARC或Itanium，Debian支持许多架构。
- en: If you are out in the market for new hardware, your options are most likely
    based on an Intel- or AMD-compatible, 32- or 64-bit, server-grade processor. Your
    decisions will be influenced by factors such as the I/O capacity (throughput and
    speed), memory, disk, and so on, and the architecture will most likely be covered
    by Debian.
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你打算购买新硬件，你的选择很可能会基于兼容Intel或AMD的32位或64位服务器级处理器。你的决策将受到I/O容量（吞吐量和速度）、内存、磁盘等因素的影响，而且架构很可能会被Debian所支持。
- en: Will you run your web applications on third-party hardware, such as a **Virtual
    Private Server** (**VPS**) provider or a cloud **Infrastructure as a Service**
    (**IaaS**) provider?
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你是否会在第三方硬件上运行你的Web应用程序，比如**虚拟专用服务器**（**VPS**）提供商或云**基础设施即服务**（**IaaS**）提供商？
- en: Most providers will provide you with prebuilt images for Debian. They are either
    32- or 64-bit, x86 images that have some sort of community support—but, be aware
    they might have no vendor support, or in some cases waive warranties and/or other
    factors such as the SLA.
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数提供商会为你提供预构建的Debian镜像。它们通常是32位或64位的x86镜像，并且有某种社区支持——但请注意，它们可能没有供应商支持，或者在某些情况下可能会放弃保修和/或其他因素，如SLA（服务级别协议）。
- en: You should be able to prepare your own Debian installation using virtualization
    software (such as KVM, VirtualBox, or Hyper-V) and then upload the virtual disk
    (VHD, VDI, and so on) to your provider.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该能够使用虚拟化软件（例如KVM、VirtualBox或Hyper-V）准备自己的Debian安装，然后将虚拟磁盘（VHD、VDI等）上传到你的提供商。
- en: Installing Debian GNU/Linux (Simple)
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Debian GNU/Linux（简单）
- en: Once you choose the right installation method for Debian, you're ready to fire
    up the Debian-Installer. During installation you will also execute the initial
    configuration, and you will need to decide on several important factors of your
    setup, such as partitioning.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了合适的Debian安装方式，你就可以启动Debian安装程序。在安装过程中，你还需要进行初步配置，并决定几个重要的设置因素，比如分区。
- en: Getting ready
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before you start to install Debian, you will need to decide how you want to
    partition your disks. There are several reasons why one would like to partition
    disks beyond the **canonical** one-partition approach, most likely for security
    or specialized storage reasons. Also, if you will be using SAN/NAS dedicated hardware,
    the setup can be either simplified or made more complex.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始安装Debian之前，你需要决定如何划分磁盘。除去**规范**的单一分区方式外，通常有其他理由需要分区，最常见的是出于安全或专用存储的需求。另外，如果你将使用SAN/NAS专用硬件，设置可以简化或复杂化。
- en: Debian, like several POSIX-compliant operating systems and some other Linux
    distributions, follows the FHS or Filesystem Hierarchy Standard and you can expect
    configuration files in `/etc`, system files in `/usr` and `/lib`, variable files
    in `/var`, and so on.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Debian像其他符合POSIX标准的操作系统和一些其他Linux发行版一样，遵循FHS或文件系统层次标准，你可以期望配置文件位于`/etc`，系统文件位于`/usr`和`/lib`，可变文件位于`/var`，等等。
- en: There might be some discrepancies, though. FHS calls for `/srv` for server roles,
    but most installations sit variable files in `/var`. Static files, application
    files, and even database files all sit there. Thus, you might want to put `/var`
    on a different partition if you have advanced partitioning or permission needs.
    You could even partition out `/var/lib/mysql` for the MySQL database files, `/var/www`
    for the static and application files (the `WWW/Document Root` folder), and so
    on, like we will do as an example in this book using **Logical Volumes** (**LVM**).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，可能会有一些差异。FHS（文件系统层次结构标准）规定`/srv`用于服务器角色，但大多数安装将可变文件放在`/var`中。静态文件、应用程序文件甚至数据库文件都会存放在那里。因此，如果你有高级的分区或权限需求，你可能希望将`/var`放在不同的分区中。你甚至可以将`/var/lib/mysql`用于MySQL数据库文件，`/var/www`用于静态和应用程序文件（即`WWW/Document
    Root`文件夹），等等，正如我们在本书中的示例中使用**逻辑卷**（**LVM**）所展示的那样。
- en: 'Logical volumes will enable you to create more flexible data containers on
    top of concepts you already know: disks and partitions. Those flexible data containers
    created by logical volumes can expand different partitions in different disks
    and are easier to manage, resize, and move. But it can also add management overhead,
    and will require a more complex set up for clustering.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑卷将使你能够在你已经了解的概念（磁盘和分区）之上创建更灵活的数据容器。这些由逻辑卷创建的灵活数据容器可以扩展到不同磁盘上的不同分区，且更易于管理、调整大小和移动。但它也可能增加管理开销，并且需要为集群设置更复杂的配置。
- en: By **granular** we mean the ability of setting different behaviors on different
    partitions depending on the use case. For example, a system administrator can
    partition out `/var/mail` to set ACLs/quotas and so on, DevOps might want to partition
    out `/var` to set security flags such as `noexec` (no executable files, which
    is OK in your web application since processes outside `/var` actually run your
    application), `nodev` (no special device files), and `nosuid` (no auto-escalation
    files) or remove filesystem attributes that impact performance (such as time),
    among others.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**粒度**指的是根据使用场景在不同分区上设置不同行为的能力。例如，系统管理员可以将 `/var/mail` 分区出来，以设置 ACL、配额等，DevOps
    可能希望将 `/var` 分区出来，以设置像 `noexec`（禁止执行文件，在 Web 应用程序中可以，因为 `/var` 外的进程才实际运行你的应用程序）、`nodev`（禁止特殊设备文件）、`nosuid`（禁止自动提升权限的文件）等安全标志，或者移除影响性能的文件系统属性（例如时间），等等。'
- en: 'Here''s a list of flags and their impact on partitioning:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些标志及其对分区的影响：
- en: '| Flag | Description |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 标志 | 描述 |'
- en: '| --- | --- |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `nodev` | Does not interpret any special files for devices (character or
    block special files) |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `nodev` | 不解析任何特殊文件用于设备（字符设备或块设备特殊文件） |'
- en: '| `nosuid` | Does not allow files that enable user or group impersonation (for
    example, running as root) |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `nosuid` | 不允许启用用户或组模拟（例如，以 root 身份运行）的文件 |'
- en: '| `noexec` | Does not allow execution of binaries in the filesystem, useful
    not only for public access partitions such as `/tmp`, but also anywhere for executables
    that don''t make sense (such as pure web apps!) |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `noexec` | 不允许在文件系统中执行二进制文件，这不仅对于像`/tmp`这样的公共访问分区有用，还适用于任何没有意义的可执行文件（例如纯
    Web 应用程序！） |'
- en: '| `noatime` | Does not update the access times on the inodes of the filesystem,
    making access faster for servers with lots of small, heavily accessed files |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `noatime` | 不更新文件系统 inode 的访问时间，使得对于包含大量小型、频繁访问文件的服务器，访问速度更快 |'
- en: Other directories that you might want to partition out are `/tmp`, which will
    inevitably store temporary files generated by your framework, your application
    server and other services, making the `noexec/nodev/nosuid` combo is very popular
    in this case to prevent the execution of potentially malicious files, along with
    dedicated disk space monitoring to prevent the partition from filling out, which
    can stop the server altogether.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想要分区的其他目录是 `/tmp`，它将不可避免地存储由框架、应用程序服务器和其他服务生成的临时文件，这使得 `noexec/nodev/nosuid`
    的组合在这种情况下非常流行，用来防止执行潜在的恶意文件，同时通过专门的磁盘空间监控来防止分区填满，从而防止服务器崩溃。
- en: In other scenarios (such as the mail server we talked about earlier), people
    will find great value in partitioning out `/home`, as they will be able to set
    ACLs and quotas and manage space much easier. But in a web application server
    scenario, while you are free to continue partitioning (Debian will partition out
    the swap space and `/boot` for you), the benefit you can get from continuing to
    do so (`/usr`, `/etc`, and so on) is arguable and can add unnecessary complexity.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他场景中（例如我们之前讨论的邮件服务器），人们会发现将 `/home` 分区出来非常有价值，因为他们可以设置 ACL 和配额，更容易管理空间。但在
    Web 应用程序服务器的场景中，虽然你可以继续进行分区（Debian 会为你分区 swap 空间和 `/boot`），但是继续进行（如 `/usr`、`/etc`
    等）带来的好处是有争议的，并且可能增加不必要的复杂性。
- en: How to do it…
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Once you''ve decided on whether you want to partition out things or not, how
    you will split disk space, which flags/policies you will set to each partition
    and whether you''ll use RAID, LVM, and any other technique (SAN/NAS, and so on),
    you can follow these steps to install Debian:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你决定了是否要进行分区，如何划分磁盘空间，设置哪些标志/策略到每个分区，以及是否使用 RAID、LVM 或其他技术（如 SAN/NAS 等），你可以按照以下步骤来安装
    Debian：
- en: Go to [www.debian.org/distrib/netinst](http://www.debian.org/distrib/netinst),
    and choose **amd64** under **Small CDs**. The ISO file will download. You can
    now burn the ISO to a CD/DVD (if you need a physical disk to install), or boot
    your hypervisor with this ISO file. Since Debian 7.0, ISO files can also be written
    to USB media, and you can find specific images for previous releases under the
    `hd-media` folders. There are installation instructions on the installation manual
    available at [http://www.debian.org/releases/stable/installmanual](http://www.debian.org/releases/stable/installmanual);
    alternatively, you can create a bootable USB from the netinst ISO using UNetbootin.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [www.debian.org/distrib/netinst](http://www.debian.org/distrib/netinst)，在
    **Small CDs** 下选择 **amd64**。ISO 文件将开始下载。你可以将 ISO 刻录到 CD/DVD（如果你需要一个物理光盘进行安装），或者用这个
    ISO 文件启动你的虚拟化管理程序。从 Debian 7.0 开始，ISO 文件也可以写入 USB 媒介，你还可以在 `hd-media` 文件夹中找到旧版本的专用镜像。有关安装的详细说明，请参考安装手册，网址为
    [http://www.debian.org/releases/stable/installmanual](http://www.debian.org/releases/stable/installmanual)；或者，你也可以使用
    UNetbootin 从 netinst ISO 创建可启动 USB。
- en: Fire up your server, and put the netinst disk in your CD/DVD unit. Reboot your
    server and follow the onscreen instructions (or manual instructions) to boot from
    CD/DVD. Debian will greet you with the following screen:![How to do it…](img/8840OS_02_01.jpg)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动你的服务器，将 netinst 光盘放入 CD/DVD 驱动器。重启服务器并按照屏幕上的指示（或手动说明）从 CD/DVD 启动。Debian 会显示如下界面：![如何操作…](img/8840OS_02_01.jpg)
- en: Hitting *ENTER* will suffice. The Debian installation will start, and you will
    be guided through a series of prompts (leveraging a technology called debconf)
    that will help you install and perform the initial setup of your installation.
    You might choose **Graphical install**, which will run you through the same prompts
    but with mouse support, colors, buttons, and scrollbars. In both modes, you can
    use keyboard shortcuts to make things easier (for example, in the following screen,
    pressing *S* to go for **Spanish** from a list of languages, using *Home*/*End*/*Page
    Up*/*Page Dn*, and so on).![How to do it…](img/8840OS_02_02.jpg)
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *ENTER* 键即可开始安装。Debian 安装程序将引导你通过一系列提示（利用名为 debconf 的技术）帮助你完成安装和初步设置。你也可以选择
    **图形化安装**，该选项会带你走过相同的步骤，但具有鼠标支持、颜色、按钮和滚动条。在两种模式下，你都可以使用快捷键简化操作（例如，在以下界面中，按 *S*
    键即可从语言列表中选择 **西班牙语**，还可以使用 *Home*/*End*/*Page Up*/*Page Dn* 等键）。![如何操作…](img/8840OS_02_02.jpg)
- en: Choose the installation language. You can just hit *Enter* if you want **English**.
    Debian prides itself on having an installer available in several languages. Your
    selection will also hint the installer on the default country, mirrors, and time
    zones. Depending on your location you may want to adjust the following screens.
    Pay special attention to time zones, as time keeping and proper hostnames are
    essential to a properly functioning Linux server. Your selection will also define
    the keyboard layout. For example, non-English speaking people using the Latin
    alphabet might choose **US – International**.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择安装语言。如果你选择 **英语**，可以直接按 *Enter* 键。Debian 以其安装程序支持多种语言而自豪。你的选择还会提示安装程序默认的国家、镜像源和时区。根据你的所在位置，你可能需要调整后续的设置。特别注意时区设置，因为时间同步和正确的主机名对于
    Linux 服务器的正常运行至关重要。你的选择还会决定键盘布局。例如，使用拉丁字母的非英语国家用户可能会选择 **US – International**。
- en: 'Now, Debian will check for network connectivity. Particularly, it tries to
    get an IPv4 address from a DHCP server. This might not be your scenario, as DHCP
    servers are not usually deployed on web application environments. The operation
    will time out, and you will be asked to configure your network interface: IP address
    for the server, network mask, gateway, and DNS servers. The screen will be similar
    to the following screenshot:![How to do it…](img/8840OS_02_03.jpg)'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，Debian 会检查网络连接情况，特别是尝试从 DHCP 服务器获取 IPv4 地址。这可能不适用于你的情况，因为在 Web 应用环境中通常不会部署
    DHCP 服务器。此操作会超时，你将被要求配置网络接口：服务器的 IP 地址、子网掩码、网关和 DNS 服务器。该界面将类似于以下截图：![如何操作…](img/8840OS_02_03.jpg)
- en: The next step is the hostname/domain prompt. As mentioned before, this is an
    important part, as you want to construct a **Fully Qualified Domain Name** (**FQDN**)
    that looks like `foo.bar.com`, where `foo` is your hostname and `bar.com` is your
    domain name. You don't need to **own** bar.com—and if you do, the IP addresses
    don't need to match or even exist in your DNS zone. Although it is highly recommended
    to use a real FQDN—both for troubleshooting and for performance reasons. You need
    to have the FQDN as you will use it later for network troubleshooting, clustering,
    copying files, and so on; if it is not configured correctly, it can be the source
    of lots of headaches. Large server setups use nomenclature to pinpoint the server
    they are managing later (such as, www-mia-01 or db-pdx-05). The input screen for
    the hostname is shown as follows:![How to do it…](img/8840OS_02_04.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是主机名/域名提示。如前所述，这是一个重要部分，因为你需要构建一个**完全限定域名**（**FQDN**），它看起来像`foo.bar.com`，其中`foo`是你的主机名，`bar.com`是你的域名。你不需要**拥有**
    bar.com——即使你拥有，IP地址也不需要匹配或存在于你的DNS区域中。尽管如此，强烈建议使用一个真实的FQDN——无论是为了故障排除还是性能原因。你需要配置FQDN，因为稍后你将在网络故障排除、集群、文件复制等方面使用它；如果没有正确配置，它可能会成为许多麻烦的根源。大型服务器配置使用命名法来定位他们所管理的服务器（例如，www-mia-01
    或 db-pdx-05）。主机名输入界面如下所示：![如何操作…](img/8840OS_02_04.jpg)
- en: 'And similarly, for FQDN, as shown in the following screenshot:'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同样地，对于FQDN，如以下截图所示：
- en: '![How to do it…](img/8840OS_02_05.jpg)'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/8840OS_02_05.jpg)'
- en: Next, define the root (administrator or superuser) password. You should pick
    a complex one, even if it's hard to remember, since you will not be using it on
    a day-to-day basis and will most likely be using `sudo` instead—a delegation mechanism.
    And you will also define an initial user with no special permissions (but basic
    device access)—go ahead and put in generic information if you like but still protect
    the account with a strong password as this user will be able to login via **Secure
    Shell** (**SSH**) and execute commands on a shell, which in a web application
    scenario are all potential points of entry. We will use DevOps.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，定义根（管理员或超级用户）密码。你应该选择一个复杂的密码，即使它很难记住，因为你不会每天都使用它，通常会使用`sudo`——这是一种委托机制。你还将定义一个没有特殊权限的初始用户（但具有基本设备访问权限）——如果你愿意，可以填入通用信息，但仍需用强密码保护该账户，因为该用户能够通过**安全外壳协议**（**SSH**）登录并在终端中执行命令，在Web应用场景中，这些都是潜在的入口点。我们将使用DevOps。
- en: 'It''s time for partitioning. With the information gathered at the preparation
    stage, you will now define partitions either manually (most likely) or by using
    the guided mode. In the guided mode, it will be easier for you to set up, say
    LVM, but you will wind up with only three choices: all in one partition, separate
    `/home`, or separate `/home`, `/usr`, `/var`, and `/tmp`—and as mentioned before,
    you might not want to split `/home` and `/usr`. You can always delete those partitions
    and give space back to `/var` and `/tmp` (`/tmp` could be a couple of GB unless
    you have a hungry app in which case you should watch tmpfs memory usage). Also,
    you can always change the partitions (and even partition from scratch with resizing
    and everything) when the system is already operating, ideally before you start
    throwing data into it.'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是分区的时机了。通过在准备阶段收集的信息，你现在将定义分区，可以手动进行（大概率）或使用引导模式。在引导模式下，设置LVM会更容易，但你最终只有三种选择：所有分区为一个，单独的`/home`，或单独的`/home`、`/usr`、`/var`和`/tmp`——如前所述，你可能不希望将`/home`和`/usr`拆分。你始终可以删除这些分区，并将空间归还给`/var`和`/tmp`（除非你有一个占用内存较多的应用程序，否则`/tmp`可能是几个GB）。另外，你也可以在系统运行时更改分区（甚至重新分区并调整大小），理想情况下在你开始将数据投入其中之前。
- en: Our suggestion is that you choose LVM and all in one partition, and then delete
    the logical volume for root and start splitting that space in new logical volumes.
    In our example, we use one for web server files, one for database files, one for
    `/tmp`, and one for the rest of the disk. The option to use the entire disk with
    LVM is shown in the following screenshot:![How to do it…](img/8840OS_02_06.jpg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们建议你选择LVM和所有分区合并为一个，然后删除根分区的逻辑卷，并开始将该空间拆分成新的逻辑卷。在我们的示例中，我们为Web服务器文件、数据库文件、`/tmp`和剩余磁盘空间各分配一个逻辑卷。使用LVM和整个磁盘选项如以下截图所示：![如何操作…](img/8840OS_02_06.jpg)
- en: And, similarly, to use a single partition, as shown in the following screenshot:![How
    to do it…](img/8840OS_02_07.jpg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样地，使用单个分区，如以下截图所示：![如何操作…](img/8840OS_02_07.jpg)
- en: You can then delete the logical volume and start creating new ones as shown
    in the following screenshot:![How to do it…](img/8840OS_02_08.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后你可以删除逻辑卷并开始创建新的卷，如下图所示：![如何操作…](img/8840OS_02_08.jpg)
- en: Also, start creating new ones in the main volume group that is remaining, as
    shown in the following screenshot:![How to do it…](img/8840OS_02_09.jpg)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，开始在剩余的主卷组中创建新的卷，如下图所示：![如何操作…](img/8840OS_02_09.jpg)
- en: You can set partition options individually per each logical volume/partition
    you create for `/tmp`, as shown in the following screenshot:![How to do it…](img/8840OS_02_10.jpg)
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以为每个你创建的逻辑卷/分区单独设置分区选项，如下图所示：![如何操作…](img/8840OS_02_10.jpg)
- en: 'Here''s a recap table with our choices for future reference:'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是我们选择的汇总表，供未来参考：
- en: '| Partition | Size | Flags | Reserved space |'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 分区 | 大小 | 标志 | 保留空间 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| `/var/lib/mysql` | Large enough for your projected tables, indices, and so
    on | `nodev``nosuid``noexec`Optimized for large files | None |'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `/var/lib/mysql` | 足够大以容纳预计的表、索引等 | `nodev``nosuid``noexec`优化为大文件 | 无 |'
- en: '| `/var/www` | Large enough for your application scripts and static files |
    `nodev``nosuid``noexec``noatime` | None |'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `/var/www` | 足够大以容纳你的应用脚本和静态文件 | `nodev``nosuid``noexec``noatime` | 无 |'
- en: '| `/tmp` | If you are writing hundreds of MB here, you could start using other
    partitions | `nodev``nosuid``noexec``noatime`Optimized for small files (might
    vary) | None |'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `/tmp` | 如果你在这里写入数百MB，可能需要使用其他分区 | `nodev``nosuid``noexec``noatime`优化为小文件（可能有所不同）
    | 无 |'
- en: '| `/boot` | Large enough for the projected operating system size. The final
    size of `/` after all software in the book was installed is less than 850 MB.
    | None (`/boot` contains the kernel and initrd files and unless you plan on collecting
    kernels lower than 100 MB for it can be enough) | 5 percent (default) |'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `/boot` | 足够大以容纳预计的操作系统大小。安装书中所有软件后的`/`最终大小小于850 MB。 | 无（`/boot`包含内核和initrd文件，除非你计划收集小于100
    MB的内核，否则它应该足够） | 5％（默认） |'
- en: The partitioning also involves the initial formatting of the partitions. Since
    wheezy (Version 7.0,released in May 2013 [http://www.debian.org/releases/stable/amd64/release-notes/](http://www.debian.org/releases/stable/amd64/release-notes/)),
    Debian will use the ext4 filesystem by default, but you can change that to any
    other supported filesystem of your preference. There's a sweet spot right now
    with the amount of innovation happening on storage hardware and the amount of
    innovation happening on filesystems. Your application will, most likely, be I/O
    bound, meaning that better disk architectures (caches, speed, data distribution,
    underlying technologies, and so on) will contribute to better performance and
    scalability.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分区还涉及对分区的初始格式化。自wheezy（版本7.0，发布于2013年5月 [http://www.debian.org/releases/stable/amd64/release-notes/](http://www.debian.org/releases/stable/amd64/release-notes/)）以来，Debian默认使用ext4文件系统，但你可以将其更改为任何其他你偏好的受支持文件系统。如今，在存储硬件和文件系统创新的双重驱动下，正处于一个黄金时期。你的应用程序最有可能是I/O受限的，这意味着更好的磁盘架构（缓存、速度、数据分布、底层技术等）将有助于更好的性能和可扩展性。
- en: After partitioning and formatting, Debian is ready to install the operating
    system and initial software to the disk.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 分区和格式化完成后，Debian准备好将操作系统和初始软件安装到磁盘中。
- en: There's more…
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: If you are using the netinst disk, you will be prompted to use an online repository
    (mirror) that will most likely be preselected based on your country selections.
    You can choose one if you configured your network interfaces correctly, or you
    can skip it at any time (a nice trick is to use *Esc* to go to the upper menu
    on any function) and just install the basics that come with the netinst disk.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是netinst磁盘，系统会提示你使用一个在线仓库（镜像），这个镜像通常会根据你选择的国家自动预选。你可以选择它，如果你正确配置了网络接口，或者你也可以随时跳过（一个好技巧是按*Esc*键返回到上级菜单），然后只安装netinst磁盘自带的基本内容。
- en: If you successfully selected and have access to a public Internet repository
    (archive), the installer will prompt you about installing tasks, which are basically
    families of packages that are precategorized for simplicity. Netinst doesn't actually
    carry many tasks because the disk itself does not carry many packages; however,
    just for reference, the Web server task installs Apache while the Database task
    installs PostgreSQL for you. Otherwise you'll be OK with the Standard System Utilities
    task.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你成功选择并能够访问公共互联网存储库（档案），安装程序将提示你进行安装任务，这些任务基本上是已经预先分类的包的集合，便于操作。Netinst 实际上不会携带很多任务，因为磁盘本身并没有携带太多的包；不过，仅供参考，Web
    服务器任务会为你安装 Apache，而数据库任务会为你安装 PostgreSQL。否则，你可以选择标准系统工具任务。
- en: Also, you will be asked to opt in to popcon, an anonymous survey where the packages
    you use and install are sent to Debian anonymously for statistical purposes. We
    suggest you choose the default (opt out) especially to avoid outgoing traffic
    from your production servers, but if you want to help the Debian Project know
    better the profiles of installed computers all over the world, the egress is just
    a few kilobytes a day.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还需要选择是否加入 popcon，一个匿名调查，其中你使用和安装的包会被匿名发送给 Debian 用于统计目的。我们建议你选择默认选项（退出），特别是为了避免生产服务器的外发流量，但如果你希望帮助
    Debian 项目更好地了解全球安装计算机的配置文件，数据流量每天仅几千字节。
- en: You are almost set. The final question of any Debian installation is whether
    you want to install the GRUB boot loader or not (you might be using your own,
    or a particular architecture) which you do, so just press *Enter*. Installation
    will wrap up and reboot (the disk may be ejected, if not, eject it yourself),
    and the server will boot into your new system after a brief wait on the GRUB menu
    (you can press *Enter* to skip). The init system will kick in and you will be
    facing a login prompt with your hostname after a few seconds. Type in `root` and
    your password, and you will be facing a brand-new dash prompt. Welcome!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你几乎完成了。Debian 安装的最后一个问题是是否要安装 GRUB 启动加载程序（你可能正在使用自己的启动加载程序，或者某种特定架构）。如果是的话，直接按
    *Enter* 即可。安装将完成并重启（磁盘可能会被弹出，如果没有，自己弹出），在 GRUB 菜单上稍等片刻，服务器将启动进入你的新系统（你可以按 *Enter*
    跳过）。初始化系统将启动，几秒钟后你将看到一个带有主机名的登录提示。输入 `root` 和你的密码，你将看到一个全新的命令行提示。欢迎使用！
- en: Making Debian GNU/Linux installations scalable (Medium)
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让 Debian GNU/Linux 安装可扩展（中级）
- en: 10 years ago, Debian was not regarded as an easy-to-install distribution, and
    had a negative aura of exclusivity around it. And while the installation process
    is fairly simple, you would guess it's a pain to repeat it as is for tens or hundreds
    of servers.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 10 年前，Debian 并不被认为是一个易于安装的发行版，周围还有一种排他性的负面气息。尽管安装过程相对简单，但你可能会猜测，如果要为几十台甚至上百台服务器重复这一过程，肯定是一件麻烦的事情。
- en: Getting ready
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: 'There are several options for you to make the installation scale:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种选项可以帮助你扩展安装规模：
- en: Rolling out your own installation media
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推出你自己的安装媒体
- en: Installing via the network
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过网络安装
- en: Installing via the imaging server
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过镜像服务器安装
- en: Preseeding the installation
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预配置安装
- en: How it works…
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Rolling out your own installation media (remastering) involves knowledge of
    APT repositories, ISO 9660 structures, and preseeding. The purpose of remastering
    is basically adding the packages you need and your initial configuration decisions,
    putting them together on a media that will save time during installation. As all
    these steps are beyond the scope of this book, we'll point you to helpers such
    as live-scripts and UCK.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 推出你自己的安装媒体（重新制作）涉及对 APT 仓库、ISO 9660 结构和预先配置的了解。重新制作的目的是将你需要的包和初始配置决策添加进去，将它们放到一个能够在安装过程中节省时间的介质上。由于所有这些步骤超出了本书的范围，我们将引导你使用一些辅助工具，如
    live-scripts 和 UCK。
- en: The second option, installing via network, is covered in detail in the Debian
    Installation Guide and might save some time as per running around the datacenter
    with optical media. As per imaging servers, SystemImager and Clonezilla are popular
    solutions, especially when the hardware matches in terms of disk sizes, and so
    on. The idea here is to install the system first, configure it, and then create
    an image to replicate to other servers. With imaging, be aware that you need to
    change the hostname—in `/etc/hosts` and `/etc/hostname` using the `hostname` command—and
    any other system-specific data.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种选择，通过网络安装，已经在 Debian 安装指南中详细说明，并且可能比携带光盘在数据中心中跑来跑去节省时间。关于服务器镜像，SystemImager
    和 Clonezilla 是流行的解决方案，特别是在硬件（如磁盘大小等）相匹配的情况下。这里的思路是首先安装系统，配置它，然后创建一个镜像并复制到其他服务器。使用镜像时，请注意需要更改主机名——在`/etc/hosts`和`/etc/hostname`中使用`hostname`命令——以及其他任何与系统相关的数据。
- en: How to do it…
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: '**Preseeding** is one of the faster ways to save time during Debian installation.
    As with remastering, you install one system, and you extract the answers to the
    configuration prompts handled through the `debconf` program in order for them
    to be reused in a new installation.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**预设**是节省 Debian 安装时间的最快方法之一。与重制系统类似，您首先安装一个系统，然后提取通过`debconf`程序处理的配置提示答案，以便它们可以在新安装中重用。'
- en: 'You can also create your own preseed files by specifying as many answers as
    you need using standard tools:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以通过使用标准工具，指定所需的多个答案来创建您自己的预设文件：
- en: '[PRE0]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Inspect the contents of this file with your favorite editor (`editor preseed.cfg`).
    You will find that questions that were asked on the installer are preceded by
    **#** and your answers are below. Some answers, such as password, are not included.
    Also, there are a lot of answers that you don't even remember to be asked about—those
    are defaults. Finally, you will notice that there is no answer for your partitioning
    elections, on the basis that you might have different servers with different hardware
    and different storage to address.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您喜欢的编辑器检查此文件的内容（`editor preseed.cfg`）。您会发现，安装程序中提出的问题前面有**#**，而您的答案则在下方。一些答案，例如密码，不会包含在内。此外，还有很多您甚至不记得被问到的答案——这些是默认值。最后，您会注意到没有关于分区选择的答案，因为您可能有不同的服务器，硬件和存储也各不相同。
- en: Once you have a preseed file that works, instead of selecting the **Install**
    option of Debian, you can choose **Advanced options**, and then **Automated install**
    to specify the URL of your preseed file. Probably, you will find the easiest way
    to do this is to serve it from another web server.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您有了可用的预设文件，您可以选择**高级选项**，然后选择**自动化安装**，并指定您的预设文件的 URL，而不是选择 Debian 的**安装**选项。您可能会发现最简单的方法是从另一台
    Web 服务器提供该文件。
- en: You can also feed broader choices, not only install-time choices, using `debconf-get-selections`
    without the `–installer` flag. It is useful to capture these choices at the end
    of your configuration process (that is, when you're done with this book).
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以使用`debconf-get-selections`，不带`–installer`标志，提供更广泛的选择，而不仅仅是安装时的选择。这在配置过程结束时（即当您完成本书时）捕获这些选择非常有用。
- en: '[PRE1]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There's more…
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: The output of these tools can be fed back to the installer or to the system
    at any moment with the preceding steps. Notice that there are some system aspects
    that are not necessarily controlled by `debconf` options. For example, the contents
    of your Apache or MySQL configuration files are mostly edited manually and don't
    get registered in `debconf`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具的输出可以随时通过先前的步骤反馈给安装程序或系统。请注意，有些系统方面不一定由`debconf`选项控制。例如，您的 Apache 或 MySQL
    配置文件的内容大多是手动编辑的，不会在`debconf`中注册。
- en: 'Debian''s online documentation and reference manual contain deep references
    to several preseeding options as well as large preseeding files that you can edit:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 的在线文档和参考手册包含了大量关于多个预设选项的深度参考，以及您可以编辑的大型预设文件：
- en: '[http://www.debian.org/releases/stable/amd64/ch04s05.html.es](http://www.debian.org/releases/stable/amd64/ch04s05.html.es)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.debian.org/releases/stable/amd64/ch04s05.html.es](http://www.debian.org/releases/stable/amd64/ch04s05.html.es)'
- en: '[http://d-i.debian.org/manual/en.i386/apb.html](http://d-i.debian.org/manual/en.i386/apb.html)'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://d-i.debian.org/manual/en.i386/apb.html](http://d-i.debian.org/manual/en.i386/apb.html)'
- en: Preparing the APT packaging system for your environment (Simple)
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为您的环境准备 APT 包装系统（简单）
- en: APT is a mature part of Debian that became the distribution's most important
    differentiator for years, enabling hundreds of derivative projects, including
    Ubuntu. Since free software is distributed by multiple parties, not always in
    full coordination in terms of packaging formats, release dates, versioning, configuration
    files, and so on, distributions are expected to put together the broadest set
    of software that makes sense for most users in a consistent way.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: APT 是 Debian 中一个成熟的部分，成为该发行版多年最重要的差异化特征，支持了成百上千个衍生项目，包括 Ubuntu。由于自由软件由多个方分发，且在打包格式、发布日期、版本控制、配置文件等方面并不总是完全协调一致，发行版通常需要以一致的方式将最广泛的软件集合整合在一起，确保对大多数用户都适用。
- en: APT provides an easy, robust way for users to install software and have Debian
    take care of pulling software from Internet mirrors, sorting out dependencies
    and conflicts, installing the software and making basic configuration choices.
    That's why it's important.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: APT 提供了一种简便、稳健的方式，让用户可以安装软件，并让 Debian 负责从互联网镜像拉取软件、解决依赖关系和冲突、安装软件并做出基本的配置选择。这就是它如此重要的原因。
- en: Getting ready
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The main configuration file for APT is `/etc/apt/sources.list`. In this file
    you define whether to use binary and source packages, whether to receive security
    updates and which branch and sections the system uses: main, which has most packages
    and consists exclusively on free software; contrib, which has software that depends
    on proprietary software, and non-free, which has redistributable proprietary software
    that Debian has decided to distribute.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: APT 的主配置文件是 `/etc/apt/sources.list`。在该文件中，你定义了是否使用二进制包和源包，是否接收安全更新，以及系统使用的分支和部分：main，其中包含大多数软件并且仅限于自由软件；contrib，包含依赖于专有软件的软件；non-free，包含可以重新分发的专有软件，这是
    Debian 决定分发的。
- en: How to do it…
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Using your text editor, open `/etc/apt/sources.list` and review the following
    steps for setting up APT:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 使用文本编辑器打开 `/etc/apt/sources.list`，并按照以下步骤设置 APT：
- en: 'For most web server scenarios, you won''t need source repositories, nor contrib
    and non-free, and you will want to make sure you receive security updates. So,
    `/etc/apt/sources.list` might look as simple as:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于大多数 web 服务器场景，你不需要源仓库，也不需要 contrib 和 non-free，你需要确保可以接收安全更新。因此，`/etc/apt/sources.list`
    可能看起来非常简单：
- en: '[PRE2]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Changes to this file are not immediately applied. You need to update your APT
    system, that is, go online and grab the latest list of available software and
    updates. You achieve that by using the apt-get tool as follows:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对该文件的更改不会立即生效。你需要更新你的 APT 系统，也就是上线并抓取最新的可用软件和更新列表。你可以使用 apt-get 工具来完成这个操作，命令如下：
- en: '[PRE3]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If you chose a mirror while installing Debian (using netinst), and you have
    Internet access at that time, this file will be prepopulated for you. If you didn't
    chose a mirror, you will have the CD as your first repository and [security.debian.org](http://security.debian.org)
    as your second. In that case, you can wipe the file and use the notation indicated
    previously.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在安装 Debian 时选择了镜像（使用 netinst），并且当时你有互联网连接，那么该文件会为你预先填写。如果没有选择镜像，你将以 CD 作为第一个仓库，并以
    [security.debian.org](http://security.debian.org) 作为第二个仓库。在这种情况下，你可以清空该文件并使用前面提到的格式。
- en: There's more…
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: There are other configuration options for APT, such as proxies and pinning/preferences,
    and other operations, such as a system-wide upgrade. These are rarely needed on
    a production system (things like pinning will be useful but are outside of the
    scope of this book). We will cover some of them later, but the above steps would
    suffice to have a configured APT system.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: APT 还有其他配置选项，比如代理和 pinning/优先级设置，以及其他操作，如全系统升级。这些在生产系统中很少需要（像 pinning 这样的功能可能会有用，但超出了本书的范围）。我们稍后会介绍其中一些，但上面的步骤已经足够让你拥有一个配置好的
    APT 系统。
- en: 'Also, bear in mind that there are two mainstream tools used to operate the
    APT system: apt-get and aptitude. We like to think that they''re pretty interchangeable
    but advanced users will develop strong attachments to either one, and you definitely
    want to standardize from the beginning. This also responds to cycles, five years
    ago the aptitude was big because of a smarter resolution of dependencies, and
    so on, and it seems that apt-get has gained traction in the last year or so, mainly
    driven by Ubuntu. The author was a strong aptitude advocate but finds himself
    using apt-get lately, especially for this book.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，请记住，操作 APT 系统时有两个主流工具：apt-get 和 aptitude。我们认为它们是可以互换的，但高级用户会对其中某一个产生强烈的依赖，您肯定希望从一开始就标准化使用。这个现象也有其周期性，五年前，aptitude
    因为智能的依赖解析而非常流行，然而似乎 apt-get 在过去一年多中获得了更多的关注，主要是受 Ubuntu 推动。作者曾是 aptitude 的坚定支持者，但最近他发现自己开始使用
    apt-get，尤其是在这本书中。
- en: While operations such as install, remove, update, and dist-upgrade are fairly
    similar in both systems, aptitude has a better search facility (aptitude search
    [term]) and an interface that can be useful for handling broken package situations
    (just type aptitude).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在两个系统中，安装、删除、更新和分发升级等操作都非常相似，但 aptitude 具有更好的搜索功能（aptitude search [term]）和一个可以处理损坏包情况的界面（只需输入
    aptitude）。
- en: Installing your application platform stack (Simple)
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装您的应用平台堆栈（简单）
- en: Unless you were using the tasks mentioned in the installation recipe, you now
    have a properly configured server. To make it a web server, you need to install
    the web server, the database (if you will be hosting one), the programming language/environment,
    libraries, any web frameworks you're using, and so on. Fortunately, Debian packages
    several of them for you, and since you have a configured APT system, you can get
    started faster.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 除非您使用了安装食谱中提到的任务，否则您现在已经配置好了服务器。要将其转变为 Web 服务器，您需要安装 Web 服务器、数据库（如果您将托管一个数据库）、编程语言/环境、库、任何您使用的
    Web 框架等等。幸运的是，Debian 为您提供了其中的一些软件包，并且因为您已经配置好了 APT 系统，您可以更快地开始。
- en: How to do it…
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Although there are a handful of web servers packaged for Debian, there are
    two schools: Apache and Nginx. They have different execution models—while Nginx
    is a lightweight, event-oriented server that runs your application via CGI asynchronously,
    Apache is full of features, more mature with a thread/process approach. You can
    also have a dual approach where Nginx, designed for concurrency, takes the frontend
    paired with memcached, and Apache serves the application in the backend.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有几个适用于 Debian 的 Web 服务器，但主要有两种：Apache 和 Nginx。它们有不同的执行模型——Nginx 是一个轻量级、事件驱动的服务器，通过
    CGI 异步运行您的应用程序，而 Apache 功能丰富，采用线程/进程的方式，且更加成熟。您还可以采用双重方式，即 Nginx 作为前端与 memcached
    配对，处理并发请求，而 Apache 则作为后端提供应用服务。
- en: In either case, you will need to install the web server using APT.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在任何情况下，您都需要通过 APT 安装 Web 服务器。
- en: 'For Apache:'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 Apache：
- en: '[PRE4]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'For Nginx:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 Nginx：
- en: '[PRE5]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If you install Apache, you will note there are several flavors of it available
    as different packages; worker is one of the **MPM**s (**Multi Processing Module**)
    for Apache. You might also want to use prefork since it provides a similar operation
    model to previous versions of Apache and avoids threads, which might be a problem
    with non-thread-safe libraries. Simply write `apt-get install task-web-server
    apache2-mpm-prefork+` (think of the plus sign as "I really want this package").
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您安装了 Apache，您会注意到它有几种不同的版本作为不同的软件包提供；worker 是 Apache 的 **MPM**（**多处理模块**）之一。您也许还想使用
    prefork，因为它提供了类似于 Apache 先前版本的操作模型，并且避免了线程问题，这可能在使用非线程安全的库时成为问题。只需执行 `apt-get
    install task-web-server apache2-mpm-prefork+`（可以把加号看作是“我非常需要这个软件包”）。
- en: 'There are two steps for configuring your web server: configure your site or
    virtual host, and configure your application execution method.'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置您的 Web 服务器有两个步骤：配置您的站点或虚拟主机，以及配置您的应用程序执行方式。
- en: Configuring virtual hosts is very easy in both Apache and Nginx. They both have
    `sites-available` folders (under `/etc/apache2` and `/etc/nginx` respectively)
    where you can drop in a bit of configuration corresponding to your host. You can
    then link that file to the `sites-enabled/` folder (or, for Apache, using the
    a2ensite/a2dissite tool) and reload your server.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Apache 和 Nginx 中配置虚拟主机都非常简单。它们都有 `sites-available` 文件夹（分别位于 `/etc/apache2`
    和 `/etc/nginx`），您可以在其中放入对应主机的配置文件。然后，您可以将该文件链接到 `sites-enabled/` 文件夹（或者对于 Apache，使用
    a2ensite/a2dissite 工具），并重新加载服务器。
- en: 'For Apache:'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 Apache：
- en: '[PRE6]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For Nginx:'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 Nginx：
- en: '[PRE7]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Configuring the execution method for your application depends on the programming
    language you are using (Perl, Python, PHP, Ruby, and so on). We''ll assume PHP.
    As previously mentioned, while Nginx will run PHP via FastCGI, Apache also offers
    the possibility of using `mod_php`, where PHP is basically embedded in the Apache
    process. For doing that, you only need to install and enable the `mod_php` module:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置应用程序的执行方法取决于你使用的编程语言（如 Perl、Python、PHP、Ruby 等）。我们假设使用 PHP。如前所述，虽然 Nginx 通过
    FastCGI 运行 PHP，Apache 也提供了使用`mod_php`的选项，其中 PHP 基本上被嵌入到 Apache 进程中。为了实现这一点，你只需要安装并启用`mod_php`模块：
- en: '[PRE8]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: For Nginx, the easiest configuration involves spawning a PHP FastCGI process
    (manually or optionally with an `init` script) and setting FastCGI parameters,
    as described on the Nginx Wiki page ([http://wiki.nginx.org/PHPFcgiExample](http://wiki.nginx.org/PHPFcgiExample)).
    Here, you can find lots of other configuration snippets, including advanced proxying,
    caching, and specific directives for CMS and other programming languages besides
    PHP.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 Nginx，最简单的配置方法是生成一个 PHP FastCGI 进程（手动或可选使用`init`脚本），并设置 FastCGI 参数，如 Nginx
    Wiki 页面所描述的 ([http://wiki.nginx.org/PHPFcgiExample](http://wiki.nginx.org/PHPFcgiExample))。在这里，你可以找到许多其他的配置片段，包括高级代理、缓存以及针对
    CMS 和其他编程语言（除了 PHP）特定的指令。
- en: Separating the database from the application server may also make sense since
    the database is I/O bound but the web application is not—most of the time. But
    you might not have much hardware, or you might be planning on scaling out with
    tight application plus database units in volumes. Or you might not be using a
    conventional database at all. However, let's assume you are.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将数据库与应用服务器分离也许是有意义的，因为数据库是 I/O 密集型的，而 Web 应用程序通常不是。但你可能没有足够的硬件，或者你可能计划在应用程序和数据库单元上进行紧密的扩展。或者你可能根本不使用传统数据库。但我们假设你使用的是。
- en: 'As with the application server, there are two schools for RDBMS: MySQL and
    PostgreSQL. Debian''s default is PostgreSQL but you''re free to choose.'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与应用服务器类似，关系型数据库管理系统（RDBMS）有两个选择：MySQL 和 PostgreSQL。Debian 的默认数据库是 PostgreSQL，但你可以自由选择。
- en: '[PRE9]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: OR
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者
- en: '[PRE10]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Configuration involves lots of variables, from performance to security, and
    while the default configuration works fine for setting up your server, we will
    provide some pointers later in the book.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置涉及很多变量，从性能到安全性，虽然默认配置足以设置服务器，但我们将在本书后续部分提供一些建议。
- en: 'Finally, you need to install the proper bindings for the programming language
    you''re using; otherwise, the application will not be able to connect to the database.
    For example:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你需要为所使用的编程语言安装适当的绑定，否则应用程序将无法连接到数据库。例如：
- en: '[PRE11]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Most likely, the interpreter for your language is already installed on Debian
    (such as Perl, Python) or is readily available (such as PHP through `mod_php`,
    or Ruby, and so on) but some libraries might not be. For example, if your application
    needs `gd` extensions, you can perform:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 很可能，你所使用的语言的解释器已经在 Debian 上安装（如 Perl、Python），或者可以方便地获取（如通过`mod_php`的 PHP，Ruby
    等），但某些库可能没有安装。例如，如果你的应用需要`gd`扩展，可以执行以下操作：
- en: '[PRE12]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: While you may find frameworks such as Dancer, Rails, or Symfony conveniently
    packaged in Debian's repositories, they are changing creatures by nature, and
    most developers download them from the project's website and roll their own outside
    the APT system. We discuss frameworks briefly later in this book.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你可能会在 Debian 的软件包仓库中方便地找到像 Dancer、Rails 或 Symfony 这样的框架，但它们天生就是不断变化的，大多数开发者都从项目网站下载并在
    APT 系统外自行构建。我们将在本书后面简要讨论框架。
- en: Setting up your storage, security, and permissions (Simple)
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置存储、安全性和权限（简单）
- en: As mentioned earlier, partitioning is very important for a web server. You already
    took your first steps by selecting which directories you wanted partitioned out
    (hopefully, at least `/tmp` and `/var` or `/var/www`), but now you need to set
    security and permissions for them.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，分区对于 Web 服务器非常重要。你已经通过选择要分区的目录（希望至少是`/tmp`和`/var`或`/var/www`）迈出了第一步，但现在你需要为它们设置安全性和权限。
- en: Getting ready
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: If you will have several profiles for users and groups, this is a good time
    to review them as you prepare to harden the storage permissions. On Unix systems,
    everything is a file, and a lot of the security measures depend on filesystem
    security.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将为用户和组创建多个配置文件，这是在准备加固存储权限时回顾它们的好时机。在 Unix 系统中，一切都是文件，很多安全措施依赖于文件系统的安全性。
- en: How to do it…
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: At root, open `/etc/fstab` with a text editor. Towards the end of it, you will
    see lines for the partitions you created during installation.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在根目录下，使用文本编辑器打开`/etc/fstab`文件。在文件的末尾，你将看到在安装过程中创建的分区信息。
- en: '![How to do it…](img/8840OS_06_01.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/8840OS_06_01.jpg)'
- en: 'You can see that we have the **/tmp**, **/var/lib/mysql** and **/var/www**
    folders partitioned out. In most cases, you won''t need to mess with the first
    column which is the device name (the installer figured it out for you), but you
    must make sure that:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我们已经将**/tmp**、**/var/lib/mysql**和**/var/www**文件夹分区。在大多数情况下，你不需要调整第一列的设备名称（安装程序已为你确定），但你必须确保：
- en: The mount points are right
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 挂载点设置正确。
- en: The filesystem in use is the one you want (Debian uses ext4 by default, although
    many others are available)
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用的文件系统是你所需要的（Debian默认使用ext4，虽然还有许多其他可用的文件系统）。
- en: 'The mount options are right: **noatime** or **relatime** (doesn''t write to
    the disk every time the access time changes, which speeds things up. Frankly it''s
    not very useful on web servers, although some Unix tools will expect this behavior),
    **noexec** (disallows executable files), **nodev** (no special device files allowed),
    and **nosuid** (no files with elevation of rights enabled)'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 挂载选项设置正确：**noatime**或**relatime**（不会在每次访问时间变化时写入磁盘，从而加速操作。实际上，这在Web服务器上并不是很有用，尽管一些Unix工具会期待这种行为），**noexec**（禁止执行文件），**nodev**（不允许特殊设备文件），以及**nosuid**（不允许具有提升权限的文件）。
- en: You will close an important set of attack vectors by applying this basic security
    measure, as most attackers rely on the `/tmp` folder being world writeable to
    drop and run malicious scripts there. Also, `/var` contains `/var/www` and `/var/lib/mysql`
    or `/var/lib/postgres`, which will benefit from that security measure as well.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用这一基本的安全措施，你将关闭一组重要的攻击向量，因为大多数攻击者依赖于`/tmp`文件夹具有世界写权限，以便在其中放置并执行恶意脚本。此外，`/var`包含了`/var/www`和`/var/lib/mysql`或`/var/lib/postgres`，这些也将受益于这一安全措施。
- en: 'Permissions are also important. On Debian, the Nginx and Apache processes run
    as a system user called www-data. This user must have read permissions for your
    application scripts and static files that most likely will be sitting on `/var/www`.
    But unless your application allows uploads or edits to that folder, you don''t
    need write permissions. The following two operations can help you reset permissions:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 权限设置也非常重要。在Debian上，Nginx和Apache进程以名为www-data的系统用户身份运行。这个用户必须对你的应用程序脚本和静态文件（通常位于`/var/www`）具有读取权限。但除非你的应用程序允许上传或编辑该文件夹中的文件，否则不需要写入权限。以下两项操作可以帮助你重置权限：
- en: '[PRE13]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: For MySQL and PostgreSQL, Debian usually defaults to the right thing (`/var/lib/mysql`
    is owned by MySQL) when it comes to storage permissions.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 对于MySQL和PostgreSQL，Debian通常会在存储权限方面做出正确的默认设置（`/var/lib/mysql`由MySQL拥有）。
- en: Setting up your database/data storage (Medium)
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置你的数据库/数据存储（中级）
- en: Database configuration involves lots of variables, from performance to security,
    and although the default configuration works fine for setting up your server,
    there are some bits that will need your intervention.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库配置涉及很多变量，从性能到安全，尽管默认配置足以搭建你的服务器，但仍有一些部分需要你手动调整。
- en: Getting started
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: Debconf will ask you some questions about databases, such as the root password
    for MySQL; however, if you are really into tuning, you will need to dive into
    the configuration files and documentation. Also notice that MySQL users are different
    (even if identically named) than system users.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Debconf会询问你一些关于数据库的问题，比如MySQL的root密码；然而，如果你真正想进行性能调优，你将需要深入配置文件和文档。同时要注意，MySQL用户与系统用户是不同的（即使名称相同）。
- en: You should also have a working knowledge on how your application consumes data,
    so you can choose the right performance improvement paths. In the appropriate
    recipes, this book will cover some pointers for logging and performance.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应该对应用程序如何消费数据有基本了解，这样才能选择正确的性能优化路径。在适当的章节中，本书将涵盖一些关于日志记录和性能的建议。
- en: How to do it…
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'The following steps will guide you through the creation and set up of a new
    database:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将引导你创建并设置一个新数据库：
- en: 'You can go ahead (as a root user) and create a new database on MySQL, for example:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为root用户，你可以继续在MySQL上创建一个新数据库，例如：
- en: '[PRE14]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'And create a new user called `book`, with password `book` that can execute
    all operations on all (current and future) tables of this new database, for example:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`book`的新用户，密码为`book`，该用户可以在这个新数据库的所有（当前和未来）表上执行所有操作，例如：
- en: '[PRE15]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Or with Postgres, as the postgres (administrative, equivalent to root in Unix)
    user:'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者在 PostgreSQL 中，以 postgres（管理员，相当于 Unix 中的 root）用户身份：
- en: '[PRE16]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `GRANT` statement above is not a good idea in production. Can you spot why?
    First of all, the password is weak—although MySQL will only allow local connections
    to it, an attacker might plant a password cracker remotely. Second, we're granting
    `ALL` privileges to a single user, which is not a proper etiquette; we could restrict
    it only to `SELECT`, `INSERT`, and `UPDATE`, and your application could track
    the state of records to avoid performing `DELETE`, for example. Similarly, notice
    that the `–O` option in `createdb` for PostgreSQL sets the book as the DB owner,
    effectively giving the user privileges such as destroying objects.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的 `GRANT` 语句在生产环境中并不推荐。你能找出为什么吗？首先，密码很弱——尽管 MySQL 只允许本地连接，但攻击者可能会在远程植入密码破解工具。其次，我们为单个用户授予了
    `ALL` 权限，这不是一种合适的做法；我们可以将其限制为仅 `SELECT`、`INSERT` 和 `UPDATE`，而你的应用程序可以跟踪记录的状态，以避免执行
    `DELETE` 操作。例如，类似地，注意 PostgreSQL 中 `createdb` 的 `–O` 选项将书籍设置为数据库所有者，从而有效地授予用户诸如销毁对象的权限。
- en: This username and password is the one that you will provide to application developers
    to connect the application to the database. Notice that while it's possible to
    pass the end user credentials from the application to the database for logging
    (thus having deeper audit capabilities on the database), it is also complex to
    set up—the fastest way usually involving the PAM configuration which is beyond
    the scope of the book.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这个用户名和密码是你将提供给应用程序开发者的，用于将应用程序连接到数据库。需要注意的是，虽然可以从应用程序将最终用户凭据传递给数据库进行日志记录（从而在数据库上实现更深入的审计功能），但这也很复杂，通常最快的方法是通过
    PAM 配置，这超出了本书的范围。
- en: Using `mysql –u book –p <database>` or `su – book` and then `psql<database>`,
    you can access the interactive terminals for both MySQL and PostgreSQL. Similar
    commands to access the console are available for other DBs such as SQLite or MongoDB.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `mysql –u book –p <database>` 或 `su – book` 然后 `psql<database>`，你可以访问 MySQL
    和 PostgreSQL 的交互式终端。其他数据库，如 SQLite 或 MongoDB，也有类似的命令来访问控制台。
- en: 'Your DBAs may also provide you with an archive file, a dump file, or a schema
    file, which you are expected to load into the database. Small schemas (usually
    with lots of `CREATE TABLE` statements) can usually be copy pasted into the interactive
    terminal. Larger schemas, or large dump files (with initial data such as `INSERT`
    statements) may need to be loaded via the command line, for example:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的数据库管理员可能还会提供归档文件、转储文件或架构文件，你需要将其加载到数据库中。小的架构（通常包含许多 `CREATE TABLE` 语句）通常可以直接复制粘贴到交互式终端中。较大的架构，或包含初始数据（如
    `INSERT` 语句）的较大转储文件，可能需要通过命令行加载，例如：
- en: '[PRE17]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can also use in-console commands, such as `\i book.sql` for PostgreSQL or
    `source book.sql` for MySQL.
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还可以使用控制台命令，如 PostgreSQL 中的 `\i book.sql` 或 MySQL 中的 `source book.sql`。
- en: In PostgreSQL, archives also exist which are a more packetized way of distributing
    a full snapshot of the database. These are produced with `pg_archive` and restored
    with `pg_restore`. You can learn more about backup and restore later in this book.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PostgreSQL 中，还存在归档文件，这是一种更封装的方式，用于分发数据库的完整快照。通过 `pg_archive` 生成这些归档，并通过 `pg_restore`
    恢复。你可以在本书后面的章节中进一步了解备份和恢复。
- en: By default, both MySQL and PostgreSQL will generate sockets that your application
    can use to access the database. This works well for local applications, but if
    you are separating your DB and your application, you will need to set up networking
    and access control.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，MySQL 和 PostgreSQL 都会生成套接字，供你的应用程序访问数据库。这对于本地应用程序工作良好，但如果你将数据库和应用程序分开，你需要设置网络和访问控制。
- en: 'Edit MySQL''s configuration file and allow MySQL to listen on external interfaces:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 MySQL 的配置文件，并允许 MySQL 在外部接口上监听：
- en: '[PRE18]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Find the bind-address directive and change to the IP address
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 找到 `bind-address` 指令并更改为 IP 地址
- en: '`service mysql restart`'
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`service mysql restart`'
- en: 'Edit PostgreSQL''s access configuration file and allow PostgreSQL to accept
    authenticated connections over the network:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 PostgreSQL 的访问配置文件，并允许 PostgreSQL 接受通过网络认证的连接：
- en: '`editor /etc/postgresql/9.1/main/postgresql.conf`'
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`editor /etc/postgresql/9.1/main/postgresql.conf`'
- en: Add a line of the type `host book all 172.16.0.2/32 md5`, where `host` means
    the directive applies to remote hosts, `book` is the database name the directive
    applies to, `all` means any user correctly identified will be granted access,
    `172.16.0.2/32` is the IP address of the application server, and, `md5` means
    MD5 password authentication will be used.
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加一行类型为 `host book all 172.16.0.2/32 md5`，其中 `host` 表示该指令适用于远程主机，`book` 是该指令适用的数据库名称，`all`
    表示任何经过正确身份验证的用户都将被授予访问权限，`172.16.0.2/32` 是应用服务器的 IP 地址，`md5` 表示将使用 MD5 密码验证。
- en: Now reload PostgreSQL with `service postgresql reload`.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在通过 `service postgresql reload` 重新加载 PostgreSQL。
- en: Configuring your programming language libraries (Medium)
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置你的编程语言库（Medium）
- en: Frameworks are very popular nowadays. Symfony, Rails, Django, or Dancer are
    all references for professional web development, and a Debian web server is no
    stranger to them. The libraries and modules that empower these frameworks are
    also popular, and it's important for system administrators to know how to set
    it up.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 框架现在非常流行。Symfony、Rails、Django 或 Dancer 都是专业 Web 开发的代表，而 Debian Web 服务器对它们来说并不陌生。赋能这些框架的库和模块也很受欢迎，系统管理员了解如何设置它们是很重要的。
- en: Getting started
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: You have the option to use prepackaged frameworks or downloading and installing
    it yourself. The prepackaged frameworks may offer ease of set up and administration
    at the cost of an older version. You will also have security updates coming from
    the APT system itself.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择使用预打包的框架或自己下载并安装它。预打包的框架可能在设置和管理上更为简便，但也可能是旧版本。你还将通过 APT 系统本身接收安全更新。
- en: How to do it…
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Search for your library. Some PEAR libraries are available on Debian, and so
    are CPAN libraries for Perl, Ruby gems, Python modules, and so on. Here are some
    useful searches:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索你的库。一些 PEAR 库在 Debian 上可以使用，CPAN 库也可以用于 Perl，Ruby gems，Python 模块等。以下是一些有用的搜索：
- en: '[PRE19]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In other cases you have the pear, rubygem clients available for manual installs
    (CPAN comes with Debian).
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在其他情况下，你可以使用 pear、rubygem 客户端进行手动安装（CPAN 在 Debian 中自带）。
- en: '[PRE20]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here''s an example, using the Dancer framework:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个使用 Dancer 框架的示例：
- en: '[PRE21]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Now use a browser to go to `http://localhost:3000` (or use `wget` or `curl`
    on the console) to check whether the framework is working correctly.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用浏览器访问 `http://localhost:3000`（或在控制台使用 `wget` 或 `curl`）来检查框架是否正常工作。
- en: Setting up secure remote support options (Simple)
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置安全的远程支持选项（简单）
- en: Most DevOps manage their servers remotely using SSH. Of course there are other
    options, such as web-based management interfaces (like Webmin) and graphical interface
    management options, such as **Virtual Network Computing** (**VNC**), **Remote
    Desktop Protocol** (**RDP**), and TeamViewer. In this recipe, we'll go through
    SSH as a more secure and productive way that we suggest for secure remote management
    and support.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 DevOps 通过 SSH 远程管理他们的服务器。当然，也有其他选项，比如基于 Web 的管理界面（例如 Webmin）和图形界面管理选项，如**虚拟网络计算**（**VNC**）、**远程桌面协议**（**RDP**）和
    TeamViewer。在本教程中，我们将介绍 SSH 作为一种更安全且高效的方式，建议用于安全的远程管理和支持。
- en: Getting started
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: Consistent with the practice of reducing the attack surface by shutting down
    unused services, graphical user interfaces and remote desktop services are usually
    considered bad practice on web servers. That's why SSH is king. Web-based management
    interfaces might be useful, but they can also pose security risks. If you decide
    to implement any of these solutions, you should have clear firewall restrictions
    in place and keep your software up-to-date.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 与通过关闭未使用的服务来减少攻击面的一般做法一致，图形用户界面和远程桌面服务通常被认为在 Web 服务器上是不推荐的做法。这就是为什么 SSH 是王道的原因。基于
    Web 的管理界面可能很有用，但它们也可能带来安全风险。如果你决定实施这些解决方案，应该确保设置明确的防火墙限制，并保持软件的最新状态。
- en: Also, there's an important consideration regarding identity management on production
    servers. When your support team grows, you'll want to have audit capabilities
    built-in for your employees (and it might also be required by your company's security
    policies/practices as well as industry regulations), so this recipe will cover
    it as well.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，关于生产服务器上的身份管理，还有一个重要的考虑。当你的支持团队壮大时，你可能希望为员工构建审计功能（这也可能是公司安全政策/实践以及行业规定的要求），因此本教程也会涵盖这一点。
- en: How to do it…
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Install the OpenSSH server by using the command `apt-get install ssh`; among
    other things, this will generate a set of keys for your OpenSSH server. You should
    take note of them the first time you connect to the server as they will help you
    verify whether you're remotely connecting to the right server (and OpenSSH clients
    will warn you if those fingerprints change).
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令`apt-get install ssh`安装OpenSSH服务器；这将生成一组密钥供你的OpenSSH服务器使用。你应该在第一次连接到服务器时注意这些密钥，因为它们将帮助你验证是否正在远程连接到正确的服务器（如果指纹发生变化，OpenSSH客户端会提醒你）。
- en: Now, from a remote server or client (including PuTTY or Cygwin on Windows) run
    `sshroot@web01.app.example.com`; you should receive a fingerprint warning (which
    you should double-check and accept if correct), and then you will be presented
    with a prompt.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，从远程服务器或客户端（包括Windows上的PuTTY或Cygwin）运行`ssh root@web01.app.example.com`；你应该会收到一个指纹警告（如果正确，请仔细检查并接受），然后你将看到一个提示符。
- en: The defaults for OpenSSH are OK for most setups. You might want to change banners
    or ports as necessary. The reason why people change SSH's default port (TCP 22)
    is because it's widely known and scanned on IPv4 subnets. If you have a dedicated
    security hardware in place and/or will not expose the port to globally routable
    IPv4 networks, you might as well leave the default.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenSSH的默认设置对于大多数配置来说是可以接受的。你可能需要根据需要更改横幅或端口。人们更改SSH默认端口（TCP 22）的原因是因为它广泛为人所知并且在IPv4子网中被扫描。如果你有专用的安全硬件并且/或者不会将端口暴露给全球可路由的IPv4网络，那么你可以保留默认设置。
- en: There is one exception though. OpenSSH is allowing root to login, which is not
    considered a good practice.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不过有一个例外。OpenSSH允许root登录，这不被认为是一个好的做法。
- en: Fire up your editor and make changes to `/etc/ssh/sshd_config`; search for the
    `PermitRootLogin` directive and change it to `no`.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动你的编辑器并修改`/etc/ssh/sshd_config`文件；搜索`PermitRootLogin`指令并将其更改为`no`。
- en: Then restart OpenSSH by using the command `service ssh restart`.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后使用命令`service ssh restart`重新启动OpenSSH。
- en: Actually, using `root` for administrative purposes is also not seen as a good
    practice. You should use `sudo`, which will enhance your audit capabilities and
    eventually allow better privilege separation using the command `apt-get install
    sudo`.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实际上，将`root`用于管理目的也不被认为是一个好的做法。你应该使用`sudo`，这将增强你的审计能力，并最终通过命令`apt-get install
    sudo`实现更好的权限分离。
- en: We will make a simple change with the existing non-privileged user we created
    that goes a long way for security in terms of audit and skill building.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将对现有的非特权用户做一个简单的修改，这对于审计和技能构建方面的安全性有很大的帮助。
- en: To do so, use the command `usermod –aG sudo devops`.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为此，使用命令`usermod –aG sudo devops`。
- en: By adding `devops` to the `sudo` group, they will be able to use `sudo` to escalate.
    This is only a first step that provides better insights and practices for audit,
    but you need to granularize `sudo` per user as necessary and not see it as a drop-in
    root replacement—in which case you would only have achieved minimal auditing capabilities
    and no real positive security outcomes.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将`devops`添加到`sudo`组中，他们将能够使用`sudo`来提升权限。这只是一个第一步，提供了更好的审计视角和实践，但你需要根据需要对每个用户进行细粒度的`sudo`配置，而不是将其视为root的替代品——否则你只会实现最低限度的审计能力，而没有真正的安全收益。
- en: Now type `exit` (or press *Ctrl*+*D*) to exit the root login, and login as `devops`.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在输入`exit`（或者按*Ctrl*+*D*）以退出root登录，并以`devops`身份登录。
- en: Prepend `sudo` to the commands that need administrative privileges from now
    on. You will be asked for your password once in a while for added security. You
    can now change the root password to a very long, unique, and complex password
    and hopefully never login as root again. From now on, the book will use the `sudo`
    command when needed to specify that administrative rights are needed.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从现在开始，将`sudo`加到需要管理权限的命令前。系统会不时要求你输入密码以增加安全性。你现在可以将root密码更改为一个非常长、独特且复杂的密码，并希望以后再也不以root身份登录。从现在开始，书中会在需要时使用`sudo`命令，以指示需要管理权限。
- en: Keeping your system up-to-date (Simple)
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持系统更新（简单）
- en: While some people would rather develop, test, and deploy only on one set of
    software releases and would rather not change that in years, others would like
    to stay on the bleeding edge of software.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人更愿意只在一套软件版本上进行开发、测试和部署，并且不希望多年来更改它，而另一些人则希望始终站在软件的前沿。
- en: Getting ready
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'There are two reasons why updating is important on Debian, for a production
    server:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian系统中，更新对生产服务器来说非常重要，有两个原因：
- en: Patching security problems, which are usually well-known and may have exploits
    in the wild through package updates released by the security team and distributed
    through a special repository
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复安全问题，通常这些问题是已知的，并且可能通过安全团队发布的包更新以及通过专用仓库分发的方式，已存在漏洞
- en: Making sure there is binary compatibility between all the packages in your system
    (or explicitly break it)
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保系统中所有软件包之间的二进制兼容性（或者明确地打破它）
- en: For example, if you were running squeeze (the previous stable version, also
    known as oldstable antecessor to wheezy) with applications that did not play well
    with PHP 5.3, you would rather explicitly break your system by having an older
    PHP (an older Apache, and an older MySQL for PHP library, and so on).
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你运行的是 squeeze（上一个 stable 版本，也被称为旧版 stable，wheezy 的前任）并且使用的应用程序与 PHP 5.3
    不兼容，你可能希望通过使用旧版本的 PHP（更旧的 Apache 和 MySQL PHP 库等）来明确地破坏系统。
- en: On the other hand, if you were running wheezy (stable) with Nginx, you would
    like to have the recent security updates for the web server.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果你运行的是带有 Nginx 的 wheezy（stable），你会希望获取最近的 Web 服务器安全更新。
- en: It's important to remember that in some cases, upgrading your system (and especially
    the libraries) might involve API changes that you should be aware of. In 2012,
    the author released code for a Perl-based Twitter client that used the Twitter
    API and the POSIX and MongoDB Perl modules; the author had to change the code
    in 2013 because a function on POSIX was dropped and the MongoDB syntax for connecting
    to databases and collections changed.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要记住，在某些情况下，升级系统（特别是库）可能涉及 API 更改，你需要了解这些更改。在 2012 年，作者发布了一个基于 Perl 的 Twitter
    客户端代码，使用了 Twitter API 和 POSIX 及 MongoDB Perl 模块；由于 POSIX 中的一个函数被删除，以及 MongoDB
    用于连接数据库和集合的语法发生变化，作者在 2013 年不得不更改代码。
- en: How to do it…
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'While running stable, Debian will not usually push an update that breaks compatibility.
    But security updates will go through and when enough security updates are issued,
    those updates are moved into the main repository. Here''s a good recipe for staying
    on top of it:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行 stable 版本时，Debian 通常不会推送会破坏兼容性的更新。但是安全更新会继续发布，当足够的安全更新发布时，这些更新会被移入主仓库。以下是保持跟进的一个好方法：
- en: Install cron-apt with the command `sudo apt-get install cron-apt`.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令 `sudo apt-get install cron-apt` 安装 cron-apt。
- en: By default, cron-apt is scheduled to run on a maintenance window of 4 A.M. local
    time; edit this with the sudo editor `/etc/cron.d/cron-apt` and change if necessary.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，cron-apt 被安排在本地时间凌晨 4 点的维护窗口运行；如果需要，可以通过使用 sudo 编辑器 `/etc/cron.d/cron-apt`
    来修改。
- en: Make sure services are running after the upgrade (for example, by using a browser
    or database client, or following your internal test procedures).
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 升级后确保服务正常运行（例如，通过使用浏览器或数据库客户端，或按照内部测试程序进行验证）。
- en: 'If you ever need to do a manual upgrade:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你需要手动升级：
- en: '`sudo apt-get update` will connect to the Internet and download lists with
    new versions of software'
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo apt-get update` 将连接到互联网并下载软件的新版本列表'
- en: '`sudo apt-get dist-upgrade` will upgrade the system'
  id: totrans-249
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo apt-get dist-upgrade` 将升级系统'
- en: There's more…
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: A word of caution. If you're using the codename `stable` on your `/etc/apt/sources.list`
    file, the `dist-upgrade` command will make major changes when a new release comes
    out. You might want to stick with the codename `wheezy` for consistency or be
    on top of announcements to be prepared.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 提个提醒。如果你在 `/etc/apt/sources.list` 文件中使用了代号 `stable`，当新版本发布时，`dist-upgrade` 命令将进行重大更改。你可能希望为了保持一致性而使用代号
    `wheezy`，或者及时关注发布公告做好准备。
- en: In general, upgrades within the same release are fairly safe even for a production
    environment. And as mentioned earlier, you might choose to not use cron-apt at
    all. In such cases, you might want to change the default action of cron-apt.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，在同一版本内进行升级对于生产环境来说是相当安全的。正如前面提到的，你可能选择根本不使用 cron-apt。在这种情况下，你可能希望更改 cron-apt
    的默认行为。
- en: Bear in mind that kernel upgrades don't require an immediate restart. You might
    as well keep operating with the old kernel until a proper maintenance window is
    defined. However, very old kernels can break future upgrades of some system libraries.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，内核升级不需要立即重启。你可以继续使用旧的内核，直到定义了适当的维护窗口。然而，非常旧的内核可能会破坏某些系统库的未来升级。
- en: Backing up your environment (Medium)
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份你的环境（Medium）
- en: There are different types of backup. When you think of backing up your environment,
    it helps to think of how you want to restore it. Do you want to restore it quickly?
    Do you want to restore it from the bare bones? Do you want to invest more or less
    time doing the actual restoration process? Do you want to be granular about what
    you restore?
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 备份有不同的类型。当你考虑备份你的环境时，帮助你思考恢复的方式会很有用。你想快速恢复吗？你想从最基本的状态恢复吗？你希望在实际恢复过程中投入更多或更少的时间？你希望恢复时更加精确地选择恢复内容吗？
- en: Getting ready
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Debian has different software for all those types of backups. You should select
    the one that you feel comfortable with, and not try to find a feature-by-feature
    replica of what you had in your old environments, or try to use whatever the rest
    of the people are using on the Internet.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Debian为所有这些备份类型提供了不同的软件。你应该选择一个你感到舒适的工具，而不是去找一个与你旧环境中的功能逐一匹配的工具，也不要仅仅因为互联网中的其他人都在使用某个工具就去尝试它。
- en: 'For a web server, you usually have two options: bare metal backup and restore
    or just web server filesystem backup and restore. The former is usually more comprehensive
    and complex to set up and maintain, and the latter is easier to get running but
    covers less recovery scenarios.'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Web服务器，你通常有两种选择：裸机备份和恢复，或者仅仅是Web服务器文件系统的备份和恢复。前者通常更全面，但设置和维护起来更加复杂；后者虽然更容易上手，但覆盖的恢复场景较少。
- en: In any case, you should also add special considerations for backing up your
    databases and caches, as they usually store information in memory that needs to
    be flushed to the disk. In some cases like in Postgres ([http://stackoverflow.com/questions/1216660/see-and-clear-postgres-caches-buffers](http://stackoverflow.com/questions/1216660/see-and-clear-postgres-caches-buffers)),
    it is not easy to flush cache manually; you need to stop the database altogether.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何情况下，你还应该特别考虑如何备份数据库和缓存，因为它们通常会在内存中存储数据，这些数据需要刷新到磁盘上。在一些情况下，比如Postgres（[http://stackoverflow.com/questions/1216660/see-and-clear-postgres-caches-buffers](http://stackoverflow.com/questions/1216660/see-and-clear-postgres-caches-buffers)），手动刷新缓存并不容易；你需要停止整个数据库才能完成操作。
- en: In general, it's best to back up a stopped system. That's why it's important
    to have a scalability strategy for your application so it can keep running while
    you back up masters.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，最好是在系统停止时进行备份。这就是为什么为你的应用程序制定可扩展性策略很重要，以便在你备份主服务器时，它仍然可以持续运行。
- en: For the bare metal recovery solution, we'll use Bacula. We will also share some
    tips on how to use rsync for a web backup scenario. The reason why rsync might
    make sense here is that you don't have a large datacenter with lots of different
    servers and operating systems; most likely, you have Debian running a web application,
    with any number of similar hardware running slaves.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 对于裸机恢复解决方案，我们将使用Bacula。我们还会分享一些如何使用rsync进行Web备份的技巧。之所以选择rsync，是因为你没有一个大型数据中心，里面有大量不同的服务器和操作系统；你很可能只是在Debian上运行一个Web应用程序，并且有多个相似硬件作为从机。
- en: Bacula is distributed, so you can have a director, a storage daemon (server
    where backups are stored) and several file daemons (clients to be backed up);
    for the purpose of this guide, we'll consider you have the director and storage
    together. Also, the director can use different backends for metadata storage.
    It could make sense to use the same database as your web application to potentially
    re-use existing DBA skills. We'll use MySQL.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: Bacula是分布式的，所以你可以拥有一个控制器，一个存储守护进程（备份存储的服务器），以及多个文件守护进程（待备份的客户端）；为了本指南的目的，我们假设你将控制器和存储放在一起。此外，控制器可以使用不同的后端来存储元数据。使用与Web应用程序相同的数据库可能是合理的，这样你可以复用现有的DBA技能。我们将使用MySQL。
- en: Besides `/var/www` and `/var/lib/mysql` or `/var/lib/postgres`, you'd usually
    want to back up several critical folders such as `/etc`, which contains configuration
    for your setup. `/var` may also be a good idea especially if you're using other
    caches or software with variable data. The rest of your system, particularly `/usr`
    and `/lib`, are usually not modified and come prepackaged on Debian packages;
    `/tmp` is volatile (clears out with each restart) and `/dev` is autogenerated.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`/var/www`、`/var/lib/mysql`或`/var/lib/postgres`，你通常还需要备份一些关键文件夹，比如`/etc`，它包含了你系统的配置。`/var`也是一个不错的选择，尤其是当你使用了其他缓存或包含可变数据的软件时。系统的其他部分，尤其是`/usr`和`/lib`，通常不会被修改，并且是Debian包预装的；`/tmp`是临时的（每次重启时都会清除），而`/dev`是自动生成的。
- en: Of course, if you're going with a bare metal strategy, then you recover your
    setup from the ground up.. More on that in the next recipe, *Restoring your environment*.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果您选择的是裸金属策略，那么您将从头开始恢复您的设置……更多内容将在下一章节中讨论，*恢复您的环境*。
- en: How to do it…
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作方法…
- en: 'In this section, you will install and configure Bacula Director, Storage Daemon
    and Console, with a MySQL backend:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将安装并配置Bacula Director、Storage Daemon和Console，并使用MySQL作为后端：
- en: 'In your backup server, install all Bacula components using `apt-get: sudo apt-get
    install baculabacula-director-mysqlbacula-sd-mysqlbacula-console`.'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在备份服务器上，使用`apt-get`安装所有Bacula组件：`sudo apt-get install baculabacula-director-mysqlbacula-sd-mysqlbacula-console`。
- en: In the sudo editor, enter `/etc/bacula/bacula-director.conf`.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在sudo编辑器中，输入`/etc/bacula/bacula-director.conf`。
- en: 'Browse to the `Client {}` group, the first one will be the server itself, and
    the second one is commented out. You can uncomment it and change the directives:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到`Client {}`组，第一个将是服务器本身，第二个是被注释掉的。您可以取消注释并更改指令：
- en: '**Name**: It should match the name in `/etc/bacula/bacula-fd.conf` of the client'
  id: totrans-270
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Name**：应与客户端的`/etc/bacula/bacula-fd.conf`中的名称匹配。'
- en: '**Address**: It is the IP address or FQDN for the client'
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Address**：这是客户端的IP地址或FQDN。'
- en: '**Password**: It should match the one of the client, or you can make your own'
  id: totrans-272
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Password**：应与客户端的密码相匹配，或者您可以自行设置。'
- en: Also, in `/etc/bacula/bacula-sd.conf`, make sure an IP address or FQDN is used,
    and that the name under **Device** | **Archive Device** and the password matches
    the one in `director.conf`.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，在`/etc/bacula/bacula-sd.conf`中，请确保使用的是IP地址或FQDN，并且**Device** | **Archive
    Device**下的名称和密码与`director.conf`中的相匹配。
- en: Restart Bacula by using the `service bacula-director restart` and `sudo service
    bacula-sd restart` commands.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行`service bacula-director restart`和`sudo service bacula-sd restart`命令来重启Bacula。
- en: In your client server (your web application server), install the Bacula file
    daemon components using the command, `sudo apt-get install bacula-fd`.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在客户端服务器（即您的Web应用服务器）上，使用以下命令安装Bacula文件守护进程组件：`sudo apt-get install bacula-fd`。
- en: 'Open the `/etc/bacula/bacula-fd.conf` configuration file, set Bacula to listen
    on your internal backup address and set the hostname and password of the allowed
    director: `sudo editor /etc/bacula/bacula-fd.conf`.'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`/etc/bacula/bacula-fd.conf`配置文件，将Bacula设置为监听您的内部备份地址，并设置允许的director的主机名和密码：`sudo
    editor /etc/bacula/bacula-fd.conf`。
- en: Browse to the `Director {}` group, change **Name** to the name of the director
    (found under `Director/Name` in `/etc/bacula/bacula-director.conf` on the server)
    and take note of the password (it needs to match the one on the server).
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到`Director {}`组，将**Name**更改为director的名称（在服务器上的`/etc/bacula/bacula-director.conf`中的`Director/Name`下找到），并记下密码（它需要与服务器上的密码相匹配）。
- en: Browse to the `FileDaemon {}` group, change **FDAddress** to a non-loopback
    IP address where the director can reach you.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到`FileDaemon {}`组，将**FDAddress**更改为一个非回环的IP地址，确保director可以访问。
- en: Issue a `sudo service bacula-fd restart` command.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`sudo service bacula-fd restart`命令。
- en: 'To test it on the director, run:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在director上测试，请运行：
- en: '[PRE22]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Type in: `3` (for client)'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输入：`3`（表示客户端）
- en: 'Type in: `2` (usually your client will be #2)'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输入：`2`（通常您的客户端是#2）
- en: Bacula will show a picture similar to the following one. You should see no error
    messages and no jobs running.![How to do it…](img/8840OS_11_01.jpg)
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bacula将显示一张类似于以下的图片。你应该看不到错误信息，也没有作业在运行。![操作方法…](img/8840OS_11_01.jpg)
- en: Bacula uses **FileSet**, which are lists of files and folders to backups; **Schedule**,
    which define when to run backups; and **Jobs**, **JobDefs**, and **JobSets** (groups
    of Jobs). We are going to create a simple FileSet, a simple JobDefs and a simple
    Job. You can copy and paste from the existing content of `/etc/bacula/bacula-director.conf`.
    The content of the **JobDefs** should look as shown in the following screenshot:![How
    to do it…](img/8840OS_11_02.jpg)
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bacula使用**FileSet**，它是文件和文件夹的备份列表；**Schedule**，它定义了何时运行备份；以及**Jobs**、**JobDefs**和**JobSets**（作业组）。我们将创建一个简单的FileSet，一个简单的JobDefs和一个简单的Job。你可以从`/etc/bacula/bacula-director.conf`的现有内容中复制并粘贴。**JobDefs**的内容应如以下截图所示：![操作方法…](img/8840OS_11_02.jpg)
- en: 'The **Job** type, on the other hand, should reference the **JobDefs** type,
    as illustrated here:'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**Job**类型应该引用**JobDefs**类型，如下所示：'
- en: '![How to do it…](img/8840OS_11_03.jpg)'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作方法…](img/8840OS_11_03.jpg)'
- en: 'And finally the **FileSet** type, which is referenced from the **JobDefs**
    type, should look like this:'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，**FileSet**类型，引用自**JobDefs**类型，应如下所示：
- en: '![How to do it…](img/8840OS_11_04.jpg)'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作方法…](img/8840OS_11_04.jpg)'
- en: This creates a weekly backup for **web01** that brings (incrementally) the contents
    of `/var/www` to the server. After setting it up, you need to issue a `sudo service
    bacula-director restart` command. Now in bconsole, navigate to **Status** | **Director**
    where you should see:![How to do it…](img/8840OS_11_05.jpg)
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这为 **web01** 创建了一个每周备份，增量地将 `/var/www` 的内容备份到服务器。设置完成后，您需要发出 `sudo service bacula-director
    restart` 命令。现在在 bconsole 中，导航到 **状态** | **Director**，您应该看到：![如何操作…](img/8840OS_11_05.jpg)
- en: You should also label the volume using bconsole first and then the label. Pick
    a name for your volume (since you are using file storage, this is not incredibly
    important except for reference reasons) and choose the **File** pool.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还应该先使用 bconsole 标记卷并输入标签。为您的卷选择一个名称（由于您使用的是文件存储，这一点并不是特别重要，除非是为了引用方便），然后选择
    **File** 池。
- en: With Bacula, you can issue manual backups when necessary using bconsole. Just
    use **run** and select the job you created, then hit **Yes**. The output should
    look as in the following screenshot:![How to do it…](img/8840OS_11_06.jpg)
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Bacula，您可以在必要时通过 bconsole 发起手动备份。只需使用 **run** 并选择您创建的任务，然后点击 **Yes**。输出应如下截图所示：![如何操作…](img/8840OS_11_06.jpg)
- en: Your job should end soon, and you can check it by navigating to **Status** |
    **Director** in bconsole. An **OK** status (no errors) is pictured as shown in
    the following screenshot:![How to do it…](img/8840OS_11_07.jpg)
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的任务应该很快完成，您可以通过在 bconsole 中导航到 **状态** | **Director** 来检查。**OK** 状态（无错误）如以下截图所示：![如何操作…](img/8840OS_11_07.jpg)
- en: 'For rsync, you will also need a storage server. You can initiate the back up
    from either side, and the good news is that the restore works the same just by
    inverting some parts of the rsync command line. Let''s suppose you are initiating
    the back up from the client (web server):'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 rsync，您还需要一个存储服务器。您可以从任一端发起备份，值得庆幸的是，恢复过程也非常相似，只需反转一些 rsync 命令行的部分即可。假设您是从客户端（Web
    服务器）发起备份：
- en: '[PRE23]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '`The -avz` options are the most popular set of options passed to rsync. `z`
    enables compressions and `a` enables the archive mode that will preserve useful
    things such as symlinks. `v` is verbose and will show filenames and the sent/received
    tally as well as the bandwidth used.'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '`-avz` 选项是传递给 rsync 的最常见选项集。`z` 启用压缩，`a` 启用归档模式，该模式将保留有用的内容，如符号链接。`v` 为详细模式，会显示文件名、发送/接收的统计数据以及使用的带宽。'
- en: There's more…
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'As mentioned before, you should be careful about data not written to disk.
    Here are some tips:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，您需要小心未写入磁盘的数据。这里有一些提示：
- en: Stop your database using the service `mysql stop` or `service postgresql stop`,
    or flush MySQL tables ([http://dev.mysql.com/doc/refman/5.5/en/backup-methods.html](http://dev.mysql.com/doc/refman/5.5/en/backup-methods.html))
    with `FLUSH TABLES tbl_list WITH READ LOCK` (remember to use `UNLOCK TABLES` after
    the back up) if your engine and application model supports it
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `mysql stop` 或 `service postgresql stop` 停止您的数据库，或者使用 `FLUSH TABLES tbl_list
    WITH READ LOCK` 清空 MySQL 表格 ([http://dev.mysql.com/doc/refman/5.5/en/backup-methods.html](http://dev.mysql.com/doc/refman/5.5/en/backup-methods.html))（如果您的引擎和应用程序模型支持该操作的话），记得在备份后使用
    `UNLOCK TABLES`。
- en: If your application does not handle database unavailability, you might have
    to stop your web server as well using the command, `service apache2 stop`
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的应用程序无法处理数据库不可用的情况，您可能还需要通过命令 `service apache2 stop` 停止 Web 服务器。
- en: Alternatively, use Bacula's application-specific scripts for MySQL ([http://dev.mysql.com/doc/refman/5.5/en/backup-methods.html](http://dev.mysql.com/doc/refman/5.5/en/backup-methods.html)),
    which uses full dumps (this may take a lot of time depending on your database
    size and uses a lot of disk I/O, which you'll definitely consume either way since
    you're backing up a disk)
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用 Bacula 为 MySQL 提供的应用特定脚本 ([http://dev.mysql.com/doc/refman/5.5/en/backup-methods.html](http://dev.mysql.com/doc/refman/5.5/en/backup-methods.html))，该脚本使用完全备份（这可能需要很长时间，具体取决于数据库的大小，并且会使用大量的磁盘
    I/O，无论如何，您都会消耗这些资源，因为您正在备份磁盘）。
- en: You should also check on `bacula-director.conf` where you want your files restored.
    Bacula will put a dummy path (something like `/nonexistent/path/`…), but you should
    put something like `/var/backups/restore` or something meaningful to you. We chose
    `/bacula-restores`.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 您还应该检查 `bacula-director.conf` 中您希望文件恢复的位置。Bacula 会放置一个虚拟路径（类似 `/nonexistent/path/`…），但您应该填写像
    `/var/backups/restore` 之类的路径，或者其他对您有意义的路径。我们选择了 `/bacula-restores`。
- en: 'We suggest that Debian users back up their installed package lists and their
    responses to debconf, the Debian configuration interface. You can use the following
    to prepare a file that can be later backed up by Bacula or manually:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议Debian用户备份已安装的软件包列表及其对debconf（Debian配置界面）的响应。您可以使用以下方法准备一个文件，之后可以通过Bacula或手动备份：
- en: '[PRE24]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Restoring your environment (Simple)
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恢复您的环境（简单）
- en: A strong backup strategy only makes sense if it's easy to restore a consistent
    back up. The previous recipe should have provided insights on the right backup
    strategy from the answer to the question, how do you expect to backup? As a result,
    it's important that you always test your restore procedures to see whether they
    fit your business needs; here's a proposed one.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 强大的备份策略只有在恢复一致备份非常简便时才有意义。前面的配方应该提供了如何备份的正确策略的见解。因此，始终测试恢复程序是否适合您的业务需求非常重要；这是一个建议的方案。
- en: Getting ready
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Both Bacula and rsync require that you install Debian again and set up the Bacula
    file daemon as explained in the corresponding recipes of this book. This is all
    you need to get prepared for restore.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: Bacula和rsync都要求您重新安装Debian并按本书相应的配方设置Bacula文件守护进程。这就是您为恢复做好准备所需要做的一切。
- en: 'For the Bacula example, we deleted a file from `/var/www`, and we will restore
    it with Bacula. For future reference, here''s the MD5 of the file we''re deleting:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Bacula示例，我们从`/var/www`删除了一个文件，我们将使用Bacula进行恢复。作为未来参考，以下是我们删除的文件的MD5值：
- en: '![Getting ready](img/8840OS_12_01.jpg)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/8840OS_12_01.jpg)'
- en: How to do it…
  id: totrans-311
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: From the Storage/Director server, fire up Bacula's console `sudobconsole` and
    call `restore`.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从存储/导演服务器，启动Bacula的控制台`sudo bconsole`并调用`restore`。
- en: You have several options to restore, and all of them will use the catalog to
    find the matching job and pool to restore from. We will choose option 5—most recent
    backup for the client web01-fd.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 恢复有多种选项，所有选项都会使用目录来查找匹配的作业和池进行恢复。我们将选择第5个选项——最近的备份，针对客户端 web01-fd。
- en: Bacula will match a recent `JobId` and will put you in the selection mode where
    you can choose which file(s) to restore. We browse to `var/www` and mark `install.log`,
    type **done**, and hit **yes**.
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bacula会匹配一个最近的`JobId`，并将您置于选择模式中，您可以选择要恢复的文件。我们浏览到`var/www`并标记`install.log`，输入**done**，然后点击**yes**。
- en: Now we can find `install.log` in `/bacula-restores` and move it back to `/var/www`
    if we decide to do so.![How to do it…](img/8840OS_12_02.jpg)
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以在`/bacula-restores`中找到`install.log`，如果决定恢复，可以将其移回`/var/www`。![如何操作...](img/8840OS_12_02.jpg)
- en: 'Using rsync, you just need to oppose the argument to restures. Now the backup
    server comes first. This is to be executed from the client machine:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用rsync，您只需对恢复的参数进行相反的操作。现在备份服务器优先。这需要在客户端机器上执行：
- en: '[PRE25]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Preparing for common security scenarios (Medium)
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为常见的安全场景做好准备（中级）
- en: Running a web server poses very specific security risks. Attackers know that
    web applications are powered by databases potentially containing profitable information.
    They also know that nowadays lots of web applications are built on top of open
    source frameworks, libraries, and execution environments and there's both an open
    and a black market for knowledge on vulnerabilities and exploits for them.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 运行Web服务器带来了特定的安全风险。攻击者知道Web应用程序依赖于数据库，这些数据库可能包含有价值的信息。他们还知道，如今许多Web应用程序都是建立在开源框架、库和执行环境之上，关于它们的漏洞和利用方式在公开市场和黑市上都有知识流通。
- en: Sometimes, attackers just use sheer computing and networking power to slow your
    application down to a crawl by exhausting all the system resources. This is called
    a **Denial of Service** (**DoS**) and can evolve into a **Distributed Denial of
    Service** (**DDoS**) where several computers in several different networks are
    joining the attack. This can be a very frustrating attack, and one that can also
    be triggered by an unexpected growth of legitimate users.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，攻击者仅通过庞大的计算和网络能力，通过耗尽所有系统资源使您的应用程序变得极其缓慢。这被称为**拒绝服务**（**DoS**）攻击，可能会发展为**分布式拒绝服务**（**DDoS**）攻击，多个计算机在不同的网络中共同参与攻击。这是一种非常令人沮丧的攻击形式，也可能由于合法用户意外增长而触发。
- en: Finally, attacks on web applications are very visible as they can usually emerge
    as defacements, changes in the appearance, or functionality of the application
    that can subject the developers to public humiliation. The exploits, and the defacements,
    usually manifest themselves by modifying files on the filesystem and potentially
    installing other malware from **Internet Relay Chat** (**IRC**) bouncers to rootkits.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，针对Web应用程序的攻击非常显眼，因为它们通常表现为篡改、外观变化或功能改变，这些都会让开发人员面临公众羞辱。这些漏洞和篡改通常通过修改文件系统上的文件，并可能从**互联网中继聊天**（**IRC**）代理到Rootkit安装其他恶意软件。
- en: Getting started
  id: totrans-322
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: Even in such a bleak scenario, there are some steps that can be taken; for example,
    setting up a firewall, setting DoS/DDoS control measures, setting up a file modification
    watchdog, among others. We will cover some of those scenarios here for your convenience,
    but they are no substitute for a broader security policy and methodologies. For
    code security, we also refer developers to Microsoft's Security Development Lifecycle
    ([http://www.microsoft.com/security/sdl/resources/publications.aspx](http://www.microsoft.com/security/sdl/resources/publications.aspx)),
    with several resources available under a Creative Commons license.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 即便在如此严峻的情况下，仍然有一些可以采取的措施；例如，设置防火墙、设置DoS/DDoS控制措施、设置文件修改监控等。为了你的方便，我们将在这里覆盖一些场景，但它们并不能替代更广泛的安全策略和方法论。对于代码安全，我们也建议开发者参考微软的安全开发生命周期（[http://www.microsoft.com/security/sdl/resources/publications.aspx](http://www.microsoft.com/security/sdl/resources/publications.aspx)），该网站下提供了多个可通过创意共享许可访问的资源。
- en: How to do it…
  id: totrans-324
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: In this section, you will install a Netfilter firewall helper, configure some
    kernel-level security options, and install a host-based file modification detection
    system.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将安装Netfilter防火墙助手，配置一些内核级的安全选项，并安装基于主机的文件修改检测系统。
- en: Install FireHOL using the command, `sudo apt-get install firehol`.
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令`sudo apt-get install firehol`安装FireHOL。
- en: Run `sudofireholhelpme> /etc/firehol/firehol.conf`.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`sudo firehol help me > /etc/firehol/firehol.conf`。
- en: Review the configuration file, and now run `sudo service firehol start`.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看配置文件，现在运行`sudo service firehol start`。
- en: If your SSH server, web server, Bacula File Director, and MySQL/PostgreSQL server
    have been running on an external interface so far, FireHOL should pick them up
    and generate exceptions for them. When you run the service `firehol start`, the
    firewall will block everything except for connections to those ports.
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你的SSH服务器、Web服务器、Bacula文件目录和MySQL/PostgreSQL服务器一直运行在外部接口上，那么FireHOL应该会自动识别并为它们生成例外。当你运行服务`firehol
    start`时，防火墙将会阻止除了这些端口的连接之外的所有连接。
- en: FireHOL uses Netfilter (commonly known as **iptables**), and you can add/remove
    client/server services from the configuration file as well as add particular iptables
    rules.
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: FireHOL使用Netfilter（通常称为**iptables**），你可以从配置文件中添加/删除客户端/服务器服务，也可以添加特定的iptables规则。
- en: Although there are no silver bullets for DoS/DDoS, it doesn't mean you shouldn't
    implement some mitigation procedures. As mentioned before, DoS works because it
    exhausts your system resources. If you stop allocating some of those resources,
    you might stay within the operating threshold. There are operating system (network
    stack) measures and application-level measures that chiefly deal with **Synchronize**
    (**SYN**) states, a transitional state for legitimate connections but one that
    attacking connections exploit.
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然对于DoS/DDoS攻击没有灵丹妙药，但这并不意味着你不应该实施一些缓解措施。如前所述，DoS攻击之所以有效，是因为它消耗了系统资源。如果你停止分配这些资源中的一部分，你可能会保持在操作阈值内。操作系统（网络栈）措施和应用程序级别的措施主要处理**同步**（**SYN**）状态，这是合法连接的过渡状态，但攻击者会利用这一点。
- en: 'Reduce the SYN timeout to get rid of those connections faster, and turn TCP
    SYN Cookies on to enable the system to take more connections when the SYN queue
    fills up `sudo editor /etc/sysctl.conf`, and add the following:'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 降低SYN超时时间，以便更快地清除这些连接，并启用TCP SYN Cookies，当SYN队列填满时，系统可以接收更多连接。运行`sudo editor
    /etc/sysctl.conf`，并添加以下内容：
- en: '`net.netfilter.nf_conntrack_tcp_timeout_syn_recv=30`'
  id: totrans-333
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`net.netfilter.nf_conntrack_tcp_timeout_syn_recv=30`'
- en: '`net.ipv4.tcp_syncookies = 1`'
  id: totrans-334
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`net.ipv4.tcp_syncookies = 1`'
- en: Changes to `sysctl.conf` can be enforced upon reboot or by running `sudo sysctl
    –p /etc/sysctl.conf`.
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对`sysctl.conf`的更改可以在重启时强制执行，或通过运行`sudo sysctl -p /etc/sysctl.conf`来应用。
- en: 'Create a new Netfilter chain to limit and block new SYN connections; in this
    case, we have a limit of 50 initial connections followed by 10 per second:'
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 Netfilter 链来限制和阻止新的 SYN 连接；在这种情况下，我们有一个限制为 50 个初始连接，其后每秒 10 个连接：
- en: '`iptables -N syn-flood`'
  id: totrans-337
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iptables -N syn-flood`'
- en: '`iptables -A syn-flood -m limit --limit 10/second --limit-burst 50 -j RETURN`'
  id: totrans-338
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iptables -A syn-flood -m limit --limit 10/second --limit-burst 50 -j RETURN`'
- en: '`iptables -A syn-flood -j DROP`'
  id: totrans-339
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iptables -A syn-flood -j DROP`'
- en: When you create a chain, remember to pipe your traffic through this chain.
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建链时，请记住将流量通过该链进行管道传输。
- en: '`iptables -A INPUT -p tcp --syn -j syn-flood`'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`iptables -A INPUT -p tcp --syn -j syn-flood`'
- en: Regarding filesystem-based security scenarios, one of the main questions is
    how to stay on top of changes of critical system and application files, and be
    able to respond timely. RKHunter is a great tool that monitors common files for
    potential rootkit signatures or changes. It integrates very well with APT, so
    every time you use APT to install software, it will help you scan the system.
    In the case that it finds any vulnerability, it will send you a mail (you can
    check your mail using `sudo mail`).
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 关于基于文件系统的安全场景，主要问题之一是如何及时跟踪关键系统和应用程序文件的更改。RKHunter 是一个很好的工具，用于监视常见文件中的潜在 rootkit
    签名或更改。它与 APT 集成非常好，因此每次使用 APT 安装软件时，它都将帮助您扫描系统。如果发现任何漏洞，它将通过邮件通知您（您可以使用 `sudo
    mail` 检查您的邮件）。
- en: '[PRE26]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: You can also run with `sudorkhunter –c` manually.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以手动运行 `sudorkhunter –c`。
- en: It is recommended to run RKHunter periodically, and during installation, it
    also offers the possibility to integrate into the APT system (more exactly, the
    dpkg toolset) to provide automatic scanning during package management operations.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 建议定期运行 RKHunter，在安装过程中还提供了集成到 APT 系统（更确切地说是 dpkg 工具集）的可能性，在包管理操作期间提供自动扫描。
- en: There's more…
  id: totrans-346
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: With several different attack vectors in the market and several different open
    source countermeasures, there might be a temptation to install and run every single
    tool imaginable. You might want to go up the stack with solutions like mod_evasive
    that might help at the web server level. But beware, they may also consume large
    amounts of resources.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有多种不同的攻击向量和多种不同的开源对策，可能会诱使您安装和运行所有可以想象到的工具。您可能希望通过像 mod_evasive 这样的解决方案在
    Web 服务器级别上提供帮助。但要小心，它们可能会消耗大量资源。
- en: Port scanning is a common information gathering/reconnaissance practice among
    potential attackers. Mapping the ports that are closed, open, or filtered as well
    as potentially determining which services are running can save the attackers'
    time. And when a service like SSH has been identified, password guessing, dictionary,
    and brute-force attacks can be launched. While going obscure will not make you
    invulnerable, readily available solutions exist for services like SSH, such as
    fail2ban, which will preemptively cut off some automated tools executing password
    attacks. Installation is as easy as executing the command, `sudo apt-get install
    fail2ban`.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 端口扫描是潜在攻击者常见的信息收集/侦察实践。映射已关闭、打开或过滤的端口以及可能确定正在运行的服务，可以节省攻击者的时间。当识别到诸如 SSH 这样的服务时，可以发动密码猜测、字典和暴力攻击。虽然变得模糊不会使您无法攻击，但对于像
    SSH 这样的服务，已经有现成的解决方案，例如 fail2ban，它将预防性地切断一些执行密码攻击的自动化工具。安装只需执行命令 `sudo apt-get
    install fail2ban`。
- en: There are lots of other measures that you will need to take to secure your server.
    From content inspection with tools such as Snort or mod_security to passive and
    active measures, it can be a task of its own; unfortunately, the book does not
    cover all potential approaches to web application security.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他措施，您需要采取措施来保护您的服务器。从使用 Snort 或 mod_security 等工具进行内容检查到被动和主动措施，这可能是一项独立的任务；不幸的是，本书未涵盖所有潜在的
    Web 应用程序安全方法。
- en: Reading logs and troubleshooting your setup (Simple)
  id: totrans-350
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阅读日志和解决设置问题（简单）
- en: Logfiles can contain useful information for troubleshooting. For example, you
    might see a directive that is not correctly set up, a syntax error, or even a
    communications error. Then it is time to review the configuration file, correct
    the errors, and restart/start the service.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 日志文件可以包含用于故障排除的有用信息。例如，您可能会看到未正确设置的指令，语法错误，甚至通信错误。那么现在是检查配置文件，纠正错误并重新启动/启动服务的时候了。
- en: Getting started
  id: totrans-352
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: From the moment you install Debian your system will start recording logs. They
    are sitting on `/var/log`, are rotated daily (if needed) and compressed, and you
    should back them up. There are system-level and application-level logs. You can
    even enable additional verbosity and/or debugging information by searching the
    configuration files for `log` directives. It is important that you familiarize
    yourself with the contents of `/var/log` and the files that each application and/or
    service generates.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 从你安装 Debian 的那一刻起，系统就开始记录日志。它们位于 `/var/log`，每天轮换（如果需要），并进行压缩，你应该备份它们。日志分为系统级别和应用级别。你甚至可以通过搜索配置文件中的
    `log` 指令来启用更多的详细信息和/或调试信息。熟悉 `/var/log` 的内容及每个应用程序和/或服务生成的文件是非常重要的。
- en: How to do it…
  id: totrans-354
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Familiarize yourself with grep and less (`sudo apt-get install less`), which
    enable you to:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 熟悉 `grep` 和 `less`（`sudo apt-get install less`），它们可以帮助你：
- en: Add your user to the adm group by running `sudo usermod –a –G adm devops`. The
    adm group will allow you to read several logfiles under the `/var/log` folder,
    thus reducing the need to use `sudo` for any subsequent commands.
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过运行 `sudo usermod –a –G adm devops` 将你的用户添加到 adm 组。adm 组将允许你读取 `/var/log` 文件夹下的多个日志文件，从而减少以后使用
    `sudo` 执行命令的需求。
- en: Search for a particular term in a file (`grep –i 'disk is full' /var/log/syslog`)
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在文件中搜索特定的词（`grep –i 'disk is full' /var/log/syslog`）
- en: Then use tail to monitor additions to the file, `tail –f /var/log/bacula/bacula.log`.
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后使用 `tail` 监控文件的新增内容，`tail –f /var/log/bacula/bacula.log`。
- en: 'The following are default logfiles that can be useful for a web server:'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是一些对于 web 服务器可能有用的默认日志文件：
- en: Any error 500 should be logged in `/var/log/apache2/error.log`
  id: totrans-360
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何 500 错误应该记录在 `/var/log/apache2/error.log` 中
- en: '`/var/log/mysql.err and /var/log/mysql.log` contains MySQL logs and `/var/log/postgresql/postgresql-9.1-main.log`
    contains Postgres'''
  id: totrans-361
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/mysql.err 和 /var/log/mysql.log` 包含 MySQL 日志，`/var/log/postgresql/postgresql-9.1-main.log`
    包含 Postgres 日志'
- en: '`/var/log/syslog` is very useful for networking logs as well as for **OOM**s
    (**out of memory**) errors'
  id: totrans-362
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/syslog` 对于网络日志以及 **OOM**（**内存溢出**）错误非常有用'
- en: There's more…
  id: totrans-363
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: Debian uses `logrotate` to control periodic rotation of logs. After some days
    of running your server, you will notice that `/var/log` starts filling up with
    files ending in `.0` and `.gz`. These are rotated logfiles that are archived based
    on time or size rules. You can move them to your backup, and `.gz` files can also
    be searched by using `zgrep` instead of `grep`.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 使用 `logrotate` 来控制日志的定期轮换。运行服务器几天后，你会注意到 `/var/log` 开始填充以 `.0` 和 `.gz`
    结尾的文件。这些是基于时间或大小规则归档的轮换日志文件。你可以将它们移动到备份中，而且 `.gz` 文件可以使用 `zgrep` 代替 `grep` 来进行搜索。
- en: Applications such as logcheck (`sudo apt-get install logcheck`) can help monitor
    for log anomalies. You may also want to use remote syslog servers or logging applications
    such as Prelude that centralize logs for several servers and help you determine
    the timelines of events.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 像 logcheck（`sudo apt-get install logcheck`）这样的应用程序可以帮助监控日志异常。你还可能想要使用远程 syslog
    服务器或像 Prelude 这样的日志应用程序，它们将多个服务器的日志集中起来，帮助你确定事件的时间线。
- en: Regarding timelines, it is also important to have synchronized clocks in all
    your servers. This is something that is easily achievable by installing the ntp
    daemon, `sudo apt-get install ntp`, or by using a manual tool such as ntpdate-debian,
    available in the ntpdate package.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 关于时间线，同样重要的是确保你所有服务器的时钟同步。这可以通过安装 ntp 守护进程 `sudo apt-get install ntp` 或使用像 ntpdate-debian
    这样的手动工具来轻松实现，ntpdate 工具包中包含此工具。
- en: Using proxies, caches, and clusters to scale your architecture (Advanced)
  id: totrans-367
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代理、缓存和集群来扩展你的架构（高级）
- en: Eventually you'll find that you need to start splitting your application to
    accommodate growth. This recipe discusses some components and strategies that
    you might consider, including Ultra Monkey, a methodology that will help you get
    started navigating the different clustering components that can be used in your
    application.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，你会发现你需要开始拆分你的应用程序以适应增长。此方案讨论了一些你可能考虑的组件和策略，包括 Ultra Monkey，这是一种方法论，帮助你开始浏览可以在应用程序中使用的不同集群组件。
- en: Getting started
  id: totrans-369
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: Chances are your setup will be more complex than a simple web plus database
    server. When that happens, it's time to start thinking about how to scale your
    architecture. You can start with simple separation (as outlined in the *Optimizing
    your solution performance* recipe) such as moving the databases to different servers,
    moving the backup components to different servers, and so on, or by splitting
    the application entirely.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 你的配置可能比简单的 Web + 数据库服务器更复杂。当这种情况发生时，应该开始考虑如何扩展你的架构。你可以从简单的分离（如 *优化你的解决方案性能*
    这一方案中提到的）开始，比如将数据库迁移到不同的服务器，将备份组件迁移到不同的服务器，等等，或者彻底拆分应用程序。
- en: How to do it…
  id: totrans-371
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: In this section, you will set up Nginx as a frontend server, which queries Apache
    for URIs and uses Memcache to cache some responses. This will provide in-memory
    caching of objects, an event-based frontend, and will not require you to change
    your Apache configuration.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分中，你将设置 Nginx 作为前端服务器，查询 Apache 以获取 URI，并使用 Memcache 缓存部分响应。这将提供基于内存的对象缓存、基于事件的前端，并且无需更改
    Apache 配置。
- en: 'Change the port where Apache''s running, so it doesn''t conflict with Nginx:'
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改 Apache 运行的端口，以避免与 Nginx 冲突：
- en: Run the command `sudo editor /etc/apache2/ports.conf`.
  id: totrans-374
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行命令`sudo editor /etc/apache2/ports.conf`。
- en: Change **80** to `8080` in the **Listen** and **NameVirtualHost** directives.
  id: totrans-375
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Listen** 和 **NameVirtualHost** 指令中，将 **80** 改为`8080`。
- en: Run the command `sudo editor /etc/apache2/sites-enabled/*`.
  id: totrans-376
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行命令`sudo editor /etc/apache2/sites-enabled/*`。
- en: Change **80** to `8080` in the **VirtualHost** directive.
  id: totrans-377
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **VirtualHost** 指令中，将 **80** 改为`8080`。
- en: Run the command `sudo service apache2 restart`.
  id: totrans-378
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行命令`sudo service apache2 restart`。
- en: 'Now, you can use Netfilter to avoid connections to TCP port 8080, since it
    will only be accessed locally by Nginx:'
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以使用 Netfilter 来避免连接到 TCP 端口 8080，因为该端口将仅通过 Nginx 在本地访问：
- en: '[PRE27]'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Install Nginx (if it wasn''t installed before) using the following steps:'
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下步骤安装 Nginx（如果之前没有安装）：
- en: Run the command `sudo apt-get install nginx`.
  id: totrans-382
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行命令`sudo apt-get install nginx`。
- en: Run the command `sudo editor /etc/nginx/sited-enabled/default`.
  id: totrans-383
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行命令`sudo editor /etc/nginx/sited-enabled/default`。
- en: 'Search for the `location /` section and replace it with:'
  id: totrans-384
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找`location /`部分并将其替换为：
- en: '[PRE28]'
  id: totrans-385
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Restart Nginx with `sudo service nginx restart`.
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行命令`sudo service nginx restart`重新启动 Nginx。
- en: Install memcached with `sudo apt-get install memcached`.
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`sudo apt-get install memcached`安装 memcached。
- en: 'Now you need to load objects into memcached. The key for the object is the
    URI; if you''re trying to reach `http://example.com/icon.jpg`, and you want `icon.jpg`
    served from Memcache, you need to load it first. Here''s a simple PHP script to
    do it:'
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你需要将对象加载到 memcached 中。对象的键是 URI；如果你想访问`http://example.com/icon.jpg`，并希望 `icon.jpg`
    从 Memcache 中提供，你需要先加载它。以下是一个简单的 PHP 脚本来完成这一操作：
- en: '[PRE29]'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: You can also use memcdump or other tools to massively load objects in your Memcache.
    If the key is not found in Memcache, Nginx will fall back to Apache.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 memcdump 或其他工具将对象大量加载到 Memcache 中。如果在 Memcache 中找不到该键，Nginx 会回退到 Apache。
- en: As mentioned before, Ultra Monkey is not a product but a methodology for setting
    up service clusters. It leverages existing open source technologies such as Heartbeat
    and Linux Virtual Server. Heartbeat provides high availability and Linux Virtual
    Server provides load balancing. Ultra Monkey enables different architectures or
    topologies ( [http://www.ultramonkey.org/3/topologies/ha-lb-overview.html](http://www.ultramonkey.org/3/topologies/ha-lb-overview.html)),
    and we will cover the load balancing one.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Ultra Monkey 不是一个产品，而是一个用于设置服务集群的方法论。它利用现有的开源技术，如 Heartbeat 和 Linux Virtual
    Server。Heartbeat 提供高可用性，而 Linux Virtual Server 提供负载均衡。Ultra Monkey 支持不同的架构或拓扑结构（[http://www.ultramonkey.org/3/topologies/ha-lb-overview.html](http://www.ultramonkey.org/3/topologies/ha-lb-overview.html)），我们将介绍负载均衡的部分。
- en: You need two or more web servers to do this, and it's supposed that you're running
    the same application in all of them, connecting to a single database.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要两个或更多的 Web 服务器来实现这一目标，并假设你在所有这些服务器上运行相同的应用程序，连接到单一的数据库。
- en: Note
  id: totrans-393
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This particular scenario (only two servers) actually requires more setup (ARP
    replies, packet forwarding) which is described in full in the Ultra Monkey page.
    It has been abbreviated here for space, and this procedure will work well when
    you have several backends and one "gateway" balancer running ldirectord. You could
    add Heartbeat to another gateway and have a fully available gateway director for
    a large number of nodes in your cluster.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 这个特定的场景（只有两台服务器）实际上需要更多的配置（ARP 回复、数据包转发），这些在 Ultra Monkey 页面中有详细描述。这里为了节省空间做了简化，当你有多个后端和一个运行
    ldirectord 的 "网关" 负载均衡器时，这个过程将非常有效。你可以为另一个网关添加 Heartbeat，拥有一个完全可用的网关管理器，以支持集群中大量的节点。
- en: Install LVS' ldirectord via `sudo apt-get install ldirectord`.
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 `sudo apt-get install ldirectord` 安装 LVS 的 ldirectord。
- en: Now, let's assume web01 has the IP address `10.11.11.3` and web02 has `10.11.11.99`.
    You need to decide in which one you will run the ldirectord software or, the virtual
    IP address of your cluster. In our case, we'll use `10.11.11.100` as a virtual
    address, and the director will be `10.11.11.99`.
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，假设 web01 的 IP 地址是 `10.11.11.3`，web02 是 `10.11.11.99`。你需要决定在哪台服务器上运行 ldirectord
    软件，或者选择你的集群虚拟 IP 地址。在我们的案例中，我们将使用 `10.11.11.100` 作为虚拟地址，管理器将是 `10.11.11.99`。
- en: In both nodes, enable the virtual address using an alias or by adding a new
    address to the existing interface, `sudo ip addr add 10.11.11.100/24 dev eth0`
    (this change will be temporary until you declare a new virtual interface on `/etc/network/interfaces`).
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在两个节点上，使用别名启用虚拟地址，或者通过向现有接口添加新地址来启用，`sudo ip addr add 10.11.11.100/24 dev eth0`（此更改将是临时的，直到你在
    `/etc/network/interfaces` 中声明一个新的虚拟接口）。
- en: 'In your cluster director, run `sudo editor /etc/ldirectord.cf` and type in:'
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的集群管理器中，运行 `sudo editor /etc/ldirectord.cf` 并输入：
- en: '[PRE30]'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Notice that in addition to the round-robin load balancing functionality, ldirectord
    is also checking for the existence of `index.html` and the words "It works" inside
    the file (this is the default Apache index file), which can help to determine
    that a badly configured web server should no longer be part of the cluster.
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，除了轮询负载均衡功能外，ldirectord 还会检查 `index.html` 文件的存在以及文件内是否包含 "It works" 字样（这是默认的
    Apache 索引文件），这可以帮助确定配置不当的 Web 服务器不再属于集群的一部分。
- en: Make sure ldirectord is enabled, `sudo editor /etc/default/ldirectord`.
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保 ldirectord 已启用，`sudo editor /etc/default/ldirectord`。
- en: Now start ldirectord using `sudo service ldirectord start`.
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在通过 `sudo service ldirectord start` 启动 ldirectord。
- en: Check the configuration with `sudo ipvsadm –L -n`.
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `sudo ipvsadm –L -n` 检查配置。
- en: 'Your cluster should look as follows:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 你的集群应该如下所示：
- en: '![How to do it…](img/8840OS_15_01.jpg)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/8840OS_15_01.jpg)'
- en: There's more…
  id: totrans-406
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: There are many other approaches to proxying, clustering, and caching on Linux
    and Debian, both open source and proprietary, such as Red Hat Cluster Suite for
    applications or even OpenStack for OS-level massive clustering. Evaluate all options
    to find an architecture that matches not only your existing solution but potential
    future needs as well.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 和 Debian 上，有许多其他代理、集群和缓存的方法，既有开源的，也有专有的，比如用于应用程序的 Red Hat Cluster Suite，甚至用于操作系统级大规模集群的
    OpenStack。评估所有选项，找到一个不仅能匹配你当前解决方案，还能满足未来需求的架构。
- en: Consuming Windows Azure Cloud Services (Medium)
  id: totrans-408
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 消费 Windows Azure 云服务（中等）
- en: There are some situations where consuming external services might make technical
    and financial sense. And it is not a new idea. Originally people started to outsource
    their spam services, then entire mail servers, then storage, virtual machines,
    and now databases, queues, and buses, and even full platforms are being consumed
    from the public cloud.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，使用外部服务可能在技术上和经济上是合理的。这并不是一个新想法。最初人们开始外包垃圾邮件服务，接着是整个邮件服务器，然后是存储、虚拟机，现在数据库、队列、总线，甚至完整的平台也在公有云中被消费。
- en: Getting started
  id: totrans-410
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用
- en: The author has consumed Azure from Debian since late 2009 through the PHP SDK
    POC ([http://bureado.com/2010/03/30/una-breve-poc-del-sdk-de-windows-azure-para-p/](http://bureado.com/2010/03/30/una-breve-poc-del-sdk-de-windows-azure-para-p/)).
    The service has come a long way since then and now offers lots of other services,
    including VMs and a community service called VM Depot. There are several scenarios
    the author is familiar with, from large enterprise PHP and PostgreSQL applications
    on Azure all the way to Perl and Hadoop on Azure HDInsight.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 作者自2009年底以来通过PHP SDK POC（[http://bureado.com/2010/03/30/una-breve-poc-del-sdk-de-windows-azure-para-p/](http://bureado.com/2010/03/30/una-breve-poc-del-sdk-de-windows-azure-para-p/)）开始使用Azure。从那时起，服务已经有了很大的发展，现在提供了许多其他服务，包括虚拟机和一个名为VM
    Depot的社区服务。作者熟悉多个场景，从在Azure上运行的大型企业PHP和PostgreSQL应用程序，到Azure HDInsight上的Perl和Hadoop。
- en: How to do it…
  id: totrans-412
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: Now we'll explore how to upload this server to Azure. We'll assume that you
    were using a hypervisor (the author used Hyper-V on Windows 8) so you can export
    the VM.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将探讨如何将此服务器上传到Azure。假设你正在使用虚拟化管理程序（作者在Windows 8上使用Hyper-V），这样你就可以导出虚拟机。
- en: Moving your infrastructure to the public cloud means you will change your networking
    scenario. So set DHCP as your mode for eth0 by executing `sudo editor /etc/network/interfaces`,
    changing **static** to **dhcp**, and deleting the rest of the lines for the eth0
    interface.
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的基础设施迁移到公共云意味着你将改变你的网络场景。因此，执行`sudo editor /etc/network/interfaces`，将**static**改为**dhcp**，并删除eth0接口的其余行，将DHCP设置为eth0的工作模式。
- en: Install python-asn1, a dependency of the Windows Azure Linux Agent using the
    command, `sudo apt-get install python-asn1` and grab the dpkg file for waagent
    1.3.2-1 ([http://packages.debian.org/sid/amd64/waagent/download](http://packages.debian.org/sid/amd64/waagent/download),
    not available in wheezy yet) from the repositories.
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用命令`sudo apt-get install python-asn1`安装Windows Azure Linux Agent的依赖包python-asn1，并从仓库中下载waagent
    1.3.2-1的dpkg文件（[http://packages.debian.org/sid/amd64/waagent/download](http://packages.debian.org/sid/amd64/waagent/download)，wheezy尚不支持）。
- en: Install waagent with `sudodpkg –I waagent_1.3.2-1_amd64.deb`.
  id: totrans-416
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`sudo dpkg –I waagent_1.3.2-1_amd64.deb`安装waagent。
- en: Deprovision the VM with `sudowaagent –deprovision` and halt the VM with `sudo
    halt`.
  id: totrans-417
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`sudo waagent –deprovision`撤销虚拟机的配置，并使用`sudo halt`停止虚拟机。
- en: 'Now you can export the VM into the VHD format. While it''s being exported (it
    might take a while), you can request a certificate on your Azure portal (if you
    haven''t, you can open a trial account for free) and upload using the csupload
    tool on Windows:'
  id: totrans-418
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你可以将虚拟机导出为VHD格式。在导出过程中（可能需要一些时间），你可以在Azure门户上申请证书（如果没有，可以免费开设试用账户），并使用Windows上的csupload工具上传：
- en: '`csupload set-connection "SubscriptionID=$STORAGE_SUB_ID; CertificateThumbprint=$CERT_THUMB;
    ServiceManagementEndpoint=https://management.core.windows.net"`'
  id: totrans-419
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`csupload set-connection "SubscriptionID=$STORAGE_SUB_ID; CertificateThumbprint=$CERT_THUMB;
    ServiceManagementEndpoint=https://management.core.windows.net"`'
- en: '`csupload Add-PersistentVMImage -Destination "$CONTAINER_URL/my.vhd" -Label
    "Debian" -LiteralPath "C:\Debian.vhd" -OS Linux`'
  id: totrans-420
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`csupload Add-PersistentVMImage -Destination "$CONTAINER_URL/my.vhd" -Label
    "Debian" -LiteralPath "C:\Debian.vhd" -OS Linux`'
- en: There's more…
  id: totrans-421
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: You can also use the Azure CLI tools to upload the VM as depicted in official
    tutorial videos ([http://www.youtube.com/watch?v=bDAyI0imqGE](http://www.youtube.com/watch?v=bDAyI0imqGE))
    or you could upload your VM to VM Depot ([http://vmdepot.msopentech.com/List/Index](http://vmdepot.msopentech.com/List/Index))
    which has included a Debian image.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用Azure CLI工具上传虚拟机，如官方教程视频中所示（[http://www.youtube.com/watch?v=bDAyI0imqGE](http://www.youtube.com/watch?v=bDAyI0imqGE)），或者你可以将虚拟机上传到VM
    Depot（[http://vmdepot.msopentech.com/List/Index](http://vmdepot.msopentech.com/List/Index)），那里提供了Debian镜像。
- en: There are other services available on Azure, such as the Active Directory and
    BizTalk services, queues, tables, blob storage, and Hadoop; there are other PaaS
    and IaaS providers, such as Amazon, Google, and OpenShift. Debian has become a
    mainstream distribution of choice in most of the providers, and it's important
    to consider what the public, hybrid, and private clouds have to offer to your
    web architecture.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: Azure上还提供其他服务，例如Active Directory和BizTalk服务、队列、表格、Blob存储和Hadoop；也有其他PaaS和IaaS提供商，如Amazon、Google和OpenShift。Debian已经成为大多数提供商的主流发行版，考虑公共云、混合云和私有云能够为你的网络架构提供什么是非常重要的。
- en: Responding to security incidents (Advanced)
  id: totrans-424
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应对安全事件（高级）
- en: It will happen. Large market share along with insufficient security practices
    and attack persistency will eventually result in a security breach, especially
    if attackers have incentives. If you operate a low-profile CMS, most likely you
    will be defaced. If you operate something for profit in nature, attackers might
    go for passwords or sensitive data. In other cases, your server may be compromised
    and used as a platform for other attacks, such as DDoS botnets.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 这种情况会发生。市场份额大且安全措施不足，加上攻击的持续性，最终将导致安全漏洞，尤其是当攻击者有动机时。如果你运营的是低调的内容管理系统（CMS），很可能会被篡改。如果你运营的是盈利性质的系统，攻击者可能会寻找密码或敏感数据。在其他情况下，你的服务器可能会被入侵，并作为其他攻击的跳板，例如DDoS僵尸网络。
- en: You will notice defacements, strange files lying around your filesystem, processes
    that you know nothing about running, and so on. Those are clear signs that something
    is going on; although, there might be others, and for a while, there might be
    none making operations even more important.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 你会发现网站篡改、奇怪的文件散布在文件系统中、你不知道的进程在运行等。这些都是明显的迹象，说明系统发生了异常；尽管可能还有其他迹象，且在一段时间内可能没有迹象，这使得操作变得更加重要。
- en: Getting ready
  id: totrans-427
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'There are two schools for responding to a security incident: shutting the power
    off or not. Among other things, it depends on whether you or your company prosecute
    violators. Although not everyone wants to go through a legal process, learning
    can be a very important driver of your very own internal forensic effort.'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 响应安全事件有两种方式：关闭电源或不关闭电源。除了其他因素外，这取决于你或你的公司是否会追究违规者的责任。虽然并非每个人都愿意经历法律程序，但学习过程可以成为推动你内部法医工作的一个非常重要的动力。
- en: Shutting the power off, and then cloning the disk for a forensic analysis is
    a common approach in those cases; although, not powering it off might help gather
    important live information. Also, shutting it off for forensic analysis means
    your time-to-recovery will be significantly higher.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，关闭电源并克隆磁盘进行法医分析是一种常见的做法；尽管不关闭电源可能有助于收集重要的实时信息。此外，关闭电源进行法医分析意味着恢复时间将大大增加。
- en: How to do it…
  id: totrans-430
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'The following is a non-authoritative, non-specific list of suggestions to respond
    to a security incident:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个非权威、非具体的安全事件应对建议列表：
- en: Don't unplug the network cable. Advanced malware, especially those installed
    as a result of Advanced Persistent Threats (APTs, not to be confused with the
    packaging systems), can inflict damage when the network goes down.
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要拔掉网络电缆。高级恶意软件，特别是那些由高级持续性威胁（APT）引发的恶意软件（不应与打包系统混淆），在网络中断时可能会造成损害。
- en: If you decide to shut it off, pull the energy cord. This is not a clean shutdown,
    and you will want to take care of any critical pending operations first. Take
    the disk(s) out and replicate them using read-only access, ideally using a forensics
    duplicator. If you don't have the hardware or the knowledge, and you want to prosecute,
    take it to forensic professionals.
  id: totrans-433
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你决定关闭电源，拔掉电源线。这不是一个干净的关机过程，你需要先处理任何关键的待处理操作。取出磁盘，并使用只读访问复制它们，理想情况下使用法医复制工具。如果你没有相关硬件或知识，且希望追究责任，可以将其交给法医专业人员。
- en: Recover your server as specified in Restore your environment; however, after
    that, you need to find and patch whichever vulnerability led to the intrusion
    in the first place!
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照“恢复你的环境”中的说明恢复你的服务器；但是，恢复后，你需要找到并修补导致最初入侵的漏洞！
- en: Examination of system logs is essential, although they might have been cleared.
    On a web application, you'd like to take a look at the web server logs (`/var/log/apache2/*`,
    `/var/log/nginx/*`), especially for any error lines that might be indicative of
    an application vulnerability leveraged to inject code or provoke an intrusion.
    Also, you want to take a look at any seemingly random garbage or erroneous requests
    that can evidence someone is trying to exploit an error and `/var/log/auth.log`
    containing authentication activity (SSH logins, and so on). In addition to this,
    you should also look at the `/var/log/wtmp`, `/var/log/lastlog` and `/var/log/btmp`
    files that can be read with the `last` and `lastlog` commands and might contain
    important authentication information. Database logs should also be reviewed and
    users (in some cases, regulatory organizations) notified of privacy breaches.
    Also, logs of products such as RKHunter might be helpful.
  id: totrans-435
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统日志的检查至关重要，尽管它们可能已被清除。在网页应用程序中，你需要查看网页服务器日志（`/var/log/apache2/*`，`/var/log/nginx/*`），特别是那些可能表明应用程序漏洞被利用以注入代码或引发入侵的错误行。此外，你还应该查看任何看似随机的垃圾数据或错误请求，这些请求可能表明有人正在尝试利用错误，而`/var/log/auth.log`则记录了身份验证活动（如
    SSH 登录等）。除此之外，你还应该查看`/var/log/wtmp`、`/var/log/lastlog` 和 `/var/log/btmp` 文件，这些文件可以通过`last`和`lastlog`命令读取，并且可能包含重要的身份验证信息。数据库日志也应该审查，并通知用户（在某些情况下，监管机构）有关隐私泄露的情况。此外，像
    RKHunter 这样的产品日志可能也有帮助。
- en: Finally, for critically modified information such as defaced files, you'd want
    to check the MAC times. When you use `–l`, you get the modification time of a
    file but by adding `–c`, you can check the creation time and with `–u`, the access
    (use) time. Specialized forensic toolkits, such as The Coroner's Toolkit, will
    help you detect mismatches and timelines if necessary.
  id: totrans-436
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，对于诸如篡改文件等关键修改信息，你可能需要检查文件的 MAC 时间。使用`–l`命令，你可以查看文件的修改时间，但如果加上`–c`，你可以检查创建时间，使用`–u`可以查看访问（使用）时间。专门的取证工具包，如
    The Coroner's Toolkit，如果有必要，将帮助你检测不匹配的时间线。
- en: In most cases, if you're using a CMS or some other prepackaged web software,
    you can upgrade your software, themes, and modules (especially third party modules)
    and check on specialized mailing lists (such as full disclosure) if there are
    any known security vulnerabilities. Upgrading your operating system to patch any
    potential vulnerability is also advised.
  id: totrans-437
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在大多数情况下，如果你使用的是 CMS 或其他预打包的网页软件，你可以升级软件、主题和模块（尤其是第三方模块），并检查专业的邮件列表（如全披露）是否有已知的安全漏洞。同时，建议升级操作系统，以修补任何潜在的漏洞。
- en: Monitoring your server's operation (Medium)
  id: totrans-438
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控服务器的运行（中级）
- en: Monitoring is a part of any operation management practice. As with any other
    monitoring discipline, you will need to choose which Key Performance Indicators
    (KPIs) are applicable to your business and application, and which thresholds/ranges
    are acceptable and unacceptable for you.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 监控是任何操作管理实践的一部分。与其他监控领域一样，你需要选择哪些关键绩效指标（KPIs）适用于你的业务和应用程序，并确定哪些阈值/范围是可以接受的，哪些是不可接受的。
- en: Getting ready
  id: totrans-440
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Yes, you can do real-time pedestrian monitoring by running command-line tools
    yourself. Let's face it, a lot of systems administrators will still login via
    SSH to their servers and run top for a reason; immediate snapshots have immediate
    value in the monitoring process. But you can also install a monitoring product
    and map the values over time. A mix of the two approaches will be valuable while
    managing a Debian system.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，你可以通过自己运行命令行工具来进行实时的行人监控。说实话，很多系统管理员仍然会通过 SSH 登录服务器并运行 top 命令，这是有原因的；即时快照在监控过程中具有即时价值。但你也可以安装一个监控产品并将这些数值随时间进行映射。两者方法的结合将是管理
    Debian 系统时非常有价值的。
- en: Some of the monitoring products out there, such as Munin, Nagios, and Zenoss,
    will have default values for most of the usual metrics monitored for web servers;
    however, you need to perform test runs that might span a couple weeks or so, with
    different types of loads, to understand your acceptable ranges.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 市面上一些监控产品，如 Munin、Nagios 和 Zenoss，会为大多数常见的网页服务器监控指标提供默认值；然而，你需要进行一段时间的测试，可能会持续几周，涵盖不同类型的负载，以了解你的可接受范围。
- en: How it works…
  id: totrans-443
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: 'The following are some examples of KPIs for your web server on Debian:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些适用于 Debian 上网页服务器的 KPI 示例：
- en: Ping round-trip time (RTT), which, on a lower scale, helps determine network
    outages, and on a higher scale, helps understand latency issues to your server.
  id: totrans-445
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ping 往返时间 (RTT)，在较低的层次上帮助确定网络故障，在较高的层次上帮助理解服务器的延迟问题。
- en: Network interface throughput, which helps understand capacity and usage.
  id: totrans-446
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络接口吞吐量，帮助了解容量和使用情况。
- en: Disk usage, memory usage, and CPU usage. Also, tools such as vmstat will help
    you do real-time analysis. The three metrics combined will help you find bottlenecks
    in your application, which in most cases will be I/O bound. The independent metrics
    will just give you an idea whether you need to add capacity or not.
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 磁盘使用情况、内存使用情况和 CPU 使用情况。同时，像 vmstat 这样的工具将帮助你进行实时分析。这三个指标结合起来将帮助你找到应用程序中的瓶颈，大多数情况下会是
    I/O 受限。独立的指标仅能帮助你了解是否需要增加容量。
- en: TCP response times, which helps measure the consistency of the time the network
    stack takes to respond to a request on the port where your server's running (both
    the web and the database servers if you're using TCP connections).
  id: totrans-448
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: TCP 响应时间，帮助衡量网络栈响应服务器端口请求的时间一致性（如果你使用 TCP 连接，既包括 Web 服务器也包括数据库服务器）。
- en: HTTP request/response times, which helps measure the consistency of the time
    the web server takes to respond to a request. More advanced monitoring of this
    includes expected responses, specific URIs, and form workloads for testing (which
    may be useful for determining defacements, for example).
  id: totrans-449
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: HTTP 请求/响应时间，帮助衡量 Web 服务器响应请求的时间一致性。更高级的监控包括预期响应、特定 URI 和用于测试的表单工作负载（例如，这可能有助于确定篡改问题）。
- en: Database query response times, which helps find bottlenecks in your application.
    In teams with DBAs, this is usually done by the DBA as part of a performance optimization
    effort, but DevOps team might put that into their monitoring plate.
  id: totrans-450
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库查询响应时间，帮助找到应用程序中的瓶颈。在有 DBA 的团队中，通常由 DBA 作为性能优化的一部分进行此操作，但 DevOps 团队可能会将其纳入监控内容。
- en: How to do it…
  id: totrans-451
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: The easiest way to get a monitoring glimpse of your server's operation is to
    log in via SSH and interpret the output of certain commands.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 获取服务器操作监控数据的最简单方法是通过 SSH 登录并解释某些命令的输出。
- en: 'Run vmstat. You will get a fairly cryptical snapshot of the following:'
  id: totrans-453
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 vmstat。你将获得以下内容的一个相当复杂的快照：
- en: '**procs-r**: It indicates processes waiting for runtime. It is a potential
    indicative of CPU-bound applications. The lower, the better—0 is best (test under
    load).'
  id: totrans-454
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**procs-r**：它表示等待运行的进程。它是 CPU 绑定应用程序的潜在指示器。值越低越好——0 是最佳状态（在负载下测试）。'
- en: '**procs-b**: It indicates processes on uninterruptible sleep which is not good.
    0 is best.'
  id: totrans-455
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**procs-b**：它表示处于不可中断睡眠状态的进程，这是不好的。0 是最佳状态。'
- en: '**memory-swpd**: It indicates swapped memory. Here, 0 is normal. Having any
    amount here is bad because the processes will wait until the disk spins to virtual
    memory. You can also tweak the swappiness (tendency to swap). Swap in/swap out,
    the lower the better; it will be 0 if you have no swapped memory.'
  id: totrans-456
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**memory-swpd**：它表示交换内存。在这里，0 是正常的。如果这里有任何交换内存，都是不好的，因为进程将等待磁盘旋转到虚拟内存。你还可以调整交换策略（倾向于交换的程度）。交换输入/交换输出，越低越好；如果没有交换内存，则为
    0。'
- en: '**memory-cache**: It indicates cached memory. It is generally good as it will
    avoid a slower I/O.'
  id: totrans-457
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**memory-cache**：它表示缓存的内存。通常这是好的，因为它可以避免较慢的 I/O 操作。'
- en: '**memory-free**: It indicates free memory. As opposed to Windows, Linux tends
    to leave free memory untouched. So it is not always an indicator of anything in
    particular, except if it''s 0, then you''re running out of memory.'
  id: totrans-458
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**memory-free**：它表示空闲内存。与 Windows 不同，Linux 通常会将空闲内存保持原样。因此，它通常不表示任何特定的东西，除非它是
    0，这时意味着内存不足。'
- en: '**Io-bi/bo**: It indicates blocks in/out of disk. Here, lower is better. High
    numbers here, that increase without control or patterns during loads, are indicative
    of an I/O-bound application. Either find the I/O bottlenecks and remove them or
    invest in faster storage… or a different storage architecture. Also see CPU waiting
    time (**wa**), which is the time waiting for I/O (here, lower is better).'
  id: totrans-459
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Io-bi/bo**：它表示磁盘的进出块。在这里，较低的值较好。如果在负载期间，这个值无控制地或不规则地增加，通常表明应用程序受 I/O 约束。你可以找到
    I/O 瓶颈并去除它们，或者投资更快的存储设备…或更改存储架构。还可以查看 CPU 等待时间 (**wa**)，即等待 I/O 的时间（在这里，较低的值较好）。'
- en: '**cpu-us/id**: It indicates the CPU usage versus the idle time. Idle means
    responsiveness but also underconsumption of CPU power. A fair, consistent usage
    amount is a good indicator of a stable load.'
  id: totrans-460
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cpu-us/id**：表示CPU的使用情况与空闲时间的比例。空闲意味着响应性好，但也意味着CPU功率消耗较少。一个合理、一致的使用量是负载稳定性的良好指标。'
- en: You can use `vmstat n` to get samplings each *n* seconds. For example `vmstat
    5` is good when you're doing a load test to see where your app bottlenecks are.
    Here is an example of a sample web server when running `httperf`. The first two
    samples are before the test, and the next two are during the test:![How to do
    it…](img/8840OS_18_01.jpg)
  id: totrans-461
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用`vmstat n`来每*n*秒获取一次采样。例如，`vmstat 5`非常适合在进行负载测试时，查看应用程序的瓶颈。以下是运行`httperf`时的Web服务器采样示例。前两次采样是在测试之前，接下来的两次是测试期间：![如何操作…](img/8840OS_18_01.jpg)
- en: Can you spot the bottleneck? Yes, it's disk I/O. You can see **swap** is good,
    and the CPU and memory usage rates are good as well, thus no need to increase
    capacity.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 你能找到瓶颈吗？是的，它是磁盘I/O。你可以看到**交换区**表现良好，CPU和内存使用率也不错，因此无需增加容量。
- en: This set up runs on a VM (particularly, a VPS), which tends to have slow storage
    (some people prefer to use network-based storage to avoid using the disk drivers
    of their hypervisors).
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 这个设置运行在一个虚拟机（特别是VPS）上，通常存储较慢（有些人更喜欢使用基于网络的存储，以避免使用虚拟化管理程序的磁盘驱动程序）。
- en: You can use jnettop (called `jnettop –i <interface name>`) to check the bandwidth
    usage per each TCP connection. You can see aggregates and check whether the HTTP
    requests or the SQL connections are using all of your available bandwidth. There
    are several strategies to increase the bandwidth, which we cover in this book
    under the *Using proxies, caches, and clusters to scale your architecture* recipe.
  id: totrans-464
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用`jnettop`（命令为`jnettop –i <接口名称>`）检查每个TCP连接的带宽使用情况。你可以查看汇总信息，检查HTTP请求或SQL连接是否占用了所有可用带宽。在本书的*使用代理、缓存和集群来扩展架构*一节中，我们介绍了几种增加带宽的策略。
- en: As an alternative, you can use `tcptrack` to track the TCP state as well; although,
    for network load, we like to use jnettop that looks like:![How to do it…](img/8840OS_18_02.jpg)
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为替代方法，你可以使用`tcptrack`来跟踪TCP状态；虽然，对于网络负载，我们更喜欢使用看起来像这样的`jnettop`：![如何操作…](img/8840OS_18_02.jpg)
- en: Previously we used `httperf` to simulate a load scenario. Now let's suppose
    you want to use it to actually measure the response time of your web server, simulating
    10 connections using the command `httperf --hog --server=www.example.com --num-conns=10`.
    It should look like the following screenshot:![How to do it…](img/8840OS_18_03.jpg)
  id: totrans-466
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之前我们使用`httperf`来模拟负载场景。现在假设你想用它来实际测量Web服务器的响应时间，模拟10个连接，使用命令`httperf --hog --server=www.example.com
    --num-conns=10`。它应该显示如下截图：![如何操作…](img/8840OS_18_03.jpg)
- en: Our application is able to handle 2.4 req/s (given the 10 connection workload
    and the fact that we ran this locally), or conversely it takes 0.4 seconds to
    reply to one request. This operation used 0.9 KB/s of bandwidth. For production
    environments, you would like to set a more complex test environment with remote
    computers simulating hundreds or thousands of connections from different connections.
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们的应用程序能够处理每秒2.4个请求（假设10个连接工作负载，并且我们是在本地运行的），换句话说，回复一个请求需要0.4秒。此操作使用了0.9 KB/s的带宽。在生产环境中，你可能希望设置一个更复杂的测试环境，使用远程计算机模拟来自不同连接的数百或数千个连接。
- en: 'Measuring the response time for a SQL query is trivial. If you can write your
    query on the command line (for example, with `mysql –e` or `psql –c`), you can
    wrap the entire statement on a time call:'
  id: totrans-468
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测量SQL查询的响应时间很简单。如果你能在命令行上编写查询（例如，使用`mysql –e`或`psql –c`），你可以将整个语句包装在一个时间调用中：
- en: '[PRE31]'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![How to do it…](img/8840OS_18_04.jpg)'
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/8840OS_18_04.jpg)'
- en: Take a look at the **user** and **sys** values—since this statement requires
    a password, **real** is artificially higher. Also notice that this statement will
    also include the time necessary to run the MySQL binary, connect, and so on, so
    it might be biased—for single queries, the mysql console already gives you an
    execution time in seconds. You could also compare the value over time by wrapping
    everything on a `watch` statement. But soon you will find out that the query response
    time depends on a lot of variables such as server load, I/O load, and so on, and
    that it is more efficient to focus on the queries that are systemically slow.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 **user** 和 **sys** 值——由于该语句需要密码，**real** 值人为地较高。还要注意，这个语句也会包括运行 MySQL 二进制文件、连接等所需的时间，因此可能会有偏差——对于单个查询，MySQL
    控制台已经会给出以秒为单位的执行时间。你还可以通过将所有内容放入 `watch` 语句中来比较随时间变化的值。但很快你会发现，查询响应时间依赖于许多变量，如服务器负载、I/O
    负载等，专注于那些系统性缓慢的查询会更高效。
- en: If using MySQL, edit `/etc/mysql/my.cnf` and uncomment the `log_slow_queries`
    directive. Queries taking more than `long_query_time` to complete will get logged
    to that file. Then your programmers, DBA, and you can sit and work on that query.
  id: totrans-472
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用 MySQL，请编辑 `/etc/mysql/my.cnf` 并取消注释 `log_slow_queries` 指令。超过 `long_query_time`
    完成的查询将被记录到该文件中。然后，你的程序员、数据库管理员和你可以一起分析这些查询。
- en: If using Postgres, edit `/etc/postgresql/9.1/main/postgresql.conf` and set `log_min_duration_statement`
    to a value (for example, 250ms).
  id: totrans-473
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用 Postgres，请编辑 `/etc/postgresql/9.1/main/postgresql.conf`，并将 `log_min_duration_statement`
    设置为一个值（例如，250ms）。
- en: Restart your database with the service `mysql restart` or `sudo service postgres
    restart` and start taking a look at the logs.
  id: totrans-474
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `mysql restart` 或 `sudo service postgres restart` 重启数据库，并开始查看日志。
- en: Optimizing your solution performance (Advanced)
  id: totrans-475
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化你的解决方案性能（高级）
- en: Optimization is the next natural step of observing your server's performance.
    You might want to squeeze out every extra millisecond of performance, but in general,
    people will address optimization when there are crass performance hits on their
    applications.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 优化是观察服务器性能的自然下一步。你可能想要榨取每一毫秒的性能，但通常，人们会在应用程序出现明显的性能瓶颈时才会着手进行优化。
- en: Getting started
  id: totrans-477
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: Without knowing it, you have probably explored performance-enhancing options
    already. For example, caches and load-balancing clusters, as well as cloud services,
    help accommodate growth, and so on. But this recipe will give you general ideas
    on what the common performance pitfalls are within the domain of a single server
    (physical or virtual), and what the low-hanging fruit for you to improve is.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 不知不觉中，你可能已经探索了一些提升性能的选项。例如，缓存、负载均衡集群以及云服务都有助于适应增长等等。但这篇教程将给你一些关于单台服务器（无论是物理的还是虚拟的）内常见性能瓶颈的总体思路，以及你可以改进的低挂果实。
- en: How to do it…
  id: totrans-479
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做……
- en: Set up application profiling for your programming language to find bottlenecks
    and improve your logic. For example, Xdebug is very popular in the PHP community
    and can help to address some of the scenarios rapidly.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 为你的编程语言设置应用程序剖析工具，以发现瓶颈并改进逻辑。例如，Xdebug 在 PHP 社区中非常受欢迎，可以帮助快速解决一些场景。
- en: Install it with `sudo apt-get install php5-xdebug`.
  id: totrans-481
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `sudo apt-get install php5-xdebug` 安装它。
- en: 'Enable it for Apache with sudo editor `/etc/php5/apache2/php.ini`, browse all
    the way to the end, and add:'
  id: totrans-482
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `sudo editor /etc/php5/apache2/php.ini` 为 Apache 启用它，浏览到文件末尾，并添加：
- en: '[PRE32]'
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Now restart Apache with `sudo service apache2 restart`.
  id: totrans-484
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用 `sudo service apache2 restart` 重启 Apache。
- en: Xdebug will drop cachegrind files in `/tmp` (you can change this in `php.ini`
    if needed), and you can inspect those cachegrind files with a tool such as KCachegrind,
    which will show you the time spent on the functions as shown in the following
    screenshot:![How to do it…](img/8840OS_19_01.jpg)
  id: totrans-485
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Xdebug 将在 `/tmp` 目录下生成 cachegrind 文件（如果需要，你可以在 `php.ini` 中更改此路径），你可以使用如 KCachegrind
    之类的工具查看这些 cachegrind 文件，它将显示每个函数的执行时间，如以下截图所示：![如何做……](img/8840OS_19_01.jpg)
- en: Act on your slow queries. This might mean creating indices, reviewing your data
    model, or ORM facilities, and even working with DBAs and developers on changing
    queries altogether. The next good step is to run them directly on the database
    console using `EXPLAIN`. `EXPLAIN` can tell you if a query is not using the most
    efficient way the database provides to do something; you can improve in some cases
    by making indices in the case of `SELECT` or provide cues for improving queries
    in other cases. For a simple query on a table with an index, the output looks
    like:![How to do it…](img/8840OS_19_02.jpg)
  id: totrans-486
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 采取措施应对慢查询。这可能意味着创建索引，审查数据模型或ORM工具，甚至与DBA和开发人员一起完全更改查询。下一个良好的步骤是直接在数据库控制台上运行它们，使用`EXPLAIN`。`EXPLAIN`可以告诉你查询是否未使用数据库提供的最有效方式来执行某些操作；在某些情况下，你可以通过为`SELECT`创建索引或提供改进查询的线索来进行优化。对于带有索引的表的简单查询，输出如下所示：![如何做...](img/8840OS_19_02.jpg)
- en: 'This explains the behavior of a query that is executed immediately after the
    server boots up, and repeated just afterwards, dropping from 0.29 seconds to execute
    to something much faster, as shown in the next screenshot, side by side:'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这解释了服务器启动后立即执行的查询行为，并在此后重复，执行时间从0.29秒降低到更快的情况，如下一起显示的下一截图所示：
- en: '![How to do it…](img/8840OS_19_03.jpg)'
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何做...](img/8840OS_19_03.jpg)'
- en: In this second query, **Using temporary** and **Using filesort** are not a problem
    when dealing with a 100-row table, but this one has 300,584, so it takes 0.23
    seconds to complete.
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在第二个查询中，当处理100行表时，**使用临时**和**使用文件排序**不是问题，但是这个查询有300,584行，因此完成需要0.23秒。
- en: '![How to do it…](img/8840OS_19_04.jpg)'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何做...](img/8840OS_19_04.jpg)'
- en: '`EXPLAIN` helped to identify the problem as indicated in the following screenshot:'
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`EXPLAIN`帮助识别了以下截图中指示的问题：'
- en: '![How to do it…](img/8840OS_19_05.jpg)'
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何做...](img/8840OS_19_05.jpg)'
- en: 'Now, by creating an index we can help the time drop (see the **Using index**
    clause in the following screenshot):'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，通过创建索引，我们可以帮助时间降低（参见以下截图中的**使用索引**条款）：
- en: '![How to do it…](img/8840OS_19_06.jpg)'
  id: totrans-494
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何做...](img/8840OS_19_06.jpg)'
- en: Fine tuning (or tweaking) configuration parameters for cache sizes, flush behavior,
    and so on might also be an option.
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对缓存大小，刷新行为等进行微调（或调整）配置参数也可能是一个选择。
- en: There's more…
  id: totrans-496
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: 5 to 10 years ago, optimizing the kernel was a big thing. People were upgrading
    and looking for new features to improve performance—much improvement came to laptops
    and desktops, and few to servers. Nowadays, lots of mid-market sysadmins prefer
    to leave the kernel as is in favor of eased management, while top web companies
    may employ teams that only do kernel optimization. Some vendors might even restrict
    the amount of kernel customization they can tolerate for support or warranty purposes.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 5到10年前，优化内核是一件大事。人们正在升级和寻找新功能来提高性能，大部分改进都来自于笔记本电脑和台式机，而服务器则少之又少。如今，许多中市场系统管理员更喜欢保持内核不变，以简化管理，而顶级网络公司可能会组建专门进行内核优化的团队。一些供应商甚至可能限制他们可以容忍的内核定制量，以获取支持或保修。
- en: Yes, faster I/O can add performance value to your server. More bandwidth, faster
    bus speeds, better RAM technologies, faster disks, storage using fibre, and so
    on should all be explored. But other solutions, such as horizontally growing by
    adding more servers for load balancing can also help. It is important to find
    the right balance between an elastic growth strategy and a manageable architecture.
    Fortunately, Debian has several free software tools as well as enough customization
    hooks for you to explore your own approach.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，更快的I/O可以为您的服务器增加性能价值。更大的带宽，更快的总线速度，更好的RAM技术，更快的磁盘，使用光纤存储等等都应该进行探索。但其他解决方案，例如通过增加更多服务器进行负载平衡来实现水平增长，也可以有所帮助。找到弹性增长策略和可管理的架构之间的正确平衡非常重要。幸运的是，Debian有几个免费软件工具以及足够的定制钩子，让您可以探索自己的方法。
