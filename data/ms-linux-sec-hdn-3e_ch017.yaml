- en: 16 Security Tips and Tricks for the Busy Bee
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 16 个忙碌蜜蜂的安全小贴士和技巧
- en: Join our book community on Discord
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加入我们的书籍社区，加入 Discord
- en: '[https://packt.link/SecNet](https://packt.link/SecNet)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/SecNet](https://packt.link/SecNet)'
- en: '![](img/file110.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](img/file110.png)'
- en: In this final chapter, I'd like to do a roundup of some quick tips and tricks
    that don't necessarily fit in with the previous chapters. Think of these tips
    as time savers for the busy administrator. First, you will learn about some quick
    ways to see which system services are running, in order to ensure that nothing
    that isn't needed is running. Then, we'll look at how to password protect the
    GRUB 2 bootloader, how to securely configure BIOS/UEFI to help prevent attacks
    on a physically accessible machine, and how to use a checklist to perform a secure
    initial system setup.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后，我想总结一些快捷的小贴士和技巧，这些技巧不一定适合之前的章节。你可以把这些小贴士当作是忙碌管理员的时间节省法宝。首先，你将学习一些快速查看哪些系统服务正在运行的方法，以确保没有不需要的服务在运行。接下来，我们将看看如何为
    GRUB 2 启动加载程序设置密码保护，如何安全配置 BIOS/UEFI 来帮助防止对物理可访问机器的攻击，以及如何使用检查清单进行安全的初始系统设置。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Auditing system services
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审计系统服务
- en: Password protecting the GRUB2 configuration
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 GRUB2 配置密码保护
- en: Securely configuring and then password protecting UEFI/BIOS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全配置并设置 UEFI/BIOS 密码保护
- en: Using a security checklist when setting up your system
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在设置系统时使用安全检查清单
- en: If you’re ready, let’s get going.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你准备好了，我们开始吧。
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The code files for this chapter are available here: [https://github.com/PacktPublishing/Mastering-Linux-Security-and-Hardening-3E](https://github.com/PacktPublishing/Mastering-Linux-Security-and-Hardening-3E).'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在这里找到：[https://github.com/PacktPublishing/Mastering-Linux-Security-and-Hardening-3E](https://github.com/PacktPublishing/Mastering-Linux-Security-and-Hardening-3E)。
- en: Auditing system services
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审计系统服务
- en: A basic tenet of server administration, regardless of which operating system
    we're talking about, is to never have anything that you don't absolutely need
    installed on a server. You especially don't want any unnecessary network services
    running because that would give the bad guys extra ways to get into your system.
    And, there's always a chance that some evil hacker might have planted something
    that acts as a network service, and you'd definitely want to know about that.
    In this section, we'll look at a few different ways to audit your system to ensure
    that no unnecessary network services are running on it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 无论我们谈论的是哪种操作系统，服务器管理的一个基本原则是，永远不要在服务器上安装任何你绝对不需要的东西。你尤其不希望任何不必要的网络服务在运行，因为这会为黑客提供额外的攻击途径。而且，黑客总有可能植入某些恶意程序，充当网络服务，你肯定希望了解这一点。在本节中，我们将看看几种不同的方法来审计你的系统，确保没有不必要的网络服务在运行。
- en: Auditing system services with systemctl
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 systemctl 审计系统服务
- en: 'On Linux systems that come with `systemd`, the `systemctl` command is pretty
    much a universal command that does many things for you. In addition to controlling
    your system''s services, it can also show you the status of those services, like
    so:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在配备 `systemd` 的 Linux 系统上，`systemctl` 命令几乎是一个通用命令，可以为你做很多事情。除了控制系统的服务外，它还可以显示这些服务的状态，例如：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here''s the breakdown of the preceding command:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前述命令的拆解：
- en: '`-t service`: We want to view information about the services – or, what used
    to be called daemons – on the system.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-t service`：我们希望查看关于服务——或者说以前称为守护进程——的信息。'
- en: '`--state=active`: This specifies that we want to view information about all
    the system services that are actually running.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--state=active`：这指定我们想查看所有正在运行的系统服务的信息。'
- en: 'A partial output of this command looks something like this:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令的部分输出大致如下：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Generally, you won't want to see quite this much information, although you might
    at times. This command shows the status of every service that's running on your
    system. What really interests us now is the network services that can allow someone
    to connect to your system. So, let's look at how to narrow things down a bit.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你可能不想看到这么多信息，尽管有时你可能会。这个命令显示了系统上每个正在运行的服务的状态。现在我们真正关心的是能够让其他人连接到你系统的网络服务。因此，我们来看看如何将内容缩小一些。
- en: Auditing network services with netstat
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 netstat 审计网络服务
- en: 'Here are two reasons why you would want to keep track of what network services
    are running on your system:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想跟踪系统上哪些网络服务正在运行的两个原因如下：
- en: To ensure that no legitimate network services that you don't need are running
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为确保没有任何你不需要的合法网络服务在运行
- en: To ensure that you don't have any malware that's listening for network connections
    from its master
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为确保没有恶意软件在监听来自其主控的网络连接
- en: 'The `netstat` command is both handy and easy to use. First, let''s say that
    you want to see a list of network services that are listening, waiting for someone
    to connect to them. (Due to formatting restrictions, I can only show part of the
    output here. We''ll look at some lines that I can''t show here in just a moment.
    Also, you can download the text file with the full output from the Packt Publishing
    website.):'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`netstat`命令既方便又易于使用。首先，假设你想查看正在监听的网络服务列表，等待有人连接到它们。（由于格式限制，我只能在这里展示部分输出。我们稍后会查看一些我无法在这里显示的行。此外，你可以从Packt
    Publishing网站下载包含完整输出的文本文件。）'
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here''s the breakdown:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是详细信息：
- en: '`-lp`: The `l` means that we want to see which network ports are listening.
    In other words, we want to see which network ports are waiting for someone to
    connect to them. The `p` means that we want to see the name and process ID number
    of the program or service that is listening on each port.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-lp`：`l`表示我们想查看哪些网络端口在监听。换句话说，我们想查看哪些网络端口在等待连接。`p`表示我们希望看到每个端口上监听的程序或服务的名称和进程ID号。'
- en: '`-A inet`: This means that we only want to see information about the network
    protocols that are members of the `inet` family. In other words, we want to see
    information about the `raw`, `tcp`, and `udp` network sockets, but we don''t want
    to see anything about the Unix sockets that only deal with interprocess communications
    within the operating system.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-A inet`：这意味着我们只想查看属于`inet`家族的网络协议信息。换句话说，我们只想查看`raw`、`tcp`和`udp`网络套接字的信息，但我们不想看到任何关于只处理操作系统内部进程间通信的Unix套接字的信息。'
- en: 'Since this output is from the openSUSE workstation that I used to write the
    original version of this chapter, you won''t see any of the usual server-type
    services here. However, you will see a few things that you likely won''t want
    to see on your servers. For example, let''s look at the very first item:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个输出来自我用来编写本章原始版本的openSUSE工作站，所以你不会看到任何通常的服务器类服务。然而，你会看到一些你可能不希望在服务器上看到的东西。例如，来看一下第一个项目：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `Local Address` column specifies the local address and port of this listening
    socket. The asterisk means that this socket is on the local network, while `ideafarm-door`
    is the name of the network port that is listening. (By default, `netstat` will
    show you the names of ports whenever possible by pulling the port information
    out of the `/etc/services` file.)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`Local Address`列指定了这个监听套接字的本地地址和端口。星号意味着这个套接字在本地网络上，而`ideafarm-door`是正在监听的网络端口的名称。（默认情况下，`netstat`会通过从`/etc/services`文件中提取端口信息，尽可能显示端口的名称。）'
- en: 'Now, because I didn''t know what the `ideafarm-door` service is, I used my
    favorite search engine to find out. By plugging the term `ideafarm-door` into
    DuckDuckGo, I found the answer:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，由于我不知道`ideafarm-door`服务是什么，我用了我最喜欢的搜索引擎去查找。通过将`ideafarm-door`这个词放入DuckDuckGo，我找到了答案：
- en: '![Figure 16.1: WhatPortIs](img/file111.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图16.1：WhatPortIs](img/file111.png)'
- en: 'Figure 16.1: WhatPortIs'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.1：WhatPortIs
- en: The top search result took me to a site named **WhatPortIs**. According to this,
    `ideafarm-door` is, in reality, port `902`, which belongs to the **VMware Server
    Console**. Okay, that makes sense because I do have VMware Player installed on
    this machine. So, that's all good.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部搜索结果将我带到了一个名为**WhatPortIs**的网站。根据这个网站，`ideafarm-door`实际上是端口`902`，它属于**VMware
    Server Console**。好的，这个解释有道理，因为我的机器上确实安装了VMware Player。所以，一切都好。
- en: 'You can check out the `WhatPortIs` site here: [http://whatportis.com/](http://whatportis.com/).'
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在这里查看`WhatPortIs`网站：[http://whatportis.com/](http://whatportis.com/)。
- en: 'Here’s the next item on the list:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是列表中的下一个项目：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This item shows the local address as `localhost` and that the listening port
    is port `40432`. This time, the `PID/Program Name` column actually tells us what
    this is. `SpiderOak ONE` is a cloud-based backup service that you might or might
    not want to see running on your server.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目显示本地地址为`localhost`，监听端口是`40432`。这次，`PID/Program Name`列实际告诉我们这是什么。`SpiderOak
    ONE`是一个基于云的备份服务，你可能会或可能不会希望它在服务器上运行。
- en: 'Now, let''s look at a few more items:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下更多的项目：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Here, we can see that `dropbox` and `SpiderOakONE` are both listed with the
    asterisk for the local address. So, they're both using the local network address.
    The name of the port for `dropbox` is `db-lsp`, which stands for **Dropbox LAN
    Sync Protocol**. The `SpiderOakONE` port doesn't have an official name, so it's
    just listed as port `37468`. The bottom two lines show that `dropbox` also uses
    the local machine's address, on ports `17600` and `17603`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到 `dropbox` 和 `SpiderOakONE` 都列出了带有星号的本地地址。因此，它们都在使用本地网络地址。`dropbox`
    的端口名称是 `db-lsp`，代表**Dropbox 局域网同步协议**。`SpiderOakONE` 的端口没有正式名称，因此仅列为端口 `37468`。底部的两行显示
    `dropbox` 也使用本地机器的地址，端口为 `17600` 和 `17603`。
- en: 'So far, we''ve looked at nothing but TCP network sockets. Let''s see how they
    differ from UDP sockets:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只看到了 TCP 网络套接字。接下来看看它们与 UDP 套接字的区别：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The first thing to note is that there's nothing under the `State` column. That's
    because, with UDP, there are no states. They are actually listening for data packets
    to come in, and they're ready to send data packets out. But since that's about
    all that UDP sockets can do, there was really no sense in defining different states
    for them.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 首先需要注意的是，`State` 列下没有任何内容。这是因为，使用 UDP 时，没有状态。它们实际上是在监听数据包的到来，并准备发送数据包。但由于 UDP
    套接字几乎只能执行这些操作，因此实际上没有必要为它们定义不同的状态。
- en: In the first two lines, we see some strange local addresses. That's because
    I have both VMware Player and VirtualBox installed on this workstation. The local
    addresses of these two sockets are for the VMware and VirtualBox virtual network
    adapters. The last line shows the hostname of my OpenSUSE workstation as the local
    address. In all three cases, the port is the **Network Time Protocol** port, for
    time synchronization.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在前两行中，我们看到了一些奇怪的本地地址。这是因为我的工作站上安装了 VMware Player 和 VirtualBox。这两个套接字的本地地址是 VMware
    和 VirtualBox 虚拟网络适配器的地址。最后一行显示了我的 OpenSUSE 工作站的主机名作为本地地址。在这三种情况下，端口是**网络时间协议**端口，用于时间同步。
- en: 'Now, let''s look at one last set of UDP items:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看最后一组 UDP 项目：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here, we see that my Chromium web browser is ready to accept network packets
    on a few different ports. We also see that Dropbox uses UDP to accept discovery
    requests from other local machines that have Dropbox installed. I assume that
    port `21327` performs the same function for SpiderOak ONE.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到我的 Chromium 浏览器准备好在几个不同的端口上接收网络数据包。我们还看到 Dropbox 使用 UDP 接收来自其他安装了 Dropbox
    的本地机器的发现请求。我猜测端口 `21327` 对于 SpiderOak ONE 执行相同的功能。
- en: Of course, since this machine is one of my workhorse workstations, Dropbox and
    SpiderOak ONE are almost indispensable to me. I installed them myself, so I've
    always known that they were there. However, if you see anything like this on a
    server, you'll want to investigate to see if the server admins know that these
    programs are installed, and then find out why they're installed. It could be that
    they're performing a legitimate function, and it could be that they're not.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，由于这台机器是我的工作站之一，Dropbox 和 SpiderOak ONE 对我来说几乎是必不可少的。我是自己安装的它们，所以我一直知道它们在那里。然而，如果你在服务器上看到类似的东西，你需要调查一下，看看服务器管理员是否知道这些程序已被安装，然后找出它们为何被安装。它们可能执行某些合法功能，也可能没有。
- en: A difference between Dropbox and SpiderOak ONE is that with Dropbox, your files
    don't get encrypted until they've been uploaded to the Dropbox servers. So, the
    Dropbox folk have the encryption keys to your files. On the other hand, SpiderOak
    ONE encrypts your files on your local machine, and the encryption keys never leave
    your possession. So, if you really do need a cloud-based backup service and you're
    dealing with sensitive files, something such as SpiderOak ONE would definitely
    be better than Dropbox. (And no, the SpiderOak ONE folk aren't paying me to say
    that.)
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Dropbox 和 SpiderOak ONE 的区别在于，Dropbox 会在文件上传到 Dropbox 服务器后才对其进行加密。因此，Dropbox
    的工作人员拥有你的文件的加密密钥。另一方面，SpiderOak ONE 会在本地机器上加密文件，并且加密密钥始终掌握在你自己手中。因此，如果你确实需要一个基于云的备份服务，并且你处理的是敏感文件，像
    SpiderOak ONE 这样的服务肯定比 Dropbox 更好。（不，SpiderOak ONE 的人没有付钱让我这么说。）
- en: 'If you want to see port numbers and IP addresses instead of network names,
    add the `n` option. As before, here''s the partial output:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看端口号和 IP 地址，而不是网络名称，请添加 `n` 选项。和之前一样，这是部分输出：
- en: '[PRE8]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'All you have to do to view the established TCP connections is to leave out
    the `l` option. On my workstation, this makes for a very long list, so I''ll only
    show a few items:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 只需要省略`l`选项就可以查看已建立的TCP连接。在我的工作站上，这会生成非常长的列表，因此我只会展示其中的几项：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `Foreign Address` column shows the address and port number of the machine
    at the remote end of the connection. The first item shows that the connection
    with a Dropbox server is in a `CLOSE_WAIT` state. This means that the Dropbox
    server has closed the connection, and we're now waiting on the local machine to
    close the socket.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`Foreign Address`列显示了连接远端机器的地址和端口号。第一项显示与Dropbox服务器的连接处于`CLOSE_WAIT`状态。这意味着Dropbox服务器已经关闭了连接，而我们现在正在等待本地机器关闭套接字。'
- en: 'Because the names of those foreign addresses don''t make much sense, let''s
    add the `n` option to see the IP addresses instead:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 由于那些远程地址的名称没有多大意义，我们可以添加`n`选项来查看IP地址：
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This time, we see something new. The first item shows a `SYN_SENT` state for
    the Firefox connection. This means that the local machine is trying to establish
    a connection to the foreign IP address. Also, under `Local Address`, we can see
    the static IP address for my OpenSUSE workstation.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，我们看到了一些新内容。第一项显示了Firefox连接的`SYN_SENT`状态。这意味着本地机器正在尝试与远程IP地址建立连接。另外，在`Local
    Address`下，我们可以看到我OpenSUSE工作站的静态IP地址。
- en: If I had space to display the entire `netstat` output here, you'd see nothing
    but `tcp` under the `Proto` column. That's because the UDP protocol doesn't establish
    connections in the same way that the TCP protocol does.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我有足够的空间显示完整的`netstat`输出，你会发现`Proto`列下全是`tcp`。这是因为UDP协议不像TCP协议那样建立连接。
- en: Something to keep in mind is that rootkits can replace legitimate Linux utilities
    with their own trojaned versions. For example, a rootkit could have its own trojaned
    version of `netstat` that would show all network processes except for those that
    are associated with the rootkit. That's why you want to do everything you can
    to prevent unauthorized users from gaining root privileges, to prevent them from
    being able to install rootkits.
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 有一点需要记住的是，rootkit可能会用它们自己篡改过的版本替换掉合法的Linux工具。例如，一个rootkit可能有它自己篡改过的`netstat`版本，显示所有网络进程，除了与rootkit相关的进程。这就是为什么你需要尽一切努力防止未授权用户获得root权限，以防止他们能够安装rootkit。
- en: If you need more information about `netstat`, see the `netstat` man page.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要更多关于`netstat`的信息，请查看`netstat`的手册页。
- en: Hands-on lab – viewing network services with netstat
  id: totrans-67
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 实操实验——使用netstat查看网络服务
- en: 'In this lab, you''ll practice what you''ve just learned about `netstat`. Do
    this on a virtual machine that has a desktop interface so that you can use Firefox
    to visit websites. Follow these steps:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，你将实践刚刚学到的关于`netstat`的内容。在具有桌面界面的虚拟机上执行此操作，这样你就可以使用Firefox浏览网站。按照以下步骤进行：
- en: 'View the list of network services that are listening for a connection:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看正在监听连接的网络服务列表：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'View the list of established connections:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看已建立连接的列表：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Open Firefox and navigate to any website. Then, repeat *Step 2*.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Firefox并导航到任何网站。然后，重复*步骤2*。
- en: Repeat *Step 2* again, but preface each command with `sudo`. Note how the output
    is different from that of *Step 2*.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次重复*步骤2*，但在每个命令前加上`sudo`。注意输出与*步骤2*的不同之处。
- en: From your host machine, log into the virtual machine via SSH. Then, repeat *Step
    2*.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你的主机机器上，通过SSH登录到虚拟机。然后，重复*步骤2*。
- en: You've reached the end of the lab – congratulations!
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经完成了实验——恭喜！
- en: You've just seen how to audit network services with `netstat`. Now, let's learn
    how to do this with Nmap.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚学习了如何使用`netstat`审计网络服务。现在，让我们来看看如何使用Nmap做这件事。
- en: Auditing network services with Nmap
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Nmap审计网络服务
- en: The `netstat` tool is very good, and it can give you lots of good information
    about what's going on with your network services. The slight downside is that
    you have to log in to every individual host on your network in order to use it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`netstat`工具非常好，它可以为你提供大量关于网络服务状态的有用信息。唯一的小缺点是，你必须登录到网络上的每一台主机才能使用它。'
- en: If you'd like to remotely audit your network to see what services are running
    on each computer without having to log in to each and every one, then you need
    a tool such as Nmap. It's available for all the major operating systems, so even
    if you're stuck having to use Windows on your workstation, you're in luck. An
    up-to-date version is already installed on Kali Linux, if that's what you're using.
    It's also in the repositories of every major Linux distro, so installing it is
    quite simple. If you’re running Windows or macOS, you can download a version for
    either of them directly from the Nmap website.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想远程审计你的网络，查看每台计算机上运行的服务，而不需要登录每一台计算机，那么你需要一个像Nmap这样的工具。它适用于所有主要的操作系统，所以即使你只能在工作站上使用Windows，也不用担心。Kali
    Linux中已经安装了最新版本，如果你正在使用它。它也在所有主要Linux发行版的仓库中，因此安装非常简单。如果你使用的是Windows或macOS，你可以直接从Nmap官网为它们下载相应的版本。
- en: You can download Nmap for all of the major operating systems from [https://nmap.org/download.html](https://nmap.org/download.html).
  id: totrans-81
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以从[https://nmap.org/download.html](https://nmap.org/download.html)下载适用于所有主要操作系统的Nmap。
- en: ''
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In all cases, you'll also find instructions for installation.
  id: totrans-83
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在所有情况下，你还会找到安装说明。
- en: 'You''ll use Nmap the same way on all operating systems, with only one exception.
    On Linux and macOS machines, you''ll preface certain Nmap commands with `sudo`,
    while on Windows machines, you won''t. (Although, on Windows 10/11, you might
    have to open the `command.exe` terminal as an administrator.) Since I just happen
    to be working on my trusty OpenSUSE workstation, I''ll show you how it works on
    Linux. Let''s start by doing a SYN packet scan:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在所有操作系统上以相同的方式使用Nmap，唯一的例外是。在Linux和macOS机器上，你需要在某些Nmap命令前加上`sudo`，而在Windows机器上则不需要。（不过，在Windows
    10/11上，你可能需要以管理员身份打开`command.exe`终端。）由于我恰好在我的OpenSUSE工作站上工作，我将展示如何在Linux上使用它。让我们从做一次SYN包扫描开始：
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Here''s the breakdown:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是详细信息：
- en: '`-sS`: The lowercase `s` denotes the type of scan that we want to perform.
    The uppercase `S` denotes that we''re doing a SYN packet scan. (More on that in
    a moment.)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-sS`：小写的`s`表示我们想要执行的扫描类型。大写的`S`表示我们正在进行SYN包扫描。（稍后会详细讲解。）'
- en: '`192.168.0.37`: In this case, I''m only scanning a single machine. However,
    I could also scan either a group of machines or an entire network.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`192.168.0.37`：在这个例子中，我只扫描一台机器。然而，我也可以扫描一组机器或者整个网络。'
- en: '`Not shown: 996 closed ports`: The fact that it''s showing all of these closed
    ports instead of `filtered` ports tells me that there''s no firewall on this machine.
    (Again, more on that in a moment.)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Not shown: 996 closed ports`：显示所有这些关闭的端口而不是`filtered`端口，这告诉我这台机器没有防火墙。（稍后会详细讲解。）'
- en: Next, we see a list of ports that are open. (More on that in a moment.)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们会看到一组开放的端口。（稍后会详细讲解。）
- en: The MAC address of this machine indicates that it's an Apple product of some
    sort. In a moment, I'll show you how to get more details about what kind of Apple
    product that it might be.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这台机器的MAC地址表明它是某种苹果产品。稍后我将向你展示如何获得有关它是哪种苹果产品的更多细节。
- en: Now, let's look at this more in detail.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更详细地看一下。
- en: Port states
  id: totrans-93
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 端口状态
- en: 'An Nmap scan will show the target machine''s ports in one of three **port states**:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap 扫描会显示目标机器的端口状态，可能是以下三种**端口状态**之一：
- en: '`filtered`: This means that the port is blocked by a firewall.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filtered`：这意味着端口被防火墙阻塞。'
- en: '`open`: This means that the port is not blocked by a firewall and that the
    service that''s associated with that port is running.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`open`：这意味着端口没有被防火墙阻塞，且与该端口相关联的服务正在运行。'
- en: '`closed`: This means that the port is not blocked by a firewall, and that the
    service that''s associated with that port is not running.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`closed`：这意味着端口没有被防火墙阻塞，但与该端口相关联的服务未运行。'
- en: So, in our scan of the Apple machine, we see that the Secure Shell service is
    ready to accept connections on port `22`, that the print service is ready to accept
    connections on ports `515` and `631`, and that the **Virtual Network Computing**
    (**VNC**) service is ready to accept connections on port `5900`. All of these
    ports would be of interest to a security-minded administrator. If Secure Shell
    is running, it would be interesting to know if it's configured securely. The fact
    that the print service is running means that this is set up to use the **Internet
    Printing Protocol** (**IPP**). It would be interesting to know why we're using
    IPP instead of just regular network printing, and it would also be interesting
    to know if there are any security concerns with this version of IPP. And of course,
    we already know that VNC isn't a secure protocol, so we would want to know why
    it's even running at all. We also saw that no ports are listed as `filtered`,
    so we would also want to know why there's no firewall on this machine.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在我们对 Apple 机器的扫描中，我们看到安全外壳服务已经准备好在端口 `22` 上接受连接，打印服务已经准备好在端口 `515` 和 `631`
    上接受连接，并且**虚拟网络计算**（**VNC**）服务已经准备好在端口 `5900` 上接受连接。所有这些端口都对有安全意识的管理员来说非常重要。如果安全外壳服务正在运行，那么了解它是否配置得安全就显得很有趣。打印服务正在运行意味着它已经设置为使用**互联网打印协议**（**IPP**）。了解为什么我们使用
    IPP 而不是普通的网络打印非常重要，同时了解该版本的 IPP 是否存在任何安全隐患也很有意义。当然，我们已经知道 VNC 不是一个安全的协议，因此我们需要了解它为何仍在运行。我们还发现没有端口被列为
    `filtered`，因此我们也想知道为什么这台机器没有防火墙。
- en: One little secret that I'll finally reveal is that this machine is the same
    one that I used for the Greenbone Security Assistant scan demos. So, we already
    have some of the needed information. The Greenbone scan told us that Secure Shell
    on this machine uses weak encryption algorithms and that there's a security vulnerability
    with the print service. In just a bit, I'll show you how to get some of that information
    with Nmap.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我终于要透露一个小秘密了，这台机器和我在 Greenbone Security Assistant 扫描演示中使用的是同一台机器。所以，我们已经获得了一些所需的信息。Greenbone
    扫描告诉我们，这台机器上的安全外壳服务使用了弱加密算法，并且打印服务存在安全漏洞。不久之后，我将向你展示如何使用 Nmap 获取其中的一些信息。
- en: Scan types
  id: totrans-100
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 扫描类型
- en: There are lots of different scanning options, each with its own purpose. The
    SYN packet scan that we're using here is considered a stealthy type of scan because
    it generates less network traffic and fewer system log entries than certain other
    types of scans. With this type of scan, Nmap sends a SYN packet to a port on the
    target machine, as if it were trying to create a TCP connection to that machine.
    If the target machine responds with a SYN/ACK packet, it means that the port is
    in an `open` state and is ready to create the TCP connection. If the target machine
    responds with an RST packet, it means that the port is in a `closed` state. If
    there's no response at all, it means that the port is `filtered`, blocked by a
    firewall. As a normal Linux administrator, this is one of the types of scans that
    you would do most of the time.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的扫描选项，每种选项都有其特定的目的。我们在这里使用的 SYN 数据包扫描被认为是一种隐蔽的扫描类型，因为它比其他某些类型的扫描生成的网络流量和系统日志条目要少。在这种扫描类型中，Nmap
    向目标机器的一个端口发送 SYN 数据包，就像是试图与该机器建立一个 TCP 连接。如果目标机器响应一个 SYN/ACK 数据包，则意味着该端口处于 `open`
    状态，准备建立 TCP 连接。如果目标机器响应一个 RST 数据包，则意味着该端口处于 `closed` 状态。如果没有任何响应，则意味着该端口被 `filtered`，被防火墙阻塞。作为一名普通的
    Linux 管理员，这是你大多数时候会使用的一种扫描类型。
- en: 'The `-sS` scan shows you the state of TCP ports, but it doesn''t show you the
    state of UDP ports. To see the UDP ports, use the `-sU` option:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`-sS` 扫描显示了 TCP 端口的状态，但它不会显示 UDP 端口的状态。要查看 UDP 端口，请使用 `-sU` 选项：'
- en: '[PRE14]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here, you see something a bit different: two ports are listed as `open|filtered`.
    That''s because, due to the way that UDP ports respond to Nmap scans, Nmap can''t
    always tell whether a UDP port is `open` or `filtered`. In this case, we know
    that these two ports are probably open because we''ve already seen that their
    corresponding TCP ports are open.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你看到了一些不同的情况：两个端口被列为 `open|filtered`。这是因为，由于 UDP 端口对 Nmap 扫描的响应方式，Nmap 并不总是能够判断一个
    UDP 端口是 `open` 还是 `filtered`。在这种情况下，我们知道这两个端口可能是开放的，因为我们已经看到它们对应的 TCP 端口是开放的。
- en: 'ACK packet scans can also be useful, but not to see the state of the target
    machine''s network services. Rather, it''s a good option for when you need to
    see if there might be a firewall blocking the way between you and the target machine.
    An ACK scan command looks like this:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: ACK数据包扫描也很有用，但并不是用来查看目标机器网络服务的状态。相反，它是当你需要查看是否有防火墙在你和目标机器之间阻碍时的一个好选择。一个ACK扫描命令如下所示：
- en: '[PRE15]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You''re not limited to scanning just a single machine at a time. You can scan
    either a group of machines or an entire subnet at once:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你不仅限于一次扫描单台机器。你可以一次扫描一组机器或整个子网：
- en: '[PRE16]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The first command scans only the first 128 hosts on this network segment. The
    second command scans all 254 hosts on a subnet that's using a 24-bit netmask.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令仅扫描此网络段的前128个主机。第二个命令扫描一个使用24位子网掩码的子网中的所有254个主机。
- en: 'A discovery scan is useful for when you need to just see what devices are on
    the network:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 发现扫描对于你仅仅需要查看网络上有哪些设备时非常有用：
- en: '[PRE17]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'With the `-sn` option, Nmap will detect whether you''re scanning the local
    subnet or a remote subnet. If the subnet is local, Nmap will send out an **Address
    Resolution Protocol** (**ARP**) broadcast that requests the IPv4 addresses of
    every device on the subnet. That''s a reliable way of discovering devices because
    ARP isn''t something that will ever be blocked by a device''s firewall. (I mean,
    without ARP, the network would cease to function.) However, ARP broadcasts can''t
    go across a router, which means that you can''t use ARP to discover hosts on a
    remote subnet. So, if Nmap detects that you''re doing a discovery scan on a remote
    subnet, it will send out ping packets instead of ARP broadcasts. Using ping packets
    for discovery isn''t as reliable as using ARP because some network devices can
    be configured to ignore ping packets. Anyway, here''s an example from my own home
    network:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`-sn`选项，Nmap会检测你是在扫描本地子网还是远程子网。如果子网是本地的，Nmap会发送一个**地址解析协议**（**ARP**）广播，来请求子网上每台设备的IPv4地址。这是一种可靠的设备发现方式，因为ARP是不会被设备的防火墙阻止的。（我的意思是，没有ARP，网络将无法正常运作。）不过，ARP广播不能跨越路由器，这意味着你不能使用ARP来发现远程子网的主机。所以，如果Nmap检测到你在进行远程子网的发现扫描，它会发送ping数据包，而不是ARP广播。使用ping数据包进行发现不如使用ARP可靠，因为一些网络设备可以被配置为忽略ping数据包。无论如何，这是我自己家庭网络中的一个示例：
- en: '[PRE18]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We see three hosts in this snippet, and there are three lines of output for
    each host. The first line shows the IP address, the second shows whether the host
    is up, and the third shows the MAC address of the host's network adapter. The
    first three pairs of characters in each MAC address denote the manufacturer of
    that network adapter. (For the record, that unknown network adapter is on a recent
    model Gigabyte motherboard. I have no idea why it's not in the Nmap database.)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这段输出中看到三个主机，并且每个主机有三行输出。第一行显示IP地址，第二行显示主机是否处于活动状态，第三行显示主机网络适配器的MAC地址。每个MAC地址的前三对字符表示该网络适配器的制造商。（顺便说一下，那块未知的网络适配器在最近型号的技嘉主板上。我不知道为什么它没有出现在Nmap数据库中。）
- en: 'The final scan that we''ll look at does four things for us:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要看的最终扫描为我们完成四个任务：
- en: It identifies `open`, `closed`, and `filtered` TCP ports.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它会识别`open`、`closed`和`filtered`的TCP端口。
- en: It identifies the versions of the running services.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它识别运行中的服务的版本。
- en: It runs a set of vulnerability scanning scripts that come with Nmap.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它运行一组随Nmap附带的漏洞扫描脚本。
- en: It attempts to identify the operating system of the target host.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它尝试识别目标主机的操作系统。
- en: 'The scan command that does all of these things looks like this:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 执行所有这些操作的扫描命令如下所示：
- en: '[PRE19]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'I guess that you could think of the `-A` option as the *all* option since it
    really does do it all. (Well, almost all, since it doesn''t scan UDP ports.) First,
    here''s the command that I ran to do the scan:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我猜你可以把`-A`选项看作是*所有*选项，因为它确实能做到所有事情。（嗯，几乎是所有，毕竟它并不扫描UDP端口。）首先，这是我运行的扫描命令：
- en: '[PRE20]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here are the results, broken down into sections for formatting purposes:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是结果，已根据格式化需求分成几个部分：
- en: '[PRE21]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Right away, we see that there''s no active firewall on this machine because
    no ports are in the `filtered` state. By default, Nmap scans only the most 1,000
    most popular ports. Since 996 ports are in the `closed` state, we obviously only
    have four active network services that would listen on any of these 1,000 ports:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们立刻看到，这台机器没有活跃的防火墙，因为没有端口处于`filtered`状态。默认情况下，Nmap只扫描最受欢迎的1,000个端口。由于996个端口处于`closed`状态，我们显然只有四个活跃的网络服务会在这1,000个端口上监听：
- en: '[PRE22]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Port `22` is open for Secure Shell access, which we would normally expect. However,
    look at the SSH version. Version 5.1 is a really old version of OpenSSH. (At the
    time of writing, the current version is version 9.1.) What's worse is that this
    OpenSSH server supports version 1 of the Secure Shell protocol. Version 1 is seriously
    flawed and is easily exploitable, so you never want to see this on your network.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 端口`22`用于安全外壳（SSH）访问，这是我们通常会期待的。然而，看看SSH的版本。版本5.1是OpenSSH的一个非常旧的版本。（在写作时，当前版本是9.1。）更糟糕的是，这个OpenSSH服务器支持安全外壳协议的版本1。版本1存在严重缺陷，非常容易被利用，所以你绝对不希望在网络中看到这种情况。
- en: 'Next, we have amplifying information on the print service vulnerability that
    we found with the Greenbone Security Assistant scan:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们看到关于通过Greenbone Security Assistant扫描发现的打印服务漏洞的更多信息：
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: In the `631/tcp` line, we see that the associated service is `ipp`. This protocol
    is based on the same HTTP that we use to look at web pages. The two methods that
    HTTP uses to send data from a client to a server are `POST` and `PUT`. What we
    really want is for every HTTP server to use the `POST` method because the `PUT`
    method makes it very easy for someone to compromise a server by manipulating a
    URL. So, if you scan a server and find that it allows using the `PUT` method for
    any kind of HTTP communications, you have a potential problem. In this case, the
    solution would be to update the operating system and hope that the updates fix
    the problem. If this were a web server, you'd want to have a chat with the web
    server administrators to let them know what you found.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在`631/tcp`行中，我们看到相关服务是`ipp`。这个协议基于我们用来浏览网页的HTTP。HTTP用于从客户端到服务器传输数据的两种方式是`POST`和`PUT`。我们真正希望的是每个HTTP服务器都使用`POST`方法，因为`PUT`方法使得通过操控URL很容易让人妥协服务器。所以，如果你扫描一个服务器并发现它允许使用`PUT`方法进行任何类型的HTTP通信，那你就有潜在问题了。在这种情况下，解决方案是更新操作系统，并希望这些更新能够解决问题。如果这是一个Web服务器，你就需要和Web服务器管理员沟通，告诉他们你发现的问题。
- en: 'Next, we see that the VNC service is running on this machine:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们看到这个机器上运行着VNC服务：
- en: '[PRE24]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: VNC can be handy at times. It's like Microsoft's Remote Desktop service for
    Windows, except that it's free, open source software. But it's also a security
    problem because it's an unencrypted protocol. So, all your information goes across
    the network in plain text. If you must use VNC, run it through an SSH tunnel.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: VNC有时确实很方便。它就像Windows的Microsoft远程桌面服务，不过它是免费的开源软件。但它也是一个安全问题，因为它是一个未加密的协议。所以，所有信息都会以明文形式通过网络传输。如果你必须使用VNC，最好通过SSH隧道运行它。
- en: 'Next, let''s see what Nmap found out about the operating system of our target
    machine:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们看看Nmap关于目标机器操作系统的发现：
- en: '[PRE25]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Wait, what? Mac OS X 10.4? Isn't that really, really ancient? Well, yeah, it
    is. The secret that I've been guarding for the past couple of chapters is that
    the target machine for my Greenbone Security Assistant and Nmap scan demos has
    been my ancient, collectible Apple eMac from the year 2003\. I figured that scanning
    it would give us some interesting results to look at, and it would appear that
    I was right. (And yes, that is *eMac*, not *iMac*.)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 等等，什么？Mac OS X 10.4？那不是非常非常古老的吗？嗯，是的，确实是。过去几章我一直守口如瓶的秘密是，我的Greenbone Security
    Assistant和Nmap扫描演示的目标机器其实是我那台2003年出产的古老的、值得收藏的Apple eMac。我觉得扫描它会给我们带来一些有趣的结果，看来我没猜错。（是的，没错，那是*eMac*，而不是*iMac*。）
- en: 'The final thing we see is the `TRACEROUTE` information. It''s not very interesting,
    though, because the target machine was sitting right next to me, with only one
    Cisco switch between us:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 最后我们看到的是`TRACEROUTE`信息。不过这并不太有趣，因为目标机器就在我旁边，只有一个Cisco交换机在我们之间：
- en: '[PRE26]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Let's say that the target machine has had its SSH service changed to some alternate
    port, instead of having it run on the default port, `22`. If you scan the machine
    with a normal `-sS` or `-sT` scan, Nmap won't correctly identify the SSH service
    on that alternate port. However, a `-A` scan will correctly identify the SSH service,
    regardless of which port it's using.
  id: totrans-140
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 假设目标机器将其SSH服务更改为某个备用端口，而不是运行在默认端口`22`上。如果你用普通的`-sS`或`-sT`扫描，这时Nmap将无法正确识别该备用端口上的SSH服务。但是，`-A`扫描会正确识别SSH服务，无论它使用哪个端口。
- en: Okay, let’s do a lab.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们做一个实验。
- en: Hands-on lab – scanning with Nmap
  id: totrans-142
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 实验操作 – 使用Nmap扫描
- en: 'In this lab, you''ll see the results of scanning a machine with various services
    either enabled or disabled. You''ll start with a virtual machine that has its
    firewall disabled. Let''s get started:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，你将看到扫描一台机器的结果，看看它的各种服务是启用还是禁用。你将从一台防火墙禁用的虚拟机开始。让我们开始吧：
- en: 'Briefly peruse the Nmap help screen by using the following command:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过使用以下命令，简要浏览 Nmap 帮助屏幕：
- en: '[PRE27]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'From either your host machine or from another virtual machine, perform these
    scans against a virtual machine that has its firewall disabled (substitute your
    own IP address for the one I''m using here):'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无论是从你的主机还是从另一台虚拟机，针对防火墙禁用的虚拟机执行这些扫描（请用你自己的 IP 地址替换我在这里使用的地址）：
- en: '[PRE28]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Stop the SSH service on the target machine on Ubuntu:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 上停止目标机器的 SSH 服务：
- en: '[PRE29]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'On either CentOS or AlmaLinux, use this command:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CentOS 或 AlmaLinux 上，使用以下命令：
- en: '[PRE30]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Repeat *step 2*.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤 2*。
- en: You've reached the end of this lab – congratulations!
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经完成了这个实验室的所有步骤——恭喜！
- en: Now that you've seen how to scan a system, let's look at the GRUB2 bootloader.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了如何扫描一个系统，接下来我们来看看 GRUB2 引导加载程序。
- en: Password protecting the GRUB 2 bootloader
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为 GRUB 2 引导加载程序设置密码保护
- en: People sometimes forget passwords, even if they're administrators. And sometimes,
    people buy used computers but forget to ask the seller what the password is. (Yes,
    I've done that.) That's okay, though, because all of the major operating systems
    have ways to let you either reset or recover a lost administrator password. That's
    handy, except that it does kind of make the whole idea of having login passwords
    a rather moot point when someone has physical access to the machine. Let's say
    that your laptop has just been stolen. If you haven't encrypted the hard drive,
    it would only take a few minutes for the thief to reset the password and steal
    your data. If you have encrypted the drive, the level of protection would depend
    on which operating system you're running. With standard Windows folder encryption,
    the thief would be able to access the encrypted folders just by resetting the
    password. With LUKS whole-disk encryption on a Linux machine, the thief wouldn't
    be able to get past the point of having to enter the encryption passphrase.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，人们会忘记密码，即使他们是管理员。而且有时候，人们购买二手电脑时，忘记问卖家密码是什么。（是的，我做过。）不过没关系，因为所有主要操作系统都有方法让你重置或恢复丢失的管理员密码。这很方便，除非你考虑到一个问题，那就是当某人可以物理接触到机器时，登录密码的意义就显得有些多余。假设你的笔记本被偷了。如果你没有加密硬盘，窃贼只需几分钟就能重置密码并窃取你的数据。如果你加密了硬盘，那么保护级别将取决于你使用的操作系统。使用标准的
    Windows 文件夹加密，窃贼只需重置密码就能访问加密的文件夹。而如果是 Linux 机器上的 LUKS 整盘加密，窃贼将无法绕过输入加密密码短语这一关。
- en: With Linux, we have a way to safeguard against unauthorized password resets,
    even if we're not using whole-disk encryption. All we have to do is to password
    protect the **Grand Unified Bootloader** (**GRUB**), which would prevent a thief
    from booting into emergency mode to do the password reset.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 上，我们有方法来防止未经授权的密码重置，即使我们没有使用整盘加密。我们只需要为 **Grand Unified Bootloader**（**GRUB**）设置密码保护，这样窃贼就无法通过进入紧急模式来重置密码。
- en: Whether or not you need the advice in this section depends upon your organization's
    physical security setup. That's because booting a Linux machine into emergency
    mode requires physical access to the machine. It's not something that you can
    do remotely. In an organization with proper physical security, servers – especially
    ones that hold sensitive data – are locked away in a room that's locked within
    another room. Only a very few trusted personnel are allowed to enter, and they
    have to present their credentials at both access points. So, setting a password
    on the bootloader of those servers would be rather pointless, unless you're dealing
    with a regulatory agency that dictates otherwise.
  id: totrans-158
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 是否需要本节中的建议取决于你所在组织的物理安全设置。这是因为将 Linux 机器引导到紧急模式需要物理访问权限。这不是你可以远程操作的事情。在拥有良好物理安全的组织中，服务器——尤其是那些存储敏感数据的服务器——会被锁在一个房间内，该房间又被锁在另一个房间里。只有极少数受信任的人员可以进入，并且他们必须在两个出入点出示证件。因此，为这些服务器的引导加载程序设置密码是没有意义的，除非你正在处理某个要求这样做的监管机构。
- en: ''
  id: totrans-159
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: On the other hand, password protecting the bootloaders of workstations and laptops
    that are out in the open could be quite useful. However, that alone won't protect
    your data. Someone could still boot the machine from a live disk or a USB memory
    stick, mount the machine's hard drive, and obtain the sensitive data. That's why
    you also want to encrypt your sensitive data, as I showed you in *Chapter 6*,
    *Encryption Technologies*.
  id: totrans-160
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 另一方面，为暴露在外的工作站和笔记本电脑设置启动加载器密码保护可能会非常有用。然而，光靠这个保护并不足以保护你的数据。有人仍然可以从 Live 磁盘或
    USB 存储设备启动机器，挂载机器的硬盘，并获取敏感数据。因此，你还需要加密你的敏感数据，就像我在 *第六章* 中展示的那样，*加密技术*。
- en: To reset a password, all you have to do is interrupt the boot process when the
    boot menu comes up and either change a couple of kernel parameters, or select
    the **Recovery** mode option if it’s available. Either way, the machine will boot
    into emergency mode without asking for a password. However, resetting passwords
    isn't the only thing you can do from emergency mode. Once you’ve booted into emergency
    mode, you have full root user control over the whole system.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要重置密码，你只需要在启动菜单出现时中断启动过程，修改几个内核参数，或者选择 **恢复** 模式选项（如果可用）。无论哪种方式，机器将会以紧急模式启动，而不需要输入密码。然而，从紧急模式中进行密码重置并不是你能做的唯一操作。一旦你进入紧急模式，你将获得对整个系统的完全
    root 用户控制权限。
- en: Now, just so you'll know what I'm talking about when I say that you can edit
    kernel parameters from the GRUB 2 boot menu, let me show you how to perform a
    password reset on a Red Hat-type system.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了让你了解我所说的通过 GRUB 2 启动菜单编辑内核参数，下面我将向你展示如何在 Red Hat 系统上执行密码重置。
- en: Hands-on lab – resetting the password for Red Hat/CentOS/AlmaLinux
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动手实验 – 重置 Red Hat/CentOS/AlmaLinux 的密码
- en: 'With only one very minor exception, this procedure works exactly the same on
    CentOS 7, AlmaLinux 8, and AlmaLinux 9\. Let''s get started:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 除了一个非常小的例外，这一过程在 CentOS 7、AlmaLinux 8 和 AlmaLinux 9 上几乎完全相同。我们开始吧：
- en: 'Boot the virtual machine. When the boot menu comes up, interrupt the boot process
    by hitting the down arrow key once. Then, hit the up arrow key once to select
    the default boot option:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动虚拟机。当启动菜单出现时，通过按下向下箭头键中断启动过程。然后，按向上箭头键一次，选择默认启动选项：
- en: '![Figure 16.2: Selecting the boot option](img/file112.png)'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 16.2：选择启动选项](img/file112.png)'
- en: 'Figure 16.2: Selecting the boot option'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 16.2：选择启动选项
- en: 'Hit the e key to edit the kernel parameters. When the GRUB 2 configuration
    comes up, cursor down until you see this line:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下 e 键以编辑内核参数。当 GRUB 2 配置页面出现时，向下移动光标，直到看到这一行：
- en: '![Figure 16.3: Edit the kernel options](img/file113.png)'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 16.3：编辑内核选项](img/file113.png)'
- en: 'Figure 16.3: Edit the kernel options'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 16.3：编辑内核选项
- en: Note that on CentOS 7, the line begins with `linux16`, as shown here. On AlmaLinux
    8/9, the line begins with `linux`.
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请注意，在 CentOS 7 上，这一行以 `linux16` 开头，如下所示。在 AlmaLinux 8/9 上，这一行以 `linux` 开头。
- en: 'Delete the words `rhgb quiet` from this line and then add `rd.break enforcing=0`
    to the end of the line. Here''s what these two new options do for you:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除这一行中的 `rhgb quiet` 字样，然后在行末添加 `rd.break enforcing=0`。这两个新选项的作用如下：
- en: '`rd.break`: This will cause the machine to boot into emergency mode, which
    gives you root user privileges without you having to enter a root user password.
    Even if the root user password hasn''t been set, this still works.'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`rd.break`：这会使机器进入紧急模式，允许你获得 root 用户权限，而无需输入 root 用户密码。即使 root 用户密码尚未设置，这个方法也能奏效。'
- en: '`enforcing=0`: When you do a password reset on an SELinux-enabled system, the
    security context for the `/etc/shadow` file will change to the wrong type. If
    the system is in enforcing mode when you do this, SELinux will prevent you from
    logging in until the `shadow` file is relabeled. However, relabeling during the
    boot process can take a very long time, especially with a large drive. By setting
    SELinux to permissive mode, you can wait until after you''ve rebooted to restore
    the proper security context on just the `shadow` file.'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`enforcing=0`：当你在启用了 SELinux 的系统上重置密码时，`/etc/shadow` 文件的安全上下文会变更为错误的类型。如果系统在执行此操作时处于强制模式，SELinux
    会阻止你登录，直到 `shadow` 文件被重新标记。然而，在启动过程中重新标记文件可能需要很长时间，尤其是在大硬盘上。通过将 SELinux 设置为宽容模式，你可以等待到重启后再恢复
    `shadow` 文件的正确安全上下文。'
- en: 'When you''ve finished editing the kernel parameters, hit Ctrl + X to continue
    the boot process. This will take you to emergency mode with the `switch_root`
    command prompt:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成内核参数编辑后，按 Ctrl + X 继续启动过程。这会将你带到紧急模式，并出现 `switch_root` 命令提示符：
- en: '![Figure 16.4: In emergency mode](img/file114.png)'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图16.4：在紧急模式下](img/file114.png)'
- en: 'Figure 16.4: In emergency mode'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图16.4：在紧急模式下
- en: 'In emergency mode, the filesystem is mounted as read-only. You''ll need to
    remount it as read-write and enter `chroot` mode before you can reset the password,
    using these two commands:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在紧急模式下，文件系统以只读方式挂载。你需要将其重新挂载为读写模式，并进入`chroot`模式，才能重置密码，使用以下两个命令：
- en: '[PRE31]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'After you enter these two commands, the command prompt will change to that
    of a normal bash shell:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 输入这两个命令后，命令提示符将变为正常的bash shell提示符：
- en: '![Figure 16.5: Entering the chroot](img/file115.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图16.5：进入chroot](img/file115.png)'
- en: 'Figure 16.5: Entering the chroot'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.5：进入chroot
- en: Now that you've reached this stage, you're finally ready to reset the password.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经到达这个阶段，终于准备好重置密码了。
- en: 'If you want to reset the root user password, or even if you want to create
    a root password where none previously existed, just enter:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想重置root用户密码，或者甚至想为之前没有密码的root用户创建一个密码，只需输入：
- en: '[PRE32]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Then, enter the new desired password.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，输入所需的新密码。
- en: 'If the system has never had a root user password and you still don''t want
    it to have one, you can reset the password for an account that has full sudo privileges.
    For example, on my system, the command would look like this:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果系统从未设置过root用户密码，并且你仍然希望它没有密码，可以重置一个具有完全sudo权限的账户的密码。例如，在我的系统中，命令如下：
- en: '[PRE33]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Next, remount the filesystem as read-only. Then, enter `exit` twice to resume
    rebooting:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将文件系统重新挂载为只读模式。然后，输入`exit`两次以继续重启：
- en: '[PRE34]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The first thing you need to do after rebooting is to restore the proper SELinux
    security context on the `/etc/shadow` file. Then, put SELinux back into enforcing
    mode:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启后你需要做的第一件事是恢复`/etc/shadow`文件的正确SELinux安全上下文。然后，将SELinux恢复为强制模式：
- en: '[PRE35]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Here''s a before and after screenshot of the context settings for my `shadow`
    file:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我`shadow`文件上下文设置的前后截图：
- en: '![Figure 16.6: SELinux context settings for the shadow file](img/file116.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图16.6：用于shadow文件的SELinux上下文设置](img/file116.png)'
- en: 'Figure 16.6: SELinux context settings for the shadow file'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.6：用于shadow文件的SELinux上下文设置
- en: Here, you see that resetting the password changed the type of the file to `unlabeled_t`.
    Running the `restorecon` command changed the type back to `shadow_t`.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到重置密码将文件类型更改为`unlabeled_t`。运行`restorecon`命令后，文件类型恢复为`shadow_t`。
- en: You've reached the end of this lab – congratulations!
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 你已完成本实验——祝贺你！
- en: Now, we'll look at the same procedure for Ubuntu.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们来看一下在Ubuntu系统上的相同操作步骤。
- en: Hands-on lab – resetting the password for Ubuntu
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实操实验 – 重置Ubuntu的密码
- en: 'The procedure for resetting a password on an Ubuntu system is quite a bit different
    and quite a bit simpler. However, there is one slight difference between doing
    this on Ubuntu 16.04 and Ubuntu 18.04 or newer. That is, to see the boot menu
    on Ubuntu 16.04, you don''t have to do anything. On Ubuntu 18.04, you have to
    press either the Shift key (on BIOS-based systems) or the Esc key (on UEFI-based
    systems) in order to see the boot menu. On the current Ubuntu 22.04, you’ll press
    the Esc key for either BIOS-based or UEFI-based systems. Other than that, the
    procedure is identical for everything from Ubuntu 16.04 through the current Ubuntu
    22.04\. So now, let’s get started:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu系统上重置密码的过程与其他系统有些不同，而且简单得多。然而，在Ubuntu 16.04和Ubuntu 18.04或更高版本之间有一个小的差别。即，在Ubuntu
    16.04上，查看启动菜单不需要任何操作。而在Ubuntu 18.04上，你需要按下Shift键（对于基于BIOS的系统）或Esc键（对于基于UEFI的系统）才能看到启动菜单。在当前的Ubuntu
    22.04上，无论是基于BIOS还是UEFI的系统，都需要按Esc键。除此之外，从Ubuntu 16.04到当前的Ubuntu 22.04，操作过程完全相同。那么，现在我们开始吧：
- en: Boot the virtual machine. Press the Esc key to bring up the boot menu.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动虚拟机。按下Esc键以调出启动菜单。
- en: 'Press the down arrow key to highlight the Advanced Options for Ubuntu menu
    item, and press the Enter key:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下向下箭头键以突出显示Ubuntu菜单中的高级选项项，然后按Enter键：
- en: '![Figure 16.7: Ubuntu Advanced Options submenu](img/file117.png)'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图16.7：Ubuntu高级选项子菜单](img/file117.png)'
- en: 'Figure 16.7: Ubuntu Advanced Options submenu'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图16.7：Ubuntu高级选项子菜单
- en: 'From the **Advanced Options for Ubuntu** submenu, select the **recovery mode**
    option, and press Enter:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**Ubuntu高级选项**子菜单中，选择**恢复模式**选项，并按Enter键：
- en: '![Figure 16.8: Select the recovery mode option](img/file118.png)'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图16.8：选择恢复模式选项](img/file118.png)'
- en: 'Figure 16.8: Select the recovery mode option'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图16.8：选择恢复模式选项
- en: 'When the **Recovery Menu** comes up, select the **root** option, and press
    the Enter key:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当**恢复菜单**出现时，选择**root**选项，并按Enter键：
- en: '![Figure 16.9: Select the root option](img/file119.png)'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图16.9：选择root选项](img/file119.png)'
- en: 'Figure 16.9: Select the root option'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图16.9：选择root选项
- en: 'Press the Enter key again. This will take you to a root shell:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次按下回车键。这将带你进入root shell：
- en: '![Figure 16.10: In recovery mode](img/file120.png)'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图16.10：恢复模式](img/file120.png)'
- en: 'Figure 16.10: In recovery mode'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图16.10：恢复模式
- en: 'Since Ubuntu doesn''t normally have a password assigned to the root user, you
    would most likely just reset the password of whoever had full sudo privileges,
    like so:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于Ubuntu通常没有为root用户分配密码，你很可能会重置具有完全sudo权限的用户的密码，像这样：
- en: '[PRE36]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'When you''ve finished, reboot as you normally would:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，像平常一样重启：
- en: '[PRE37]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: The machine will now boot up for normal operation.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 机器现在将正常启动。
- en: You've reached the end of this lab – congratulations!
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 你已完成本实验——恭喜！
- en: Of course, we don't want everybody and his brother to be able to edit kernel
    parameters or enter **Recovery** mode when booting a machine. So, let's fix that.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们不希望每个人都能编辑内核参数或在启动机器时进入**恢复**模式。所以，让我们来解决这个问题。
- en: Preventing kernel parameter edits on Red Hat/CentOS/AlmaLinux
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Red Hat/CentOS/AlmaLinux上防止编辑内核参数
- en: 'Ever since the introduction of Red Hat/CentOS 7.2, setting a GRUB 2 password
    to prevent kernel parameter edits is easy. Fortunately, this trick still works
    on the newest iterations of Red Hat and AlmaLinux. All you have to do is to run
    one command and choose a password:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 自从Red Hat/CentOS 7.2引入以来，设置GRUB 2密码以防止编辑内核参数变得容易。幸运的是，这个技巧在Red Hat和AlmaLinux的最新版本中仍然有效。你只需要运行一个命令并选择一个密码：
- en: '[PRE38]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: That's all there is to it. The password hash will be stored in the `/boot/grub2/user.cfg`
    file.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这么简单。密码哈希将被存储在`/boot/grub2/user.cfg`文件中。
- en: 'Now, when you reboot the machine and try to do a kernel parameter edit, you''ll
    be prompted to enter a username and password:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你重启机器并尝试编辑内核参数时，你将被提示输入用户名和密码：
- en: '![Figure 16.11: Password protection for RHEL 7.2 and newer](img/file121.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![图16.11：RHEL 7.2及更新版本的密码保护](img/file121.png)'
- en: 'Figure 16.11: Password protection for RHEL 7.2 and newer'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.11：RHEL 7.2及更新版本的密码保护
- en: Note that you'll enter `root` as the username, even if the `root` user's password
    hasn't been set on the system. The `root` user, in this case, is just the superuser
    for GRUB 2.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，即使系统中尚未设置`root`用户的密码，你仍然需要输入`root`作为用户名。在这种情况下，`root`用户只是GRUB 2的超级用户。
- en: When you boot your Red Hat, CentOS, or AlmaLinux machine, you’ll see a **0-rescue**
    option come up at the bottom of the boot menu. (You can see it above in Figure
    16.2.) If you select it, you’ll find that it does nothing but take you to a normal
    login prompt that will require you to enter your username and password. (Red Hat-type
    distros really do have a Rescue mode, but you have to boot the machine from the
    installation media to get to it.)
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 当你启动Red Hat、CentOS或AlmaLinux机器时，你会看到一个**0-rescue**选项出现在启动菜单的底部。（你可以在图16.2中看到它。）如果选择该选项，你会发现它什么也不做，只会把你带到一个普通的登录提示符，要求你输入用户名和密码。（Red
    Hat类型的发行版确实有一个救援模式，但你必须从安装介质启动机器才能进入。）
- en: Preventing kernel parameter edits or Recovery mode access on Ubuntu
  id: totrans-230
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Ubuntu上防止编辑内核参数或访问恢复模式
- en: Ubuntu doesn't have that cool utility that Red Hat, CentOS, and AlmaLinux have,
    so you'll have to set a GRUB 2 password by hand-editing a configuration file.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu没有像Red Hat、CentOS和AlmaLinux那样酷的工具，所以你需要手动编辑配置文件来设置GRUB 2密码。
- en: 'In the `/etc/grub.d/` directory, you''ll see the files that make up the GRUB
    2 configuration:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/grub.d/`目录中，你将看到构成GRUB 2配置的文件：
- en: '[PRE39]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The file you want to edit is the `40_custom` file. However, before you edit
    the file, you''ll need to create the password hash. Do that with the `grub-mkpasswd-pbkdf2`
    utility:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要编辑的文件是`40_custom`文件。然而，在编辑文件之前，你需要创建密码哈希。使用`grub-mkpasswd-pbkdf2`工具来完成这项工作：
- en: '[PRE40]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Open the `40_custom` file in your favorite text editor and add a line that
    defines who the superuser(s) will be. Add another line for the password hash.
    In my case, the file now looks like this:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 用你喜欢的文本编辑器打开`40_custom`文件，并添加一行定义超级用户。再添加一行用于密码哈希。在我的情况下，文件现在看起来像这样：
- en: '[PRE41]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The string of text that begins with `password_pbkdf2` is all one line that wraps
    around on the printed page.
  id: totrans-238
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 以`password_pbkdf2`开头的这串文本是整行显示，在打印页面上会换行。
- en: 'After you save the file, the last step is to generate a new `grub.cfg` file:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件后，最后一步是生成一个新的`grub.cfg`文件：
- en: '[PRE42]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Now, when I reboot this machine, I have to enter my password before I can either
    edit kernel parameters or access the **Advanced options for Ubuntu** submenu:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我重新启动这台机器时，我必须输入我的密码才能编辑内核参数或访问**Ubuntu高级选项**子菜单：
- en: '![Figure 16.12: Password protection for Ubuntu](img/file122.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图16.12：Ubuntu的密码保护](img/file122.png)'
- en: 'Figure 16.12: Password protection for Ubuntu'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.12：Ubuntu的密码保护
- en: There's only one problem with this. Not only does this prevent anyone except
    the superuser from editing the kernel parameters, but it also prevents anyone
    except for the superuser from booting normally. Yes, that's right. Even for normal
    booting, Ubuntu will now require you to enter the username and password of the
    authorized superuser. Fortunately, this is an easy fix.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这有一个问题。它不仅阻止了除超级用户外的任何人编辑内核参数，而且还阻止了除超级用户外的任何人正常启动。是的，没错。即使是正常启动，Ubuntu现在也会要求你输入授权超级用户的用户名和密码。幸运的是，这是一个容易修复的问题。
- en: 'The fix requires inserting a single word into the `/boot/grub/grub.cfg` file.
    Easy enough, right? However, it''s not an elegant solution because you''re not
    really supposed to hand-edit the `grub.cfg` file. At the top of the file, we see
    this:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 这个修复需要在`/boot/grub/grub.cfg`文件中插入一个单词。听起来很简单，对吧？然而，这并不是一个优雅的解决方案，因为你本不应手动编辑`grub.cfg`文件。在文件的顶部，我们看到了这一行：
- en: '[PRE43]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: This means that every time we do something that will update the `grub.cfg` file,
    any hand-edits that we've made to the file will be lost. This includes when we
    do a system update that installs a new kernel, or when we do a `sudo apt autoremove`
    that removes any old kernels that we no longer need. The supreme irony though,
    is that the official GRUB 2 documentation tells us to hand-edit the `grub.cfg`
    file to deal with these sorts of problems. A much better way is to modify the
    shell script that the `update-grub` utility uses to build the `grub.cfg` file.
    This will prevent you from accidentally overwriting any changes that you need
    to preserve.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着每当我们做一些会更新`grub.cfg`文件的操作时，我们手动对文件所做的任何更改都会丢失。这包括当我们进行系统更新，安装新内核时，或者执行`sudo
    apt autoremove`来移除不再需要的旧内核时。最具讽刺意味的是，官方的GRUB 2文档却告诉我们应该手动编辑`grub.cfg`文件来处理这些问题。一个更好的方法是修改`update-grub`工具使用的shell脚本，来构建`grub.cfg`文件。这样可以避免意外覆盖你需要保留的更改。
- en: 'In the `/etc/grub.d/` directory, you’ll see several scripts that are used to
    build `grub.cfg`. The one we want is in the `10_linux` file. Open it in your text
    editor, and navigate down to the vicinity of line number 197\. Look for these
    two lines:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/grub.d/`目录中，你会看到几个用于构建`grub.cfg`的脚本。我们需要的是`10_linux`文件中的那个。用文本编辑器打开它，并导航到大约第197行的位置。查找这两行：
- en: '[PRE44]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: (Note that each of these is one line that wraps around on the printed page.)
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: （请注意，每一行都是在打印页面上换行的一行。）
- en: 'In each line, add `--unrestricted` after `{CLASS}`, so that the lines now look
    like this:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在每一行后面加上`--unrestricted`，使得这些行现在看起来像这样：
- en: '[PRE45]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Finally, run the `sudo update-grub` command, and you’ll be able to boot the
    machine normally on the default option. But, it’s a different story if you want
    to enter the **Advanced options for Ubuntu** submenu. With a superuser password
    set, you’ll always need to enter the superuser password in order to enter the
    **Advanced options for Ubuntu** submenu. This is true even with the `--unrestricted`
    option that you added to `10_linux script.` Effectively, this prevents anyone
    without the password from accessing the **Recovery** option.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，运行`sudo update-grub`命令，你就可以正常启动机器，使用默认选项。但如果你想进入**Ubuntu高级选项**子菜单，那就另当别论了。在设置了超级用户密码的情况下，你将始终需要输入超级用户密码才能进入**Ubuntu高级选项**子菜单。即使你在`10_linux脚本`中添加了`--unrestricted`选项，情况也是如此。实际上，这样可以防止没有密码的人访问**恢复**选项。
- en: Disabling the submenu for Ubuntu
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 禁用Ubuntu的子菜单
- en: 'On Ubuntu systems, you can easily disable the Ubuntu submenu so that you’ll
    see all boot options by default, which will look something like this:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu系统上，你可以轻松禁用Ubuntu子菜单，这样默认情况下你就会看到所有启动选项，结果看起来像这样：
- en: '![Figure 16.13: The Ubuntu boot menu without the submenu](img/file123.png)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![图16.13：没有子菜单的Ubuntu启动菜单](img/file123.png)'
- en: 'Figure 16.13: The Ubuntu boot menu without the submenu'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.13：没有子菜单的Ubuntu启动菜单
- en: If desired, you can also make it so that you don’t have to press the Shift or
    Esc key in order to see the boot menu.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，你还可以设置使得你无需按下Shift或Esc键即可看到启动菜单。
- en: 'First, open the `/etc/default/grub` file in your text editor. Disable the submenu
    by adding by adding the `GRUB_DISABLE_SUBMENU=y` line. To make the boot menu visible
    by default, look for these two lines:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在文本编辑器中打开`/etc/default/grub`文件。通过添加`GRUB_DISABLE_SUBMENU=y`这一行来禁用子菜单。为了使启动菜单默认可见，查找以下两行：
- en: '[PRE46]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Comment out the first line, and change the value for the second line to a non-zero
    number. The lines should now look something like this:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 注释掉第一行，并将第二行的值更改为非零数字。现在这些行应该看起来像这样：
- en: '[PRE47]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Finally, run the `sudo update-grub` command. Now, when you reboot the machine,
    you'll see the boot menu come up by itself, and you’ll see the whole list of boot
    options instead of just the default boot option and a submenu option. After a
    ten-second timeout, the system will automatically boot on the default option.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，运行`sudo update-grub`命令。现在，当你重新启动机器时，启动菜单会自动显示出来，你会看到完整的启动选项列表，而不仅仅是默认启动选项和子菜单选项。经过十秒钟的超时后，系统将自动启动默认选项。
- en: 'The major flaw with disabling the Ubuntu submenu is that if you’ve configured
    GRUB with the `--unrestricted` option as I’ve just shown you, users will be able
    to boot into **Recovery** mode without entering a password. So, it’s now just
    as if you never password-protected GRUB in the first place. If you do disable
    the Ubuntu submenu, remember to also disable the **Recovery** mode option. Open
    the `/etc/default/grub` file in your editor, and look for this line:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用Ubuntu子菜单的主要问题是，如果你按照我刚才所示配置了带有`--unrestricted`选项的GRUB，用户将能够在不输入密码的情况下启动**恢复**模式。所以，这样就像是你从一开始就没有为GRUB设置密码保护一样。如果你禁用了Ubuntu子菜单，记得同时禁用**恢复**模式选项。在编辑器中打开`/etc/default/grub`文件，查找这一行：
- en: '[PRE48]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Remove the `#` sign from in front of the line so that it now looks like this:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 删除行前面的`#`符号，使其现在看起来像这样：
- en: '[PRE49]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Update the GRUB configuration as you’ve done before:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 如你之前所做的那样更新GRUB配置：
- en: '[PRE50]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Finally, reboot the machine and verify that the **Recovery** mode option is
    gone. If you disable the **Recovery** boot menu option and still need to boot
    into **Recovery** mode, you can still do that by editing the kernel parameters
    at the beginning of the boot process. The procedure is somewhat different from
    what you’ve just seen with AlmaLinux, since you don’t have to worry about SELinux
    on Ubuntu. Rather than duplicate the procedure here, I’ll leave a link to a tutorial
    for it in the *Further reading* section. (The linked article is for Ubuntu 18.04,
    but the procedure still works for the current Ubuntu 22.04.)
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，重新启动机器并验证**恢复**模式选项是否已消失。如果你禁用了**恢复**启动菜单选项并且仍然需要进入**恢复**模式，你仍然可以通过在启动过程中编辑内核参数来实现。这个过程与你刚才看到的AlmaLinux略有不同，因为你在Ubuntu上无需担心SELinux。为了避免重复此过程，我会在*进一步阅读*部分留一个教程链接。（该链接的文章适用于Ubuntu
    18.04，但该过程仍适用于当前的Ubuntu 22.04。）
- en: So, you’re now asking, *Why would I ever need to disable the Ubuntu submenu?*
    Well, you’ll never actually *need* to. For me, it’s just a matter of preference.
    Unlike the Red Hat distros, Ubuntu doesn’t automatically delete old Linux kernels
    if a new one gets installed during an update operation. If you don’t remember
    to do a `sudo apt autoremove` command after you update in order to get rid of
    them, you could fill up your `/boot/` partition, which could prevent future updates
    from installing a new kernel. By disabling the submenu and making the boot menu
    visible by default, I can see how many Linux kernels are installed as soon as
    I boot the machine. (But hey, that’s just me, and I’m kind of weird. Just ask
    anyone who knows me.) On a production machine, it would make more sense to leave
    both the submenu and the **Recovery** option enabled, and set a GRUB 2 password.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，你现在可能会问，*为什么我需要禁用Ubuntu子菜单？* 实际上，你永远不**需要**禁用它。对我来说，这只是个人偏好问题。与Red Hat发行版不同，Ubuntu在更新操作时如果安装了新内核，它不会自动删除旧的Linux内核。如果你在更新后没有记得执行`sudo
    apt autoremove`命令来清理旧内核，可能会填满`/boot/`分区，从而阻止未来更新安装新内核。通过禁用子菜单并使启动菜单默认可见，我可以在启动机器时看到已安装的Linux内核数量。（但嘿，那只是我，我有点怪。只要问问认识我的人就知道。）在生产机器上，启用子菜单和**恢复**选项，并设置GRUB
    2密码会更为合理。
- en: You'll find the security section of the official GRUB 2 documentation at [http://www.gnu.org/software/grub/manual/grub/grub.html#Security](http://www.gnu.org/software/grub/manual/grub/grub.html#Security).
  id: totrans-272
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在[http://www.gnu.org/software/grub/manual/grub/grub.html#Security](http://www.gnu.org/software/grub/manual/grub/grub.html#Security)找到官方GRUB
    2文档的安全部分。
- en: Securely configuring BIOS/UEFI
  id: totrans-273
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全配置BIOS/UEFI
- en: This topic is different from anything we've looked at thus far because it has
    nothing to do with the operating system. Rather, we're now going to talk about
    the computer hardware.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 这个话题与我们之前讨论的内容不同，因为它与操作系统无关。现在，我们将讨论计算机硬件。
- en: Every computer motherboard has either a BIOS or a UEFI chip, which stores both
    the hardware configuration for the computer and the bootstrap instructions that
    are needed to start the boot process after the power is turned on. UEFI has replaced
    the old-style BIOS on newer motherboards, and it has more security features than
    the old BIOS had.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 每个计算机主板都有一个 BIOS 或 UEFI 芯片，用于存储计算机的硬件配置以及在开机后启动过程所需的引导指令。UEFI 替代了较老的 BIOS，并且它比旧版
    BIOS 拥有更多的安全特性。
- en: I can't give you any specific information about BIOS/UEFI setup because every
    model motherboard has a different way of doing things. What I can give you is
    some more generalized information.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我不能给你关于 BIOS/UEFI 设置的具体信息，因为每种型号的主板都有不同的设置方式。我能提供的是一些更通用的信息。
- en: 'When you think about BIOS/UEFI security, you might be thinking about disabling
    the ability to boot from anything other than the normal system drive. In the following
    screenshot, you see that I''ve disabled all SATA drive ports except for the one
    to which the system drive is connected:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 当你考虑 BIOS/UEFI 安全时，你可能会想到禁用从除了正常系统驱动器以外的其他设备启动。在下面的截图中，你可以看到我禁用了所有 SATA 驱动端口，除了与系统驱动器连接的端口：
- en: '![Figure 16.14: Disabling drive ports on my Hewlett-Packard Envy](img/file124.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![图 16.14：禁用我的惠普 Envy 驱动端口](img/file124.png)'
- en: 'Figure 16.14: Disabling drive ports on my Hewlett-Packard Envy'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.14：禁用我的惠普 Envy 驱动端口
- en: When computers are out in the open where the general public can have easy physical
    access to them, this might be a consideration. For servers that are locked away
    in their own secure room with limited access, there's no real reason to worry
    about this, unless the security requirements of some regulatory body dictate otherwise.
    For machines that are out in the open, having the whole disk encrypted would prevent
    someone from stealing data after booting from either an optical disk or a USB
    device. However, you may still have other reasons to prevent anyone from booting
    the machine from these alternate boot devices.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 当计算机暴露在公众面前，任何人都能轻易接触到时，这可能是一个考虑因素。对于那些存放在有安全保护的房间内、限制访问的服务器来说，就没有必要过于担心，除非某个监管机构的安全要求另有规定。对于暴露在外的机器，整个磁盘加密可以防止有人在从光盘或
    USB 设备启动后窃取数据。然而，你可能仍然有其他理由阻止任何人从这些替代启动设备启动机器。
- en: 'Another consideration might be if you work in a secure environment where super-sensitive
    data are handled. If you''re worried about unauthorized exfiltration of sensitive
    data, you might consider disabling the ability to write to USB devices. This will
    also prevent people from booting the machine from USB devices:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个考虑因素是，如果你在处理超级敏感数据的安全环境中工作。如果你担心未经授权的数据外泄，可能需要考虑禁用对 USB 设备的写入能力。这也将阻止人们从
    USB 设备启动机器：
- en: '![Figure 16.15: Disabling USB devices](img/file125.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![图 16.15：禁用 USB 设备](img/file125.png)'
- en: 'Figure 16.15: Disabling USB devices'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.15：禁用 USB 设备
- en: 'At times, you might not want to completely disable a machine’s USB ports. Instead,
    you can leave them enabled and use USBGuard to allow only certain USB devices
    to be connected. Rather than do my own write-up about it, I’ll refer you to this
    excellently-written tutorial that I found:'
  id: totrans-284
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 有时候，你可能不想完全禁用机器的 USB 端口。相反，你可以将其保持启用，并使用 USBGuard 只允许某些 USB 设备连接。与其自己写一篇说明，不如参考我找到的这篇写得非常好的教程：
- en: ''
  id: totrans-285
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[https://www.cyberciti.biz/security/how-to-protect-linux-against-rogue-usb-devices-using-usbguard/](https://www.cyberciti.biz/security/how-to-protect-linux-against-rogue-usb-devices-using-usbguard/)'
  id: totrans-286
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[https://www.cyberciti.biz/security/how-to-protect-linux-against-rogue-usb-devices-using-usbguard/](https://www.cyberciti.biz/security/how-to-protect-linux-against-rogue-usb-devices-using-usbguard/)'
- en: ''
  id: totrans-287
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The main catch with USBGuard is that it still won’t prevent someone from booting
    from a USB device.
  id: totrans-288
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: USBGuard 的主要问题是，它仍然无法阻止某人从 USB 设备启动。
- en: 'However, there''s more than just this to BIOS/UEFI security. Today''s modern
    server CPUs come with a variety of security features to help prevent data breaches.
    For example, let''s look at a list of security features that are implemented in
    Intel Xeon CPUs:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，BIOS/UEFI安全不仅仅是这样。今天的现代服务器CPU配备了各种安全功能，以帮助防止数据泄露。例如，我们来看看Intel Xeon CPU中实现的一些安全功能：
- en: Identity-protection technology
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份保护技术
- en: Advanced Encryption Standard New Instructions
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级加密标准新指令
- en: Trusted Execution Technology
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 受信执行技术
- en: Hardware-assisted virtualization technology
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬件辅助虚拟化技术
- en: 'AMD, that plucky underdog in the CPU market, have their own new security features
    in their line of EPYC server CPUs. These features include:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: AMD，这个在CPU市场上奋力拼搏的“黑马”，在他们的EPYC服务器CPU系列中也有自己的新安全功能。这些功能包括：
- en: Secure Memory Encryption
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全内存加密
- en: Secure Encrypted Virtualization
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全加密虚拟化
- en: In any case, you would configure these CPU security options in your server's
    UEFI setup utility.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，你将会在服务器的UEFI设置工具中配置这些CPU安全选项。
- en: You can read about Intel Xeon security features at [https://www.intel.com/content/www/us/en/newsroom/news/xeon-scalable-platform-built-sensitive-workloads.html](https://www.intel.com/content/www/us/en/newsroom/news/xeon-scalable-platform-built-sensitive-workloads.html).
  id: totrans-298
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在[https://www.intel.com/content/www/us/en/newsroom/news/xeon-scalable-platform-built-sensitive-workloads.html](https://www.intel.com/content/www/us/en/newsroom/news/xeon-scalable-platform-built-sensitive-workloads.html)阅读有关Intel
    Xeon安全功能的内容。
- en: ''
  id: totrans-299
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You can read about AMD EPYC security features at [https://semiaccurate.com/2017/06/22/amds-epyc-major-advance-security/](https://semiaccurate.com/2017/06/22/amds-epyc-major-advance-security/)
    and at [https://www.servethehome.com/amd-psb-vendor-locks-epyc-cpus-for-enhanced-security-at-a-cost/](https://www.servethehome.com/amd-psb-vendor-locks-epyc-cpus-for-enhanced-security-at-a-cost/)
  id: totrans-300
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在[https://semiaccurate.com/2017/06/22/amds-epyc-major-advance-security/](https://semiaccurate.com/2017/06/22/amds-epyc-major-advance-security/)和[https://www.servethehome.com/amd-psb-vendor-locks-epyc-cpus-for-enhanced-security-at-a-cost/](https://www.servethehome.com/amd-psb-vendor-locks-epyc-cpus-for-enhanced-security-at-a-cost/)阅读有关AMD
    EPYC安全功能的内容。
- en: 'And of course, for any machines that are out in the open, it''s a good idea
    to password-protect the BIOS or UEFI:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，对于任何暴露在外的机器，最好为BIOS或UEFI设置密码保护：
- en: '![Figure 16.16: Password protect the BIOS/UEFI](img/file126.png)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![图16.16：为BIOS/UEFI设置密码保护](img/file126.png)'
- en: 'Figure 16.16: Password protect the BIOS/UEFI'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.16：为BIOS/UEFI设置密码保护
- en: If for no other reason, do it to keep people from monkeying around with your
    settings.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有其他原因，至少也应该为了防止别人乱动你的设置而做这件事。
- en: Now that you know a bit about locking down BIOS/UEFI, let's talk about security
    checklists.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你了解了一些关于锁定BIOS/UEFI的信息，我们来谈谈安全检查清单。
- en: Using a security checklist for system setup
  id: totrans-306
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用安全检查清单进行系统设置
- en: Previously, I told you about OpenSCAP, which is a really useful tool for locking
    down your system with just a minimal amount of effort. OpenSCAP comes with various
    profiles that you can apply to help bring your systems into compliance with the
    standards of different regulatory agencies. However, there are certain things
    that OpenSCAP can't do for you. For example, certain regulatory agencies require
    that your server's hard drive be partitioned in a certain way, with certain directories
    separated out into their own partitions. If you've already set up your server
    with everything under one big partition, you can't fix that just by doing a remediation
    procedure with OpenSCAP. The process of locking down your server to ensure that
    it's compliant with any applicable security regulations has to begin before you
    even install the operating system. For this, you need the appropriate checklist.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我向你介绍了OpenSCAP，这是一个非常有用的工具，可以通过最小的努力来锁定你的系统。OpenSCAP附带了多种配置文件，你可以应用这些配置文件，帮助你的系统符合不同监管机构的标准。然而，OpenSCAP并不能为你做所有事情。例如，某些监管机构要求你的服务器硬盘按特定方式分区，将某些目录单独分成独立的分区。如果你已经将服务器设置为所有内容都放在一个大分区中，那么仅通过OpenSCAP的修复程序是无法解决的。确保你的服务器符合任何适用的安全法规的过程必须在你安装操作系统之前就开始。为此，你需要合适的检查清单。
- en: There are a few different places where you can obtain a generic security checklist
    if that's all you need. The University of Texas at Austin published a generic
    checklist for Red Hat Enterprise Linux 7, which you can adjust if you need to
    use it with CentOS 7, Oracle Linux 7, or Scientific Linux 7\. (Sadly, they don’t
    offer anything that’s more up-to-date.)
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只需要一个通用的安全检查清单，有几个地方可以获取。德克萨斯大学奥斯汀分校发布了适用于 Red Hat Enterprise Linux 7 的通用检查清单，如果你需要将其用于
    CentOS 7、Oracle Linux 7 或 Scientific Linux 7，你可以进行调整。（遗憾的是，他们没有提供任何更新的版本。）
- en: 'You might find that some checklist items don''t apply to your situation, and
    you can adjust them as required:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会发现一些检查清单项目与你的情况不符，可以根据需要进行调整：
- en: '![Figure 16.17: University of Texas checklist](img/file127.png)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![图 16.17：德克萨斯大学检查清单](img/file127.png)'
- en: 'Figure 16.17: University of Texas checklist'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.17：德克萨斯大学检查清单
- en: 'For specific business fields, you''ll need to get a checklist from the applicable
    regulatory body. If you work in the financial sector or with a business that accepts
    credit card payments, you''ll need a checklist from the Payment Card Industry
    Security Standards Council:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定的行业领域，你需要从相关的监管机构获取检查清单。如果你从事金融行业或与接受信用卡支付的企业合作，你需要从支付卡行业安全标准委员会（PCI）获取检查清单：
- en: '![Figure 16.18: The PCI-DSS website](img/file128.png)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![图 16.18：PCI-DSS 网站](img/file128.png)'
- en: 'Figure 16.18: The PCI-DSS website'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16.18：PCI-DSS 网站
- en: For healthcare organizations here in the US, there's HIPAA with its requirements.
    For publicly-traded companies here in the US, there's Sarbanes-Oxley with its
    requirements.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 对于美国的医疗保健组织，有 HIPAA 及其相关要求。对于美国的上市公司，有 Sarbanes-Oxley 及其相关要求。
- en: You can get the University of Texas checklist at [https://wikis.utexas.edu/display/ISO/Operating+System+Hardening+Checklists](https://wikis.utexas.edu/display/ISO/Operating+System+Hardening+Checklists).
  id: totrans-316
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在 [https://wikis.utexas.edu/display/ISO/Operating+System+Hardening+Checklists](https://wikis.utexas.edu/display/ISO/Operating+System+Hardening+Checklists)
    获取德克萨斯大学的检查清单。
- en: ''
  id: totrans-317
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You can get a PCI-DSS checklist at [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/).
  id: totrans-318
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在 [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/)
    获取 PCI-DSS 检查清单。
- en: ''
  id: totrans-319
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You can get a HIPAA checklist at [https://www.hhs.gov/hipaa/for-professionals/security/guidance/cybersecurity/index.html](https://www.hhs.gov/hipaa/for-professionals/security/guidance/cybersecurity/index.html)
  id: totrans-320
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在 [https://www.hhs.gov/hipaa/for-professionals/security/guidance/cybersecurity/index.html](https://www.hhs.gov/hipaa/for-professionals/security/guidance/cybersecurity/index.html)
    获取 HIPAA 检查清单。
- en: ''
  id: totrans-321
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You can get a Sarbanes-Oxley checklist at [https://www.sarbanes-oxley-101.com/sarbanes-oxley-checklist.htm](https://www.sarbanes-oxley-101.com/sarbanes-oxley-checklist.htm).
  id: totrans-322
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在 [https://www.sarbanes-oxley-101.com/sarbanes-oxley-checklist.htm](https://www.sarbanes-oxley-101.com/sarbanes-oxley-checklist.htm)
    获取 Sarbanes-Oxley 检查清单。
- en: Other regulatory bodies may also have their own checklists. If you know that
    you have to deal with any of them, be sure to get the appropriate checklist.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 其他监管机构可能也有自己的检查清单。如果你知道必须处理它们中的任何一个，务必获取相应的检查清单。
- en: Summary
  id: totrans-324
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: Once again, we've come to the conclusion of another chapter, and we covered
    a lot of cool topics. We started by looking at various ways to audit which services
    are running on your systems, and we saw some examples of what you probably don't
    want to see. We then saw how to use the password protection features of GRUB 2,
    and we saw the little quirks that we have to deal with when using those features.
    Next, we had a change of pace by looking at how to further lock down a system
    by properly setting up a system's BIOS/UEFI. Finally, we looked at why we need
    to begin preparations to set up a hardened system by obtaining and following the
    proper checklist.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们来到了本章的结尾，我们涵盖了许多有趣的主题。我们首先讨论了审计系统上运行的服务的不同方法，并看到了一些你可能不想看到的例子。然后，我们展示了如何使用
    GRUB 2 的密码保护功能，并讨论了使用这些功能时需要处理的小问题。接着，我们换了一个节奏，讨论了如何通过正确设置系统的 BIOS/UEFI 来进一步加固系统。最后，我们讨论了为什么我们需要开始为设置加固系统做准备，通过获取并遵循适当的检查清单。
- en: Not only does this conclude another chapter, but it also concludes this book.
    However, this doesn't conclude your journey into the land of *Mastering Linux
    Security and Hardening*. Oh, no. As you continue this journey, you'll find that
    there's still more to learn, and still more that won't fit into the confines of
    just one book. Where you go from here mainly depends on the particular area of
    IT administration in which you work. Different types of Linux servers, whether
    they be web servers, DNS servers, or whatever else, have their own special security
    requirements, and you'll want to follow the learning path that best fits your
    needs.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅是另一个章节的结束，也是本书的结束。然而，这并不意味着你在*掌握 Linux 安全和加固*的旅程就此结束。哦，不。当你继续这段旅程时，你会发现还有更多的知识需要学习，仍然有很多内容无法在一本书中囊括。你接下来的方向主要取决于你所从事的
    IT 管理领域。不同类型的 Linux 服务器，无论是 Web 服务器、DNS 服务器还是其他，都会有自己的特殊安全需求，你需要遵循最适合你需求的学习路径。
- en: I've enjoyed the part of the journey on which I've been able to accompany you.
    I hope that you've enjoyed it just as much as I have.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 我很高兴能够陪伴你走过这段旅程，希望你也和我一样喜欢这段经历。
- en: Questions
  id: totrans-328
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You need to see a list of network services that are listening for incoming connections.
    Which of the following commands would you use?
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要查看正在监听传入连接的网络服务列表。你会使用以下哪条命令？
- en: '`sudo systemctl -t service --state=active`'
  id: totrans-330
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo systemctl -t service --state=active`'
- en: '`netstat -i`'
  id: totrans-331
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`netstat -i`'
- en: '`netstat -lp -A inet`'
  id: totrans-332
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`netstat -lp -A inet`'
- en: '`sudo systemctl -t service --state=listening`'
  id: totrans-333
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo systemctl -t service --state=listening`'
- en: Which of the following commands would you use to see only a list of established
    TCP connections?
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪条命令可以查看已建立的 TCP 连接列表？
- en: '`netstat -p -A inet`'
  id: totrans-335
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`netstat -p -A inet`'
- en: '`netstat -lp -A inet`'
  id: totrans-336
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`netstat -lp -A inet`'
- en: '`sudo systemctl -t service --state=connected`'
  id: totrans-337
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo systemctl -t service --state=connected`'
- en: '`sudo systemctl -t service --state=active`'
  id: totrans-338
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo systemctl -t service --state=active`'
- en: When Nmap tells you that a port is in an open state, what does that mean?
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 Nmap 告诉你某个端口处于开放状态时，这意味着什么？
- en: That the port is open on the firewall.
  id: totrans-340
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该端口在防火墙上是开放的。
- en: That the port is open on the firewall and that the service that's associated
    with that port is running.
  id: totrans-341
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该端口在防火墙上是开放的，并且与该端口关联的服务正在运行。
- en: That the port is accessible via the internet.
  id: totrans-342
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该端口可以通过互联网访问。
- en: That the port's Access Control List is set to open.
  id: totrans-343
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保该端口的访问控制列表设置为开放。
- en: Which of these Nmap scan options would you most likely use to scan for open
    TCP ports?
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪种 Nmap 扫描选项最可能用于扫描开放的 TCP 端口？
- en: '`-sn`'
  id: totrans-345
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`-sn`'
- en: '`-sU`'
  id: totrans-346
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`-sU`'
- en: '`-sS`'
  id: totrans-347
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`-sS`'
- en: '`-sA`'
  id: totrans-348
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`-sA`'
- en: What do you want to do when resetting the root user password on a Red Hat/CentOS/AlmaLinux
    machine?
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当重置 Red Hat/CentOS/AlmaLinux 机器的 root 用户密码时，你想做什么？
- en: Ensure that AppArmor is in enforcing mode.
  id: totrans-350
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保 AppArmor 处于强制模式。
- en: Ensure that SELinux is in enforcing mode.
  id: totrans-351
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保 SELinux 处于强制模式。
- en: Ensure that AppArmor is in complain mode.
  id: totrans-352
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保 AppArmor 处于报告模式。
- en: Ensure that SELinux is in permissive mode.
  id: totrans-353
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保 SELinux 处于宽容模式。
- en: How does discovery mode work in Nmap?
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nmap 的发现模式是如何工作的？
- en: It discovers network devices by sending ping packets to the network's broadcast
    address.
  id: totrans-355
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它通过向网络的广播地址发送 ping 数据包来发现网络设备。
- en: It discovers network devices by sending SYN packets to the network's broadcast
    address.
  id: totrans-356
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它通过向网络的广播地址发送 SYN 数据包来发现网络设备。
- en: It sends out ARP packets for a local network and ping packets for a remote network.
  id: totrans-357
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它向本地网络发送 ARP 数据包，向远程网络发送 ping 数据包。
- en: It sends out ping packets for a local network and ARP packets for a remote network.
  id: totrans-358
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它向本地网络发送 ping 数据包，向远程网络发送 ARP 数据包。
- en: You want to use Nmap to perform a UDP port scan of an entire subnet. Which of
    the following commands would you use?
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你想使用 Nmap 对整个子网进行 UDP 端口扫描。你会使用以下哪条命令？
- en: '`sudo nmap -sU 192.168.0.0`'
  id: totrans-360
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo nmap -sU 192.168.0.0`'
- en: '`sudo nmap -U 192.168.0.0`'
  id: totrans-361
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo nmap -U 192.168.0.0`'
- en: '`sudo nmap -U 192.168.0.0/24`'
  id: totrans-362
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo nmap -U 192.168.0.0/24`'
- en: '`sudo nmap -sU 192.168.0.0/24`'
  id: totrans-363
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo nmap -sU 192.168.0.0/24`'
- en: How would you begin the process of hardening a new computer system?
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会如何开始加固一台新计算机系统的过程？
- en: Apply an OpenSCAP profile when installing the operating system.
  id: totrans-365
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装操作系统时应用 OpenSCAP 配置文件。
- en: Begin the initial setup by following a checklist.
  id: totrans-366
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按照检查清单开始初始设置。
- en: Install the operating system, then apply an OpenSCAP profile.
  id: totrans-367
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装操作系统后，应用 OpenSCAP 配置文件。
- en: Install the operating system, then follow a hardening checklist.
  id: totrans-368
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装操作系统后，按照加固清单操作。
- en: On a Red Hat/CentOS/AlmaLinux server, what would you most likely do to force
    users to enter a password before editing kernel parameters during bootup?
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Red Hat/CentOS/AlmaLinux服务器上，你最有可能做什么来强制用户在启动时编辑内核参数之前输入密码？
- en: Enter the `sudo grub2-password` command.
  id: totrans-370
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`sudo grub2-password`命令。
- en: Hand-edit the grub configuration file.
  id: totrans-371
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 手动编辑grub配置文件。
- en: Enter the `sudo grub2-setpassword` command.
  id: totrans-372
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`sudo grub2-setpassword`命令。
- en: Enter the `sudo grub-setpassword` command.
  id: totrans-373
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`sudo grub-setpassword`命令。
- en: Enter the `sudo grub-password` command.
  id: totrans-374
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`sudo grub-password`命令。
- en: Further reading
  id: totrans-375
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'netstat – The easy tutorial: [https://openmaniak.com/netstat.php](https://openmaniak.com/netstat.php)'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: netstat – 简易教程：[https://openmaniak.com/netstat.php](https://openmaniak.com/netstat.php)
- en: 'Four ways to find which process is listening on a specific port: [https://www.putorius.net/process-listening-on-port.html](https://www.putorius.net/process-listening-on-port.html)'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四种方法查找哪个进程在特定端口上监听：[https://www.putorius.net/process-listening-on-port.html](https://www.putorius.net/process-listening-on-port.html)
- en: 'netstat versus ss User Guide: [https://computingforgeeks.com/netstat-vs-ss-usage-guide-linux/](https://computingforgeeks.com/netstat-vs-ss-usage-guide-linux/)'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: netstat与ss用户指南：[https://computingforgeeks.com/netstat-vs-ss-usage-guide-linux/](https://computingforgeeks.com/netstat-vs-ss-usage-guide-linux/)
- en: 'The official Nmap website: [https://nmap.org/](https://nmap.org/)'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方Nmap网站：[https://nmap.org/](https://nmap.org/)
- en: 'The GNU GRUB manual: [https://www.gnu.org/software/grub/manual/grub/grub.html](https://www.gnu.org/software/grub/manual/grub/grub.html)'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GNU GRUB手册：[https://www.gnu.org/software/grub/manual/grub/grub.html](https://www.gnu.org/software/grub/manual/grub/grub.html)
- en: 'How to boot Ubuntu 18.04 into emergency and rescue mode (An alternate method
    that still works on Ubuntu 22.04.): [https://linuxconfig.org/how-to-boot-ubuntu-18-04-into-emergency-and-rescue-mode](https://linuxconfig.org/how-to-boot-ubuntu-18-04-into-emergency-and-rescue-mode)'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将Ubuntu 18.04启动到紧急和救援模式（这种方法在Ubuntu 22.04中仍然有效）：[https://linuxconfig.org/how-to-boot-ubuntu-18-04-into-emergency-and-rescue-mode](https://linuxconfig.org/how-to-boot-ubuntu-18-04-into-emergency-and-rescue-mode)
- en: 'How to see the GRUB boot menu on Ubuntu 18.04: [https://askubuntu.com/questions/16042/how-to-get-to-the-grub-menu-at-boot-time](https://askubuntu.com/questions/16042/how-to-get-to-the-grub-menu-at-boot-time)'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在Ubuntu 18.04上查看GRUB启动菜单：[https://askubuntu.com/questions/16042/how-to-get-to-the-grub-menu-at-boot-time](https://askubuntu.com/questions/16042/how-to-get-to-the-grub-menu-at-boot-time)
- en: Answers
  id: totrans-383
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 答案
- en: c
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: a
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: a
- en: b
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: d
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
- en: c
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: d
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
- en: b
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
