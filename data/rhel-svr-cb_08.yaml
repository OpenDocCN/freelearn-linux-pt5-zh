- en: Chapter 8. Yum and Repositories
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章. Yum 和仓库
- en: 'In this chapter, we''ll cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下内容：
- en: Managing yum history
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理 yum 历史记录
- en: Creating a copy (mirror) of any (RHN) repository
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建任何（RHN）仓库的副本（镜像）
- en: Configuring additional repositories
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置额外的仓库
- en: Setting up yum to automatically update
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 yum 自动更新
- en: Configuring `logrotate` for yum
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 `logrotate` 用于 yum
- en: Recovering from a corrupted RPM database
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从损坏的 RPM 数据库恢复
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Originally, you needed to compile your GNU/Linux system manually from source,
    which used to be time consuming and could be problematic if you couldn't get your
    dependencies straight. Red Hat created **Red Hat Package Manager** (**RPM**) in
    1998 to address the concerns of dependencies and reduce the time needed to install
    a system (among others). Since then, RPM has been improved by the Open Source
    community. One such improvement is yum.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，你需要从源代码手动编译 GNU/Linux 系统，这通常是耗时且麻烦的，尤其是当你无法正确处理依赖关系时。1998年，红帽公司创建了**红帽包管理器**（**RPM**），旨在解决依赖问题并减少系统安装所需的时间（以及其他问题）。自那时以来，RPM
    被开源社区不断改进，其中一个改进就是 yum。
- en: '**Yellowdog Updater, Modified** (**yum**) is a package management tool using
    RPM. It allows RPM to access remote repositories of RPM files and will automatically
    download the required RPM files based on the dependency information provided by
    RPM.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**Yellowdog Updater, Modified**（**yum**）是一个使用 RPM 的包管理工具。它允许 RPM 访问远程的 RPM
    文件仓库，并会根据 RPM 提供的依赖信息自动下载所需的 RPM 文件。'
- en: Without a Red Hat Network subscription, you will not get access to updates.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有 Red Hat Network 订阅，你将无法访问更新。
- en: Besides Red Hat Network, you can purchase Red Hat Satellite if you want even
    more control of your Red Hat systems.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 Red Hat Network，你还可以购买 Red Hat Satellite，如果你需要更多的控制权来管理你的 Red Hat 系统。
- en: Managing yum history
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理 yum 历史记录
- en: An often overlooked feature of yum is the history. It allows you to perform
    a load of additional features that can save your skin in an enterprise environment.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: yum 的一个常被忽视的特性是历史记录。它允许你执行许多额外的功能，这些功能在企业环境中可以为你省去不少麻烦。
- en: It allows you to turn back the proverbial clock to the last functioning state
    of an application should there be an issue with a package update, without having
    to worry about dependencies and so on.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 它允许你将“时间倒回”，恢复到应用程序的最后正常状态，万一包更新出现问题，你也不必担心依赖关系等问题。
- en: How to do it…
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: In this recipe, I'll show you a couple of the most used yum history features.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将向你展示一些最常用的 yum 历史记录功能。
- en: Your yum history
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你的 yum 历史记录
- en: 'Use the following command to show your yum history:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令显示你的 yum 历史记录：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The preceding command will list the output, as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将列出输出，内容如下：
- en: '![Your yum history](img/00053.jpeg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![你的 yum 历史记录](img/00053.jpeg)'
- en: Information about a yum transaction or package
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于 yum 事务或包的信息
- en: 'Show the details of a yum transaction by executing the following command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令显示 yum 事务的详细信息：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will show you all about this single transaction:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示有关这个单个事务的所有信息：
- en: '![Information about a yum transaction or package](img/00054.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![关于 yum 事务或包的信息](img/00054.jpeg)'
- en: 'Show the details of a package installed with yum through the following:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令显示通过 yum 安装的包的详细信息：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will show information about all the transactions that have modified the
    `ntp` package in some way (installed/updated/removed):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示所有以某种方式（安装/更新/删除）修改 `ntp` 包的事务信息：
- en: '![Information about a yum transaction or package](img/00055.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![关于 yum 事务或包的信息](img/00055.jpeg)'
- en: Undoing/redoing certain yum transactions
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 撤销/重做某些 yum 事务
- en: 'Undo a specific transaction through the following command:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令撤销特定的事务：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This command undoes a specific transaction (defined by the ID), as shown in
    the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令撤销特定的事务（由 ID 定义），如下图所示：
- en: '![Undoing/redoing certain yum transactions](img/00056.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![撤销/重做某些 yum 事务](img/00056.jpeg)'
- en: 'Now, you can redo a specific transaction using the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用以下命令重做特定的事务：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This command will reperform a specific transaction (as defined by the transaction
    ID), as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将重新执行特定的事务（由事务 ID 定义），如下所示：
- en: '![Undoing/redoing certain yum transactions](img/00057.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![撤销/重做某些 yum 事务](img/00057.jpeg)'
- en: Roll back to a certain point in your transaction history
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 回滚到事务历史中的某个特定点
- en: 'This allows you to undo all transactions up until the transaction ID that you
    specify. Run the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许你撤销直到指定事务 ID 之前的所有事务。运行以下命令：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here, the transaction ID up to which you roll back is `6`. You will get the
    following output:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，回滚到的事务 ID 是 `6`。你将得到以下输出：
- en: '![Roll back to a certain point in your transaction history](img/00058.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![回滚到事务历史中的某一点](img/00058.jpeg)'
- en: There's more…
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: You have to be careful when you use history options such as undo and rollback.
    Yum does its best to comply, but it cannot restore configurations, and it will
    not restore previous versions of your configuration files if you have edited them.
    This is not a fail-safe option if you don't have any backups. Although both options
    are very useful, I recommend that you do not use them too often. When you do use
    them, try to keep the impact of the transactions as small as possible. The smaller
    the delta, the more chance of succeeding in undoing or rolling back!
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用历史选项，如撤销和回滚时需要小心。Yum 会尽力遵循这些操作，但它不能恢复配置，并且如果你已经编辑过配置文件，它不会恢复配置文件的先前版本。如果没有备份，这不是一个保险的选项。尽管这两个选项非常有用，但我建议你不要频繁使用它们。在使用时，尽量将事务的影响控制得越小越好。增量越小，撤销或回滚成功的机会就越大！
- en: See also
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: Refer to the *yum(8)* man pages for more information about yum history options.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考 *yum(8)* 手册页，了解更多关于 yum 历史选项的信息。
- en: Creating a copy of an RHN repository
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 RHN 仓库的副本
- en: In this recipe, I'll show you how you can set up a yum repository for Red Hat
    Network-based and "plain" yum repositories.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我将向你展示如何为基于 Red Hat Network 的 yum 仓库和“纯” yum 仓库进行设置。
- en: Getting ready
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before you create a copy of an RHN repository, you need to ensure that you have
    a valid subscription to the repository that you want to duplicate. When this prerequisite
    is met, you can perform this recipe from the machine that uses the subscription.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在你创建 RHN 仓库的副本之前，需要确保你已经拥有有效的订阅，以访问你想要复制的仓库。当这个前提条件满足时，你可以从使用该订阅的机器上执行本教程。
- en: How to do it…
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Before being able to create yum repositories, we need to install a couple of
    tools by performing the following steps:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在能够创建 yum 仓库之前，我们需要通过以下步骤安装一些工具：
- en: 'Install the `createrepo` and `yum-utils` packages using the following command:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装 `createrepo` 和 `yum-utils` 包：
- en: '[PRE6]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now, install the Apache web server, as follows:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，安装 Apache Web 服务器，如下所示：
- en: '[PRE7]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Syncing RHN repositories
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 同步 RHN 仓库
- en: 'You can only sync RHN subscriptions that you have access to. Perform the following
    steps:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你只能同步你有权限访问的 RHN 订阅。执行以下步骤：
- en: 'Create a directory to hold the RHN `rhel7` repository, as follows:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个目录来存放 RHN `rhel7` 仓库，如下所示：
- en: '[PRE8]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, create `/mnt/iso` by executing the following command:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过执行以下命令创建 `/mnt/iso` 目录：
- en: '[PRE9]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Mount the RHEL 7 Server DVD through the following:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下方法挂载 RHEL 7 Server DVD：
- en: '[PRE10]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, copy the `*-comps-Server.x86_64.xml` file from the RHEL Server DVD to
    your `repo` directory. The following command will help in this:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将 `*-comps-Server.x86_64.xml` 文件从 RHEL Server DVD 复制到你的 `repo` 目录。以下命令可帮助完成此操作：
- en: '[PRE11]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Unmount the RHEL Server DVD, as follows:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 卸载 RHEL Server DVD，如下所示：
- en: '[PRE12]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Synchronize the RHEL 7 OS repository by running the following command: (This
    may take a while… I suggest you kill time drinking a cup of freshly ground Arabica
    coffee!)'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令同步 RHEL 7 操作系统仓库：（这可能需要一段时间…我建议你一边等待，一边喝一杯新磨制的阿拉比卡咖啡！）
- en: '[PRE13]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, create the local repository (depending on your hardware, this may take
    a long time), as follows:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，创建本地仓库（根据你的硬件配置，这可能需要很长时间），如下所示：
- en: '[PRE14]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Finally, test your repository through the following:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，通过以下方法测试你的仓库：
- en: '[PRE15]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Let''s create a copy of the EPEL repository through the following steps:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下步骤创建 EPEL 仓库的副本：
- en: 'First, install the EPEL repository, as follows:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，安装 EPEL 仓库，如下所示：
- en: '[PRE16]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Create a directory to hold the EPEL repository by executing the following command:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令创建一个目录来存放 EPEL 仓库：
- en: '[PRE17]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now, download the `*-comps-epel7.xml` file to `/repo` as `comps-epel7.xml`,
    as follows:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将 `*-comps-epel7.xml` 文件下载到 `/repo` 目录并重命名为 `comps-epel7.xml`，如以下所示：
- en: '[PRE18]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You will need to replace the multiple `x`'s with the correct MD5 hash, as found
    in the `repodata` folder.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要将多个 `x` 替换为 `repodata` 文件夹中找到的正确 MD5 哈希值。
- en: 'Next, synchronize the EPEL repository by executing the following (this may
    take a very long time, depending on your hardware and internet speed):'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，执行以下命令同步 EPEL 仓库（这可能需要非常长的时间，具体取决于你的硬件和网络速度）：
- en: '[PRE19]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Create the local repository (again, depending on your hardware, this may take
    a long time), as follows:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建本地仓库（根据你的硬件配置，这可能需要很长时间），如下所示：
- en: '[PRE20]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Finally, test your repository by executing the following command:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，通过执行以下命令来测试您的仓库：
- en: '[PRE21]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: There's more…
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: 'When synchronizing RHEL 7 repositories, you will only be able to sync those
    you have entitlement to. To find out what entitlements you have on a given system
    connected to RHN, execute the following:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在同步 RHEL 7 仓库时，您只能同步您有权限访问的仓库。要查看您在连接到 RHN 的系统上拥有的权限，请执行以下命令：
- en: '[PRE22]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Whenever you synchronize a repository, try to keep the same directory structure
    as the original. I have found that it makes life easier when you want to rewrite
    your `/etc/yum.repos.d` files.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 每次同步仓库时，尽量保持与原始仓库相同的目录结构。我发现，当你想重写 `/etc/yum.repos.d` 文件时，这会使生活更轻松。
- en: In an enterprise, it is useful to have a point in time when you "freeze" your
    yum repositories to ensure that all your systems are at the same RPM level. By
    default, any repository is "live" and gets updated whenever a new package is added.
    The advantage of this is that you always have the latest version of all packages
    available; the downside is that your environment is not uniform and you can end
    up troubleshooting for different versions of the same package.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在企业环境中，确保所有系统处于相同的 RPM 版本水平时，“冻结”您的 yum 仓库是非常有用的。默认情况下，任何仓库都是“活动”的，并会在添加新软件包时进行更新。这样做的好处是，您总是可以获得所有软件包的最新版本；但是缺点是，您的环境可能不统一，并且您可能会因同一软件包的不同版本而进行故障排除。
- en: The easiest way to achieve a "frozen" repository is to create a central location
    that holds all the RPMs as you would a normal yum mirror or copy.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 实现“冻结”仓库的最简单方法是创建一个中央位置，用于存放所有的 RPM 包，就像普通的 yum 镜像或副本一样。
- en: Every `x` time, which you predefine, create a new directory with a timestamp,
    in which you hard link all the RPMs you mirror. Then finally, create a hard link
    to the directory, which you will later use in your repo configuration.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 每隔 `x` 时间（您预先定义的时间间隔），创建一个带有时间戳的新目录，在其中硬链接所有您镜像的 RPM 包。最后，创建该目录的硬链接，稍后将在您的 repo
    配置中使用。
- en: 'Here''s an example:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例：
- en: '| Directories | Description |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| 目录 | 描述 |'
- en: '| --- | --- |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `/rhel7/x86_64.all` | This directory contains a mirror which is synced nightly.
    RPMs are added, never deleted. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| `/rhel7/x86_64.all` | 此目录包含一个每天同步的镜像。RPM 包会被添加，但不会删除。 |'
- en: '| `/rhel7/x86_64.20150701` | This directory contains hard links to the RPMs
    in `/rhel7/x86_64`, all of which were synced on 01/07/2015, along with monthly
    iterations of the `/rhel6/x86_64.20150701` directory. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `/rhel7/x86_64.20150701` | 此目录包含指向 `/rhel7/x86_64` 中 RPM 包的硬链接，所有这些包均于 2015
    年 07 月 01 日同步，另外还包括 `/rhel6/x86_64.20150701` 目录的每月迭代版本。 |'
- en: '| `/rhel7/x86_64` | This directory contains a hard link to the monthly iteration,
    which is deemed in production. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `/rhel7/x86_64` | 此目录包含指向每月迭代版本的硬链接，该版本被认为是生产中的版本。 |'
- en: Of course, you need to ensure that you create a repository for each new sync!
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你需要确保为每次新的同步创建一个仓库！
- en: See also
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: Refer to the *createrepo(8)* man pages for more information about creating a
    repository.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 参考 *createrepo(8)* 手册页，获取更多有关创建仓库的信息。
- en: Also, refer to the *reposync(1)* man pages for more information on keeping your
    repository up-to-date.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，参考 *reposync(1)* 手册页，获取更多有关保持仓库最新的信息。
- en: Configuring additional repositories
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置额外的仓库
- en: Whether you create your own mirror repository or organizations provide software
    for you in repositories, setting up additional repositories on your RHEL system
    is quite simple. This recipe will show you how to set them up. Many repositories
    have their own repo files or even an RPM that automatically installs the repository.
    When these are available, don't hesitate to use them!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是创建自己的镜像仓库，还是组织为您提供仓库中的软件，在 RHEL 系统上设置额外的仓库都非常简单。本教程将向您展示如何设置它们。许多仓库有自己的 repo
    文件，甚至有自动安装仓库的 RPM。如果这些可用，不要犹豫，尽管使用它们！
- en: Getting ready
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this to work, you will need to have a repository set up, which can be accessed
    through the following URL: `http://repo.example.com/myrepo/7/x86_64`.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使其工作，您需要设置一个可以通过以下 URL 访问的仓库：`http://repo.example.com/myrepo/7/x86_64`。
- en: How to do it…
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'In order to create an additional repository, create a file in `/etc/yum.repos.d`
    called `myrepo.repo`, which contains the following information:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建一个额外的仓库，请在 `/etc/yum.repos.d` 中创建一个名为 `myrepo.repo` 的文件，其中包含以下信息：
- en: '[PRE23]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: There's more…
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: The `gpgcheck=1` option only functions if you or the provider of a repo has
    signed all the RPMs in the repo. This is generally a good practice and provides
    extra security to your repositories.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`gpgcheck=1` 选项仅在您或仓库提供者已签署仓库中的所有 RPM 时有效。这通常是一个好做法，并为您的仓库提供额外的安全性。'
- en: The `$releasever` and `$basearch` variables allow you to create a single repository
    file that can work on multiple systems as long as you have a repository for the
    URLs. The `$releasever` variable expands to the major version of the OS (7 in
    our case), and the `$basearch` will expands to x86_64\. On an i386 system (RHEL
    7 only comes in the x86_64 architecture), `$basearch` expands to i386.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`$releasever` 和 `$basearch` 变量允许您创建一个可以在多个系统上使用的单一仓库文件，只要您有适当的 URL 仓库。`$releasever`
    变量展开为操作系统的主要版本（在我们这里是 7），而 `$basearch` 会展开为 x86_64。在 i386 系统上（RHEL 7 仅提供 x86_64
    架构），`$basearch` 会展开为 i386。'
- en: You can find many repositories on the Internet, such as `epel` and `elrepo`,
    but it may not always be a good idea to use them. Any software provided by the
    Red Hat standard repositories are also supported by Red Hat, and they will no
    longer support you if you start using the same software provided through another
    repository. So, you better ensure that you don't care about support or have another
    party that is willing to support you.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在互联网上找到许多仓库，如 `epel` 和 `elrepo`，但使用它们并不总是个好主意。Red Hat 标准仓库提供的任何软件都会得到 Red
    Hat 的支持，如果你开始使用通过其他仓库提供的相同软件，他们将不再为你提供支持。所以，最好确保你不关心支持，或者有其他愿意为你提供支持的方。
- en: See also
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'Although I do not condone the use of these in production without taking the
    appropriate support actions, here is a list of some popular repositories that
    you can use:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我不建议在生产环境中使用这些方法而不采取适当的支持措施，但这里有一些流行的仓库列表，您可以使用：
- en: 'The ELRepo repository can be found at:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: ELRepo 仓库可以在以下位置找到：
- en: '[http://elrepo.org/tiki/tiki-index.php](http://elrepo.org/tiki/tiki-index.php)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://elrepo.org/tiki/tiki-index.php](http://elrepo.org/tiki/tiki-index.php)'
- en: 'The EPEL repository is at:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: EPEL 仓库位于：
- en: '[https://fedoraproject.org/wiki/EPEL](https://fedoraproject.org/wiki/EPEL)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://fedoraproject.org/wiki/EPEL](https://fedoraproject.org/wiki/EPEL)'
- en: 'The Puppetlabs repositories can be found at:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Puppetlabs 的仓库可以在以下位置找到：
- en: '[https://docs.puppetlabs.com/guides/puppetlabs_package_repositories.html](https://docs.puppetlabs.com/guides/puppetlabs_package_repositories.html)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.puppetlabs.com/guides/puppetlabs_package_repositories.html](https://docs.puppetlabs.com/guides/puppetlabs_package_repositories.html)'
- en: 'The Zabbix repositories are at the following link:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Zabbix 仓库位于以下链接：
- en: '[https://www.zabbix.com/documentation/2.0/manual/installation/install_from_packages](https://www.zabbix.com/documentation/2.0/manual/installation/install_from_packages)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.zabbix.com/documentation/2.0/manual/installation/install_from_packages](https://www.zabbix.com/documentation/2.0/manual/installation/install_from_packages)'
- en: 'For the RepoForge repositories, refer to the following website:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 RepoForge 仓库，请参考以下网站：
- en: '[http://repoforge.org/use/](http://repoforge.org/use/)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://repoforge.org/use/](http://repoforge.org/use/)'
- en: 'Remi''s repositories can be found at:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Remi 的仓库可以在以下位置找到：
- en: '[http://rpms.famillecollet.com/](http://rpms.famillecollet.com/)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://rpms.famillecollet.com/](http://rpms.famillecollet.com/)'
- en: 'The Webtatic repositories are at:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Webtatic 的仓库位于：
- en: '[https://webtatic.com/projects/yum-repository/](https://webtatic.com/projects/yum-repository/)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://webtatic.com/projects/yum-repository/](https://webtatic.com/projects/yum-repository/)'
- en: Setting up yum to automatically update
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 yum 自动更新
- en: In enterprises, automating the systematic updating of your RHEL systems is very
    important. You want to stay ahead of hackers or, in general, people trying to
    hurt you by exploiting the weaknesses in your environment.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在企业中，自动化更新 RHEL 系统非常重要。你希望走在黑客的前面，或者总的来说，避免那些通过利用你环境中的弱点来伤害你的人。
- en: Although I do not recommend applying this recipe to all systems in an enterprise,
    this is quite useful to ensure that certain systems are kept up to date as the
    patches and bugfixes are applied to the RPMs in Red Hat's (and other) repositories.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我不推荐将此方案应用于企业中的所有系统，但它对于确保某些系统在 Red Hat（及其他）仓库中应用补丁和修复后能够保持最新非常有用。
- en: Getting ready
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In order for this recipe to work, you'll need to be sure that the repositories
    you are using are set up correctly and you have valid mail setup (using Postfix
    or Sendmail, for example).
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使此方案生效，您需要确保所使用的仓库已正确设置，并且您已正确配置邮件系统（例如使用 Postfix 或 Sendmail）。
- en: How to do it…
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'We''ll set up yum to autoupdate your system once a week (at 03:00 ) and reboot
    if necessary through the following steps:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将设置 yum 每周自动更新一次系统（在 03:00），如有必要，重启系统，步骤如下：
- en: 'Install the yum cron plugin, as follows:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式安装 yum cron 插件：
- en: '[PRE24]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then, disable the hourly and daily yum cron jobs through the following commands:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，通过以下命令禁用每小时和每天的 yum cron 任务：
- en: '[PRE25]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Create the configuration file for the weekly yum update cron job via the following:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下方式创建每周 yum 更新的 cron 任务配置文件：
- en: '[PRE26]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Modify the created configuration file to apply updates and send a notification
    through e-mail by setting the following values:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改创建的配置文件，通过设置以下值来应用更新并通过电子邮件发送通知：
- en: '[PRE27]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Next, create a weekly cron job by adding the following contents to `/etc/cron.weekly/yum-weekly.cron`:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过将以下内容添加到 `/etc/cron.weekly/yum-weekly.cron`，创建一个每周的 cron 任务：
- en: '[PRE28]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Finally, make the cron job executable by executing the following command:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，通过执行以下命令使 cron 任务可执行：
- en: '[PRE29]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: How it works…
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: By default, `yum-cron` sets up a cron job that is run every hour (`/etc/cron.dhourly/0yum-hourly.cron`)
    and every day (`/etc/cron.daily/0yum-daily.cron`).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`yum-cron` 会设置一个 cron 任务，每小时运行一次（`/etc/cron.dhourly/0yum-hourly.cron`）和每天运行一次（`/etc/cron.daily/0yum-daily.cron`）。
- en: There's more…
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: 'This recipe will upgrade all your packages when there''s an update available.
    If you just want to apply security fixes, modify the `update_cmd` value of your
    yum cron configuration file in the following way:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这个步骤将升级你所有的包，当有更新时。如果你只想应用安全修复，请按以下方式修改你的 yum cron 配置文件中的 `update_cmd` 值：
- en: '[PRE30]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Alternatively, you can even use the following configuration if you only want
    critical fixes:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果你只想应用关键修复，可以使用以下配置：
- en: '[PRE31]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: See also
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见：
- en: Check the *yum cron(8)* man page or the default `yum-cron.conf` file located
    at `/etc/yum/yum-cron.conf` for more information.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 *yum cron(8)* 手册页或位于 `/etc/yum/yum-cron.conf` 的默认 `yum-cron.conf` 文件，了解更多信息。
- en: Configuring logrotate for yum
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 yum 的 logrotate
- en: Every time you use yum to install and/or update packages, it logs to `/var/log/yum.log`.
    A lot of people don't want to rotate the file a lot as they believe (incorrectly)
    that it is their only source to the history of their yum tasks. They may even
    believe that it provides a way to restore your rpm database if it gets corrupted
    - it does not.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 每次使用 yum 安装和/或更新包时，它都会记录到 `/var/log/yum.log`。很多人不希望频繁轮换该文件，因为他们错误地认为这是唯一的 yum
    任务历史记录来源。他们甚至可能认为它提供了一种在 RPM 数据库损坏时恢复数据库的方式——实际上并不是。
- en: I do recommend keeping your complete yum history as it doesn't grow a lot, unless
    you reinstall packages a lot.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我确实建议保留完整的 yum 历史记录，因为它的增长并不大，除非你经常重新安装包。
- en: For a rich interface to your yum history, I suggest you use yum history.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地管理你的 yum 历史记录，我建议你使用 yum history。
- en: By default, your yum log file is rotated yearly, and even then, it only rotates
    if the size of your log file exceeds 30 KB, and your logs are only kept for 4
    years. Usually, this is enough in the physical world as physical servers tend
    to be replaced every 3-4 years. However, virtual servers have the potential to
    stay "alive" beyond these 3-4 years.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，你的 yum 日志文件是按年轮换的，甚至只有在日志文件大小超过 30 KB 时才会轮换，而且日志只保留 4 年。通常，在物理环境中，这已经足够，因为物理服务器通常每
    3-4 年就会被替换。然而，虚拟服务器有可能超过这 3-4 年仍然“存活”。
- en: How to do it…
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Modify `/etc/logrotate.d/yum` to the following:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `/etc/logrotate.d/yum` 修改为如下内容：
- en: '[PRE32]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: How it works…
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: This configuration will only rotate the yum log when it exceeds 30 KB in size
    on a yearly basis, and it will keep 1000 rotated logs, which is basically log
    files for 1000 years!
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 该配置只会在 yum 日志文件大小超过 30 KB 时每年轮换一次日志，并且会保留 1000 个已轮换的日志文件，相当于保留了 1000 年的日志！
- en: See also
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见：
- en: For more information on how to use and configure logrotate, refer to the *logrotate(8)*
    man page.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于如何使用和配置 logrotate 的信息，请参阅 *logrotate(8)* 手册页。
- en: Recovering from a corrupted RPM database
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从损坏的 RPM 数据库恢复
- en: Although everything is done to ensure that your RPM databases are intact, your
    RPM database may become corrupt and unuseable. This happens mainly if the filesystem
    on which the `rpm db` resides is suddenly inaccessible (full, read-only, reboot,
    or so on).
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管已做出一切确保你的 RPM 数据库完好无损，但你的 RPM 数据库可能会损坏并无法使用。这通常发生在 `rpm db` 所在的文件系统突然无法访问时（例如文件系统满、只读、重启等情况）。
- en: This recipe will show you the two ways in which you can attempt to restore your
    RPM database.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这个步骤将向你展示恢复 RPM 数据库的两种方式。
- en: Getting ready
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作：
- en: Verify that your system is backed up in some way.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的系统已经以某种方式备份。
- en: How to do it…
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'We''ll start with the easiest option and the one with the highest success rate
    in these steps:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从最简单且成功率最高的选项开始：
- en: 'Start by creating a backup of your corrupt `rpm db`, as follows:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先创建一个损坏的 `rpm db` 的备份，步骤如下：
- en: '[PRE33]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Remove stale lock files if they exist through the following command:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果存在过时的锁文件，请通过以下命令将其删除：
- en: '[PRE34]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Now, verify the integrity of the `Packages` database via the following:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过以下命令验证 `Packages` 数据库的完整性：
- en: '[PRE35]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: If the previous step prints `0`, proceed to Step 7.
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果前一步输出 `0`，请继续进行第 7 步。
- en: 'Rename the `Packages` file (don''t delete it, we''ll need it!), as follows:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重命名 `Packages` 文件（不要删除它，我们还需要它！），步骤如下：
- en: '[PRE36]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now, dump the `Packages db` from the original `Packages db` by executing the
    following command:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，执行以下命令从原始的 `Packages db` 中转储 `Packages db`：
- en: '[PRE37]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Verify the integrity of the newly created `Packages` database. Run the following:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证新创建的 `Packages` 数据库的完整性。执行以下操作：
- en: '[PRE38]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: If the exit code is not `0`, you will need to restore the database from backup.
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果退出代码不是 `0`，则需要从备份中恢复数据库。
- en: 'Rebuild the `rpm` indexes, as follows:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新构建 `rpm` 索引，步骤如下：
- en: '[PRE39]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Next, use the following command to check the `rpm db` with yum for any other
    issues (this may take a long time):'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用以下命令通过 yum 检查 `rpm db` 是否存在其他问题（此操作可能需要较长时间）：
- en: '[PRE40]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Restore the SELinux context of the `rpm` database through the following command:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下命令恢复 `rpm` 数据库的 SELinux 上下文：
- en: '[PRE41]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![How to do it…](img/00059.jpeg)'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/00059.jpeg)'
- en: There's more…
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: If, for some reason, you are unable to recover your RPM database, there is one
    final option left. Enterprises tend to have standardized builds, and many servers
    are installed with the same packages, so copy the healthy `/var/lib/rpm` directory
    from another server with the exact same package set to the corrupted one, and
    perform the preceding recipe's steps to ensure that everything is okay.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于某种原因，你无法恢复 RPM 数据库，还有最后一个选择。企业通常有标准化的构建，许多服务器安装了相同的软件包，因此可以从另一台拥有相同软件包集的健康服务器复制
    `/var/lib/rpm` 目录到损坏的服务器，并执行前面步骤中的操作，确保一切正常。
- en: Although you'll find additional tools that can save your skin (such as RPM cron),
    it's usually more practical to have a decent backup.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你会找到一些额外的工具可以救急（例如 RPM cron），但通常拥有一个良好的备份更为实际。
