- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: The Linux kernel is a complex, portable, modular, and widely used piece of software,
    running on around 80% of servers and embedded systems in more than half of the
    devices throughout the world. Device drivers play a critical role in the context
    of how well a Linux system operates. As Linux has turned out to be one of the
    most popular operating systems, interest in developing personal device drivers
    is also increasing steadily.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 内核是一个复杂、可移植、模块化且广泛使用的软件，运行在约 80% 的服务器和嵌入式系统上，覆盖了全球超过一半的设备。设备驱动在 Linux
    系统的运行表现中起着至关重要的作用。随着 Linux 成为最流行的操作系统之一，开发个人设备驱动的兴趣也在稳步增加。
- en: A device driver is the link between the user space and hardware devices, through
    the kernel.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 设备驱动是用户空间与硬件设备之间的桥梁，通过内核实现。
- en: This book will begin with two chapters that will help you understand the basics
    of drivers and prepare you for the long journey through the Linux kernel. This
    book will then cover driver development based on Linux subsystems, such as memory
    management, **industrial input/output** (**IIO**), **general-purpose input/output**
    (**GPIO**), **interrupt request** (**IRQ**) management, and **Inter-Integrated
    Circuit** (**I2C**) and **Serial Peripheral Interface** (**SPI**). The book will
    also cover a practical approach to direct memory access and register map abstraction.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将从两章开始，帮助你了解驱动的基础知识，为你踏上长达数章的 Linux 内核之旅做准备。接下来，本书将覆盖基于 Linux 子系统的驱动开发，如内存管理、**工业输入/输出**（**IIO**）、**通用输入/输出**（**GPIO**）、**中断请求**（**IRQ**）管理，以及
    **互连电路**（**I2C**）和 **串行外设接口**（**SPI**）。本书还将介绍一种直接内存访问和寄存器映射抽象的实践方法。
- en: The source code in this book has been tested on both an x86 PC and UDOO QUAD
    from SECO, which is based on an ARM i.MX6 from NXP, with enough features and connections
    to allow us to cover all of the tests discussed in the book. Some drivers are
    also provided for testing purposes for inexpensive components, such as MCP23016
    and 24LC512, which are an I2C GPIO controller and EEPROM memory, respectively.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的源代码已经在 x86 PC 和 SECO 的 UDOO QUAD（基于 NXP 的 ARM i.MX6）上进行了测试，配备了足够的功能和连接，以便我们覆盖本书中讨论的所有测试内容。还提供了一些驱动程序用于测试目的，适用于廉价组件，例如
    MCP23016 和 24LC512，分别是 I2C GPIO 控制器和 EEPROM 存储器。
- en: By the end of this book, you will be comfortable with the concept of device
    driver development and will be able to write any device driver from scratch using
    the last stable kernel branch (v5.10.y at the time of writing).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书结束时，你将熟悉设备驱动开发的概念，并能够使用最后一个稳定的内核分支（本书撰写时为 v5.10.y）从零开始编写任何设备驱动程序。
- en: Who this book is for
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适用人群
- en: To make use of the content of this book, prior knowledge of basic C programming
    and Linux commands is expected. This book covers Linux driver development for
    widely used embedded devices, using kernel version v5.10\. This book is essentially
    intended for embedded engineers, Linux system administrators, developers, and
    kernel hackers. Whether you are a software developer, a system architect, or a
    creator willing to dive into Linux driver development, this book is for you.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分利用本书的内容，读者应具备基本的 C 编程和 Linux 命令知识。本书涉及使用 v5.10 版本内核的广泛应用的嵌入式设备的 Linux 驱动开发。本书主要面向嵌入式工程师、Linux
    系统管理员、开发人员和内核黑客。无论你是软件开发人员、系统架构师，还是愿意深入了解 Linux 驱动开发的创作者，本书都适合你。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[*Chapter 1*](B17934_01_Epub.xhtml#_idTextAnchor014), *Introduction to Kernel
    Development*, introduces the Linux kernel development process. The chapter will
    discuss the downloading, configuring, and compiling steps of a kernel, for x86
    as well as for ARM-based systems.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第一章*](B17934_01_Epub.xhtml#_idTextAnchor014)，*内核开发介绍*，介绍了 Linux 内核的开发过程。本章将讨论内核的下载、配置和编译步骤，适用于
    x86 系统和基于 ARM 的系统。'
- en: '[*Chapter 2*](B17934_02_Epub.xhtml#_idTextAnchor025), *Understanding Linux
    Kernel Module Basic Concepts*, deals with Linux modularity by means of kernel
    modules and describes their loading/unloading. It also describes module architecture
    with some basic concepts.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第二章*](B17934_02_Epub.xhtml#_idTextAnchor025)，*理解 Linux 内核模块基本概念*，通过内核模块讨论
    Linux 的模块化，并描述了其加载/卸载过程。还介绍了模块架构和一些基本概念。'
- en: '[*Chapter 3*](B17934_03_Epub.xhtml#_idTextAnchor039), *Dealing with Kernel
    Core Helpers*, walks through frequently used kernel functions and mechanisms,
    such as the work queue, wait queue, mutexes, spinlock, and any other facilities
    that are useful for improved driver reliability.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B17934_03_Epub.xhtml#_idTextAnchor039)，*处理内核核心帮助程序*，详细讲解了常用的内核函数和机制，如工作队列、等待队列、互斥锁、自旋锁以及任何有助于提高驱动程序可靠性的设施。'
- en: '[*Chapter 4*](B17934_04_Epub.xhtml#_idTextAnchor060), *Writing Character Device
    Drivers*, focuses on exporting device functionalities to the user space by means
    of character devices, as well as supporting custom commands using the ioctl interface.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B17934_04_Epub.xhtml#_idTextAnchor060)，*编写字符设备驱动程序*，重点介绍了通过字符设备将设备功能导出到用户空间，以及使用ioctl接口支持自定义命令。'
- en: '[*Chapter 5*](B17934_05_Epub.xhtml#_idTextAnchor082), *Understanding and Leveraging
    the Device Tree*, discusses the mechanism to declare and describe devices to the
    kernel. This chapter explains device addressing, resource handling, and every
    data type supported in **device tree** (**DT**) and their kernel APIs.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B17934_05_Epub.xhtml#_idTextAnchor082)，*理解和利用设备树*，讨论了声明和描述设备给内核的机制。本章解释了设备寻址、资源处理以及设备树(**DT**)中支持的所有数据类型及其内核API。'
- en: '[*Chapter 6*](B17934_06_Epub.xhtml#_idTextAnchor095), *Introduction to Devices,
    Drivers, and Platform Abstraction*, explains the general concept of platform devices,
    the concept of a pseudo-platform bus, as well as the device- and driver-matching
    mechanisms.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B17934_06_Epub.xhtml#_idTextAnchor095)，*设备、驱动程序与平台抽象简介*，解释了平台设备的概念、伪平台总线的概念，以及设备与驱动程序匹配机制。'
- en: '[*Chapter 7*](B17934_07_Epub.xhtml#_idTextAnchor105), *Understanding the Concept
    of Platform Devices and Drivers*, describes platform driver architecture in a
    general manner, and how to handle platform data.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B17934_07_Epub.xhtml#_idTextAnchor105)，*理解平台设备和驱动程序的概念*，以一种通用的方式描述了平台驱动程序架构，以及如何处理平台数据。'
- en: '[*Chapter 8*](B17934_08_Epub.xhtml#_idTextAnchor117), *Writing I2C Device Drivers*,
    dives into I2C device driver architecture, the data structures, and device addressing
    and accessing methods on the bus.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B17934_08_Epub.xhtml#_idTextAnchor117)，*编写I2C设备驱动程序*，深入探讨了I2C设备驱动程序架构、数据结构，以及总线上设备寻址和访问方法。'
- en: '[*Chapter 9*](B17934_09_Epub.xhtml#_idTextAnchor130), *Writing SPI Device Drivers*,
    describes SPI-based device driver architecture, as well as the data structures
    involved. The chapter discusses each device''s access method and specificities,
    as well as traps you should avoid. SPI DT binding is discussed too.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B17934_09_Epub.xhtml#_idTextAnchor130)，*编写SPI设备驱动程序*，描述了基于SPI的设备驱动程序架构以及涉及的数据结构。本章讨论了每个设备的访问方法和具体特性，以及应避免的陷阱。SPI设备树绑定也进行了讨论。'
- en: '[*Chapter 10*](B17934_10_Epub.xhtml#_idTextAnchor146), *Understanding the Linux
    Kernel Memory Allocation*, first introduces the concept of virtual memory, to
    describe the whole kernel memory layout. This chapter then walks through the kernel
    memory management subsystem, discussing memory allocation and mapping, their APIs,
    and all devices involved in such mechanisms, as well as the kernel caching mechanism.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B17934_10_Epub.xhtml#_idTextAnchor146)，*理解Linux内核内存分配*，首先介绍了虚拟内存的概念，以描述整个内核内存布局。本章接着讲解内核内存管理子系统，讨论内存分配与映射、它们的API以及涉及这些机制的所有设备，还包括内核的缓存机制。'
- en: '[*Chapter 11*](B17934_11_Epub.xhtml#_idTextAnchor165), *Implementing Direct
    Memory Access (DMA) Support*, introduces DMA and its new kernel API: the DMA Engine
    API. This chapter will talk about different DMA mappings and describe how to address
    cache coherency issues. In addition, the chapter summarizes all the concepts with
    a generic use case.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B17934_11_Epub.xhtml#_idTextAnchor165)，*实现直接内存访问（DMA）支持*，介绍了DMA及其新的内核API：DMA引擎API。本章将讨论不同的DMA映射，并描述如何解决缓存一致性问题。此外，本章总结了所有概念，并给出了一个通用的使用案例。'
- en: '[*Chapter 12*](B17934_12_Epub.xhtml#_idTextAnchor183), *Abstracting Memory
    Access – Introduction to the Regmap API: a Register Map Abstraction*, provides
    an overview of the register map APIs and how they abstract the underlying SPI
    and I2C transactions. This chapter describes the generic API, as well as the dedicated
    API.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B17934_12_Epub.xhtml#_idTextAnchor183)，*抽象化内存访问——Regmap API简介：寄存器映射抽象*，概述了寄存器映射API及其如何抽象底层SPI和I2C事务。本章描述了通用API以及专用API。'
- en: '[*Chapter 13*](B17934_13_Epub.xhtml#_idTextAnchor194), *Demystifying the Kernel
    IRQ Framework*, demystifies the Linux IRQ core. This chapter walks through Linux
    IRQ management, starting from interrupt propagation over the system and moving
    to interrupt controller drivers, thus explaining the concept of IRQ multiplexing,
    using the Linux IRQ domain API.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第13章*](B17934_13_Epub.xhtml#_idTextAnchor194)，*揭秘内核 IRQ 框架*，揭秘了 Linux IRQ
    核心。本章介绍了 Linux IRQ 管理，从中断在系统中的传播开始，到中断控制器驱动，解释了 IRQ 多路复用的概念，并使用 Linux IRQ 域 API。'
- en: '[*Chapter 14*](B17934_14_Epub.xhtml#_idTextAnchor203), *Introduction to the
    Linux Device Model*, provides an overview of the heart of Linux, describing how
    objects are represented in the kernel, and how Linux is designed under the hood
    in a general manner, starting from `kobject` to devices, through to buses, classes,
    and device drivers.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第14章*](B17934_14_Epub.xhtml#_idTextAnchor203)，*Linux 设备模型简介*，概述了 Linux 的核心，描述了内核中对象的表示方式，以及
    Linux 在底层的设计方式，从 `kobject` 到设备，再到总线、类和设备驱动的结构。'
- en: '[*Chapter 15*](B17934_15_Epub.xhtml#_idTextAnchor218), *Delving into the IIO
    Framework*, introduces the kernel data acquisition and measurement framework,
    to handle `libiio`), dealing with triggered buffers and continuous data capture.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第15章*](B17934_15_Epub.xhtml#_idTextAnchor218)，*深入研究 IIO 框架*，介绍了内核数据采集与测量框架，处理
    `libiio`，涉及触发缓冲区和连续数据采集。'
- en: '[*Chapter 16*](B17934_16_Epub.xhtml#_idTextAnchor242), *Getting the Most Out
    of the Pin Controller and GPIO Subsystems*, describes the kernel pin control infrastructure
    and APIs, as well as GPIO chip drivers and `gpiolib`, which is the kernel API
    to handle GPIO. This chapter also discusses the old and deprecated integer-based
    GPIO interface, as well as the descriptor-based interface, which is the new one,
    and finally, the way they can be configured from within the device tree. It also
    covers `libgpiod`, which is the official library for dealing with GPIO in user
    space.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第16章*](B17934_16_Epub.xhtml#_idTextAnchor242)，*充分利用引脚控制器和 GPIO 子系统*，描述了内核引脚控制基础设施和
    API，以及 GPIO 芯片驱动和 `gpiolib`，这是处理 GPIO 的内核 API。本章还讨论了已废弃的基于整数的 GPIO 接口，以及新的基于描述符的接口，并介绍了如何在设备树中配置它们。最后，它还涵盖了
    `libgpiod`，这是官方的用户空间 GPIO 处理库。'
- en: '[*Chapter 17*](B17934_17_Epub.xhtml#_idTextAnchor256), *Leveraging the Linux
    Kernel Input Subsystem*, provides a global view of input subsystems, dealing with
    both IRQ-based and polled input devices, and introducing both APIs. This chapter
    explains and shows how user space code deals with such devices.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第17章*](B17934_17_Epub.xhtml#_idTextAnchor256)，*利用 Linux 内核输入子系统*，提供了输入子系统的整体视图，涉及基于
    IRQ 的输入设备和轮询输入设备，并介绍了两种 API。本章解释并展示了用户空间代码如何处理这些设备。'
- en: To get the most out of this book
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了最大限度地发挥本书的作用
- en: This book assumes a medium level of understanding of the Linux operating system
    and basic knowledge of C programming (at least data structures, pointer handling,
    and memory allocation). All code examples have been tested with Linux kernel v5.10\.
    If additional skill is required for a given chapter, links to document references
    will be provided for you to quickly learn these skills.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设你具备中等水平的 Linux 操作系统理解能力以及 C 编程的基础知识（至少包括数据结构、指针处理和内存分配）。所有代码示例均已在 Linux
    内核 v5.10 中进行测试。如果某一章节需要额外的技能，本书会提供相关文档链接，帮助你快速掌握这些技能。
- en: '![](img/B17934_Preface_001.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B17934_Preface_001.jpg)'
- en: Other necessary packages are described in the dedicated chapter in the book.
    Internet connectivity is required for kernel source downloading.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 其他必要的软件包在书中的专门章节中有描述。下载内核源码时需要互联网连接。
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book''s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting of code.**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你使用的是本书的数字版，我们建议你自己输入代码或从本书的 GitHub 仓库中获取代码（相关链接将在下一节提供）。这样做可以帮助你避免由于复制粘贴代码可能导致的错误。**'
- en: Download the example code files
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Linux-Device-Driver-Development-Second-Edition](https://github.com/PacktPublishing/Linux-Device-Driver-Development-Second-Edition).
    If there's an update to the code, it will be updated in the GitHub repository.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从GitHub下载本书的示例代码文件，地址为[https://github.com/PacktPublishing/Linux-Device-Driver-Development-Second-Edition](https://github.com/PacktPublishing/Linux-Device-Driver-Development-Second-Edition)。如果代码有更新，它会在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的丰富书籍和视频目录中还有其他代码包，您可以访问[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)查看。快来看看吧！
- en: Download the color images
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图片
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781803240060_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781803240060_ColorImages.pdf).'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个PDF文件，包含本书中使用的屏幕截图和图表的彩色图像。您可以在此下载：[https://static.packt-cdn.com/downloads/9781803240060_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781803240060_ColorImages.pdf)。
- en: Conventions used
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了若干文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "We can lock/unlock the spinlock using the `spin_lock()`
    and `spin_unlock()` inline functions, both defined in `include/linux/spinlock.h`."'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码词、数据库表名、文件夹名称、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter账号。例如：“我们可以使用`spin_lock()`和`spin_unlock()`内联函数来锁定/解锁自旋锁，这两个函数都定义在`include/linux/spinlock.h`中。”'
- en: 'A block of code is set as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块格式如下：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起你对代码块中特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都按以下方式写出：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tips or Important Notes
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 提示或重要说明
- en: Appear like this.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 显示如下。
- en: Get in touch
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '`customercare@packtpub.com` and mention the book title in the subject of your
    message.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`customercare@packtpub.com`并在邮件主题中提到书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已尽最大努力确保内容的准确性，但错误仍然可能发生。如果你在本书中发现了错误，我们将不胜感激，如果你能将其报告给我们。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '`copyright@packt.com` with a link to the material.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`copyright@packt.com`，并附上材料链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你有兴趣成为作者**：如果你在某个主题上拥有专业知识，并且有兴趣撰写或参与编写一本书，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享你的想法
- en: Once you've read *Linux Device Drivers Development - Second Edition*, we'd love
    to hear your thoughts! Please [click here to go straight to the Amazon review
    page](https://packt.link/r/1803240067) for this book and share your feedback.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你阅读了*《Linux设备驱动开发（第二版）》*，我们很想听听你的想法！请[点击这里直接进入亚马逊评论页面](https://packt.link/r/1803240067)，分享你的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we're delivering excellent quality content.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你的评论对我们和技术社区都非常重要，并将帮助我们确保提供优质的内容。
