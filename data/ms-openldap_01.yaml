- en: Chapter 1. Directory Servers and LDAP
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章：目录服务器与 LDAP
- en: 'In this first chapter, we will cover the basics of LDAP. While most of the
    chapters in this book take a practical hands-on approach, this first chapter is
    higher-level and introductory in nature. We will get introduced to directory servers
    and LDAP, including commonly-used directory terminology. We will also see how
    the OpenLDAP server fits into the directory landscape, where it came from, and
    how it works. Here are the main topics covered in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的第一部分，我们将介绍 LDAP 的基础知识。尽管本书的大多数章节采用实践操作的方式，但第一章的内容较为高层，具有引导性。我们将介绍目录服务器和
    LDAP，包括常用的目录术语。我们还将看到 OpenLDAP 服务器在目录结构中的位置，它的起源以及它的工作原理。本章涵盖的主要内容如下：
- en: The basics of LDAP directories
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LDAP 目录的基础知识
- en: The history of LDAP and the OpenLDAP server
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LDAP 和 OpenLDAP 服务器的历史
- en: A technical overview of the OpenLDAP server
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenLDAP 服务器的技术概述
- en: LDAP Basics
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LDAP 基础
- en: The term **LDAP** stands for **Lightweight Directory Access Protocol**. As the
    name indicates, LDAP was originally designed to be a network protocol that provided
    an alternative form of access to existing directory servers, but as the idea of
    LDAP—and the technologies surrounding it—matured, the term LDAP became synonymous
    with a specific type of directory architecture. We use the term LDAP when referring
    to directory services that comply with that architecture, as defined in the LDAP
    specifications.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**LDAP** 是 **轻量级目录访问协议**（Lightweight Directory Access Protocol）的缩写。顾名思义，LDAP
    最初是为了提供一种访问现有目录服务器的网络协议，但随着 LDAP 及其相关技术的发展，LDAP 这一术语逐渐与一种特定的目录架构划上了等号。我们在谈论符合该架构的目录服务时，会使用
    LDAP 这一术语，正如 LDAP 规范中所定义的。'
- en: Note
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注释
- en: LDAP is standardized. The body of LDAP standards, including the network protocols,
    the directory structure, and the services provided by an LDAP server, are all
    available in the form of RFCs (Requests For Comments). Throughout this book, I
    will reference specific LDAP RFCs as authoritative sources of information about
    LDAP.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP 是标准化的。LDAP 标准的内容，包括网络协议、目录结构以及 LDAP 服务器提供的服务，都可以通过 RFC（请求评论）文档形式获得。在本书中，我将引用具体的
    LDAP RFC 作为 LDAP 的权威信息来源。
- en: The current version of LDAP is LDAP v.3 (version 3), a standard developed in
    1997 as RFC 2251, and widely implemented throughout the industry. The original
    specification has recently (June 2006) been updated, and RFCs 4510-4519 provide
    a clarified and much more cohesive specification for LDAP.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当前版本的 LDAP 是 LDAP v.3（版本 3），这是 1997 年以 RFC 2251 标准发布的，并在业界广泛实施。原始规范在 2006 年
    6 月进行了更新，RFC 4510-4519 提供了更加清晰和一致的 LDAP 规范。
- en: While directories in general, and LDAP directories in particular, are by no
    means novel or rare in the information technology world, the driving technologies
    are certainly not as well understood as near relatives like the relational database.
    One of the goals of this chapter (and of this book in general) is to introduce
    and clarify the function and use of an LDAP directory.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管一般目录和特别是 LDAP 目录在信息技术领域并不新颖或罕见，但推动这些技术的发展，尤其是 LDAP，远不如关系型数据库等近亲技术那样被广泛理解。本章（以及本书）的一个目标是介绍并澄清
    LDAP 目录的功能和用途。
- en: In this section, we will introduce some of the concepts that are important for
    understanding LDAP. The best place to start is with the idea of the directory.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍一些理解 LDAP 所必需的重要概念。最好的起点是理解“目录”这一概念。
- en: What is a Directory?
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是目录？
- en: When we think of a directory, we conjure images of telephone directories or
    address books. We use such directories to find information about individuals or
    organizations. For instance, I might thumb through my address book to find the
    phone number of my friend Jack, or skim through the telephone directory looking
    for the address of Acme Services.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们想到“目录”时，脑海中会浮现电话簿或地址簿的画面。我们使用这些目录查找个人或组织的信息。例如，我可能翻阅我的地址簿查找朋友 Jack 的电话号码，或者快速浏览电话簿寻找
    Acme Services 的地址。
- en: A **directory server** is used this way, too. It maintains information about
    some set of entities (entities like people or organizations), and it provides
    services for accessing that information.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录服务器** 也是如此使用的。它维护着关于某些实体（如个人或组织）的信息，并提供访问这些信息的服务。'
- en: Of course, a directory server must also have means for adding, modifying, and
    deleting information, as well. But, even as a telephone directory is assumed to
    be primarily a resource for reading, a directory server's information is assumed
    to be read more often than written. This assumption about the use of a directory
    server is codified, or summarized, in the phrase "high-read, low-write". Consequently,
    many applications of LDAP technology are geared toward reading and searching for
    information.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，目录服务器还必须具备添加、修改和删除信息的功能。但是，尽管电话簿被假定为主要用于阅读，目录服务器中的信息也假定主要是读取而非写入。关于目录服务器使用的这一假设在“高读写、低写”这一短语中有所总结或概括。因此，许多LDAP技术的应用都侧重于读取和搜索信息。
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: While many directory servers have been optimized for fast reading at the expense
    of fast modification, this is not necessarily the case with OpenLDAP. OpenLDAP
    is efficient on both counts, and it can be used for applications that require
    frequent writing of data.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然许多目录服务器已针对快速读取进行了优化，而牺牲了快速修改的能力，但OpenLDAP的情况不一定是这样。OpenLDAP在这两方面都非常高效，且可以用于需要频繁写入数据的应用。
- en: Some sorts of directory servers (envision a simple server-based implementation
    of an address book) simply provide a narrow and specific service. A single-purpose
    directory server, such as an online address book, might store only a very specific
    type of data, like phone numbers, addresses, and email information for a set of
    people. Such directories are not extensible. Instead, they are *single-purpose*.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一些类型的目录服务器（比如一个简单的基于服务器的地址簿实现）只提供狭窄且特定的服务。一个单一目的的目录服务器，如在线地址簿，可能只存储一种非常特定类型的数据，如一组人的电话号码、地址和电子邮件信息。这类目录是不可扩展的。相反，它们是*单一目的*的。
- en: But LDAP (and its X.500 predecessor) was designed to be a *general*-*purpose*
    directory server. It has not been designed with the purpose of capturing a specific
    type of data (like telephone numbers or email addresses). Instead, it was designed
    to give implementers the ability to define—clearly and carefully—what data the
    directory should store.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 但LDAP（及其X.500前身）被设计为一个*通用*的目录服务器。它并非专门为捕获特定类型的数据（如电话号码或电子邮件地址）而设计。相反，它的设计目的是让实施者能够清晰且谨慎地定义目录应存储的数据。
- en: Such a generic directory server ought to be able to store many different kinds
    of information. For that matter, it should be able to store different kinds of
    information about different kinds of entities. For example, a general purpose
    directory should be able to store information about entities as diverse as people
    and igneous rock samples. But we don't want to store the same information about
    people as we do about rocks.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的通用目录服务器应能够存储多种不同类型的信息。实际上，它应该能够存储关于不同类型实体的不同信息。例如，一个通用目录应该能够存储关于如人类和火成岩样本等多种实体的信息。但我们不想存储与人类相关的所有信息也适用于岩石。
- en: 'A person might have a surname, a phone number, and an email address, as shown
    in the following figure:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一个人可能有姓氏、电话号码和电子邮件地址，如下图所示：
- en: '![What is a Directory?](img/1021_01_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![什么是目录?](img/1021_01_01.jpg)'
- en: A rock sample might have an identification number, information about its geographical
    origin, and a hardness classification.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一块岩石样本可能有一个编号、关于其地理来源的信息以及一个硬度分类。
- en: LDAP makes it possible to define what a person's entry would look like, and
    what a rock's entry would look like. Its general architecture provides the capabilities
    needed for managing large amounts of diverse directory entries.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP使得定义一个人条目的样子和一块岩石条目的样子成为可能。它的通用架构提供了管理大量不同目录条目所需的能力。
- en: In the remainder of this section we will examine how information in an LDAP
    directory is structured. We will start by looking at the idea of a **directory
    entry**, with a **distinguished name** and **attributes**. Then, we will look
    at how entries are organized within the **directory information tree**. By the
    end of this section, you should understand the basic structure of information
    within an LDAP directory.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节的其余部分，我们将探讨LDAP目录中的信息是如何结构化的。我们将从了解**目录条目**的概念开始，接着是**区分名称**和**属性**。然后，我们将研究条目如何在**目录信息树**中进行组织。在本节结束时，你应该理解LDAP目录中信息的基本结构。
- en: The Structure of a Directory Entry
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目录条目的结构
- en: 'Let''s continue with our comparison of a directory server and a phone book.
    A phone book contains a very specific type of information, organized in a very
    specific way, and designed to fulfil a very specific purpose. Here''s an example
    phone book entry:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续比较目录服务器和电话簿。电话簿包含一种非常特定类型的信息，以非常特定的方式组织，并且设计的目的是为了实现非常特定的功能。以下是一个电话簿条目的示例：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As mentioned earlier, this sort of directory has specific information, organized
    in a specific way, designed to fulfill a specific purpose: it is information about
    how to contact a specific organization (Acme Services) organized in a familiar
    pattern (address and phone number). And it is designed so that a person, having
    a particular name in mind, can quickly scan through the directory (which is ordered
    alphabetically by organization name), and find the desired contact information.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，这种目录具有特定的信息，以特定的方式组织，旨在实现特定的目的：它是关于如何联系特定组织（Acme Services）的信息，按照一种熟悉的模式（地址和电话号码）组织。它的设计目的是使人们在心中有一个特定名称时，能够快速扫描目录（按组织名称字母顺序排列），并找到所需的联系信息。
- en: 'But there are a few things to note about the phone book entry:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 但关于电话簿条目，有几个值得注意的地方：
- en: 'The data is arranged for searching by only one value: the name of the organization.
    If you should happen to have the phone number of the organization, but not the
    name, searching the phone book for the matching telephone number in order to ascertain
    the name would be a taxing, and probably futile task.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据的排列方式仅供按一个值进行搜索：组织的名称。如果你手头有某个组织的电话号码，但没有该名称，在电话簿中查找匹配的电话号码以确定名称将是一项费力的、很可能无效的任务。
- en: 'The format of the entry is sparse, and requires that the reader will be able
    to recognize the format and supply auxiliary information required for making sense
    of the data. One accustomed to reading phone book entries will be able to extrapolate
    from the previous entry, and identify the information this way:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该条目的格式较为简洁，要求读者能够识别格式，并提供解释数据所需的辅助信息。习惯于阅读电话簿条目的人能够根据前一个条目推断，并以此方式识别信息：
- en: '[PRE1]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this example, the meaning of the information is made more explicit. Each
    value is preceded by a name that identifies the type of information given. Acme
    Services is now identified as the name of an organization. Information is also
    broken up into smaller chunks (city and state on separate lines), and some information
    which was implicit in the previous entry (such as the country) has been made explicit.
    And where two pieces of information (the two phone numbers) were initially compressed
    onto one line, they have now been separated, making the information more explicit.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，信息的含义变得更加明确。每个值前都有一个标识给定信息类型的名称。Acme Services现在被识别为一个组织的名称。信息也被分解成更小的部分（城市和州分成不同的行），并且在之前隐含的部分（例如国家）现在变得显式。而且，之前将两个信息项（两个电话号码）压缩到一行中的部分，现在已经被分开，使信息更加明确。
- en: This form of entry is closer to the way a record would look in an LDAP directory.
    But there is still another issue to address. How can we distinguish between two
    very similar records?
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这种条目形式更接近于LDAP目录中记录的方式。但仍然存在另一个问题需要解决。我们如何区分两个非常相似的记录？
- en: For example, say we have a telephone directory for the entire state of Illinois.
    And in Illinois, we have a company called Acme Services located in the city of
    Chicago, and another company named Acme Services located in the city of Springfield.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们有一个涵盖整个伊利诺伊州的电话目录。在伊利诺伊州，有一家名为Acme Services的公司位于芝加哥市，另有一家名为Acme Services的公司位于斯普林菲尔德市。
- en: Simply knowing the company name alone is not sufficient information to isolate
    just one entry in the phone book. To do that, we would need some sort of unique
    name—a name that exists only once in the entire directory, and which can be used
    to refer to *one specific entry*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 仅知道公司名称是不足以从电话簿中筛选出唯一条目的信息。为了做到这一点，我们需要某种唯一名称——一个在整个目录中仅出现一次的名称，可以用来指代*一个特定的条目*。
- en: 'A Unique Name: The DN'
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 唯一名称：DN
- en: One way of distinguishing between two very similar records is to create a unique
    name for each record in the directory. This is the strategy adopted by LDAP; each
    record in the directory has a **distinguished name**. The distinguished name is
    an important LDAP term; usually it is abbreviated as **DN**.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 区分两个非常相似的记录的一种方式是为每个目录中的记录创建一个唯一名称。这是LDAP采用的策略；目录中的每个记录都有一个**区分名称**。区分名称是一个重要的LDAP术语，通常缩写为**DN**。
- en: In an LDAP directory, the directory designer is the one who decides what components
    will make up a DN, but typically the DN reflects where the record is in the directory
    (a concept we will examine in the next part), as well as some information that
    distinguishes this record from other near records.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在LDAP目录中，目录设计者决定组成DN的组件，但通常，DN反映了记录在目录中的位置（这是我们将在下一部分中探讨的概念），以及一些区分该记录与其他相近记录的信息。
- en: 'A DN then, is composed of a combination of directory information, and looks
    something like this:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，DN由目录信息的组合组成，类似于以下内容：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This single identifier is sufficient to pick it out from the Springfield company
    by the same name. The DN of the Springfield company named Acme Services would,
    according to the previous scheme, look something like this:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个单一标识符足以将其与同名的Springfield公司区分开来。根据之前的方案，名为Acme Services的Springfield公司DN可能类似于以下内容：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As may be evident from this example, when defining what fields will compose
    a DN, it is necessary to make sure that these fields will be fine-grained enough
    to distinguish between two different entries. In other words, all it takes to
    break the DN syntax is for another Acme Services to appear in Chicago.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个例子中可以明显看出，在定义组成DN的字段时，必须确保这些字段足够精细，以区分两个不同的条目。换句话说，要打破DN语法，只需要在芝加哥出现另一个Acme
    Services。
- en: Tip
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**DNs are not case sensitive**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**DN不是区分大小写的**'
- en: Some parts of LDAP records are case sensitive, and others are not. DNs, for
    example, are not case sensitive.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP记录的某些部分是区分大小写的，而其他部分则不是。例如，DN是区分大小写的。
- en: The DN is one important element in an LDAP entry. Next, we will take a closer
    look at the idea of an LDAP entry, and the components that make up an entry.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: DN是LDAP条目中的一个重要元素。接下来，我们将更详细地探讨LDAP条目的概念，以及构成条目的组件。
- en: An Example LDAP Entry
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个示例LDAP条目
- en: Let's take a specific look at what an **LDAP entry** looks like.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们具体看看一个**LDAP条目**是什么样子的。
- en: 'An LDAP **entry**, or **record**, is the directory unit that stores information
    about an individual item in the directory. Again, drawing on ideas found in other
    directories is useful: an entry in a telephone directory describes a specific
    unit of information in that directory. Likewise, a record in an LDAP directory
    contains information about a specific unit, though (since LDAP is generic) the
    exact target of that unit is unspecified. It might be a person, or a company,
    or a rock, or some virtual entity like a Java object.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一个LDAP**条目**，或**记录**，是存储有关目录中个体项信息的目录单元。再次借用在其他目录中找到的思想：电话簿中的条目描述该目录中特定的一个信息单元。同样，LDAP目录中的记录包含有关特定单元的信息，尽管（由于LDAP是通用的）该单元的确切目标并未明确规定。它可能是一个人，或者一家公司，或者一块石头，或者像Java对象这样的虚拟实体。
- en: Note
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Originally, the LDAP specification stated that an entry had to have a correlate
    in the real world. While this may have been the intention of early directory server
    developers, there is no reason why, in practice, a directory server entry must
    correlate with anything external to the directory—real or virtual.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，LDAP规范规定条目必须与现实世界中的某个事物相关联。虽然这可能是早期目录服务器开发者的初衷，但实际上并没有理由要求目录服务器条目必须与目录外部的任何事物（无论是现实的还是虚拟的）相关联。
- en: 'An entry is composed of a DN and one or more **attributes**. The DN serves
    as a unique identifier within an LDAP directory information tree. Attributes provide
    information about that entry. Let''s convert our previous telephone directory
    entry into an LDAP record:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一个条目由DN和一个或多个**属性**组成。DN作为LDAP目录信息树中的唯一标识符。属性提供关于该条目的信息。让我们将之前的电话目录条目转换为LDAP记录：
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The first line is the DN. All other lines in this record represent attributes.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行是DN。此记录中的其他所有行表示属性。
- en: Note that the main difference between this example and the previous telephone
    directory examples we have examined is the names of each field in the entry; these
    are now compacted into a form that the directory can easily interpret.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这个例子与我们之前检查的电话簿示例的主要区别在于条目中每个字段的名称；这些名称现在已经压缩成一种目录可以轻松解析的形式。
- en: Tip
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: These attribute names, like `o` and `postalAddress`, refer to well-defined attribute
    definitions contained in an LDAP schema. They cannot be "invented" on the fly,
    or made up as you go. Creating new attributes requires writing a schema. Schemas
    are covered in Chapter 6 of this book.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这些属性名称，如`o`和`postalAddress`，指的是在LDAP模式中定义良好的属性定义。它们不能在运行时“发明”或“随意编造”。创建新属性需要编写模式。模式在本书第6章中进行讲解。
- en: 'An attribute describes a specific type of information. There are eight attributes
    here in our example, representing the following:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一个属性描述了一种特定类型的信息。在我们的示例中，有八个属性，分别代表以下内容：
- en: Organization Name (`o`)
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 组织名称（`o`）
- en: Mailing address (`postalAddress`)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 邮寄地址（`postalAddress`）
- en: Locality (`l`), which may be the name of a city, town, village, and so forth
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本地性（`l`），可以是城市、镇、村庄等名称
- en: State or Province (`st`)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 州或省（`st`）
- en: Postal Code or ZIP Code (`postalCode`)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 邮政编码或ZIP代码（`postalCode`）
- en: Country (`c`)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 国家（`c`）
- en: Telephone Number (`telephoneNumber`)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 电话号码（`telephoneNumber`）
- en: Object Class (`objectclass`), which specifies what type (or types) of record
    this entry is
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对象类（`objectclass`），指定此条目是何种类型（或多种类型）的记录
- en: An attribute may have one or more attribute names, where these names are synonyms.
    For example `c` and `countryName` are both names for the attribute type that identify
    a country. Both identify the same information, and LDAP will treat the two names
    as describing the same type of information.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一个属性可以有一个或多个属性名称，这些名称是同义词。例如，`c`和`countryName`都是用来标识国家的属性类型的名称。两者标识相同的信息，LDAP会将这两个名称视为描述相同类型的信息。
- en: In any given record, an attribute may have one or more values (assuming the
    attribute's definition allows more than one value). The record above has only
    one attribute that contains more than one value. The `telephoneNumber` attribute
    has two values, each representing a different phone number.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何给定记录中，一个属性可以有一个或多个值（前提是该属性的定义允许多个值）。上面的记录只有一个属性包含多个值。`telephoneNumber`属性有两个值，每个值代表一个不同的电话号码。
- en: Attributes are defined in *attribute definitions*, which will be discussed at
    length in Chapter 6\. These definitions provide information about the syntax and
    length of the information stored in values, all of the attribute names that apply
    to that attribute, whether or not the attribute can have multiple values, and
    so on. Records stored in LDAP directories must adhere to the attribute definitions.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 属性在*属性定义*中定义，后者将在第6章详细讨论。这些定义提供了关于存储在值中的信息的语法和长度的相关信息，所有适用的属性名称，属性是否可以有多个值等等。存储在LDAP目录中的记录必须遵循这些属性定义。
- en: 'For example, the attribute definition for a country name gives the following
    information:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，国家名称的属性定义给出以下信息：
- en: The names `c` and `countryName` can refer to this object. The default name is
    `c`.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称`c`和`countryName`可以引用此对象。默认名称为`c`。
- en: A country name is stored as a string.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 国家名称作为字符串存储。
- en: When doing matches on the attribute values, case can be ignored.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在进行属性值匹配时，可以忽略大小写。
- en: Matching can be done on either the entire string (for example `Canada`) or using
    substrings (`Ca*`).
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 匹配可以在整个字符串上进行（例如`Canada`），或者使用子字符串（`Ca*`）。
- en: A country name cannot be longer than 32768 characters.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个国家名称不能超过32768个字符。
- en: Only one country name is allowed per record.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个记录只允许有一个国家名称。
- en: All of this information is packed into a compact schema definition that the
    directory server reads when it starts.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些信息被打包成一个紧凑的模式定义，目录服务器在启动时读取该定义。
- en: Attribute names are not case sensitive. The attribute name `o` is treated as
    synonymous with the name `O`. Likewise, `GivenName`, `givenname`, and `givenName`
    are all evaluated as the same attribute name.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 属性名称不区分大小写。属性名称`o`与`O`被视为同义词。同样，`GivenName`、`givenname`和`givenName`都被评估为相同的属性名称。
- en: As for the values of attributes, case sensitivity depends on the attribute definition.
    For example, the values of DNs and `objectclass` attributes are *not* case sensitive,
    but a URI (`labeledURI`) attribute value *is* case sensitive.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 至于属性的值，大小写敏感性取决于属性定义。例如，DN 和 `objectclass` 属性的值是*不*区分大小写的，但 URI（`labeledURI`）属性值是区分大小写的。
- en: The Object Class Attribute
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对象类属性
- en: The last attribute in the given record is the `objectclass` attribute. This
    is a special attribute that provides information about what type of record (or
    entry) this is.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 给定记录中的最后一个属性是 `objectclass` 属性。这是一个特殊属性，提供关于该记录（或条目）类型的信息。
- en: An object class determines what attributes may be given to a record. The object
    class, `organization`, indicates that this record describes an organization. According
    to this object class's definition, an `organization` record can contain a locality
    (`l`), and a postal code (`postalCode`), and all of the other attributes present
    in the record.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 对象类决定了可以为记录赋予哪些属性。`organization` 对象类表示该记录描述的是一个组织。根据该对象类的定义，一个 `organization`
    记录可以包含地点（`l`）和邮政编码（`postalCode`），以及记录中存在的所有其他属性。
- en: One of the fields, the organization name (`o`), is required for any entry with
    an `organization` object class.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个字段，组织名称（`o`），是任何具有 `organization` 对象类的条目所必需的。
- en: The object class also allows several other attributes that are not present in
    our record, like `description` and `facsimileTelephoneNumber`.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 对象类还允许多个其他属性，这些属性在我们的记录中不存在，如 `description` 和 `facsimileTelephoneNumber`。
- en: Given the object class attribute, which is required for any entry, the directory
    can determine what attributes must, can, and cannot be present in the entry.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 给定对象类属性（这是每个条目都必需的），目录可以确定该条目中必须、可以或不能存在的属性。
- en: As with other attributes, the `objectclass` attribute may have multiple values,
    though which values may be given are subject to the **object class definition**
    and **schema definition**—the rules about what attributes belong to what object
    classes, and how these object classes can be combined.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他属性一样，`objectclass` 属性可以有多个值，尽管哪些值可以给定受 **对象类定义** 和 **架构定义** 的约束——即有关哪些属性属于哪些对象类，以及如何组合这些对象类的规则。
- en: Note
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: An **LDAP Schema** consists of rules that define the types of records in a directory,
    and how those records might relate to each other. The main two items stored in
    a schema (though there are others) are attribute type definitions and object class
    definitions. Chapter 6 of this book is devoted to schemas.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**LDAP 架构** 由定义目录中记录类型的规则组成，以及这些记录如何彼此关联。架构中存储的主要两项内容（尽管还有其他内容）是属性类型定义和对象类定义。本书第六章专门讨论架构。'
- en: While a record may have multiple object classes, one of these object classes
    must be the **structural object class** for the record. A structural object class
    determines what type of object the record is. We will talk about structural object
    classes later in the book.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然一个记录可能有多个对象类，但其中一个对象类必须是该记录的 **结构对象类**。结构对象类决定了该记录是何种类型的对象。我们将在本书后面讨论结构对象类。
- en: The LDAP record then, is composed of a single DN, and one or more attributes
    (remember, `objectclass` is required). The attributes contain information about
    the entity that is identified by the DN.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP 记录由一个单一的 DN 和一个或多个属性组成（记住，`objectclass` 是必需的）。这些属性包含关于由 DN 标识的实体的信息。
- en: An LDAP directory contains an aggregation of entries, arranged in one or more
    hierarchies in a tree structure.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 LDAP 目录包含多个条目的集合，这些条目按树形结构在一个或多个层次中排列。
- en: Operational Attributes
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作性属性
- en: In addition to regular attributes, the directory server may also attach special
    **operational attributes** to an entry. Operational attributes are used by the
    directory server itself to store information about entries. Such attributes are
    not designed for use by end users (though on occasion they can be useful), and
    are usually not returned during LDAP searches.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 除了常规属性外，目录服务器还可能会将特殊的 **操作性属性** 附加到条目上。操作性属性由目录服务器本身使用，用于存储关于条目的信息。这些属性不是为最终用户设计的（尽管偶尔它们可能会有用），通常在
    LDAP 查询中不会返回。
- en: At various points in this book, we will make use of operational attributes.
    But most of the time, when we talk about attributes, we are talking about regular
    attributes.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的多个部分，我们将使用操作性属性。但大多数时候，当我们讨论属性时，我们指的是常规属性。
- en: The Directory Information Tree
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目录信息树
- en: So far, we have been comparing an LDAP directory to an address book or a telephone
    directory. But now I am going to introduce one of the primary differences between
    the structure of the data in an LDAP directory server, and that of many other
    forms of directories.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在将 LDAP 目录与地址簿或电话簿进行比较。但现在，我将介绍 LDAP 目录服务器中数据结构与许多其他类型目录之间的主要区别之一。
- en: The information in a telephone directory is typically stored in one long alphabetical
    list. But in an LDAP directory the organizational structure is more sophisticated.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 电话簿中的信息通常以一长串字母顺序排列。但在 LDAP 目录中，组织结构更加复杂。
- en: Information in an LDAP directory is organized into one or more hierarchies where,
    at the top of the hierarchy, there is a **base entry**, and other entries are
    organized in tree-like structures beneath the base entry. Each node on the hierarchy
    is an entry, with a DN and more than one attributes.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP 目录中的信息被组织成一个或多个层级结构，其中层级结构的顶部是**基条目**，其他条目则以树状结构组织在基条目下。层级中的每个节点都是一个条目，具有
    DN 和多个属性。
- en: This hierarchically organized collection of entries is called a **directory
    information tree**, sometimes referred to simply as a directory tree or **DIT**.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这种层级组织的条目集合称为**目录信息树**，有时简称为目录树或**DIT**。
- en: To understand this method of organizing information, consider the organizational
    chart of a company.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解这种组织信息的方法，可以参考公司的组织结构图。
- en: 'The top of the hierarchy is the company itself. Beneath this, there are a number
    of departments and organizational units, and beneath these are the employees,
    contractors, and other individuals with a formal affiliation to the company. We
    can draw this as a hierarchy:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 层级结构的顶端是公司本身。在其下，有多个部门和组织单元，而在这些部门和组织单元下，则是员工、承包商以及其他与公司有正式关系的个人。我们可以将其绘制成一个层级结构：
- en: '![The Directory Information Tree](img/1021_01_02.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![目录信息树](img/1021_01_02.jpg)'
- en: LDAP directories store data in hierarchical relationships, too. At the top of
    the directory information tree is the root entry. Beneath that is a **subordinate
    entry**, which, in turn, may have its own subordinate entries. Each of these records
    has its own DN, and its own attributes.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP 目录也以层级关系存储数据。目录信息树的顶部是根条目。其下是一个**从属条目**，它本身可能还有自己的从属条目。每个记录都有自己的 DN 和属性。
- en: Tip
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**A File System Analogy**'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件系统类比**'
- en: 'Most modern file systems represent data in hierarchies too. For example, the
    directory `/home` may have multiple subdirectories: `/home/mbutcher`, `/home/ikant`,
    `/home/dhume`. We can say that `/home` has three subordinates, but that each of
    those has one superior (the `/home` directory). When thinking about LDAP directory
    trees, it may help to compare them to the layout of a file system.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现代文件系统也以层级方式表示数据。例如，目录 `/home` 可能有多个子目录：`/home/mbutcher`、`/home/ikant`、`/home/dhume`。我们可以说
    `/home` 有三个从属项，但每个从属项都有一个上级（即 `/home` 目录）。在思考 LDAP 目录树时，将其与文件系统的布局进行比较可能会有所帮助。
- en: 'Adapting this to the previous example, we could easily create an LDAP directory
    information tree that represented the organizational chart:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 将其与前面的示例结合，我们可以轻松地创建一个表示组织结构图的 LDAP 目录信息树：
- en: '![The Directory Information Tree](img/1021_01_03.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![目录信息树](img/1021_01_03.jpg)'
- en: 'Note that the DN of each entry contains information about its **superior entry**
    (the record above it). In fact, a DN is composed of two parts: the first part
    is the **relative DN** (**RDN**), and contains one or more attributes from the
    entry. The second part is the *full* DN of the superior entry. We will look at
    this relationship further in Chapter 3.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，每个条目的 DN 包含有关其**上级条目**（其上面的记录）的信息。实际上，DN 由两部分组成：第一部分是**相对 DN**（**RDN**），它包含条目中的一个或多个属性。第二部分是上级条目的*完整*
    DN。我们将在第 3 章进一步讨论这种关系。
- en: When we create our directory in the next few chapters, we will create a tree-like
    structure of records.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几章中，我们将创建目录时，会创建一个类似树形结构的记录集合。
- en: You should now have a basic idea of how a directory is represented in a directory
    information tree. Records, consisting of a DN and some attributes, are organized
    in a hierarchy. At the top of the hierarchy is the base entry, and beneath that
    entries are organized into branches.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该对如何在目录信息树中表示目录有了基本的了解。由 DN 和一些属性组成的记录被组织成一个层级结构。层级结构的顶部是基条目，其下的条目被组织成树枝。
- en: What to Do with an LDAP Server
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 LDAP 服务器时需要做什么
- en: I've given a description of what an LDAP directory is, but it is also helpful
    to look at what an LDAP directory is used for. What is the function of an LDAP
    server? What problem is it intended to solve?
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经描述了 LDAP 目录是什么，但同样有帮助的是了解 LDAP 目录的用途。LDAP 服务器的功能是什么？它要解决什么问题？
- en: The first, and most obvious, answer is that LDAP is designed to provide a digital
    directory—an online presentation equivalent to a telephone directory or address
    book. Of course, there is some truth to this, and LDAP servers can indeed be used
    in this way. But so can relational databases and even more basic data structures.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个，也是最明显的答案是，LDAP 旨在提供一个数字目录——一个在线展示，相当于电话簿或地址簿。当然，这其中确实有一些真实性，LDAP 服务器确实可以这样使用。但关系型数据库甚至更基本的数据结构也可以做到这一点。
- en: We could expand on this answer, and point out that LDAP provides a robust layer
    of services—searching with complex filters, representing complex entities with
    attributes, allowing fine-grained access to data, and so on—that provide sophisticated
    directory services.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在这个答案上做进一步扩展，指出 LDAP 提供了强大的服务层——使用复杂的过滤器进行搜索、通过属性表示复杂实体、允许对数据进行精细的访问控制等等——这些都提供了复杂的目录服务。
- en: A more classical explanation, one rooted in the historical development of LDAP
    out of the X.500 directory, would be that LDAP is designed to represent organizations,
    including their structure, their physical assets, and their personnel. LDAP, by
    this account, isn't so much a fancy telephone directory as it is an enterprise
    management tool. In fact, this is one of the more common ways to use LDAP directories.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更经典的解释，源于 LDAP 从 X.500 目录演变而来的历史背景，是，LDAP 被设计用于表示组织，包括其结构、物理资产和人员。从这个角度来看，LDAP
    不仅仅是一个花哨的电话簿，它更像是一个企业管理工具。事实上，这也是使用 LDAP 目录的常见方式之一。
- en: The most common use of an LDAP, a use based on a conception of LDAP as a narrow
    type of enterprise management tool, is as a central authority on network users,
    groups, and accounts. An LDAP directory stores information on each user account
    for the network—information like username, password, full name, and email address.
    Other services on the network, from workstations to email servers to web applications,
    can use LDAP as an authoritative source of user information. Applications can
    authenticate users against the directory. A single user account can be shared
    across multiple (perhaps all) enterprise applications.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP 最常见的用途，基于将 LDAP 视为一种狭义的企业管理工具的理解，是作为网络用户、组和账户的中央权威。一个 LDAP 目录存储着网络中每个用户账户的信息——如用户名、密码、全名和电子邮件地址等。网络上的其他服务，从工作站到电子邮件服务器再到
    web 应用程序，都可以将 LDAP 作为用户信息的权威来源。应用程序可以通过目录对用户进行身份验证。一个用户账户可以在多个（甚至是所有）企业应用程序之间共享。
- en: Finally, there is a more generic, or abstract, view of the function of LDAP
    services. LDAP is nothing other than a special sort of database that organizes
    data into tree structures, like a file system hierarchy. This view is more easily
    seen by comparing an LDAP directory to a relational database (RDB) system.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有一种更通用或抽象的看法，关于 LDAP 服务的功能。LDAP 其实就是一种特殊的数据库，它将数据组织成树状结构，类似于文件系统层级。这种看法通过将
    LDAP 目录与关系型数据库（RDB）系统进行对比更容易理解。
- en: 'Relational databases store information in tables, and tables are composed of
    records. Relationships, in RDBs, are established between records in different
    tables, and there are numerous forms of relationship: one to many, one to one,
    many to one, and so on. RDBs support reading and writing operations on data, typically
    implemented through some version of SQL (Standard Query Language), and they typically
    listen on network connections, making data available to other applications on
    the network.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 关系型数据库将信息存储在表格中，而表格由记录组成。在关系型数据库（RDB）中，表与表之间的关系是通过不同表中的记录建立的，关系有多种形式：一对多、一对一、多对一，等等。关系型数据库支持对数据进行读写操作，通常通过某个版本的
    SQL（标准查询语言）来实现，并且它们通常监听网络连接，使得网络上的其他应用程序能够访问数据。
- en: Compared to an RDB, LDAP can also be seen as a storage system. Rather than presenting
    data in tabular structures, though, LDAP stores entries in a hierarchy (like a
    file system). The basic relationships in an LDAP consist of the superior-to-subordinate
    relation (one to many), and the subordinate-to-superior relation (one-to-one),
    though other relationships can be used.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 与 RDB 相比，LDAP 也可以看作是一个存储系统。然而，与以表格结构展示数据的 RDB 不同，LDAP 以层级结构（像文件系统一样）存储条目。LDAP
    中的基本关系包括优先到从属关系（一对多）和从属到优先关系（一对一），虽然也可以使用其他关系。
- en: Tip
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Other Relationships in LDAP**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**LDAP 中的其他关系**'
- en: While the superior/subordinate relationships are the most commonly used, they
    are not the only ones supported. Relationships among arbitrary entries within
    the database are often modeled by linking DNs together using attributes. We will
    examine this use in detail when talking about groups in Chapter 4.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然优先/从属关系是最常用的，但它们并不是唯一被支持的关系。数据库中任意条目之间的关系通常通过使用属性将 DNs 链接在一起来建模。当我们在第 4 章讨论组时，我们将详细研究这种用法。
- en: Reading and writing to the database are supported through LDAP operations with
    sophisticated filters and data structures like **LDIF** (**LDAP Data Interchange
    Format**). And LDAP directories, like their RDB counterparts, often listen on
    network sockets to provide services to other applications.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 LDAP 操作，支持使用复杂的过滤器和数据结构（如 **LDIF**（**LDAP 数据交换格式**））对数据库进行读写。而且，像 RDB 服务器一样，LDAP
    目录通常会监听网络套接字，以向其他应用程序提供服务。
- en: I have suggested some different views of the purpose of LDAP. Is any one of
    these the *correct* answer? No. Each of these uses of LDAP is legitimate, and
    LDAP directories can be used to address a broad range of problems.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经提出了 LDAP 目的的不同视角。这些中是否有一个是*正确*的答案？没有。每种 LDAP 的使用方式都是合法的，LDAP 目录可以用来解决各种各样的问题。
- en: The History of LDAP and OpenLDAP
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LDAP 和 OpenLDAP 的历史
- en: At first glance, the term LDAP seems misleading. When we talk, for instance,
    about the primary protocol for the web, HTTP (HyperText Transfer Protocol), we
    are talking about the way that web applications transfer information across the
    network. We are not talking about the format of the data that is moved across
    the network, nor are we talking about how that data is stored on or retrieved
    from the server.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 初看之下，LDAP 这个术语似乎有些误导。例如，当我们谈论 Web 的主要协议 HTTP（超文本传输协议）时，我们是指 Web 应用程序如何通过网络传输信息。我们并不是在谈论跨网络传输的数据的格式，也不是在谈论这些数据如何存储在服务器上或从服务器中检索。
- en: But when we talk about LDAP, we are usually talking not only about the network
    protocol, but about a particular kind of server that stores data of a well-defined
    format inside of a special database. There is a historical reason for this seemingly
    misleading name.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 但当我们谈论 LDAP 时，通常不仅仅是指网络协议，还指一种特定类型的服务器，它将格式明确的数据存储在一个特殊的数据库中。这种看似误导的名称背后有一个历史原因。
- en: Originally, LDAP was just a network protocol used to get data out of an X.500
    directory (a directory server architecture, designed in the 1980s and standardized
    in 1988). This was the intent of Yeong, Howes, and Killie when they initially
    drafted the LDAP specification as RFC 1487 in 1993.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，LDAP 只是一个网络协议，用于从 X.500 目录（一个在 1980 年代设计并于 1988 年标准化的目录服务器架构）中获取数据。这是 Yeong、Howes
    和 Killie 在 1993 年最初起草 LDAP 规范 RFC 1487 时的初衷。
- en: Tip
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**About RFCs**'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于 RFC**'
- en: RFCs (Requests for Comments) are a series of technical documents, usually specifying
    standards. Each RFC is identified by number, which are organized sequentially—earlier
    RFCs have lower numbers. There are many websites that make the RFC database, in
    whole or in part, available. One exemplary source is the RFC Editor ([http://www.rfc-editor.org](http://www.rfc-editor.org)),
    which is used in this book.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: RFC（请求评论）是一系列技术文档，通常用于指定标准。每个 RFC 都有一个编号，按顺序排列——较早的 RFC 编号较低。有许多网站提供 RFC 数据库的完整或部分内容，其中一个示例来源是
    RFC 编辑器（[http://www.rfc-editor.org](http://www.rfc-editor.org)），本书中也使用了该网站。
- en: The first LDAP servers were gateways to X.500 directories, but these servers
    quickly evolved into full-fledged directory servers. Tim Howes and his colleagues
    at the University of Michigan created the Open Source *University of Michigan
    LDAP Implementation*, which became the reference implementation for other LDAP
    servers.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 最早的 LDAP 服务器是 X.500 目录的网关，但这些服务器很快发展成了完整的目录服务器。Tim Howes 和他在密歇根大学的同事们创建了开源的*密歇根大学
    LDAP 实现*，该实现成为其他 LDAP 服务器的参考实现。
- en: Note
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Historical information on the University of Michigan LDAP project is still
    available online: [http://www.umich.edu/~dirsvcs/ldap/ldap.html](http://www.umich.edu/~dirsvcs/ldap/ldap.html)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 密歇根大学 LDAP 项目的历史信息仍然可以在线获取：[http://www.umich.edu/~dirsvcs/ldap/ldap.html](http://www.umich.edu/~dirsvcs/ldap/ldap.html)
- en: As the University of Michigan's LDAP server matured, a wealth of new standards
    was created. LDAP picked up industry momentum. Tim Howes was hired by Netscape,
    and LDAP went mainstream.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 随着密歇根大学的 LDAP 服务器的成熟，涌现了大量新的标准。LDAP 在业界逐渐获得势头。Tim Howes 被 Netscape 雇佣，LDAP 逐渐走向主流。
- en: By the late 1990's, Netscape, Novell, Oracle, and Microsoft (among others) all
    touted LDAP offerings. RFC 2251, released in 1997, standardized LDAPv3, which
    made vast improvements to the earlier LDAP standards.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 到 1990 年代末，Netscape、Novell、Oracle 和 Microsoft（等公司）都推出了 LDAP 产品。1997 年发布的 RFC
    2251 标准化了 LDAPv3，并对早期的 LDAP 标准做出了重大改进。
- en: The market for LDAP servers matured, but the University of Michigan project
    lost momentum. Key developers had left the university to move along to other projects.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP 服务器市场逐渐成熟，但密歇根大学项目失去了动力。主要开发人员离开了大学，转向其他项目。
- en: In 1998 the OpenLDAP project was started by Kurt Zeilenga. Soon after, Howard
    Chu (formerly of the University of Michigan, and the current architect of the
    project) joined. They rescued the University of Michigan's code base, beginning
    development anew. The result, OpenLDAP 2.0, was highly successful, and made its
    way into almost every major Linux distribution.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 1998 年，OpenLDAP 项目由 Kurt Zeilenga 启动。不久后，Howard Chu（曾任密歇根大学职员，现为该项目的架构师）加入。他们挽救了密歇根大学的代码库，并重新开始开发。最终，OpenLDAP
    2.0 取得了巨大成功，并进入了几乎所有主要的 Linux 发行版。
- en: Note
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A complete list of OpenLDAP contributors, from the project's inception to the
    present, can be found at [http://www.openldap.org/project/](http://www.openldap.org/project/).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: OpenLDAP 贡献者的完整名单，从项目开始到现在，可以在 [http://www.openldap.org/project/](http://www.openldap.org/project/)
    找到。
- en: Since the late '90's, OpenLDAP has continued to mature, overseen by the OpenLDAP
    Foundation, and supported by contributions from industry sponsors. As of this
    writing, version 2.3 is the stable release, and version 2.4 is in the beta stages.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 自90年代末以来，OpenLDAP 在 OpenLDAP 基金会的监督下不断成熟，并得到行业赞助商的贡献支持。截止目前，版本 2.3 是稳定版，版本 2.4
    正处于测试阶段。
- en: As was the intent with the University of Michigan LDAP server, OpenLDAP still
    adheres closely to the LDAP standards. In fact, Kurt Zeilenga is responsible for
    many of the updates made to the LDAP standards in June 2006.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 正如密歇根大学 LDAP 服务器的初衷一样，OpenLDAP 仍然严格遵循 LDAP 标准。事实上，Kurt Zeilenga 对 2006 年 6 月
    LDAP 标准的多次更新负有重要责任。
- en: But in addition to its high degree of standards compliance, OpenLDAP is also
    one of the fastest directory servers in the market, far outpacing offerings from
    other Open Source directory server implementations.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 除了高度符合标准外，OpenLDAP 还是市场上最快的目录服务器之一，远远超越了其他开源目录服务器实现的产品。
- en: A Technical Overview of OpenLDAP
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenLDAP 技术概览
- en: This book is a practically oriented technical book. It is designed to help you
    get OpenLDAP up and running, and to help you integrate LDAP into your own applications.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是一本面向实践的技术书籍，旨在帮助您快速搭建并运行 OpenLDAP，并帮助您将 LDAP 集成到自己的应用程序中。
- en: We will now begin this transition from the high-level material presented earlier
    to a more practical examination of the OpenLDAP suite of packages. First, let's
    take a brief look at the technical structure of OpenLDAP.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将开始从前面介绍的高层次内容转向对 OpenLDAP 套件的更实际的检视。首先，让我们简要看一下 OpenLDAP 的技术结构。
- en: 'The OpenLDAP suite can be broken up into four components:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: OpenLDAP 套件可以分为四个组件：
- en: 'Servers: Provide LDAP services'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器：提供 LDAP 服务
- en: 'Clients: Manipulate LDAP data'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端：操作 LDAP 数据
- en: 'Utilities: Support LDAP servers'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具：支持 LDAP 服务器
- en: 'Libraries: provide programming interfaces to LDAP'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 库：提供 LDAP 的编程接口
- en: 'In the course of this book, we will look at all four of these categories. Here,
    we will just get an overview:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将查看这四个类别。此处，我们只做概述：
- en: '![A Technical Overview of OpenLDAP](img/1021_01_04.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![OpenLDAP 技术概览](img/1021_01_04.jpg)'
- en: This diagram explains how these four elements relate to each other.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 该图表解释了这四个元素之间的关系。
- en: The Server
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务器
- en: The main server in the LDAP suite is **SLAPD** (the **Stand-Alone LDAP Daemon**).
    This server provides access to one or more directory information trees. Clients
    connect to the server over the LDAP protocol, usually using a network-based connection
    (though SLAPD provides a UNIX socket listener, too).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP套件中的主要服务器是**SLAPD**（**独立LDAP守护进程**）。该服务器提供对一个或多个目录信息树的访问。客户端通过LDAP协议连接到服务器，通常使用基于网络的连接（尽管SLAPD也提供了一个UNIX套接字监听器）。
- en: A server can store directory data locally, or simply access (or proxy access)
    to external sources. Typically, it provides authentication and searching services,
    and may also support adding, removing, and modifying directory data. It provides
    fine-grained access control to the directory.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器可以将目录数据存储在本地，或仅仅访问（或代理访问）外部资源。通常，它提供认证和搜索服务，也可能支持添加、删除和修改目录数据。它提供对目录的精细访问控制。
- en: SLAPD is a major focus of this book, and we will discuss it in detail in the
    chapters to come.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: SLAPD是本书的主要焦点，我们将在接下来的章节中详细讨论它。
- en: Clients
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 客户端
- en: Clients access LDAP servers over the LDAP network protocol. They function by
    requesting that the server performs operations on their behalf. Typically, a client
    will first connect to the directory server, then bind (authenticate), and then
    perform zero or more other operations (searches, modifications, additions, deletions,
    and so on) before finally unbinding and disconnecting.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端通过LDAP网络协议访问LDAP服务器。它们的工作方式是请求服务器代其执行操作。通常，客户端会首先连接到目录服务器，然后进行绑定（认证），接着执行零个或多个其他操作（如搜索、修改、添加、删除等），最后解除绑定并断开连接。
- en: Utilities
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实用工具
- en: Unlike clients, utilities do not perform operations using the LDAP protocol.
    Instead, they manipulate data at a lower level, and without mediation by the server.
    They are used primarily to help maintain the server.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 与客户端不同，实用工具不通过LDAP协议执行操作。相反，它们在更低的层次上操作数据，并且不通过服务器进行中介。它们主要用于帮助维护服务器。
- en: Libraries
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 库
- en: There are several OpenLDAP libraries that are shared between LDAP applications.
    The libraries provide LDAP functions to these applications. The clients, utilities,
    and servers all share access to some of these libraries.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个在LDAP应用之间共享的OpenLDAP库。这些库为这些应用提供LDAP功能。客户端、实用工具和服务器都共享对其中一些库的访问权限。
- en: Application Programming Interfaces (APIs) are provided to allow software developers
    to write their own LDAP-aware applications without having to re-write fundamental
    LDAP code.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序编程接口（APIs）用于允许软件开发人员编写自己的LDAP感知应用，而无需重写基础的LDAP代码。
- en: 'While the APIs provided with OpenLDAP are written in C, the OpenLDAP project
    also provides two Java APIs. These Java libraries are not included in the OpenLDAP
    suite, and are not covered in this book. Both however, can be retrieved from the
    OpenLDAP website: [http://openldap.org](http://openldap.org).'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然OpenLDAP提供的API是用C语言编写的，但OpenLDAP项目还提供了两个Java API。这些Java库不包含在OpenLDAP套件中，也不在本书的讨论范围内。然而，两者都可以从OpenLDAP网站上获取：[http://openldap.org](http://openldap.org)。
- en: As we move on through this book we will examine each of these components of
    the LDAP architecture in detail.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 随着本书的深入，我们将详细探讨LDAP架构的各个组成部分。
- en: Summary
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 小结
- en: In this chapter we have covered the basics of LDAP directories in general, and
    of the OpenLDAP server in particular. We have covered the history of LDAP, the
    important terminology, and some of the high-level technical aspects of OpenLDAP.
    Now we are ready to start applying this knowledge.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了LDAP目录的一般基础知识，特别是OpenLDAP服务器的基础知识。我们讨论了LDAP的历史、重要术语以及一些OpenLDAP的高层技术方面。现在我们准备开始应用这些知识。
- en: In the next chapter we will turn our attention toward the process of installing
    and configuring OpenLDAP.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将关注OpenLDAP的安装和配置过程。
