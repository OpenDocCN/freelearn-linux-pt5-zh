- en: Chapter 7. LDAP – A Better Type of User
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章：LDAP——一种更好的用户类型
- en: 'Having a local user account and password defined on each server and workstation
    for your access is not really practical. Imagine trying to enforce password changes
    when you may have to implement the change on 10 or 12 systems that you may use.
    You may also wish to consider what happens when a user leaves; do you really think
    the account will be deleted from every system each time? The reality is that where
    multiple systems are placed, some form of directory solution must be in place;
    this may be means of OpenLDAP, or even Active Directory. Yes, CentOS can join
    a Windows domain. We will look at 389-ds, the CentOS implementation of the Red
    Hat Directory Server. 389-ds is based on OpenLDAP, but with some pretty smart
    management tools. We are going to cover the following topics in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个服务器和工作站上定义本地用户账户和密码来进行访问并不是很实际。想象一下，当你可能需要在你使用的 10 或 12 个系统中实施密码更改时，要强制执行密码更改会是多么麻烦。你可能还会想考虑当用户离开时会发生什么；你真认为每次都会从每个系统中删除账户吗？现实情况是，当有多个系统时，必须有某种形式的目录解决方案；这可能是
    OpenLDAP，也可能是 Active Directory。是的，CentOS 可以加入 Windows 域。我们将探讨 389-ds，这是 CentOS
    对 Red Hat 目录服务器的实现。389-ds 基于 OpenLDAP，但有一些非常聪明的管理工具。我们将在本章中讨论以下主题：
- en: '**LDAP concepts**: In this section, you will understand terms that are used
    when talking about directory services'
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LDAP 概念**：在本节中，您将了解在谈论目录服务时使用的术语'
- en: '**Installing 389-ds**: This section involves installing the 389 Directory Server
    ensuring all the plumbing is in place'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安装 389-ds**：本节涉及安装 389 目录服务器，确保所有的基础设施就绪'
- en: '**LDAP user account management**: This section includes the management life
    cycle of users in the directory'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LDAP 用户账户管理**：本节包含目录中用户生命周期的管理'
- en: '**LDAP authentication**: This section will cover authenticating a second CentOS
    server to the shared directory'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LDAP 认证**：本节将介绍如何认证第二台 CentOS 服务器到共享目录'
- en: LDAP concepts
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LDAP 概念
- en: 'LDAP stands for Lightweight Directory Access Protocol; as the name suggests,
    it began as a client-server protocol used to access a directory, but there was
    so little development in directories that it soon took on the entire role of a
    directory server. If we break a directory down, the **Directory Access Protocol**
    (**DAP**) is just one small part of the many pieces of an LDAP server:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP 代表轻量级目录访问协议；顾名思义，它最初是一个用于访问目录的客户端-服务器协议，但由于目录发展的非常缓慢，它很快就承担了整个目录服务器的角色。如果我们分解一个目录，**目录访问协议**
    (**DAP**) 只是 LDAP 服务器众多组成部分中的一小部分：
- en: '**Directory Information Database** (**DIB**): This is the database where the
    directory is stored'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目录信息数据库** (**DIB**)：这是存储目录的数据库'
- en: '**Directory Information Tree** (**DIT**): This is the hierarchical organization
    that represents entries in the DIB, organizations, organizational units, and so
    on'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目录信息树** (**DIT**)：这是表示 DIB 中条目、组织、组织单位等的层次结构'
- en: '**Directory System Protocol** (**DSP**): This represents the server to server
    communication'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目录系统协议** (**DSP**)：它代表服务器与服务器之间的通信'
- en: '**Directory Access Protocol** (**DAP**): This represents the client-to-server
    communication'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目录访问协议** (**DAP**)：这代表客户端到服务器的通信'
- en: '**Directory Server Agent** (**DSA**): This is the server software'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目录服务器代理** (**DSA**)：这是服务器软件'
- en: '**Directory User Agent** (**DUA**): This is the client software'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目录用户代理** (**DUA**)：这是客户端软件'
- en: '**Directory Information Shadowing Protocol** (**DISP**): This is the replication
    of the directory'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目录信息影射协议** (**DISP**)：这是目录的复制'
- en: '**Schema**: These are entry data definitions'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**架构**：这些是条目数据定义'
- en: Each of these elements is represented in some way in all LDAP directories and
    common directories, including OpenLDAP, Red Hat Directory Server, and 389-ds.
    We will be looking at the 389-ds, which is based on the Red Hat Directory Server,
    which in turn is an implementation of OpenLDAP with some enhanced features. Ultimately,
    directories are used in the creation of what has commonly been dubbed as identity
    management, the central storage of user accounts to lessen the burden on account
    management, and improve security. A user is much more likely to recall a strong
    password if he/she only remembers a single credential set.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些元素在所有 LDAP 目录和常见目录中都有一定的表示方式，包括 OpenLDAP、Red Hat 目录服务器和 389-ds。我们将重点关注基于 Red
    Hat 目录服务器的 389-ds，它是 OpenLDAP 的实现，并具备一些增强功能。最终，目录被用于创建通常所说的身份管理，集中存储用户账户，以减轻账户管理的负担并提升安全性。如果用户只需记住一组凭证，那么他/她更有可能记住强密码。
- en: Installing 389-ds
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 389-ds
- en: In the following sections, we will see the steps involved in installing 389-ds.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将看到安装 389-ds 所涉及的步骤。
- en: Configuring DNS or hostname records
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 DNS 或主机名记录
- en: 'When installing OpenLDAP or 389-DS, it is imperative that you can resolve the
    hostname of the system on which you install the directory. My system is named
    `ldap1.tup.com`, and I have a local DNS record for this but it can also be maintained
    by an entry in the local `/etc/hosts` file on the host system. I can verify the
    name is correct by using the `host` command or something similar:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装 OpenLDAP 或 389-DS 时，必须确保能够解析安装目录的系统主机名。我的系统名为 `ldap1.tup.com`，我为此配置了本地 DNS
    记录，但也可以通过主机系统上的 `/etc/hosts` 文件中的条目来维护。我可以使用 `host` 命令或类似命令验证名称是否正确：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You should see the IP address being returned. You can see the result of this
    command when executed on my system in the following screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能看到返回的 IP 地址。你可以在我的系统上执行此命令时看到结果，如下截图所示：
- en: '![Configuring DNS or hostname records](img/5920OS_07_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![配置 DNS 或主机名记录](img/5920OS_07_01.jpg)'
- en: Setting TCP keepalives
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 TCP 保活
- en: 'The default timeout of TCP connections is 120 minutes. We will configure it
    for five minutes. In doing so, we will reduce the overhead caused by dropped TCP
    connections; they will be closed much more quickly. Edit the `/etc/sysctl` file
    to include the following line:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: TCP 连接的默认超时时间为 120 分钟。我们将其配置为五分钟。这样做可以减少由于丢失 TCP 连接所带来的开销；连接将更快速地关闭。编辑 `/etc/sysctl`
    文件，添加以下行：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Load the settings using `sysctl` to make them current as well as the default
    for the next reboot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `sysctl` 加载设置，使其生效并成为下次重启时的默认设置：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Setting file descriptors
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置文件描述符
- en: 'Editing the number of file descriptors on the Linux system can help a directory
    server access files more efficiently, so we will start by looking at the current
    setting:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑 Linux 系统上的文件描述符数量可以帮助目录服务器更高效地访问文件，因此我们将从查看当前设置开始：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If the value is less than 64,000, then increase the limit in the `/etc/sysctl`
    file:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果值小于 64,000，则需要在 `/etc/sysctl` 文件中增加限制：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Run the following command to read the new value we have just set, saving a
    restart:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令以读取我们刚刚设置的新值，无需重启系统：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'For this setting to be effective, we must also allow all users to be allowed
    to have enough open files. Edit the `/etc/security/limits.conf` file to include
    the following lines:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使此设置生效，我们还必须允许所有用户拥有足够的打开文件权限。编辑 `/etc/security/limits.conf` 文件，添加以下行：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This allows all users (`*`) to have a maximum of 8,192 open files (`nofiles`).
    We set both limits to the same value, but the soft limit can be exceeded with
    just a warning, while the hard limit cannot be exceeded.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许所有用户（`*`）最多有 8,192 个打开文件（`nofiles`）。我们将两者的限制设置为相同的值，但软限制可以通过警告超出，而硬限制则无法超出。
- en: Creating the directory server user and group
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建目录服务器用户和组
- en: 'When configuring the directory, we will need to assign the service a user and
    group ID; the default is the `nobody` account, but we should create a non-privileged
    user and group dedicated to the directory as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置目录时，我们需要为服务分配一个用户和组 ID；默认是 `nobody` 账户，但我们应当为目录创建一个非特权的用户和组，具体如下：
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `useradd` command will create the `ldap389` user and group.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`useradd` 命令将创建 `ldap389` 用户和组。'
- en: At this stage, it is pertinent to reboot the system to ensure that the settings
    are in place before we start the installation of the directory server. With this
    in place, we can further prepare for the installation.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在此阶段，最好重新启动系统，以确保设置已生效，然后再开始安装目录服务器。有了这些准备，我们可以进一步准备安装。
- en: The EPEL repository
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EPEL 仓库
- en: 'We will need to implement the EPEL repository. Using the `wget` command, you
    can download the RPM file that will configure the repository for you:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要实现 EPEL 仓库。使用`wget`命令，你可以下载 RPM 文件来配置仓库：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Once you have downloaded, install the RPM as root. This will create the repository
    file for you. The output of the `yum repolist` command should show the EPEL repository.
    The following screenshot is from my demonstration system:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下载后，以 root 用户身份安装 RPM。这将为你创建仓库文件。运行`yum repolist`命令的输出应该显示 EPEL 仓库。以下截图来自我的演示系统：
- en: '![The EPEL repository](img/5920OS_07_02.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![EPEL 仓库](img/5920OS_07_02.jpg)'
- en: Installing and configuring 389-ds
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和配置 389-ds
- en: 'With the repository configured on our system, we are now ready to use `yum`
    to install the directory server:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 配置好仓库后，我们可以使用`yum`来安装目录服务器：
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Among other things, you will find that Java will be installed as there is a
    Java management console that simplifies connecting to and managing entries in
    the directory.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，你会发现会安装 Java，因为有一个 Java 管理控制台，它简化了连接到目录并管理目录中的条目。
- en: The configuration is made simple with the implementation of a script that will
    guide us through the configuration of the administration and directory services
    on CentOS. The administration service represents the LDAP server; the directory
    service itself represents an individual directory hosted on the administration
    server. A single administration server can look after directories for company
    A and company B. The two directories can be administered separately.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实施一个脚本，使得配置变得简单，这个脚本将引导我们完成 CentOS 上管理和目录服务的配置。管理服务代表 LDAP 服务器；目录服务本身代表托管在管理服务器上的单个目录。一台管理服务器可以管理公司
    A 和公司 B 的目录。两个目录可以分别管理。
- en: The setup is achieved by running the script, `setup-ds-admin.pl`. The script
    is installed in your PATH statement. The default is for the script to run interactively
    but, especially where servers are setup frequently, you may use an answer file
    to accompany the script.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 设置通过运行脚本`setup-ds-admin.pl`来完成。该脚本已安装在你的 PATH 中。默认情况下，脚本是交互式运行的，但特别是在频繁设置服务器的情况下，你可以使用回答文件来配合脚本使用。
- en: 'Running the following command will configure the directory and administration
    services interactively:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令将交互式配置目录和管理服务：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This command, when run, will lead you into a menu, which is explained as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 运行该命令后，会进入一个菜单，具体内容如下：
- en: '**Continue with setup**: Choose `yes` to continue with the script at the first
    prompt.'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**继续设置**：在第一个提示时选择`yes`以继续脚本。'
- en: '**dsktune**: The tuning analysis will be run to check that you have RAM greater
    than 1024 MB and that the other preflight checks are in place.'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**dsktune**：将运行调整分析，以检查你的 RAM 是否大于 1024 MB，并确保其他预检项都已设置好。'
- en: '**Choose a setup type**:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**选择设置类型**：'
- en: '**Express**'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**快速安装**'
- en: '**Typical**'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**典型设置**'
- en: '**Custom**'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**自定义**'
- en: We will choose `2` for **Typical**.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将选择`2`作为**典型**配置。
- en: '**Set the computer name**: Next, we set the computer name. This should be default
    to your hostname; in my case `ldap1.tup.com`.'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置计算机名称**：接下来，我们设置计算机名称。这个名称默认应该与你的主机名相同；在我的例子中是`ldap1.tup.com`。'
- en: '**Set the user which the directory server will run**: This we set to `ldap389`
    in our case, the dedicated user we created.'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置目录服务器运行的用户**：在我们的案例中，我们将其设置为`ldap389`，这是我们创建的专用用户。'
- en: '**Set the group which the directory server will run**: We will use the `ldap389`
    group.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置目录服务器运行的组**：我们将使用`ldap389`组。'
- en: '**Register the new directory server with an existing server**: We will choose
    `No` as this is the first server. If another server pre-existed, we could register
    this installation with that server.'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将新目录服务器注册到现有服务器**：我们选择`No`，因为这是第一台服务器。如果已有其他服务器，可以将此安装与该服务器注册。'
- en: '**Give the configuration directory server a user ID and password**: We can
    accept the preset name of the admin. We use this account to log in to the directory
    server.'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**为配置目录服务器设置用户名和密码**：我们可以接受默认的管理员名称。我们使用该账户登录目录服务器。'
- en: '**The configuration directory server domain**: The domain I am using is `tup.com`.
    We will create an LDAP domain to reflect this.'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**配置目录服务器域**：我使用的域名是 `tup.com`。我们将创建一个 LDAP 域来反映这一点。'
- en: '**Set the directory server port**: The default port for LDAP is `389`, and
    we will keep this as the default.'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置目录服务器端口**：LDAP 的默认端口是 `389`，我们将保持此默认设置。'
- en: '**Set the directory server identifier**: We will then be prompted for a unique
    name for the server in the directory. This will default to the first part of the
    hostname, in my case, `ldap1`.'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置目录服务器标识符**：接下来，我们将被提示输入一个唯一的服务器名称，这将默认为主机名的第一部分，在我的情况是 `ldap1`。'
- en: '**Set the directory suffix**: LDAP names are comma separated. The LDAP suffix
    will now be displayed similar to the following and will make up the top container
    in the LDAP tree:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置目录后缀**：LDAP 名称由逗号分隔。LDAP 后缀现在将显示如下，并将构成 LDAP 树中的顶部容器：'
- en: '`dc=tup, dc=com`'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dc=tup, dc=com`'
- en: '**Set the directory manager ID**: This is the LDAP directory manager and has
    a default name of `cn=Directory Manager`. We will need to set a secure password
    for this.'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置目录管理器 ID**：这是 LDAP 目录管理器，默认名称为 `cn=Directory Manager`。我们需要为此设置一个安全的密码。'
- en: '**Set the administration server port**: The administration port can be used
    to manage the server through the Java console. We will leave the default port
    at `9830`.'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**设置管理服务器端口**：管理端口可用于通过 Java 控制台管理服务器。我们将保持默认端口 `9830`。'
- en: 'The interactive setup is now complete, and the configuration will be created
    along with the default entries. The service should start in the final stage and
    a success message will be shown. We should ensure that the services start correctly
    on boot using `chkconfig`:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 交互式设置现在已完成，配置将与默认条目一起创建。在最后阶段，服务应启动，并且会显示成功消息。我们应确保服务在启动时能够正确启动，使用 `chkconfig`：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Tip
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Remember that `dirsrv` runs on port `389` and is the LDAP directory. The `dirsrv-admin`
    is the administration server that listens on port `9830`
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，`dirsrv` 运行在端口 `389` 上，是 LDAP 目录；`dirsrv-admin` 是管理服务器，监听端口 `9830`。
- en: Testing the installation
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试安装
- en: 'Congratulations! You now have an LDAP server, and we can test the configuration
    in a couple of ways. Firstly, we can use the `ldapsearch` command to display entries
    from the directory, and then we will use the 389-console, the GUI tool that we
    can manage LDAP with. In the following command, the `-x` option is for simple
    authentication and the `-b` option is the search base:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！现在你已经拥有了一个 LDAP 服务器，我们可以通过几种方式测试配置。首先，我们可以使用 `ldapsearch` 命令显示目录中的条目，然后我们将使用
    389-console，这是一个可以管理 LDAP 的 GUI 工具。在以下命令中，`-x` 选项用于简单身份验证，`-b` 选项指定搜索基础：
- en: '[PRE12]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output from this will list, in **Lightweight Directory Interchange Format**
    (**LDIF**), some containers and groups that were created during the configuration.
    The following screenshot shows one such group from the output on my system:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这个输出将列出以 **轻量级目录交换格式**（**LDIF**）显示的某些容器和在配置过程中创建的组。以下截图显示了我的系统输出中的一个组：
- en: '![Testing the installation](img/5920OS_07_03.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![测试安装](img/5920OS_07_03.jpg)'
- en: 'The big advantage that we have with the 389-ds is the GUI. We can run it from
    the server or we could install the console on a client machine. We will run it
    from the server using the following command:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 389-ds 的一个大优势是 GUI。我们可以从服务器上运行它，或者我们可以将控制台安装在客户端机器上。我们将从服务器上使用以下命令运行它：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We will be presented with a graphical console, as shown in the following screenshot,
    in which we can log in as an admin:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到一个图形化控制台，如以下截图所示，在此我们可以以管理员身份登录：
- en: '![Testing the installation](img/5920OS_07_04.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![测试安装](img/5920OS_07_04.jpg)'
- en: LDAP user account management
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LDAP 用户账户管理
- en: The purpose of the directory is to house user accounts. These accounts do not
    have to be used for authentication but we can use them for authentication. This
    may be for other CentOS or Linux systems as well as services such as Apache. We
    will now look at creating user accounts in the directory both from the command
    line and from the GUI console. If we start with the GUI console, we can create
    and export the user and reimport it from the command line.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 目录的目的是存储用户账户。这些账户不一定用于身份验证，但我们可以用它们进行身份验证。这可能适用于其他 CentOS 或 Linux 系统，以及如 Apache
    这样的服务。现在我们将查看如何通过命令行和 GUI 控制台在目录中创建用户账户。如果从 GUI 控制台开始，我们可以创建并导出用户，再从命令行重新导入。
- en: Adding users using the GUI console
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 GUI 控制台添加用户
- en: 'We can log in to the console using the admin account as before. From the main
    welcome page, we should choose the **Users and Groups** tab and then, select the
    **Search** button. With nothing in the search dialog, the search will return all
    users, groups and containers. The container objects that we can see are organizational
    units; an **organizational unit** (**OU**) is a little like a folder within a
    filesystem. In the directory, OUs are used to organize objects. Navigating to
    the OU named "people", we can use the menu to **Create** | **User**, (found at
    the bottom of the screen). This will open a form for use to complete the user''s
    details. On the user form, we will add the following data:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以像之前一样使用管理员帐户登录到控制台。从主欢迎页面，我们应该选择**用户和组**选项卡，然后选择**搜索**按钮。在搜索对话框中没有任何内容时，搜索将返回所有用户、组和容器。我们可以看到的容器对象是组织单位；**组织单位**（**OU**）有点像文件系统中的文件夹。在目录中，OU用于组织对象。导航到名为"people"的OU，我们可以使用菜单**创建**
    | **用户**（位于屏幕底部）。这将打开一个表单，供我们填写用户的详细信息。在用户表单上，我们将添加以下数据：
- en: '| **First Name** | `Bob` |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| **名字** | `Bob` |'
- en: '| **Last Name** | `Bloggs` |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| **姓氏** | `Bloggs` |'
- en: '| **Common Name** | `Bob Bloggs` |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| **常用名称** | `Bob Bloggs` |'
- en: '| **User ID** | `bbloggs` (it is suggested to keep it all lowercase) |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| **用户ID** | `bbloggs`（建议全部小写） |'
- en: '| **Password** | `Password1` |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| **密码** | `Password1` |'
- en: '| **Confirm Password** | `Password1` |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| **确认密码** | `Password1` |'
- en: 'If we only needed a user to support an application login, such as from an Apache
    web server, this is all we would need. As we ultimately would like to log in from
    Linux, we will also complete the **Posix User** form as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们只需要一个用户来支持应用程序登录，例如来自Apache Web服务器的登录，这些就足够了。由于我们最终想要从Linux登录，我们还将完成如下的**Posix用户**表单：
- en: '**Enable Posix User Attributes**: `Selected`'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用Posix用户属性**: `已选择`'
- en: '**UID Number**: `5000`'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UID号码**: `5000`'
- en: '**GID Number**: `100`'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GID号码**: `100`'
- en: '**Home Directory**: `/home/bbloggs`'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主目录**: `/home/bbloggs`'
- en: '**Login Shell**: `/bin/bash`'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**登录Shell**: `/bin/bash`'
- en: 'These attributes then combine to create our user. This will be displayed in
    the 389-console as well as in `ldapsearch`. If we rerun the earlier search, this
    time, we will add a filter to display only those objects that match `posixAccount`:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这些属性然后结合起来创建我们的用户。它将在389-console以及`ldapsearch`中显示。如果我们重新运行之前的搜索，这次我们将添加一个筛选器，仅显示与`posixAccount`匹配的对象：
- en: '[PRE14]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This should just show a single entry.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该只显示一个条目。
- en: Adding users from the command line
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从命令行添加用户
- en: To create users from the command line, we have a similar tool to `ldapsearch`.
    The `ldapadd` command will create users in the directory. The user account details
    will be defined within an LDIF file to use as an argument to the `ldapadd` command.
    We will additionally need to be authenticated to perform this operation as anonymous
    connections, because as you will imagine, it cannot create entries within the
    directory. We will begin by ensuring the authentication is correct by using `ldapsearch`;
    this will also allow us to view all attributes for the new user `bbloggs`. We
    will use this output, once edited, to create a new user when imported with `ldapadd`
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 要从命令行创建用户，我们有一个类似于`ldapsearch`的工具。`ldapadd`命令将创建目录中的用户。用户帐户的详细信息将在一个LDIF文件中定义，并作为`ldapadd`命令的参数使用。我们还需要进行身份验证才能执行此操作，因为匿名连接无法在目录中创建条目。我们将首先确保身份验证正确，方法是使用`ldapsearch`；这也将允许我们查看新用户`bbloggs`的所有属性。编辑此输出后，我们将在导入时使用`ldapadd`创建新用户。
- en: '[PRE15]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Using this search, we now authenticate as the directory manager and redirect
    the output through to the `/tmp/user.ldif` file. Using the `-W` option in place
    of `-w` will allow the password to be requested during the operation rather than
    being placed on the command line.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此搜索，我们现在以目录管理器身份进行身份验证，并将输出重定向到`/tmp/user.ldif`文件中。使用`-W`选项代替`-w`，可以在操作过程中请求密码，而不是将其放在命令行上。
- en: 'We should edit the file using your preferred text editor so that it looks similar
    to the following:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该使用你喜欢的文本编辑器编辑该文件，使其看起来类似于以下内容：
- en: '[PRE16]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Tip
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: We are setting the `uidNumber` manually, and it must be incremented along with
    changing the other name-based fields.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们手动设置`uidNumber`，并且它必须随着其他基于名称的字段的更改而递增。
- en: 'Once the file is edited, we can create the user from the command line using
    the `ldapadd` command:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑文件后，我们可以使用命令行中的`ldapadd`命令创建用户：
- en: '[PRE17]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If you typed correctly, then you should see a success message similar to the
    following screenshot taken from my system:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你输入正确，你应该会看到类似于以下截图的成功信息，这张截图来自我的系统：
- en: '![Adding users from the command line](img/5920OS_07_05.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![从命令行添加用户](img/5920OS_07_05.jpg)'
- en: The password for the new user will be stored in an encrypted form, although
    we add it in clear text from the LDIF file.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 新用户的密码将以加密形式存储，尽管我们从LDIF文件中添加时是以明文形式输入的。
- en: We have now seen how we can use the standard OpenLDAP tool to search and add
    entries to our directory as well as the comfort of being able to use the GUI tools
    if we prefer. We have two users in the system now that can be provisioned to client
    Linux systems.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经看到如何使用标准的OpenLDAP工具来搜索和添加目录条目，并且如果我们愿意，也可以使用图形化工具。现在系统中有两个用户，可以将其配置到客户端Linux系统上。
- en: LDAP authentication
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LDAP身份验证
- en: We will use an additional CentOS 6.5 server on which we will configure the OpenLDAP
    client for authentication so that we make use of the central account database
    that we established on the 389-ds server.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用另一台CentOS 6.5服务器，在该服务器上配置OpenLDAP客户端进行身份验证，以便使用我们在389-ds服务器上建立的中央账户数据库。
- en: 'From the client machine, we will need to install the following packages:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 从客户端机器上，我们需要安装以下软件包：
- en: '`openldap`'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openldap`'
- en: '`openldap-client`'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openldap-client`'
- en: '`nss-pam-ldapd`'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nss-pam-ldapd`'
- en: 'This will be managed through the standard `yum` repositories:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 这将通过标准的`yum`仓库进行管理：
- en: '[PRE18]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Once this is installed, we will make one change to the `/etc/sysconfig/authconfig`
    file. We will edit the line that reads `FORCELEGACY=no` to `read FORCELEGACY=yes`.
    This change will allow us to use LDAP rather than LDAPS. Although it would be
    more secure to use LDAPS as the information encrypts data exchange, using LDAP,
    we alleviate the need to create certificates for the server, which is adequate
    on a local network.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，我们需要对`/etc/sysconfig/authconfig`文件进行一次更改。我们将编辑其中的`FORCELEGACY=no`这一行，将其改为`FORCELEGACY=yes`。此更改将允许我们使用LDAP而非LDAPS。尽管使用LDAPS更安全，因为它加密了数据交换，但使用LDAP可以避免为服务器创建证书，这在局域网环境中已足够。
- en: 'To configure the authentication, we can use the `authconfig` command:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 配置身份验证时，我们可以使用`authconfig`命令：
- en: '[PRE19]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This configures authentication and will write the configuration to the correct
    files. You will notice that we include the option to create user home directories,
    `--enablemkhomedir`; on login, if a user's home directory does not exist, it will
    be created. We added the home directory path when creating the users, but this
    will not have created the home directory. These home directories are not shared
    unless we remap the `/home` directory on client machines to a central location.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这将配置身份验证并将配置写入正确的文件。你会注意到，我们包括了创建用户家目录的选项`--enablemkhomedir`；如果用户的家目录不存在，登录时将会创建该目录。在创建用户时我们添加了家目录路径，但这并没有创建实际的家目录。除非我们将客户端机器上的`/home`目录重新映射到一个中央位置，否则这些家目录不会被共享。
- en: 'We can verify the configuration now using the `getent` command we touched upon
    in the previous chapter:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用上一章提到的`getent`命令来验证配置：
- en: '[PRE20]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This should list the `bbloggs` and `ssmith` account from the central LDAP server.
    This can be seen in the output on my system:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会列出来自中央LDAP服务器的`bbloggs`和`ssmith`账户。可以在我的系统输出中看到这一点：
- en: '![LDAP authentication](img/5920OS_07_06.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![LDAP身份验证](img/5920OS_07_06.jpg)'
- en: 'We can now log out and log in again as one of our users. Choosing the `ssmith`
    account, we log in to the graphical gnome desktop, navigate to the **System**
    | **Preferences**, and select the **About Me** button. We can see that we are
    logged in as **Sally**. The output from my system is shown in the following screenshot:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以注销并以我们的一个用户身份重新登录。选择`ssmith`账户后，我们登录到图形化的gnome桌面，进入**系统** | **首选项**，并点击**关于我**按钮。我们可以看到我们以**Sally**身份登录。以下是我的系统输出的截图：
- en: '![LDAP authentication](img/5920OS_07_07.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![LDAP身份验证](img/5920OS_07_07.jpg)'
- en: Summary
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we introduced you to the concept of identity management and
    showed the use of the 389-ds, the enriched OpenLDAP server on CentOS. It is enriched
    with a simplified setup script and graphical tools; however, we also saw how we
    can use traditional OpenLDAP tools to create and search entries in a directory.
    We finished the chapter by allowing a second CentOS server to use the account
    database shared by 389-ds supplying us with a single logon across many systems.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们向您介绍了身份管理的概念，并展示了如何在 CentOS 上使用 389-ds，即增强版 OpenLDAP 服务器。它通过简化的设置脚本和图形化工具进行了增强；然而，我们也展示了如何使用传统的
    OpenLDAP 工具在目录中创建和搜索条目。我们通过允许第二台 CentOS 服务器使用由 389-ds 共享的账户数据库来结束本章，使得我们能够在多个系统之间实现单点登录。
- en: In the next chapter, we will discuss the Nginx web server, the new kid on the
    block, but a refreshing alternative to Apache.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将讨论 Nginx web 服务器，作为新兴的竞争者，它是 Apache 的一种清新替代方案。
