- en: Understanding Linux Service Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Linux 服务安全性
- en: 'In this chapter, we will discuss the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下内容：
- en: Web server – HTTPD
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 服务器 – HTTPD
- en: Remote service login – Telnet
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程服务登录 – Telnet
- en: Secure remote login – SSH
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全远程登录 – SSH
- en: File transfer security – FTP
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件传输安全 – FTP
- en: Securing mail transfer – SMTP
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全邮件传输 – SMTP
- en: Web server – HTTPD
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web 服务器 – HTTPD
- en: HTTPD refers to the Apache2 web server, and is commonly used on Linux systems.
    Web servers commonly use the HTTP Protocol to transfer web pages. Apart from HTTP,
    protocols such as HTTPS and FTP are also supported.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: HTTPD 指的是 Apache2 Web 服务器，通常用于 Linux 系统。Web 服务器通常使用 HTTP 协议来传输网页。除了 HTTP，HTTPS
    和 FTP 等协议也被支持。
- en: Getting ready
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: There are no specific requirements to configure Apache on a Linux system.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 配置 Apache 在 Linux 系统上并没有特定要求。
- en: How to do it...
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In this section, we will see how to install and configure an Apache web server
    on an Ubuntu system:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何在 Ubuntu 系统上安装和配置 Apache Web 服务器：
- en: 'As Apache is available in Ubuntu''s default software repositories, we can install
    it easily by using the `apt` installer. To install Apache and all its required
    dependencies, we run the following command:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于 Apache 在 Ubuntu 的默认软件库中可用，我们可以通过使用 `apt` 安装器轻松安装它。要安装 Apache 及其所有必需的依赖项，我们运行以下命令：
- en: '![](img/17d182b9-50d0-4a71-9dc1-add8a4db3e65.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/17d182b9-50d0-4a71-9dc1-add8a4db3e65.png)'
- en: 'During the installation process, Apache registers itself with Ubuntu''s default
    firewall, UFW. This provides profiles that can be used to enable or disable access
    to Apache through the firewall. To list the profiles, type the following command:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装过程中，Apache 会将自己注册到 Ubuntu 的默认防火墙 UFW 中。这提供了可以用来启用或禁用通过防火墙访问 Apache 的配置文件。要列出这些配置文件，请输入以下命令：
- en: '![](img/00a26050-d721-4be9-b6ac-a0a0e80d0e36.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00a26050-d721-4be9-b6ac-a0a0e80d0e36.png)'
- en: We can see three profiles are available for Apache. Apache refers to port `80`
    only, and Apache Full refers to both port `80` and `443`, whereas Apache Secure
    refers to only port `443`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 Apache 有三个可用的配置文件。Apache 仅引用端口 `80`，而 Apache Full 引用端口 `80` 和 `443`，而
    Apache Secure 仅引用端口 `443`。
- en: 'As SSL is not configured, we will allow traffic on port `80` only for now.
    To do this, we run the following command:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于尚未配置 SSL，我们暂时只允许端口 `80` 的流量。为此，我们运行以下命令：
- en: '![](img/91f6e0ce-d876-4b4a-bbf6-91eca48c49a4.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/91f6e0ce-d876-4b4a-bbf6-91eca48c49a4.png)'
- en: 'Now, we can verify that access has been granted for HTTP traffic by checking
    the status of UFW, as shown here:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过检查 UFW 的状态来验证是否已允许 HTTP 流量，如下所示：
- en: '![](img/e68b0f68-40d0-4ef0-803e-21ed87532794.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e68b0f68-40d0-4ef0-803e-21ed87532794.png)'
- en: 'When the installation for Apache completes, Ubuntu automatically starts it.
    This can be confirmed by running the following command:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 Apache 安装完成后，Ubuntu 会自动启动它。可以通过运行以下命令来确认这一点：
- en: '![](img/0393c8db-8b7f-4bff-95ce-8c0a26d197bf.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0393c8db-8b7f-4bff-95ce-8c0a26d197bf.png)'
- en: Once Apache is up and running, we can enable additional modules to get extended
    features.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Apache 启动并运行后，我们可以启用附加模块以获取扩展功能。
- en: To check the list of additional modules, see the `/etc/apache2/mods-available`
    directory.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查附加模块的列表，请查看 `/etc/apache2/mods-available` 目录。
- en: 'Suppose we want to install the MySQL Authentication module; this can be done
    by running the following command:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们要安装 MySQL 认证模块；可以通过运行以下命令来完成：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once installed, the module can be enabled by using the following command:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，可以通过以下命令启用该模块：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, we need to restart Apache to make the changes effective:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要重启 Apache 以使更改生效：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If we wish to encrypt the traffic sent and received by the Apache server, we
    can use the `mod_ssl` module. As this module is available in the `apache2-common`
    package, we can directly enable it by using the following command:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们希望加密由 Apache 服务器发送和接收的流量，可以使用 `mod_ssl` 模块。由于该模块包含在 `apache2-common` 包中，我们可以直接通过以下命令启用它：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once the SSL module has been enabled, manual configuration is needed to make
    SSL function properly. We have already discussed this in previous chapters.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用 SSL 模块后，需要进行手动配置才能使 SSL 正常工作。我们已经在之前的章节中讨论过这一点。
- en: How it works...
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Apache is the most commonly used web server on Ubuntu. We install it from Ubuntu's
    repository. Once installed, we allow access through the UFW firewall as per our
    requirements.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 是 Ubuntu 上最常用的 web 服务器。我们从 Ubuntu 的软件库中安装它。安装完成后，我们根据需求通过 UFW 防火墙允许访问。
- en: Once Apache is up and running, we can customize its configuration by installing
    additional modules and then enabling them.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 Apache 启动并运行，我们可以通过安装附加模块并启用它们来定制其配置。
- en: Remote service login – Telnet
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 远程服务登录 – Telnet
- en: '**Telnet** is one the earliest remote login protocols still in use. It is older
    than most of the system administrators today, as it was developed in 1969\. Telnet
    allows users to make text-based connections between computers. Since Telnet provides
    no built-in security measures, it suffers from various security issues.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**Telnet** 是最早的远程登录协议之一，至今仍在使用。它比今天的大多数系统管理员都要古老，因为它是在 1969 年开发的。Telnet 允许用户在计算机之间建立基于文本的连接。由于
    Telnet 没有内建的安全措施，因此它存在各种安全问题。'
- en: Getting ready
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: To demonstrate the use of Telnet, we will use two systems. On the first system,
    a Telnet server will be running, and from the second system, we will check the
    security issues.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示 Telnet 的使用，我们将使用两台系统。在第一台系统上，Telnet 服务器将运行，而从第二台系统，我们将检查安全问题。
- en: How to do it...
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In this section, we will see how Telnet can cause serious security issues:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到 Telnet 如何引发严重的安全问题：
- en: 'Using Telnet is very easy. Just open a terminal window and type the following
    command:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Telnet 非常简单。只需打开终端窗口并输入以下命令：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here is an example: `telnet 192.168.43.100 23`'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例：`telnet 192.168.43.100 23`
- en: 'When Telnet is running on a server, it can be used by attackers to perform
    the banner grabbing of other services. Let''s use it to find the version of SSH
    running on the server. Type the following command to do this:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 Telnet 在服务器上运行时，攻击者可以利用它执行其他服务的横幅抓取。让我们使用它来查找服务器上运行的 SSH 版本。输入以下命令来实现这一点：
- en: '![](img/1da7e09a-7663-4bd9-a0f1-3964d3fb40b9.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1da7e09a-7663-4bd9-a0f1-3964d3fb40b9.png)'
- en: As we can see from the previous screenshot, the version of SSH is clearly displayed.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们从前面的截图中看到的，SSH 的版本被清楚地显示出来。
- en: 'We can also perform SMTP banner grabbing through Telnet. For this, we run the
    following command:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以通过 Telnet 执行 SMTP 横幅抓取。为此，我们运行以下命令：
- en: '![](img/12a4a2ed-40aa-445a-88b9-477c8fb95cdf.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/12a4a2ed-40aa-445a-88b9-477c8fb95cdf.png)'
- en: In the previous output, we can see the remote server is using the PostFix mail
    server with a hostname of `metasploitable.localdomain`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的输出中，我们可以看到远程服务器使用的是 PostFix 邮件服务器，主机名为 `metasploitable.localdomain`。
- en: 'Once the attacker has this information about the SMTP server, they can try
    guessing valid mail accounts. They use the `vrfy` command followed by a mail account
    to do this. Based on the result, they can understand whether the mail account
    is valid or not:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦攻击者获取了有关 SMTP 服务器的信息，他们可以尝试猜测有效的邮件账户。他们使用 `vrfy` 命令后跟邮件账户来进行猜测。根据结果，他们可以判断邮件账户是否有效：
- en: '![](img/d8b4e8a2-0631-4549-b879-cd3f5ab7b646.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d8b4e8a2-0631-4549-b879-cd3f5ab7b646.png)'
- en: If the response code is `550`, it implies the guessed mail account is invalid,
    and when the response code is `250`, `251`, or `252`, it implies the mail account
    is valid.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果响应代码是 `550`，则表示猜测的邮件账户无效；如果响应代码是 `250`、`251` 或 `252`，则表示邮件账户有效。
- en: As Telnet by default does not encrypt any data being sent over the connection,
    attackers can easily eavesdrop on the communication and capture sensitive data,
    including passwords.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于 Telnet 默认不加密任何通过连接发送的数据，攻击者可以轻松地窃听通信并捕获敏感数据，包括密码。
- en: 'Suppose a user is connecting to the Telnet server as shown here:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设某个用户正如图所示连接到 Telnet 服务器：
- en: '![](img/fd4105a5-f2c3-4006-b51b-8245b498252c.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd4105a5-f2c3-4006-b51b-8245b498252c.png)'
- en: 'They will be prompted for their login details. Once the correct details are
    entered, they get logged in as seen here:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 用户将被提示输入登录信息。一旦输入正确的细节，他们就能登录，如图所示：
- en: '![](img/f3ec1744-b6f7-4205-95f2-936969e1dc40.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3ec1744-b6f7-4205-95f2-936969e1dc40.png)'
- en: 'At the same time, the attacker, who is on the same network, captures the traffic
    by sniffing the network using the Wireshark tool. We can see here the Telnet traffic
    captured by Wireshark:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与此同时，处于同一网络中的攻击者使用 Wireshark 工具嗅探网络流量。我们可以看到这里由 Wireshark 捕获的 Telnet 流量：
- en: '![](img/6c2c73ae-9a06-48cc-9558-7618d2dc7c69.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6c2c73ae-9a06-48cc-9558-7618d2dc7c69.png)'
- en: 'When we analyze the captured packets, we can see the login details in clear
    text, as seen here:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们分析捕获的包时，可以看到登录信息是以明文显示的，如下所示：
- en: '![](img/06598d40-e817-4792-abf4-50967795cec5.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/06598d40-e817-4792-abf4-50967795cec5.png)'
- en: This clearly tells us how insecure Telnet is.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这清楚地告诉我们 Telnet 是多么不安全。
- en: How it works...
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Being one of the oldest protocols, Telnet has no inbuilt security measures.
    Attackers can use Telnet for banner grabbing.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最古老的协议之一，Telnet 没有内置的安全措施。攻击者可以利用 Telnet 进行横幅抓取。
- en: Attackers can also sniff the traffic sent over a telnet connection and gain
    important information as telnet communicates in clear text.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者还可以嗅探通过 Telnet 连接发送的流量，并获得重要信息，因为 Telnet 使用明文通信。
- en: Secure remote login – SSH
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全远程登录 – SSH
- en: As the internet grew, the security risks related to using SSH also became visible
    to users. To overcome these security risks, developers released a new tool called
    Secure Shell or SSH.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 随着互联网的发展，使用 SSH 相关的安全风险也逐渐显现。为了克服这些安全风险，开发人员发布了一种名为 Secure Shell 或 SSH 的新工具。
- en: It provides the same functionality as Telnet, but in a secure encrypted tunnel.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 它提供与 Telnet 相同的功能，但在一个安全的加密隧道中。
- en: Getting ready
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: For the Linux systems, we can use OpenSSH for SSH connections. It is a free
    tool for Linux and can be installed using `apt`. We have discussed the installation
    and configuration of OpenSSH in previous chapters.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Linux 系统，我们可以使用 OpenSSH 来进行 SSH 连接。它是一个免费的 Linux 工具，可以通过 `apt` 安装。我们在前面的章节中讨论了
    OpenSSH 的安装和配置。
- en: How to do it...
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'In this section, we will see how using SSH instead of Telnet can secure our
    data:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到如何使用 SSH 替代 Telnet 来保护我们的数据：
- en: 'Once SSH is installed and configured, we can try to connect to the server using
    SSH as shown here. Enter the password when prompted:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 SSH 安装并配置完成，我们可以尝试使用 SSH 连接到服务器，如下所示。在提示时输入密码：
- en: '![](img/447fe5b9-6790-4b28-801f-6c9c54e7369c.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/447fe5b9-6790-4b28-801f-6c9c54e7369c.png)'
- en: 'At the same time, if we try to capture the traffic using Wireshark, we get
    the following details:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时，如果我们尝试使用 Wireshark 捕获流量，我们会得到以下详细信息：
- en: '![](img/a7bd929e-9532-418e-b30a-9a606b7a4ef7.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a7bd929e-9532-418e-b30a-9a606b7a4ef7.png)'
- en: In the previous screenshot, we can see in the last lines that a Key Exchange
    was initiated between the client and server.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以看到最后几行显示客户端和服务器之间已启动密钥交换。
- en: 'When we go through the packets captured, we can see that Encrypted Packets
    are being exchanged between the client and the server shown as follows. This was
    not the case when using Telnet:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们查看捕获的包时，可以看到客户端和服务器之间交换的是加密的包，如下所示。在使用 Telnet 时并没有这种情况：
- en: '![](img/23f5a26d-c4f8-4d86-8a03-152af2c9d479.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23f5a26d-c4f8-4d86-8a03-152af2c9d479.png)'
- en: 'Even if we try to see the details of the packet, we can''t see any clear text
    data. We get an encrypted output, as shown here:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 即使我们尝试查看数据包的详细信息，我们也看不到任何明文数据。我们得到的是加密的输出，如下所示：
- en: '![](img/c76a823a-2a7a-4a17-bb30-3644afcfbf38.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c76a823a-2a7a-4a17-bb30-3644afcfbf38.png)'
- en: So,we can see how SSH can help in securing data being communicated over the
    internet.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，我们可以看到 SSH 如何帮助保护互联网上传输的数据。
- en: File transfer security – FTP
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件传输安全 – FTP
- en: File transfer security (FTP) has been the most common protocol for file transfers.
    When we talk about a file transfer protocol like FTP, it means the protocol is
    used to send streams of bits stored as a single unit in a particular filesystem.
    However, this process is not completely secure.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 文件传输安全（FTP）一直是最常用的文件传输协议。当我们谈论像 FTP 这样的文件传输协议时，意味着该协议用于发送以单个单位存储在特定文件系统中的比特流。然而，这个过程并不完全安全。
- en: FTP has a lot of vulnerabilities and also it does not provide any encryption
    for data transfer.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: FTP 存在许多漏洞，并且不提供任何数据传输加密。
- en: 'Let''s discuss a few security risks related to using FTP:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论一些与使用 FTP 相关的安全风险：
- en: '**FTP bounce attack**: When a file transfer happens using the FTP protocol,
    the source server sends the data to the client, and then the client transmits
    the data to the destination server. However, in the case of slow connections,
    users may use the FTP proxy and this makes the client transmit the data directly
    between the two servers.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FTP 回显攻击**：当通过 FTP 协议进行文件传输时，源服务器将数据发送到客户端，然后客户端将数据传输到目标服务器。然而，在连接较慢的情况下，用户可能会使用
    FTP 代理，这使得客户端直接在两个服务器之间传输数据。'
- en: In this kind of scenario, a hacker may use a `PORT` command to make a request
    to access ports by being the man-in-the-middle for that particular file transfer
    request. Then, the hacker can execute port scans on the host and gain access to
    the data transmitted over the network.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这种情况下，黑客可能使用 `PORT` 命令发起请求，通过成为该特定文件传输请求的中间人来访问端口。然后，黑客可以对主机进行端口扫描，并访问通过网络传输的数据。
- en: '**FTP brute force attack**: A brute force attack can be tried against the FTP
    server to guess the password. Administrators tend to use weak passwords and also
    repeat the same password for multiple FTP servers. In such scenarios, if the attacker
    is able to perform a successful brute force attack, all the data will be exposed.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FTP暴力破解攻击**：攻击者可以尝试对FTP服务器进行暴力破解攻击，猜测密码。管理员往往使用弱密码，并且在多个FTP服务器中重复使用相同的密码。在这种情况下，如果攻击者成功进行暴力破解攻击，所有数据将暴露。'
- en: '**Packet capture (or Sniffing)**: As FTP transfers data in clear text, any
    attacker can perform network packet sniffing to get access to sensitive information
    such as usernames and passwords.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据包捕获（或嗅探）**：由于FTP以明文方式传输数据，任何攻击者都可以通过网络数据包嗅探获取敏感信息，如用户名和密码。'
- en: '**Spoof attack**: Suppose the administrator has restricted access to the FTP
    servers based on the network address. In such a scenario, an attacker may use
    an external computer and spoof its address to any computer on the enterprise network.
    Once this happens, the attacker will now have access to all the data being transferred.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**欺骗攻击**：假设管理员已根据网络地址限制对FTP服务器的访问。在这种情况下，攻击者可以使用外部计算机并伪造其地址为企业网络上的任何计算机。一旦发生这种情况，攻击者就能访问所有正在传输的数据。'
- en: 'We have seen different security risks associated to FTP. Now, let''s discuss
    a few ways to perform secure data transfer:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到与FTP相关的不同安全风险。现在，让我们讨论几种执行安全数据传输的方法：
- en: '**Disable standard FTP**: Many Linux servers have the standard FTP server preinstalled.
    As a best practice, it is recommended to disable the standard FTP as it lacks
    privacy and integrity, making it easy for an attacker to gain access to the data
    being transferred. Instead, use more secure alternatives such as SFTP.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁用标准FTP**：许多Linux服务器预装了标准FTP服务器。作为最佳实践，建议禁用标准FTP，因为它缺乏隐私性和完整性，使得攻击者更容易访问传输的数据。应使用更安全的替代方案，如SFTP。'
- en: '**Use strong encryption and hashing**: When using SFTP or any other secure
    protocol, ensure that older and outdated ciphers such as Blowfish and DES are
    disabled, and only strong ciphers such as AES and TDES are being used.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用强加密和哈希**：当使用SFTP或任何其他安全协议时，确保禁用过时的旧加密算法，如Blowfish和DES，只使用强加密算法，如AES和TDES。'
- en: FTP is a very old protocol, but still we can see the poor implementation of
    FTP in many networks. Being an old protocol, it has fewer security features, thus
    making it vulnerable to many security risks.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: FTP是一个非常古老的协议，但我们仍然可以在许多网络中看到FTP的糟糕实现。作为一个古老的协议，它的安全特性较少，因此容易受到许多安全风险的威胁。
- en: When we use secure protocols, such as SFTP, instead of FTP, we are less prone
    to attacks.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用如SFTP这样的安全协议而不是FTP时，攻击的可能性会大大降低。
- en: Securing Mail Transfer – SMTP
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 邮件传输安全 – SMTP
- en: '**SMTP** or **Simple Mail Transfer Protocol** is used by email servers. Every
    email is sent and received by the SMTP server over the SMTP protocol. An MTA,
    or Mail Transfer Agent, like Postfix can be configured as an email server.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**SMTP**或**简单邮件传输协议**是电子邮件服务器使用的协议。每封电子邮件都是通过SMTP协议由SMTP服务器发送和接收的。像Postfix这样的MTA（邮件传输代理）可以配置为电子邮件服务器。'
- en: Postfix can be used on a Linux system to route and deliver emails.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix可以在Linux系统上用于路由和传递邮件。
- en: Getting ready
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: To install and configure Postfix, we will be using an Ubuntu server. We will
    also need a **Fully Qualified Domain Name** (**FQDN**) on our server.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装和配置Postfix，我们将使用Ubuntu服务器。我们还需要在服务器上配置**完全限定域名**（**FQDN**）。
- en: How to do it...
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In this section, we will see how to install and configure Postfix on an Ubuntu
    sever and use as per our requirements:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何在Ubuntu服务器上安装和配置Postfix，并根据我们的需求进行使用：
- en: 'As Postfix is included in Ubuntu''s default repositories, installing it becomes
    easy. To begin the installation, we will run the following command, along with
    the `DEBIAN_PRIORITY=low` environmental variable to answer some additional prompts
    during the installation:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于Postfix包含在Ubuntu的默认软件库中，安装它变得非常简单。为了开始安装，我们将运行以下命令，并设置`DEBIAN_PRIORITY=low`环境变量，以便在安装过程中回答一些额外的提示：
- en: '![](img/c2f6420d-fae3-440a-8b05-f32337f59fbc.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c2f6420d-fae3-440a-8b05-f32337f59fbc.png)'
- en: 'Once the installation starts, the first window will ask for the type of mail
    configuration. We will select `Internet Site` for our needs, as shown as follows:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装开始，首个窗口将询问邮件配置类型。我们将根据需求选择`Internet Site`，如下所示：
- en: '![](img/08312560-3326-41de-a084-c025d4841083.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/08312560-3326-41de-a084-c025d4841083.png)'
- en: 'In the next window, enter the hostname to be used for `System mail name`, as
    shown here:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个窗口中，输入将用于`系统邮件名称`的主机名，如下所示：
- en: '![](img/57091be2-15f9-454c-a6b9-ff3841c6b562.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/57091be2-15f9-454c-a6b9-ff3841c6b562.png)'
- en: 'Next, enter the Linux user account that will be used to forward the mails addressed
    to root and postmaster, shown as follows:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，输入将用于转发根账户和邮局管理员邮件的Linux用户账户，如下所示：
- en: '![](img/57a7d1a0-05d6-4223-828b-648becf442dd.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/57a7d1a0-05d6-4223-828b-648becf442dd.png)'
- en: 'The next window defines the mail destinations that will be accepted by Postfix.
    Confirm the existing entries and add any other domains if needed:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个窗口定义了Postfix将接受的邮件目的地。确认现有的条目，并在需要时添加其他域：
- en: '![](img/4d21b5b3-78a8-46ce-94b2-c60c96bdb6f2.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d21b5b3-78a8-46ce-94b2-c60c96bdb6f2.png)'
- en: In the next window, select `No` and proceed.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个窗口中，选择`否`并继续。
- en: 'The next window specifies the list of networks for which the mail server is
    configured to relay messages:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个窗口指定了邮件服务器配置的转发消息的网络列表：
- en: '![](img/7eb6e91b-6d3c-44c8-86e0-6002047350b3.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7eb6e91b-6d3c-44c8-86e0-6002047350b3.png)'
- en: 'In the next window, we can limit the size of messages. We will set `0` to disable
    any size restrictions:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个窗口中，我们可以限制消息的大小。我们将设置为`0`，以禁用任何大小限制：
- en: '![](img/65aca31c-57a2-424d-90f9-1f3a403201dd.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65aca31c-57a2-424d-90f9-1f3a403201dd.png)'
- en: 'In the next step, choose which IP version Postfix should support. In our case,
    we will choose `all`:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一步中，选择Postfix应该支持的IP版本。在我们的例子中，我们将选择`all`：
- en: '![](img/d87adace-0cd3-4f8c-89bb-3c57b5bdf8ab.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d87adace-0cd3-4f8c-89bb-3c57b5bdf8ab.png)'
- en: 'Once we are done with the previous steps, the setup will complete the installation,
    as shown here:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成前面的步骤后，安装将完成，如下所示：
- en: '![](img/683f1fba-d7b9-40cd-b60f-bce89c5e759b.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/683f1fba-d7b9-40cd-b60f-bce89c5e759b.png)'
- en: 'Now, we will begin to set the mailbox. For this, we will set the `home_mailbox`
    variable to `Maildir/`, as shown here:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将开始设置邮箱。为此，我们将`home_mailbox`变量设置为`Maildir/`，如图所示：
- en: '![](img/ebcfa41a-3d57-46f8-bbe6-17db6628c719.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ebcfa41a-3d57-46f8-bbe6-17db6628c719.png)'
- en: This step will create a directory structure within the user's home directory.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步将会在用户的主目录下创建一个目录结构。
- en: 'Next, set the location of the `virtual_alias_maps` table. This table is used
    to map the Linux system accounts with the email accounts. We will run the following
    command to do this:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，设置`virtual_alias_maps`表的位置。此表用于将Linux系统账户与电子邮件账户进行映射。我们将运行以下命令来执行此操作：
- en: '![](img/2696d9f8-d910-4045-8949-37bd9bb75d47.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2696d9f8-d910-4045-8949-37bd9bb75d47.png)'
- en: 'Now, let''s edit `etc/postfix/virtual` to map the mail addresses to the Linux
    account, as shown here:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们编辑`etc/postfix/virtual`文件，将邮件地址映射到Linux账户，如下所示：
- en: '![](img/326732bb-763f-4a6c-af3e-df8d4e8052a2.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/326732bb-763f-4a6c-af3e-df8d4e8052a2.png)'
- en: 'Once done, apply the mapping by running the following command:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，运行以下命令应用映射：
- en: '![](img/9a779521-f0de-4b58-be86-f7bdf17e7cd9.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9a779521-f0de-4b58-be86-f7bdf17e7cd9.png)'
- en: 'Now, we will restart the postfix service:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将重启Postfix服务：
- en: '![](img/0ccff554-072f-4377-ba1d-09e3f0ccf2bf.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0ccff554-072f-4377-ba1d-09e3f0ccf2bf.png)'
- en: 'Our next step will be to allow Postfix through the UFW firewall:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的下一步是允许Postfix通过UFW防火墙：
- en: '![](img/cd0d2b9a-4ec7-4688-98a1-2c9cbcf0cebc.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd0d2b9a-4ec7-4688-98a1-2c9cbcf0cebc.png)'
- en: 'Postfix should configured now to send mails. We can test this by sending a
    test mail from any user account to the root email account, as shown here:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在Postfix应该已经配置好，可以发送邮件了。我们可以通过从任何用户账户向root邮件账户发送测试邮件来进行测试，如下所示：
- en: '![](img/9eb11974-af71-4dc3-9894-22b9c405ec2b.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9eb11974-af71-4dc3-9894-22b9c405ec2b.png)'
- en: 'Next, we check the mails for the root account by typing `mail`. We will see
    a new mail waiting. When we press *Enter*, we can see the content of the mail,
    as shown here:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们通过输入`mail`命令来检查root账户的邮件。我们会看到有一封新邮件等待。当我们按下*Enter*，可以看到邮件内容，如下所示：
- en: '![](img/9127c4c6-544d-43cb-a63e-3575240bb042.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9127c4c6-544d-43cb-a63e-3575240bb042.png)'
- en: Before finishing, we will perform Postfix hardening.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在完成之前，我们将对Postfix进行加固。
- en: 'We saw in the previous recipe, *Remote service login - Telnet*, how an attacker
    can use the `vrfy` command to guess email accounts, as seen here:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在之前的教程中，*远程服务登录 - Telnet*，我们看到攻击者如何使用`vrfy`命令猜测电子邮件账户，如下所示：
- en: '![](img/c2efad17-398f-46eb-86dd-54fa722f980d.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c2efad17-398f-46eb-86dd-54fa722f980d.png)'
- en: 'To secure Postfix against this, we need to disable the `vrfy` command. To do
    this, we run the following command:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了防止此问题，我们需要禁用`vrfy`命令。为此，我们运行以下命令：
- en: '[PRE5]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: After this, we restart the Postfix service to make the changes effective.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，我们重启Postfix服务以使更改生效。
- en: 'Now, if the attacker tries the same steps, they will get the output shown here:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果攻击者尝试相同的步骤，他们将得到如下所示的输出：
- en: '![](img/f38dc635-bbfc-4321-b23a-8d4c57b29fb5.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f38dc635-bbfc-4321-b23a-8d4c57b29fb5.png)'
- en: How it works...
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Postfix is used to configure our SMTP server. During configuration, we create
    a mapping of email accounts to Linux system accounts.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Postfix用于配置我们的SMTP服务器。在配置过程中，我们将邮箱账户与Linux系统账户进行映射。
- en: To increase the security of Postfix, we disable the `vrfy` command, thus preventing
    attackers from guessing the email accounts configured on the server.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高Postfix的安全性，我们禁用了`vrfy`命令，从而防止攻击者猜测服务器上配置的邮箱账户。
