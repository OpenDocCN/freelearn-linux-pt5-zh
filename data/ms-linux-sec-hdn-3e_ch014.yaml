- en: 13 Logging and Log Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13 日志记录与日志安全
- en: Join our book community on Discord
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加入我们的书籍社区，参与 Discord 讨论
- en: '[https://packt.link/SecNet](https://packt.link/SecNet)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/SecNet](https://packt.link/SecNet)'
- en: '![](img/file82.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](img/file82.png)'
- en: System logs are an important part of every IT administrator's life. They can
    tell you how well your system is performing, how to troubleshoot problems, and
    what the users—both authorized and unauthorized—are doing on the system.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 系统日志是每个 IT 管理员生活中的重要部分。它们可以告诉你系统的性能如何，如何排除故障，以及用户（无论是授权用户还是未授权用户）在系统上做了什么。
- en: In this chapter, I'll give you a brief tour of the Linux logging systems, and
    then show you a cool trick to help make your log reviews easier. Then, I'll show
    you how to set up a remote logging server, complete with **Transport Layer Security**
    (**TLS**)-encrypted connections to the clients.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将带你简要了解 Linux 日志系统，然后展示一个很酷的技巧，帮助你更轻松地审查日志。接下来，我将向你展示如何设置一个远程日志服务器，并为客户端提供
    **传输层安全性** (**TLS**)-加密连接。
- en: 'The topics that we will be covering are:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要讨论的主题包括：
- en: Understanding the Linux system log files
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Linux 系统日志文件
- en: Understanding `rsyslog`
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 `rsyslog`
- en: Understanding `journald`
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 `journald`
- en: Making things easier with Logwatch
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Logwatch 让事情变得更简单
- en: Setting up a remote log server
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置远程日志服务器
- en: The focus of this chapter is on logging tools that are either already built
    into your Linux distro or that are available in your distro repositories. Other
    Packt Publishing books, such as the *Linux Administration Cookbook*, by Adam K.
    Dean, show you some of the fancier, more advanced third-party log aggregation
    and analysis tools.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的重点是讨论那些已经内置在你的 Linux 发行版中或可以从发行版仓库中获得的日志工具。其他 Packt Publishing 书籍，例如 Adam
    K. Dean 的 *Linux 管理食谱*，会向你展示一些更高级、更复杂的第三方日志聚合和分析工具。
- en: So, if you're ready and raring to go, let's look at those Linux log files.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你已经准备好并充满干劲，让我们来看看那些 Linux 日志文件。
- en: Understanding the Linux system log files
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 Linux 系统日志文件
- en: 'You''ll find the Linux log files in the `/var/log/` directory. The structure
    of Linux log files is pretty much the same across all Linux distros. But, in the
    Linux tradition of trying to keep us all confused, the main log files have different
    names on different distros. On Red Hat-type systems, the main log file is the
    `messages` file, and the log for authentication-related events is the `secure`
    file. On Debian/Ubuntu-type systems, the main log file is the `syslog` file, and
    the authentication log is the `auth.log` file. Other log files you''ll see include
    the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 `/var/log/` 目录中找到 Linux 日志文件。Linux 日志文件的结构在所有 Linux 发行版中基本相同。但为了保持 Linux
    传统的困惑，各个发行版的主要日志文件名称不同。在 Red Hat 系统中，主要日志文件是 `messages` 文件，认证相关事件的日志是 `secure`
    文件。在 Debian/Ubuntu 系统中，主要日志文件是 `syslog` 文件，认证日志是 `auth.log` 文件。你还会看到其他一些日志文件，包括：
- en: '`/var/log/kern.log`: On Debian/Ubuntu-type systems, this log contains messages
    about what''s going on with the Linux kernel. As we saw in *Chapter 4, Securing
    Your Server with a Firewall - Part 1*, and *Chapter 5, Securing Your Server with
    a Firewall - Part 2*, this includes messages about what''s going on with the Linux
    firewall. So, if you want to see whether any suspicious network packets have been
    blocked, this is the place to look. Red Hat-type systems don''t have this file.
    Instead, Red Hat systems send their kernel messages to the `messages` file.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/kern.log`：在 Debian/Ubuntu 系统中，这个日志包含有关 Linux 内核运行情况的消息。正如我们在 *第 4
    章：用防火墙保护你的服务器 - 第 1 部分* 和 *第 5 章：用防火墙保护你的服务器 - 第 2 部分* 中所看到的，这包括有关 Linux 防火墙运行情况的消息。所以，如果你想查看是否有任何可疑的网络数据包被阻止，这就是你需要查看的地方。Red
    Hat 系统没有这个文件。相反，Red Hat 系统会将其内核消息发送到 `messages` 文件中。'
- en: '`/var/log/wtmp` and `/var/run/utmp`: The two files do essentially the same
    thing. They both record information about users who are logged in to the system.
    The main difference is that `wtmp` holds historical data from `utmp`. Unlike most
    Linux log files, these are in binary format, rather than normal text-mode format.
    The `utmp` file is the only file we''ll look at that isn''t in the `/var/log/`
    directory.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/wtmp` 和 `/var/run/utmp`：这两个文件本质上执行相同的功能。它们都记录登录到系统的用户信息。主要区别在于，`wtmp`
    保存来自 `utmp` 的历史数据。与大多数 Linux 日志文件不同，这些文件采用二进制格式，而非普通的文本模式格式。`utmp` 文件是我们将要查看的唯一不在
    `/var/log/` 目录下的文件。'
- en: '`/var/log/btmp`: This binary file holds information about failed login attempts.
    The `pam_tally2` module that we looked at in *Chapter 3, Securing Normal User
    Accounts*, uses the information that''s in this file.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/btmp`：这个二进制文件包含失败登录尝试的信息。我们在*第3章 安全保护普通用户账户*中看过的`pam_tally2`模块使用了该文件中的信息。'
- en: '`/var/log/lastlog`: This binary file holds information about the last time
    that users logged in to the system.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/lastlog`：这个二进制文件包含用户上次登录系统的时间信息。'
- en: '`/var/log/audit/audit.log`: This text-mode file records information from the
    auditd daemon. We already discussed it in *Chapter 12*, *Scanning, Hardening,
    and Auditing*, so I won''t discuss it here.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/audit/audit.log`：这个文本模式文件记录了来自auditd守护进程的信息。我们在*第12章 扫描、加固与审计*中已经讨论过它，所以在这里就不再详细讲解。'
- en: There are quite a few other log files that contain information about applications
    and system boot-ups. But the log files that I've listed here are the main ones
    we're concerned about when looking at system security.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他日志文件包含关于应用程序和系统启动的信息。但我在这里列出的日志文件是我们在查看系统安全时最关心的主要文件。
- en: Now that we've looked at what log files we have, let's look at them in more
    detail.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看过了有哪些日志文件，让我们更详细地了解它们。
- en: The system log and the authentication log
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 系统日志和认证日志
- en: It doesn't matter whether you're talking about the `syslog` and `auth.log` files
    on Debian/Ubuntu or the `messages` and `secure` files on RHEL/CentOS/AlmaLinux.
    On any of these systems, the files are the same, just with different names. The
    system log files and the authentication log files have the same basic structure
    and are all plaintext files. This makes it easy to search for specific information
    with tools that are already built into Linux. It doesn't really matter which virtual
    machine we use for this, other than to keep the names of the files straight.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是在讨论Debian/Ubuntu上的`syslog`和`auth.log`文件，还是在RHEL/CentOS/AlmaLinux上的`messages`和`secure`文件，这些文件在不同系统中是相同的，只是名字不同。系统日志文件和认证日志文件有相同的基本结构，都是纯文本文件。这使得我们可以使用Linux内置的工具方便地搜索特定信息。其实我们使用哪个虚拟机并不重要，主要是确保文件名的一致性。
- en: 'To begin, let''s look at a simple message from the system log:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们来看一下系统日志中的一条简单信息：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here''s the breakdown:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是具体内容：
- en: '`Jul 1 18:16:12`: This is the date and time that the message was generated.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Jul 1 18:16:12`：这是消息生成的日期和时间。'
- en: '`localhost`: This is the hostname of the machine that generated the message.
    This is important because one Linux machine can serve as the central log repository
    for other Linux machines. By default, messages from other machines will just get
    dumped into the same log file that the local machine uses. So, we need this field
    to let us know what''s happening on each machine.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`localhost`：这是生成信息的机器的主机名。这很重要，因为一台Linux机器可以作为其他Linux机器的中央日志存储库。默认情况下，其他机器的消息会被直接丢到本地机器使用的同一个日志文件中。因此，我们需要这个字段来了解每台机器上发生了什么。'
- en: '`systemd[1]`: This is the service that generated the message. In this case,
    it was the `systemd` daemon.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`systemd[1]`：这是生成该消息的服务。在这个例子中，是`systemd`守护进程。'
- en: The rest of the line is the specific message.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这一行的其余部分是具体的消息内容。
- en: 'There are several ways to extract information from the text-mode log files.
    For now, we''ll just open the files in `less`, as in this example:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 提取文本模式日志文件信息有多种方式。目前，我们仅仅在`less`中打开文件，如这个示例所示：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, to search for a specific text string, hit the **/** key, type in the string
    that you want to find, and hit Enter.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，要搜索特定的文本字符串，按下**/**键，输入你想查找的字符串，然后按回车。
- en: 'So, what kind of security-related information can we expect to find in these
    files? To start, let''s look at the permissions on the server''s private SSH keys:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们可以在这些文件中找到哪些与安全相关的信息呢？首先，让我们看一下服务器私钥的权限：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This private key, the `ssh_host_rsa_key` file, has to have permissions set
    for only the root user. But, the `+` sign at the end of the permissions settings
    denotes that someone has set an **access-control list** (**ACL**) on that file.
    `getfacl` will show us exactly what''s going on:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这个私钥，`ssh_host_rsa_key`文件，必须仅对root用户设置权限。但是，权限设置末尾的`+`符号表示该文件上设置了**访问控制列表**（**ACL**）。`getfacl`命令会显示具体的情况：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'So, someone has created the `sshdnoroot` user and assigned it the read permission
    for the server''s private SSH keys. Now, if I try to restart the OpenSSH daemon,
    it will fail. A peek into the system log—the `syslog` file, in this case—will
    tell me why:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，有人创建了 `sshdnoroot` 用户，并为其分配了对服务器私有 SSH 密钥的读取权限。现在，如果我尝试重启 OpenSSH 守护进程，它将失败。查看系统日志——在此案例中是
    `syslog` 文件——将告诉我原因：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'So, the SSH daemon won''t start if someone other than the root user has any
    access permissions for the server''s private keys. But how did this happen? Let''s
    search through the authentication file—`auth.log`, in this case—to see if there''s
    a clue:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果除了 root 用户之外的其他人对服务器的私钥有任何访问权限，SSH 守护进程就无法启动。但这是怎么发生的呢？让我们在认证文件中搜索——在这个例子中是
    `auth.log`——看看是否能找到线索：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Ah, so that `donnie` character did this. Why, this is an outrage! Fire that
    guy immediately! Oh wait, that's me. On second thought, let's not fire him. But
    seriously, this shows the value of forcing users to use `sudo` instead of allowing
    them to do everything from the root shell. If I had done this from the root shell,
    the authentication log would have shown where I logged in as the root user, but
    it wouldn't have shown anything I did as the root user. With `sudo`, every root-level
    action gets logged, along with who did it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 啊，原来是那个 `donnie` 做的这件事。什么？这太离谱了！立刻解雇那家伙！等等，那是我自己。再想想，还是不要解雇他了。不过说真的，这显示了强制用户使用
    `sudo` 而不是允许他们从 root shell 做任何事的价值。如果我从 root shell 执行这些操作，认证日志只会显示我作为 root 用户登录的地方，但不会显示我以
    root 用户身份做了什么。而使用 `sudo`，每个 root 权限的操作都会被记录下来，且会显示执行操作的人。
- en: 'There are several ways to obtain specific information from the log files. These
    include:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以从日志文件中获取特定信息，包括：
- en: Using the search feature of the `less` utility, as I mentioned earlier
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用前面提到的 `less` 工具的搜索功能
- en: Using `grep` to search for text strings through either one file or multiple
    files at once
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `grep` 来搜索一个或多个文件中的文本字符串
- en: Writing scripts in languages such as `bash`, Python, or `awk`
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用诸如 `bash`、Python 或 `awk` 等语言编写脚本
- en: 'Here''s an example of using `grep`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用 `grep` 的一个示例：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In this case, I'm searching through the `syslog` file for all lines that contain
    the text string `fail`. By default, `grep` is case-sensitive, so this command
    won't find any instances of `fail` with uppercase letters. Also, by default, `grep`
    finds text strings that are embedded within other text strings. So, in addition
    to just finding `fail`, this command will also find `failed`, `failure`, or any
    other text string that contains the text string `fail`.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我正在搜索 `syslog` 文件中包含文本字符串 `fail` 的所有行。默认情况下，`grep` 是区分大小写的，因此此命令不会找到任何包含大写字母的
    `fail`。此外，默认情况下，`grep` 会找到嵌入在其他文本字符串中的文本。因此，除了找到 `fail`，这个命令还会找到 `failed`、`failure`
    或任何包含 `fail` 的其他文本字符串。
- en: 'To make the search case-insensitive, add the `-i` option, like so:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 若要使搜索不区分大小写，请添加 `-i` 选项，如下所示：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This will find all forms of `fail` in either uppercase or lowercase letters.
    To only search for the `fail` text string, and to exclude where it''s embedded
    in other text strings, use the `-w` option, like so:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这将找到所有形式的 `fail`，无论是大写还是小写字母。若只搜索 `fail` 这个文本字符串，并排除它嵌入在其他文本字符串中的情况，请使用 `-w`
    选项，如下所示：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can combine the two options like this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像这样结合两个选项：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In general, if you don't know exactly what you're looking for, start off with
    a more generic search that will probably show you too much. Then, narrow things
    down until you find what you want.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，如果你不确定自己在寻找什么，可以先从一个更通用的搜索开始，这可能会显示过多信息。然后逐步缩小范围，直到找到你想要的内容。
- en: Now, this is all good when you just want to search through the log files for
    specific information. But it's rather tedious when you need to do your daily log
    review. Later on, I'll show you a tool that will make that much easier. For now,
    let's look at the binary log files.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你只想在日志文件中搜索特定信息时，以上方法是有效的。但如果你需要进行日常日志审查，这就有些繁琐了。稍后我将向你展示一款可以简化这项工作的工具。现在，让我们来看看二进制日志文件。
- en: The utmp, wtmp, btmp, and lastlog files
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`utmp`、`wtmp`、`btmp` 和 `lastlog` 文件'
- en: Unlike the system log files and the authentication log files, all of these files
    are binary files. So, we can't use our normal text tools, such as `less` or `grep`,
    to read them or extract information from them. Instead, we'll use some special
    tools that can read these binary files.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 与系统日志文件和认证日志文件不同，所有这些文件都是二进制文件。所以，我们不能使用常规的文本工具，如 `less` 或 `grep`，来读取它们或从中提取信息。相反，我们将使用一些特殊的工具来读取这些二进制文件。
- en: 'The `w` and `who` commands pull information about who''s logged in and what
    they''re doing from the `/var/run/utmp` file. Both commands have their own option
    switches, but you likely won''t ever need them. If you just want to see the list
    of users who are currently logged in, use `who` like so:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`w`和`who`命令从`/var/run/utmp`文件中提取有关已登录用户及其活动的信息。这两个命令都有自己的选项切换，但您可能永远不会需要它们。如果只想查看当前已登录用户的列表，请像这样使用`who`：'
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: It shows me with three different logins. The `tty7` line is my local terminal
    session, and the `pts/1` and `pts/2` lines are my two remote SSH sessions from
    the `192.168.0.251` machine. Katelyn and Lionel are remotely logged in from two
    other machines.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 它显示我有三个不同的登录。`tty7`行是我的本地终端会话，`pts/1`和`pts/2`行是我从`192.168.0.251`机器的两个远程SSH会话登录的。凯特琳和莱昂纳德从另外两台机器上远程登录。
- en: 'The `w` command shows you not only who''s logged in, but also what they''re
    doing:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`w`命令不仅显示谁登录了，还显示他们在做什么：'
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This shows five users, but there are really only three since it counts each
    of my login sessions as a separate user. The `:0` under the `FROM` column for
    my first login means that this login is at the machine's local console. The `/bin/sh`
    part shows that I have a terminal window open, and the `/etc/xdg/xfce4/xinitrc
    -- /etc/X11/xinit/xserverrc` stuff means that the machine is in graphical mode,
    with the XFCE desktop. The `pts/1` line shows that I've run the `w` command in
    that window, and the `pts/2` line shows that I'm not doing anything in that window,
    other than just having the bash shell open.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了五个用户，但实际上只有三个，因为它将我每个登录会话都视为一个单独的用户。在我的第一个登录的`FROM`列下的`:0`表示这个登录在机器的本地控制台。`/bin/sh`部分显示我有一个终端窗口打开，`/etc/xdg/xfce4/xinitrc
    -- /etc/X11/xinit/xserverrc`部分表示机器处于图形模式，使用XFCE桌面。`pts/1`行显示我在那个窗口中运行了`w`命令，而`pts/2`行显示我在那个窗口中什么都没做，除了打开了bash
    shell。
- en: 'Next, we see that Katelyn is editing a file. So, I think that she''s all good.
    But look at Lionel. The `[priv]` in his line indicates that he''s doing some sort
    of privileged action. To see what that action is, we''ll peek into the authentication
    file, where we see this:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步，我们看到凯特琳正在编辑一个文件。所以，我认为她一切都好。但是看看莱昂纳德。他行中的`[priv]`表明他正在执行某种特权操作。要查看这个操作是什么，我们将窥探认证文件，我们在那里看到了这个：
- en: '[PRE12]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Oh, come now. What fool gave Lionel the privileges to use `visudo`? I mean,
    we know that Lionel isn''t supposed to have that privilege. Well, we can investigate.
    Further up in the authentication file, we see this:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，来吧。什么傻瓜给了莱昂纳德使用`visudo`的特权？我是说，我们知道莱昂纳德不应该有那个特权。好吧，我们可以调查一下。在认证文件的更上方，我们看到了这个：
- en: '[PRE13]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This shows that that `donnie` character opened `visudo`, but it doesn't show
    what edits he made to it. But since this line comes soon after the line where
    `donnie` created Lionel's account, and no other users have used `visudo`, it's
    a safe bet that `donnie` is the one who gave Lionel that `visudo` privilege. So,
    we can surmise that that `donnie` character is a real loser who deserves to be
    fired. Oh, wait. That was me again, wasn't it? Okay, never mind.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了那个`donnie`角色打开了`visudo`，但没有显示他对其进行了什么编辑。但由于这一行紧随`donnie`创建莱昂纳德账户的行之后，并且没有其他用户使用`visudo`，可以有把握地说`donnie`是给了莱昂纳德那个`visudo`特权的人。因此，我们可以推断，那个`donnie`角色是一个真正该被解雇的失败者。哦，等等。那不是我吗？好吧，不管了。
- en: 'In normal usage, the `last` command pulls information from the `/var/log/wtmp`
    file, which archives historical data from the `/var/run/utmp` file. Without any
    option switches, `last` shows when each user has logged in or out, and when the
    machine has been booted:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在正常使用中，`last`命令从`/var/log/wtmp`文件中提取信息，该文件归档了来自`/var/run/utmp`文件的历史数据。如果没有任何选项切换，`last`会显示每个用户的登录或注销时间，以及机器的启动时间：
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To show a list of failed login attempts, use the `-f` option to read the `/var/log/btmp`
    file. The catch is that this requires `sudo` privileges because we generally want
    to keep information about failed logins confidential:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示失败的登录尝试列表，请使用`-f`选项读取`/var/log/btmp`文件。关键在于，这需要`sudo`权限，因为我们通常希望保持有关失败登录的信息机密：
- en: '[PRE15]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Of course, we could see about Katelyn's three failed logins in the `auth.log`
    or `secure` file, but it's handier and quicker to see about them here.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以查看凯特琳在`auth.log`或`secure`文件中的三次登录失败，但在这里查看它们更方便和更快。
- en: 'Finally, there''s the `lastlog` command, which pulls information from—you guessed
    it—the `/var/log/lastlog` file. This shows a record of all users on the machine,
    even system users, and when they logged in last:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最后是`lastlog`命令，它从—你猜到了—`/var/log/lastlog`文件中提取信息。该命令显示了机器上所有用户（甚至系统用户）的登录记录，以及他们最后一次登录的时间：
- en: '[PRE16]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: There are a lot more logs in the `/var/log/` directory, but I've just given
    you the quick tour of the logs that pertain to system security. Next, we'll look
    at the two major logging systems that are built into most Linux distros, starting
    with the `rsyslog` system.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`/var/log/`目录下有很多其他日志，但我这里只给你简要介绍与系统安全相关的日志。接下来，我们将看看大多数Linux发行版中内置的两个主要日志系统，从`rsyslog`系统开始。'
- en: Understanding rsyslog
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解rsyslog
- en: The old `syslog` logging system was created back in the 1980s for use on Unix
    and other Unix-like systems. It finally saw its last days in the Linux world only
    a few years ago. Nowadays, we use `rsyslog`, which is a bit more robust and has
    a few more features. It works mainly the same on both Debian/Ubuntu-based and
    Red Hat-based distros, with only some differences in how the configuration files
    are set up. But, before we look at the differences, let's look at what's the same.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 旧的`syslog`日志系统创建于1980年代，用于Unix及其他类Unix系统。直到几年前，它才在Linux世界中走向终结。如今，我们使用`rsyslog`，它更加健壮，功能也多了一些。它在基于Debian/Ubuntu和基于Red
    Hat的发行版上主要是相同的，只是在配置文件的设置上有所不同。但在看差异之前，让我们先看看相同之处。
- en: Understanding rsyslog logging rules
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解rsyslog日志规则
- en: 'Logging rules define where to record messages for each particular system service:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 日志规则定义了将每个特定系统服务的消息记录到哪里：
- en: 'On Red Hat/CentOS/AlmaLinux systems, the rules are stored in the `/etc/rsyslog.conf`
    file. Just scroll down until you see the `#### RULES ####` section.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在Red Hat/CentOS/AlmaLinux系统上，规则存储在`/etc/rsyslog.conf`文件中。只需向下滚动，直到看到`#### RULES
    ####`部分。'
- en: On Debian/Ubuntu systems, the rules are in separate files in the `/etc/rsyslog.d/`
    directory. The main file that we care about for now is the `50-default.conf` file,
    which contains the main logging rules.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Debian/Ubuntu系统上，规则存储在`/etc/rsyslog.d/`目录中的不同文件中。目前我们关心的主要文件是`50-default.conf`，它包含了主要的日志规则。
- en: 'To explain the structure of an `rsyslog` rule, let''s look at this example
    from an AlmaLinux machine:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明`rsyslog`规则的结构，我们来看一个来自AlmaLinux机器的例子：
- en: '[PRE17]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Here''s the breakdown:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是详细分类：
- en: '`authpriv`: This is the facility, which defines the type of message.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`authpriv`：这是设施，定义了消息的类型。'
- en: '`.`: The dot separates the facility from the level, which is the next field.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.`：点号将设施与级别分开，后者是下一个字段。'
- en: '`*`: This is the level, which indicates the importance of the message. In this
    case, we just have a wildcard, which means that all levels of the `authpriv` facility
    get logged.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*`：这是级别，表示消息的重要性。在这种情况下，我们使用通配符，意味着`authpriv`设施的所有级别都会被记录。'
- en: '`/var/log/secure`: This is the action, which is really the destination of this
    message. (I have no idea why someone decided to call this an action.)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/secure`：这是动作，实际上是该消息的目标位置。（我不知道为什么有人决定称其为动作。）'
- en: When we put this all together, we see that `authpriv` messages of all levels
    will get sent to the `/var/log/secure` file.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将这些内容汇总时，可以看到所有级别的`authpriv`消息会被发送到`/var/log/secure`文件中。
- en: 'Here''s a handy list of the predefined `rsyslog` facilities:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是预定义的`rsyslog`设施的简要列表：
- en: '`auth`: Messages generated by the authorization system (`login`, `su`, `sudo`,
    and so forth)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auth`：由授权系统生成的消息（如`login`、`su`、`sudo`等）'
- en: '`authpriv`: Messages generated by the authorization system but which are only
    readable by selected users'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`authpriv`：由授权系统生成的消息，但仅供选定用户读取'
- en: '`cron`: Messages generated by the `cron` daemon'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cron`：由`cron`守护进程生成的消息'
- en: '`daemon`: Messages generated by all system daemons (for example, `sshd`, `ftpd`,
    and so forth)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`daemon`：所有系统守护进程生成的消息（例如，`sshd`、`ftpd`等）'
- en: '`ftp`: Messages for `ftp`'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ftp`：`ftp`生成的消息'
- en: '`kern`: Messages generated by the Linux kernel'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kern`：由Linux内核生成的消息'
- en: '`lpr`: Messages generated by the line printer spooling'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lpr`：由行打印机排队生成的消息'
- en: '`mail`: Messages generated by the mail system'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mail`：由邮件系统生成的消息'
- en: '`mark`: Periodic timestamp message in the system log'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mark`：系统日志中的定期时间戳消息'
- en: '`news`: Messages generated by network news system'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`news`：由网络新闻系统生成的消息'
- en: '`rsyslog`: Messages generated internally by `rsyslog`'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rsyslog`：`rsyslog`内部生成的消息'
- en: '`user`: Messages generated by users'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user`：由用户生成的消息'
- en: '`local0-7`: Custom messages for writing your own scripts'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local0-7`：用于编写自定义脚本的自定义消息'
- en: 'Here''s a list of the different levels:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是不同日志级别的列表：
- en: '`none`: Disables logging for a facility'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`：禁用某个设施的日志记录'
- en: '`debug`: Debug only'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`debug`：仅调试'
- en: '`info`: Information'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`info`：信息'
- en: '`notice`: Issues to review'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`notice`：需要检查的问题'
- en: '`warning`: Warning messages'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`warning`：警告消息'
- en: '`err`: Error conditions'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`err`：错误条件'
- en: '`crit`: Critical conditions'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`crit`：严重条件'
- en: '`alert`: Urgent messages'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alert`：紧急消息'
- en: '`emerg`: Emergency'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`emerg`：紧急情况'
- en: 'Except for the `debug` level, whatever level you set for a facility will cause
    messages of that level up through `emerg` to get logged. For example, when you
    set the `info` level, all messages of the `info` levels through `emerg` get logged.
    With that in mind, let''s look at a more complex example of a logging rule, also
    from an AlmaLinux machine:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`debug`级别外，你为某个设施设置的任何级别都会导致该级别及以上（直到`emerg`）的消息被记录。例如，当你设置`info`级别时，所有`info`级别及以上的消息都会被记录。考虑到这一点，让我们看一个更复杂的日志规则示例，这也是来自AlmaLinux机器的：
- en: '[PRE18]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here''s the breakdown:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这是详细的步骤：
- en: '`*.info`: This refers to messages from all facilities of the `info` level and
    higher.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*.info`：这指的是来自所有设施的`info`级别及以上的消息。'
- en: '`;`: This is a compound rule. The semicolons separate the different components
    of this rule from each other.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`;`：这是一个复合规则。分号将该规则的不同部分彼此分开。'
- en: '`mail.none;authpriv.none;cron.none`: These are the three exceptions to this
    rule. Messages from the `mail`, `authpriv`, and `cron` facilities will not get
    sent to the `/var/log/messages` file. These three facilities have their own rules
    for their own log files. (The `authpriv` rule that we just looked at earlier is
    one of them.)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mail.none;authpriv.none;cron.none`：这些是这个规则的三个例外。来自`mail`、`authpriv`和`cron`设施的消息不会被发送到`/var/log/messages`文件中。这三个设施有自己的日志文件规则。（我们之前看到的`authpriv`规则就是其中之一。）'
- en: The rules on an Ubuntu machine aren't exactly the same as the ones on an AlmaLinux
    machine. But, if you understand these examples, you won't have any trouble figuring
    out the Ubuntu rules.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu机器上的规则与AlmaLinux机器上的规则不完全相同。但如果你理解了这些示例，就不会有什么问题去弄懂Ubuntu的规则。
- en: 'If you ever make changes to the `rsyslog.conf` file or add any rules files
    to the `/etc/rsyslog.d/` directory, you''ll need to restart the `rsyslog` daemon
    to read in the new configuration. Do that like this:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对`rsyslog.conf`文件进行更改或向`/etc/rsyslog.d/`目录添加任何规则文件，你需要重新启动`rsyslog`守护进程以读取新的配置。你可以按如下方式进行操作：
- en: '[PRE19]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now that you have a basic understanding of `rsyslog`, let's look at `journald`,
    which is the new kid in town.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经对`rsyslog`有了基本了解，接下来我们来看一下`journald`，它是新来的“新手”。
- en: Understanding journald
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解journald
- en: You'll find the `journald` logging system on any Linux distro that uses the
    `systemd` ecosystem. Instead of sending its messages to text files, `journald`
    sends messages to binary files. Instead of using normal Linux text file utilities
    to extract information, you have to use the `journalctl` utility. At the time
    of this writing, I don’t know of any Linux distro that has made the complete transition
    to `journald`. Current Linux distros that use `systemd` run `journald` and `rsyslog`
    side by side. Currently, the default on RHEL-type systems is for `journald` log
    files to be temporary files that get erased every time you reboot the machine.
    (You can configure `journald` to make its log files persistent, but there's probably
    not much point as long as we still need to keep the old `rsyslog` files.) On Ubuntu,
    the default is for both `journald` and `rsyslogd` to maintain persistent log files.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你会在任何使用`systemd`生态系统的Linux发行版上找到`journald`日志系统。`journald`不再将消息发送到文本文件，而是发送到二进制文件。你必须使用`journalctl`工具来提取信息，而不是使用普通的Linux文本文件工具。截止到本文编写时，我还不知道有哪个Linux发行版已经完全转向使用`journald`。目前使用`systemd`的Linux发行版同时运行`journald`和`rsyslog`。目前，RHEL类型系统的默认设置是`journald`日志文件为临时文件，每次重启机器时都会被删除。（你可以配置`journald`使其日志文件持久化，但只要我们仍需要保留旧的`rsyslog`文件，这可能没有太大意义。）在Ubuntu上，默认设置是`journald`和`rsyslogd`都保持持久化日志文件。
- en: On RHEL 8/9-type distros, `journald`, instead of `rsyslog`, is now what actually
    collects log messages from the rest of the operating system. But `rsyslog` is
    still there, collecting the messages from `journald` and sending them to the old-fashioned
    `rsyslog` text files. So, the way you do log file management hasn't really changed.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在RHEL 8/9类型的发行版中，`journald`代替了`rsyslog`，现在实际收集操作系统其他部分的日志消息。但`rsyslog`仍然存在，收集来自`journald`的消息并将其发送到传统的`rsyslog`文本文件中。因此，日志文件管理的方式并没有真正改变。
- en: It will likely take a few more years to completely transition away from `rsyslog`.
    One reason is that third-party log aggregation and analysis utilities, such as
    LogStash, Splunk, and Nagios, are still set up to read text files instead of binary
    files. Another reason is that, at this point, using `journald` as a remote, central
    log server is still in a proof-of-concept stage that isn't ready for production
    use. So, for now, `journald` isn't a suitable substitute for `rsyslog`.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 完全从`rsyslog`过渡可能还需要几年时间。一个原因是，像LogStash、Splunk和Nagios这样的第三方日志聚合和分析工具，仍然被设置为读取文本文件，而不是二进制文件。另一个原因是，目前使用`journald`作为远程中央日志服务器仍处于概念验证阶段，尚未准备好投入生产使用。因此，目前`journald`还不能替代`rsyslog`。
- en: Several years ago, the Fedora team released a version of Fedora that only used
    `journald`, and that left out `rsyslog`. Too many people complained about that,
    so they had to bring back `rsyslog` for the next version of Fedora.
  id: totrans-132
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 几年前，Fedora团队发布了一个只使用`journald`的版本，省略了`rsyslog`。太多人对此提出投诉，因此他们不得不在下一个版本的Fedora中重新引入`rsyslog`。
- en: 'To view the `journald` log file in its entirety, use the `journalctl` command.
    With Ubuntu, the person who installed the operating system has been added to the
    `adm` group, which allows that person to use `journalctl` without sudo or root
    privileges. Any users who are added later would only be able to see their own
    messages. In fact, here''s what happened for Frank:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看完整的`journald`日志文件，请使用`journalctl`命令。在Ubuntu中，安装操作系统的人已经被添加到`adm`组，这使得该用户可以在没有sudo或root权限的情况下使用`journalctl`。任何后期添加的用户只能查看自己的消息。实际上，Frank就是这样：
- en: '[PRE20]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: To see messages from either the system or from other users, these new users
    would have to be added to either the `adm` or the `systemd-journal` group, or
    granted the proper sudo privileges. With RHEL/CentOS/AlmaLinux, no users are automatically
    added to either the `adm` or `systemd-journal` group. So, initially, only users
    who have sudo privileges can view the `journald` logs.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看来自系统或其他用户的消息，这些新用户必须被添加到`adm`或`systemd-journal`组，或者被授予适当的sudo权限。在RHEL/CentOS/AlmaLinux中，没有用户会自动加入`adm`或`systemd-journal`组。因此，最初，只有具有sudo权限的用户才能查看`journald`日志。
- en: 'Doing either `journalctl` or `sudo journalctl`, as appropriate, automatically
    opens the log in the `less` pager. What you''ll see looks pretty much the same
    as what you''d see in the normal `rsyslog` log files, with the following exceptions:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是`journalctl`还是`sudo journalctl`，根据需要，都会自动在`less`分页器中打开日志。你看到的内容与正常的`rsyslog`日志文件几乎一样，唯一的例外是：
- en: Long lines run past the right-hand edge of the screen. To see the rest of the
    lines, use the right cursor key.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 长行会超出屏幕的右边缘。要查看剩余的行，可以使用右箭头键。
- en: You'll also see color-coding and highlighting to make different types of messages
    stand out. Messages of `ERROR` level and higher are in red, while messages from
    `NOTICE` level up to `ERROR` level are highlighted with bold characters.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你还会看到颜色编码和高亮显示，使不同类型的消息更加突出。`ERROR`级别及更高级别的消息显示为红色，而从`NOTICE`级别到`ERROR`级别的消息则以粗体字符突出显示。
- en: 'There are lots of options that can display different types of information in
    various formats. For example, to only see messages about the SSH service on CentOS
    or AlmaLinux, use the `--unit` option, like so:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多选项可以以不同的格式显示不同类型的信息。例如，若要仅查看关于CentOS或AlmaLinux上SSH服务的消息，可以使用`--unit`选项，如下所示：
- en: '[PRE21]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can''t use the grep utility with these binary logs, but you can search
    for a string with the `-g` option. By default, it''s case-insensitive and finds
    your desired text string even when it''s embedded in another text string. Here,
    we see it finding the text string, `fail`:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能使用grep工具来处理这些二进制日志，但你可以通过`-g`选项搜索一个字符串。默认情况下，它是不区分大小写的，即使目标文本字符串嵌入在另一个文本字符串中，它也能找到。在这里，我们看到它找到了文本字符串`fail`：
- en: '[PRE22]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'There are lots more options besides just these. To see them, just do:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些，还有很多其他选项。要查看它们，只需执行：
- en: '[PRE23]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now that you've seen the basics of using both `rsyslog` and `journald`, let's
    look at a cool utility that can help to ease the pain of doing log reviews.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了如何使用`rsyslog`和`journald`的基本操作，让我们看看一个很棒的工具，它能帮助你减轻日志审核的痛苦。
- en: Making things easier with Logwatch
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Logwatch简化操作
- en: You know how important it is to do a daily log review. But you also know how
    much of a drag it is, and that you'd rather take a severe beating. Fortunately,
    there are various utilities that can make the job easier. Of the various choices
    in the normal Linux distro repositories, Logwatch is my favorite.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道每天审查日志有多重要，但你也知道这有多么令人沮丧，简直宁愿挨一顿狠打。幸运的是，有各种工具可以让这项工作变得更轻松。在正常的 Linux 发行版仓库中，Logwatch
    是我最喜欢的工具。
- en: Logwatch doesn't have the fancy bells and whistles that the third-party log
    aggregators have, but it's still quite good. Every morning, you'll find a summary
    of the previous day's logs delivered to your mail account. Depending on how your
    mail system is configured, you can have the summaries delivered to your user account
    on the local machine or to an email account that you can access from anywhere.
    It's as easy as can be to set up, so let's demonstrate with a hands-on lab.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Logwatch 没有第三方日志聚合器那样花哨的功能，但它依然非常不错。每天早晨，你会在你的邮箱账户中收到前一天日志的摘要。根据你的邮件系统配置，你可以将摘要发送到本地机器上的用户账户，或者发送到你可以随时访问的邮箱账户。设置起来非常简单，下面我们通过一个实际操作来演示。
- en: Hands-on lab – installing Logwatch
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实操实验 – 安装 Logwatch
- en: To deliver its messages, Logwatch requires that the machine also has a running
    mail server daemon. Depending on the options you chose when installing the operating
    system, you might or might not already have the Postfix mail server installed.
    When Postfix is set up as a local server, it will deliver system messages to the
    root user's local account.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 为了传递消息，Logwatch 要求机器上必须有正在运行的邮件服务器守护进程。根据你在安装操作系统时选择的选项，你可能已经安装了 Postfix 邮件服务器，也可能没有。当
    Postfix 被设置为本地服务器时，它会将系统消息发送到 root 用户的本地账户。
- en: To view the Logwatch summaries on the local machine, you'll also need to install
    a text-mode mail reader, such as mutt.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 若要在本地机器上查看 Logwatch 摘要，你还需要安装一个文本模式的邮件阅读器，如 mutt。
- en: 'For this lab, you can use any of your VMs:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个实验，你可以使用任何一台虚拟机：
- en: 'Install Logwatch, mutt, and Postfix. (On Ubuntu, choose the `local` option
    when installing Postfix. With CentOS or AlmaLinux, the `local` option is already
    the default.) For Ubuntu, do this:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Logwatch、mutt 和 Postfix。（在 Ubuntu 上，安装 Postfix 时选择 `local` 选项。在 CentOS 或
    AlmaLinux 上，`local` 选项已是默认选项。）在 Ubuntu 上，执行以下操作：
- en: '[PRE24]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'For CentOS 7, do this:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 CentOS 7，执行以下操作：
- en: '[PRE25]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'For AlmaLinux, do this:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 AlmaLinux，请执行以下操作：
- en: '[PRE26]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'On Ubuntu only, create a mail spool file for your user account:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅限 Ubuntu，创建一个邮件存储文件到你的用户账户：
- en: '[PRE27]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Open the `/etc/aliases` file in your favorite text editor. Configure it to
    forward the root user''s mail to your own normal account by adding the following
    line at the bottom of the file:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你喜欢的文本编辑器中的 `/etc/aliases` 文件。配置它，将 root 用户的邮件转发到你自己的普通账户，在文件底部添加以下行：
- en: '[PRE28]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Save the file, and then copy the information from it to a binary file that
    the system can read. Do that with this:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件后，将其中的信息复制到系统可以读取的二进制文件中。你可以通过以下方式实现：
- en: '[PRE29]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'At this point, you have a fully operational implementation of Logwatch that
    will deliver daily log summaries with a *low level* of detail. To see the default
    configuration, look at the default configuration file:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到此为止，你已经完成了 Logwatch 的完整实现，它将以 *低级别* 的详细信息提供每日日志摘要。要查看默认配置，请查看默认配置文件：
- en: '[PRE30]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'To change the configuration, edit the `/etc/logwatch/conf/logwatch.conf` file
    on CentOS and AlmaLinux, or create the file on Ubuntu. Change to a medium level
    of logging detail by adding this line:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更改配置，编辑 CentOS 和 AlmaLinux 上的 `/etc/logwatch/conf/logwatch.conf` 文件，或者在 Ubuntu
    上创建该文件。通过添加以下行来更改为中等级别的日志详细信息：
- en: '[PRE31]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Logwatch is a Python script that runs every night on a scheduled basis. So,
    there's no daemon that you have to restart to make configuration changes take
    effect.
  id: totrans-169
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Logwatch 是一个 Python 脚本，每晚按计划运行。因此，不需要重启守护进程来使配置更改生效。
- en: Perform some actions that will generate some log entries. You can do that by
    performing a system update, installing some software packages, and using `sudo
    fdisk -l` to view the partition configuration.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行一些操作来生成一些日志条目。你可以通过进行系统更新、安装一些软件包，以及使用 `sudo fdisk -l` 查看分区配置来实现。
- en: 'If possible, allow your VM to run overnight. In the morning, view your log
    summary by doing this:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果可能的话，让你的虚拟机运行整晚。第二天早上，通过以下方式查看你的日志摘要：
- en: '[PRE32]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: When prompted to create a `Mail` directory in your home directory, hit the *y*
    key.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 当提示是否在你的主目录中创建一个 `Mail` 目录时，按 *y* 键。
- en: End of lab.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实验结束。
- en: Now that you've seen the easy way of doing a log review, let's move on to the
    final topic of this chapter, which is how to set up a central log server.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你已经看过了简单的日志审查方法，接下来让我们进入本章的最后一个主题——如何搭建中央日志服务器。
- en: Setting up a remote log server
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置远程日志服务器
- en: So far, we've just been dealing with log files on a local machine. But instead
    of having to log into each individual machine to review log files, wouldn't it
    be nice to just have all of the log files from every machine on just one server?
    Well, you can do that. The best part is that it's easy.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只处理了本地机器上的日志文件。但如果不必登录到每台机器来查看日志文件，而是将每台机器的所有日志文件集中到一台服务器上，岂不是很方便？你完全可以做到，最棒的是，这非常简单。
- en: But convenience isn't the only reason to collect log files on one central server.
    There's also the matter of log file security. If we leave all log files on each
    individual host, it's easier for network intruders to find the files and modify
    them to delete any messages about their nefarious activities. (That's easy to
    do since most log files are just plaintext files that can be edited in a normal
    text editor.)
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 但方便性并不是将日志文件集中收集到一个服务器上的唯一原因，还有日志文件的安全性问题。如果我们把所有日志文件都保留在每台主机上，网络入侵者就更容易找到这些文件并修改它们，删除有关其恶意活动的任何信息。（这很容易做到，因为大多数日志文件只是普通文本文件，可以在普通文本编辑器中编辑。）
- en: Hands-on lab – setting up a basic log server
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实验操作——设置基本日志服务器
- en: 'Setting up the server is identical on Ubuntu, CentOS, and AlmaLinux. There''s
    only one minor difference in setting up the clients. For best results, ensure
    that the server VM and the client VM each have a different hostname:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器的设置在Ubuntu、CentOS和AlmaLinux中是完全相同的。只是设置客户端时有一个小差异。为了获得最佳效果，请确保服务器虚拟机和客户端虚拟机具有不同的主机名：
- en: 'On the log-collecting server VM, open the `/etc/rsyslog.conf` file in your
    favorite text editor and look for these lines, which are near the top of the file:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在日志收集服务器虚拟机上，打开`/etc/rsyslog.conf`文件，并使用你喜欢的文本编辑器查找这些行，它们通常位于文件的顶部：
- en: '[PRE33]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Uncomment the bottom two lines and save the file. The stanza should now look
    like this:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消注释底部的两行并保存文件。此时该段应该如下所示：
- en: '[PRE34]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Restart the `rsyslog` daemon:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启`rsyslog`守护进程：
- en: '[PRE35]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: If the machine has an active firewall, open port `514/tcp`.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果机器上有启用防火墙，打开`514/tcp`端口。
- en: 'Next, configure the client machines. For Ubuntu, add the following line to
    the bottom of the `/etc/rsyslog.conf` file, substituting the IP address of your
    own server VM:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，配置客户端机器。对于Ubuntu，在`/etc/rsyslog.conf`文件底部添加以下行，并替换为你自己服务器虚拟机的IP地址：
- en: '[PRE36]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'For CentOS and AlmaLinux, look for this stanza at the bottom of the `/etc/rsyslog.conf`
    file:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 对于CentOS和AlmaLinux，查找`/etc/rsyslog.conf`文件底部的这一段：
- en: '[PRE37]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Remove the comment symbols from each line that isn''t obviously a real comment.
    Add the IP address and port number for the log server VM. The finished product
    should look like this:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 删除每行不是显然为注释的注释符号。然后添加日志服务器虚拟机的IP地址和端口号。完成后应该如下所示：
- en: '[PRE38]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Save the file and then restart the `rsyslog` daemon.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件后，重启`rsyslog`守护进程。
- en: On the server VM, verify that messages from both the server VM and the client
    VM are getting sent to the log files. (You can tell by the different hostnames
    for different messages.)
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器虚拟机上，验证来自服务器虚拟机和客户端虚拟机的消息是否已成功发送到日志文件中。（你可以通过不同的主机名来区分不同的消息。）
- en: This is the end of the lab.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这就是实验的结束部分。
- en: As cool as this is, there are still a couple of flaws with the setup. One is
    that we're using a non-encrypted, plaintext connection to send the log files to
    the server. Let's fix that.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这样很酷，但这个设置仍然存在一些缺点。其中之一是我们正在使用一个未加密的明文连接将日志文件发送到服务器。让我们来解决这个问题。
- en: Creating an encrypted connection to the log server
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建与日志服务器的加密连接
- en: 'We''ll use the `stunnel` package to create our encrypted connection. It''s
    easy, except that the procedures for Ubuntu and AlmaLinux are different. These
    differences are:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`stunnel`包来创建加密连接。这很简单，只是Ubuntu和AlmaLinux的操作步骤不同。这些差异如下：
- en: With AlmaLinux 8/9, FIPS modules are available free of charge, as I showed you
    in *Chapter 6*, *Encryption Technologies*. They're not available for CentOS 7,
    and they're only available for Ubuntu if you're willing to purchase a support
    contract. So, for now, the only way we can take advantage of FIPS mode in `stunnel`
    is to set it up on either AlmaLinux 8/9 or some other RHEL 8/9 clone.
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于AlmaLinux 8/9，FIPS模块可以免费使用，正如我在*第6章*、*加密技术*中向你展示的那样。CentOS 7不支持FIPS模块，而Ubuntu只有在购买支持合同的情况下才能使用。因此，目前唯一能利用`stunnel`中的FIPS模式的方法是将其配置在AlmaLinux
    8/9或其他RHEL 8/9克隆版本上。
- en: On AlmaLinux, `stunnel` runs as a `systemd` service. On Ubuntu, for some bizarre
    reason, it's still set up to run with an old-fashioned `init` script. So, we have
    to deal with two different methods of controlling the `stunnel` daemon.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在AlmaLinux上，`stunnel`作为`systemd`服务运行。而在Ubuntu上，由于某些奇怪的原因，它仍然使用老式的`init`脚本。所以，我们不得不处理两种不同的方式来控制`stunnel`守护进程。
- en: Let's begin with the AlmaLinux procedure.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从AlmaLinux的操作开始。
- en: Creating a stunnel connection on AlmaLinux 9 – server side
  id: totrans-203
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在AlmaLinux 9上创建stunnel连接——服务器端
- en: 'For this lab, we''re using an AlmaLinux 9 VM that''s been set to run in FIPS-compliant
    mode (see the steps for that in *Chapter 6*, *Encryption Technologies*):'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本实验，我们使用的是一台已设置为FIPS合规模式的AlmaLinux 9虚拟机（查看*第6章*，*加密技术*中的步骤）：
- en: 'On an AlmaLinux VM, install `stunnel`:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在AlmaLinux虚拟机上，安装`stunnel`：
- en: '[PRE39]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'On the server, within the `/etc/stunnel/` directory, create a new `stunnel.conf`
    file with the following contents:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器上，在`/etc/stunnel/`目录内，创建一个新的`stunnel.conf`文件，内容如下：
- en: '[PRE40]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'On the server, while still within the `/etc/stunnel/` directory, create the
    `stunnel.pem` certificate file:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器上，仍然在`/etc/stunnel/`目录中，创建`stunnel.pem`证书文件：
- en: '[PRE41]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'On the server, open port `30000` on the firewall, and close port `514`:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器上，打开防火墙上的端口`30000`，并关闭端口`514`：
- en: '[PRE42]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Port `6514`, which you see in the `stunnel.conf` file, is strictly for internal
    communication between `rsyslog` and `stunnel`. So, for that, we don't need to
    open a firewall port. We're configuring `stunnel` to listen on port `30000` on
    behalf of `rsyslog`, so we no longer need to have port `514` open on the firewall.
  id: totrans-213
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 端口`6514`，你在`stunnel.conf`文件中看到的端口，仅用于`rsyslog`和`stunnel`之间的内部通信。所以，对于这一点，我们不需要打开防火墙端口。我们将`stunnel`配置为在`rsyslog`的代表下监听端口`30000`，因此不再需要在防火墙上开放端口`514`。
- en: 'Enable and start the `stunnel` daemon by doing this:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下方式启用并启动`stunnel`守护进程：
- en: '[PRE43]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'In the `/etc/rsyslog.conf` file, look for this line at the top of the file:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/rsyslog.conf`文件中，查找文件顶部的这一行：
- en: '[PRE44]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Change it to this:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 将其改为如下：
- en: '[PRE45]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'After saving the file, restart `rsyslog`:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件后，重启`rsyslog`：
- en: '[PRE46]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: The server is now ready to receive log files from remote clients via an encrypted
    connection.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在服务器已经准备好通过加密连接接收来自远程客户端的日志文件。
- en: Next, we'll configure an AlmaLinux VM to send its logs to this server.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将配置AlmaLinux虚拟机将其日志发送到此服务器。
- en: Creating an stunnel connection on AlmaLinux – client side
  id: totrans-224
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在AlmaLinux上创建stunnel连接——客户端
- en: 'In this procedure, we''ll configure an AlmaLinux machine to send its logs to
    the log server (it doesn''t matter whether the log server is running on CentOS,
    AlmaLinux, or Ubuntu):'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个步骤中，我们将配置一台AlmaLinux机器将其日志发送到日志服务器（无论日志服务器是运行在CentOS、AlmaLinux还是Ubuntu上，都没关系）：
- en: 'Install `stunnel`:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`stunnel`：
- en: '[PRE47]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'In the `/etc/stunnel/` directory, create the `stunnel.conf` file with the following
    contents:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/stunnel/`目录中，创建`stunnel.conf`文件，内容如下：
- en: '[PRE48]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: In the `connect` line, substitute the IP address of your own log server for
    the one you see here.
  id: totrans-230
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在`connect`行中，将这里看到的日志服务器的IP地址替换为你自己日志服务器的IP地址。
- en: 'Enable and start the `stunnel` daemon:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用并启动`stunnel`守护进程：
- en: '[PRE49]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'At the bottom of the `/etc/rsyslog.conf` file, look for this line:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/rsyslog.conf`文件的底部，查找这一行：
- en: '[PRE50]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Change it to this:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 将其改为如下：
- en: '[PRE51]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'After saving the file, restart the `rsyslog` daemon:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件后，重启`rsyslog`守护进程：
- en: '[PRE52]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'On the client, use `logger` to send a message to the log file:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在客户端，使用`logger`将消息发送到日志文件：
- en: '[PRE53]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: On the server, verify that the message got added to the `/var/log/messages`
    file.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器上，验证消息是否已添加到`/var/log/messages`文件中。
- en: This is the end of the lab.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本实验到此结束。
- en: Let's now turn our attention to Ubuntu.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们转向Ubuntu。
- en: Creating a stunnel connection on Ubuntu – server side
  id: totrans-244
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在Ubuntu上创建stunnel连接——服务器端
- en: For this, we’ll use an Ubuntu 22.04 VM. I don’t understand why, but Ubuntu still
    uses an old-style `init` script for `stunnel`, instead of a `systemd` service.
    So, the commands that you’ll use for this will be different than what you’re used
    to using.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将使用Ubuntu 22.04虚拟机。我不明白为什么，但Ubuntu仍然使用旧式的`init`脚本来运行`stunnel`，而不是使用`systemd`服务。所以，你将使用的命令与平时的有所不同。
- en: 'Install `stunnel`:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`stunnel`：
- en: '[PRE54]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'In the `/etc/stunnel/` directory, create the `stunnel.conf` file with the following
    contents:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/stunnel/`目录中，创建`stunnel.conf`文件，内容如下：
- en: '[PRE55]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'While still in the `/etc/stunnel/` directory, create the `stunnel.pem` certificate:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/stunnel/`目录中，仍然创建`stunnel.pem`证书：
- en: '[PRE56]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Start the `stunnel` daemon:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动`stunnel`守护进程：
- en: '[PRE57]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'To make it automatically start when you reboot the system, create a cron job
    for the root user. First, open the crotab editor, like this:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在系统重启时自动启动该守护进程，创建一个root用户的定时任务。首先，打开crontab编辑器，方法如下：
- en: '[PRE58]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Add this line to the end of the file:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 将此行添加到文件的末尾：
- en: '[PRE59]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'In the `/etc/rsyslog.conf` file, look for this line at the top:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/rsyslog.conf`文件的顶部，查找这一行：
- en: '[PRE60]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Change it to this:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 将其修改为如下：
- en: '[PRE61]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'After saving the file, restart the `rsyslog` daemon:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件后，重新启动`rsyslog`守护进程：
- en: '[PRE62]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Using the appropriate `iptables`, `ufw`, or `nftables` command, open port `30000/tcp`
    on the firewall, and close port `514`.
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用适当的`iptables`、`ufw`或`nftables`命令，打开防火墙上的`30000/tcp`端口，并关闭`514`端口。
- en: This is the end of the lab.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这就是实验的结束。
- en: Next, we'll configure the client.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将配置客户端。
- en: Creating a stunnel connection on Ubuntu – client side
  id: totrans-267
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在Ubuntu上创建stunnel连接 – 客户端配置
- en: 'Using this procedure on an Ubuntu client will allow it to send its files to
    either an AlmaLinux or an Ubuntu log server:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此程序，在Ubuntu客户端上操作将允许它将日志文件发送到AlmaLinux或Ubuntu日志服务器：
- en: 'Install `stunnel`:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`stunnel`：
- en: '[PRE63]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'In the `/etc/stunnel/` directory, create the `stunnel.conf` file with the following
    contents:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/stunnel/`目录下，创建`stunnel.conf`文件，内容如下：
- en: '[PRE64]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Note that even though we can't use FIPS mode on the Ubuntu clients, we can still
    have them send log files to an AlmaLinux log server that is configured to use
    FIPS mode. (So, yes, we can mix and match.)
  id: totrans-273
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请注意，尽管我们无法在Ubuntu客户端上使用FIPS模式，但仍然可以将日志文件发送到配置为使用FIPS模式的AlmaLinux日志服务器。（所以，确实可以混用不同的系统。）
- en: 'Start the `stunnel` daemon:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动`stunnel`守护进程：
- en: '[PRE65]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'To make it automatically start when you reboot the system, create a cron job.
    Open the crontab editor by doing:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在系统重启时自动启动该守护进程，创建一个定时任务。通过以下方法打开crontab编辑器：
- en: '[PRE66]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Add this line to the end of the file:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 将此行添加到文件末尾：
- en: '[PRE67]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'At the bottom of the `/etc/rsyslog.conf` file, look for the line that has the
    IP address of the log server. Change it to this:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/rsyslog.conf`文件的底部，查找包含日志服务器IP地址的行。将其更改为如下：
- en: '[PRE68]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'After saving the file, restart the `rsyslog` daemon:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件后，重新启动`rsyslog`守护进程：
- en: '[PRE69]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Use `logger` to send a message to the log server:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`logger`命令将消息发送到日志服务器：
- en: '[PRE70]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: On the server, verify that the message is in the `/var/log/messages` or `/var/log/syslog`
    file, as appropriate.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器上，验证消息是否出现在`/var/log/messages`或`/var/log/syslog`文件中，具体取决于情况。
- en: End of lab.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实验结束。
- en: Okay, we now have a secure connection, which is a good thing. But the messages
    from all of the clients still get jumbled up in the server's own log files. Let's
    fix that.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，现在我们已经建立了一个安全的连接，这很好。但是，来自所有客户端的消息仍然混杂在服务器的日志文件中。我们来解决这个问题。
- en: Separating client messages into their own files
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将客户端消息分隔到各自的文件中
- en: This is something else that's easy-peasy. We'll just make a couple of simple
    edits to the `rsyslog` rules on the log server and restart the `rsyslog` daemon.
    For our demo, I'll use the AlmaLinux 9 VM.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是非常简单的操作。我们只需对日志服务器上的`rsyslog`规则做几个简单的编辑，然后重启`rsyslog`守护进程。为了演示，我将使用AlmaLinux
    9虚拟机。
- en: '**Important**'
  id: totrans-291
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**重要**'
- en: ''
  id: totrans-292
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You won’t be able to use Logwatch if you implement this trick. Well, you actually
    can, except that Logwatch will just take all of the events from all of the client
    files and jumble them up into one big summary. So, you won’t be able to see which
    client machines generate the events.
  id: totrans-293
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你实现了这个技巧，就无法使用Logwatch了。嗯，实际上你是可以使用的，只不过Logwatch会将所有客户端文件中的事件合并成一个大摘要。所以，你无法看到哪些客户端机器生成了哪些事件。
- en: 'In the RULES section of the `/etc/rsyslog.conf` file, look for this line:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/rsyslog.conf`文件的RULES部分，查找以下这一行：
- en: '[PRE71]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Change it to this:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 将其修改为如下：
- en: '[PRE72]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Above that line, insert this line:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 在该行上方，插入以下行：
- en: '[PRE73]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Do likewise for the `auth` messages:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 对`auth`消息进行同样的操作：
- en: '[PRE74]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Finally, restart `rsyslog`:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，重启`rsyslog`：
- en: '[PRE75]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Look in the `/var/log/` directory, and you’ll see directories for each of the
    clients that are sending logs to this server. Pretty slick, eh?
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 查看`/var/log/`目录，你会看到每个客户端的目录，这些客户端正在向该服务器发送日志。相当酷，对吧？
- en: Tip
  id: totrans-305
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 提示
- en: ''
  id: totrans-306
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The trick here is to always have a `$template` line *precede* the affected rule.
  id: totrans-307
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这里的技巧是：始终让`$template`行*位于*受影响规则之前。
- en: And that wraps it up for another chapter. You now know about what to look for
    in log files, how to make log reviews easier, and how to set up a secure remote
    log server.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 本章到此结束。你现在知道如何查看日志文件，如何使日志审查更加轻松，并且了解如何设置一个安全的远程日志服务器。
- en: Summary
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at the different types of log files, with an emphasis
    on files that contain security-related information. Then, we looked at the basic
    operation of the `rsyslog` and `journald` logging systems. To make log reviews
    a bit easier, we introduced Logwatch, which automatically creates a summary of
    the preceding day's log files. We wrapped things up by setting up a central, remote
    log server that collects log files from other network hosts.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了不同类型的日志文件，重点是包含与安全相关信息的文件。接着，我们看了 `rsyslog` 和 `journald` 日志系统的基本操作。为了简化日志审查，我们介绍了
    Logwatch，它会自动创建前一天日志文件的摘要。最后，我们通过设置一个集中式的远程日志服务器，收集来自其他网络主机的日志文件。
- en: In the next chapter, we'll look at how to do vulnerability scanning and intrusion
    detection. I'll see you there.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨如何进行漏洞扫描和入侵检测。下次见。
- en: Questions
  id: totrans-312
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: Which two of the following are log files that record authentication-related
    events?
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪两个是记录身份验证相关事件的日志文件？
- en: '`syslog`'
  id: totrans-314
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`syslog`'
- en: '`authentication.log`'
  id: totrans-315
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`authentication.log`'
- en: '`auth.log`'
  id: totrans-316
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`auth.log`'
- en: '`secure.log`'
  id: totrans-317
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`secure.log`'
- en: '`secure`'
  id: totrans-318
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`secure`'
- en: Which log file contains the current record about who is logged into the system
    and what they're doing?
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个日志文件包含有关当前登录系统的用户及其操作的记录？
- en: '`/var/log/syslog`'
  id: totrans-320
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/log/syslog`'
- en: '`/var/log/utmp`'
  id: totrans-321
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/log/utmp`'
- en: '`/var/log/btmp`'
  id: totrans-322
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/log/btmp`'
- en: '`/var/run/utmp`'
  id: totrans-323
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/run/utmp`'
- en: Which of the following is the main logging system that runs on pretty much every
    modern Linux distro?
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪一个是几乎每个现代 Linux 发行版上都运行的主要日志系统？
- en: '`syslog`'
  id: totrans-325
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`syslog`'
- en: '`rsyslog`'
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`rsyslog`'
- en: '`journald`'
  id: totrans-327
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`journald`'
- en: '`syslog-ng`'
  id: totrans-328
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`syslog-ng`'
- en: Which of the following is peculiar to RHEL 8/9 and their offspring, such as
    AlmaLinux 8/9?
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个是 RHEL 8/9 及其衍生版本（如 AlmaLinux 8/9）特有的？
- en: On RHEL 8/9 systems, `journald` collects log data from the rest of the system
    and sends it to `rsyslog`.
  id: totrans-330
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 RHEL 8/9 系统上，`journald` 从系统的其他部分收集日志数据，并将其发送到 `rsyslog`。
- en: On RHEL 8/9 systems, `journald` has completely replaced `rsyslog`.
  id: totrans-331
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 RHEL 8/9 系统上，`journald` 已完全取代了 `rsyslog`。
- en: On RHEL 8/9 systems, `rsyslog` collects data from the rest of the system and
    sends it to `journald`.
  id: totrans-332
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 RHEL 8/9 系统上，`rsyslog` 从系统的其他部分收集数据，并将其发送到 `journald`。
- en: RHEL 8/9 systems use `syslog-ng`.
  id: totrans-333
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: RHEL 8/9 系统使用 `syslog-ng`。
- en: Which of the following is a consideration when setting up `stunnel`?
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置 `stunnel` 时，以下哪项是需要考虑的？
- en: On AlmaLinux systems, FIPS mode is not available.
  id: totrans-335
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AlmaLinux 系统上，无法使用 FIPS 模式。
- en: On Ubuntu systems, FIPS mode is not available.
  id: totrans-336
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 系统上，无法使用 FIPS 模式。
- en: On Ubuntu systems, FIPS mode is available, but only if you purchase a support
    contract.
  id: totrans-337
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 系统上，FIPS 模式是可用的，但前提是购买了支持合同。
- en: On AlmaLinux 8/9, FIPS mode is available, but only if you purchase a support
    contract.
  id: totrans-338
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AlmaLinux 8/9 系统上，FIPS 模式是可用的，但前提是购买了支持合同。
- en: Which of the following two statements are true about `stunnel`?
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪两个关于 `stunnel` 的说法是正确的？
- en: On RHEL systems, `stunnel` runs as a normal `systemd` service.
  id: totrans-340
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 RHEL 系统上，`stunnel` 作为普通的 `systemd` 服务运行。
- en: On RHEL systems, `stunnel` still runs under an old-fashioned `init` script.
  id: totrans-341
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 RHEL 系统上，`stunnel` 仍然通过旧式的 `init` 脚本运行。
- en: On Ubuntu systems, `stunnel` runs as a normal `systemd` service.
  id: totrans-342
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 系统上，`stunnel` 作为普通的 `systemd` 服务运行。
- en: On Ubuntu systems, `stunnel` runs under an old-fashioned `init` script.
  id: totrans-343
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 系统上，`stunnel` 通过旧式的 `init` 脚本运行。
- en: Which file must you edit to have the root user's messages forwarded to your
    own user account?
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你必须编辑哪个文件才能将 root 用户的消息转发到你自己的用户账户？
- en: After you edit the file that's referenced in *Question 7*, which command must
    you run to transfer the information to a binary file that the system can read?
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑完 *问题 7* 中提到的文件后，必须运行哪个命令才能将信息传输到系统可读的二进制文件中？
- en: To create an `stunnel` setup for your remote log server, you must create a security
    certificate for both the server and for each client.
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要为你的远程日志服务器创建一个 `stunnel` 设置，你必须为服务器和每个客户端都创建一个安全证书。
- en: 'True'
  id: totrans-347
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确
- en: 'False'
  id: totrans-348
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误
- en: Which of the following commands would you use to find the `fail` text string
    in `journald` log files?
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个命令可用于查找 `journald` 日志文件中的 `fail` 字符串？
- en: '`sudo grep fail /var/log/journal/messages`'
  id: totrans-350
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo grep fail /var/log/journal/messages`'
- en: '`sudo journalctl -g fail`'
  id: totrans-351
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo journalctl -g fail`'
- en: '`sudo journalctl -f fail`'
  id: totrans-352
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo journalctl -f fail`'
- en: '`sudo less /var/log/journal/messages`'
  id: totrans-353
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo less /var/log/journal/messages`'
- en: Further reading
  id: totrans-354
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'Five open source log management programs: [https://fosspost.org/lists/open-source-log-management](https://fosspost.org/lists/open-source-log-management)'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 五个开源日志管理程序：[https://fosspost.org/lists/open-source-log-management](https://fosspost.org/lists/open-source-log-management)
- en: '*What Is a SIEM?*: [https://www.tripwire.com/state-of-security/incident-detection/log-management-siem/what-is-a-siem/](https://www.tripwire.com/state-of-security/incident-detection/log-management-siem/what-is-a-siem/)'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*什么是SIEM?*: [https://www.tripwire.com/state-of-security/incident-detection/log-management-siem/what-is-a-siem/](https://www.tripwire.com/state-of-security/incident-detection/log-management-siem/what-is-a-siem/)'
- en: '*12 Critical Linux Log Files You Must be Monitoring*: [https://www.eurovps.com/blog/important-linux-log-files-you-must-be-monitoring/](https://www.eurovps.com/blog/important-linux-log-files-you-must-be-monitoring/)'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*你必须监控的12个关键Linux日志文件*: [https://www.eurovps.com/blog/important-linux-log-files-you-must-be-monitoring/](https://www.eurovps.com/blog/important-linux-log-files-you-must-be-monitoring/)'
- en: '*Analyzing Linux Logs*: [https://www.loggly.com/ultimate-guide/analyzing-linux-logs/](https://www.loggly.com/ultimate-guide/analyzing-linux-logs/)'
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*分析Linux日志*: [https://www.loggly.com/ultimate-guide/analyzing-linux-logs/](https://www.loggly.com/ultimate-guide/analyzing-linux-logs/)'
- en: 'Linux log files with examples: [https://www.poftut.com/linux-log-files-varlog/](https://www.poftut.com/linux-log-files-varlog/)'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Linux日志文件示例: [https://www.poftut.com/linux-log-files-varlog/](https://www.poftut.com/linux-log-files-varlog/)'
- en: 'The `rsyslog` home page: [https://www.rsyslog.com/](https://www.rsyslog.com/)'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rsyslog`主页: [https://www.rsyslog.com/](https://www.rsyslog.com/)'
- en: '*Why Journald?*: [https://www.loggly.com/blog/why-journald/](https://www.loggly.com/blog/why-journald/)'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为什么使用Journald?*: [https://www.loggly.com/blog/why-journald/](https://www.loggly.com/blog/why-journald/)'
- en: 'Journalctl cheat sheet: [https://www.golinuxcloud.com/view-logs-using-journalctl-filter-journald/](https://www.golinuxcloud.com/view-logs-using-journalctl-filter-journald/)'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Journalctl备忘单: [https://www.golinuxcloud.com/view-logs-using-journalctl-filter-journald/](https://www.golinuxcloud.com/view-logs-using-journalctl-filter-journald/)'
- en: '*The Linux Administration Cookbook*, by Adam K. Dean: [https://www.packtpub.com/virtualization-and-cloud/linux-administration-cookbook](https://www.packtpub.com/virtualization-and-cloud/linux-administration-cookbook)'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Linux管理实用手册*，作者：Adam K. Dean: [https://www.packtpub.com/virtualization-and-cloud/linux-administration-cookbook](https://www.packtpub.com/virtualization-and-cloud/linux-administration-cookbook)'
- en: 'The Logwatch project page: [https://sourceforge.net/projects/logwatch/](https://sourceforge.net/projects/logwatch/)'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Logwatch项目页面: [https://sourceforge.net/projects/logwatch/](https://sourceforge.net/projects/logwatch/)'
- en: 'The `stunnel` home page : [https://www.stunnel.org/](https://www.stunnel.org/)'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stunnel`主页: [https://www.stunnel.org/](https://www.stunnel.org/)'
- en: '*Linux Service Management Made Easy with systemd*, by Donald A. Tevault: [https://www.packtpub.com/product/linux-service-management-made-easy-with-systemd/](https://www.packtpub.com/product/linux-service-management-made-easy-with-systemd/)'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用systemd简化Linux服务管理*，作者：Donald A. Tevault: [https://www.packtpub.com/product/linux-service-management-made-easy-with-systemd/](https://www.packtpub.com/product/linux-service-management-made-easy-with-systemd/)'
- en: Answers
  id: totrans-367
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回答
- en: c, e
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c, e
- en: d
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
- en: b
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: a
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: a
- en: c
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: a, d
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: a, d
- en: '`/etc/aliases`'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/etc/aliases`'
- en: '`sudo newaliases`'
  id: totrans-375
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sudo newaliases`'
- en: b
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
