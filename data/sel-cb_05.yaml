- en: Chapter 5. Creating a Server Policy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章：创建服务器策略
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍以下几个要点：
- en: Understanding the service
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解服务
- en: Choosing resource types wisely
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明智地选择资源类型
- en: Differentiating policies based on use cases
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于使用案例区分策略
- en: Creating resource-access interfaces
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建资源访问接口
- en: Creating exec, run, and transition interfaces
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 exec、run 和 transition 接口
- en: Creating a stream-connect interface
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建流连接接口
- en: Creating the administrative interface
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建管理接口
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Desktop application policies protect a user from vulnerabilities within the
    application or from unwanted behavior exerted by the application. On a server,
    however, the impact can be much larger. Server policies are used to protect the
    entire system from unwanted behavior, abusive access by users, or exploited vulnerabilities
    within the application.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 桌面应用程序策略保护用户免受应用程序内部漏洞或应用程序所带来的不良行为的影响。然而，在服务器上，影响可能要大得多。服务器策略用于保护整个系统免受不良行为、用户的滥用访问或应用程序中的漏洞被利用。
- en: Services also have a long lifetime. Unlike desktop applications, which usually
    start up and shut down together with the users' daily work cycle, services tend
    to run nonstop, 24/7\. This not only provides a larger time window to try and
    exploit these services, but also happens in the background with services that
    the administrator might not be actively watching.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 服务通常有较长的生命周期。与桌面应用程序不同，桌面应用通常与用户的日常工作周期一起启动和关闭，而服务往往是持续运行的，24/7全天候服务。这不仅提供了更大的时间窗口来尝试和利用这些服务，而且在管理员可能不会积极监视的情况下，服务通常在后台运行。
- en: Understanding the service
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解服务
- en: The first aspect of designing server policies is to understand the service at
    hand. Each service has its own internal architecture, and understanding how the
    various processes and resources interact with each other is extremely important.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 设计服务器策略的第一个方面是了解当前的服务。每个服务都有自己的内部架构，理解各种进程和资源如何相互作用至关重要。
- en: Only when the internal architecture is fully understood will we be able to create
    a properly functioning policy. Otherwise, we risk that the policy will be too
    broad (too many access rights) or too restricted. Unlike applications, which are
    usually easy to test from an end user point of view, services often have activities
    that are much harder to test (or even consider).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当我们完全理解内部架构时，才能创建一个正常运行的策略。否则，我们的策略可能会过于宽泛（过多的访问权限）或过于限制。与通常从最终用户角度容易测试的应用程序不同，服务常常有一些更难测试（甚至难以考虑）的活动。
- en: How to do it…
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做……
- en: 'Just like with desktop applications, understanding the application behavior
    is of key importance to create good SELinux policies. Research into and analysis
    of the behavior can be done by performing the following steps:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 就像桌面应用程序一样，理解应用程序的行为对创建良好的 SELinux 策略至关重要。可以通过执行以下步骤进行行为研究和分析：
- en: Research the service at large by looking for online architecture drawings or
    architecture documentation.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过查找在线架构图或架构文档，全面研究该服务。
- en: Try to explore the service in a sandbox environment.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试在沙盒环境中探索该服务。
- en: Follow some tutorials for the service with relation to both administration tasks
    as well as end user tasks.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跟随一些与该服务相关的教程，包括管理任务和最终用户任务。
- en: Structurally document how the service should be used.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从结构上记录服务应如何使用。
- en: How it works…
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何运作……
- en: Understanding a service means to get some degree of experience with the administration
    of the service. Trying to create a server policy for a specific database technology,
    but not knowing how this database technology works, will be almost impossible.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 理解服务意味着获得一定的服务管理经验。如果不了解某种数据库技术的工作原理，就几乎不可能为该技术创建服务器策略。
- en: Online research
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在线研究
- en: Most services have well documented architectural information available online.
    By using an Internet search engine, we can easily come to the architecture information
    for a particular service.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数服务都有良好的在线架构文档。通过使用互联网搜索引擎，我们可以轻松找到特定服务的架构信息。
- en: While developing service policies, it is considered a best practice that the
    types and domains are named similar to the functional services that are used.
    For instance, in a Postfix architecture, functional services such as `pickup`,
    `cleanup`, `smtpd`, `qmgr`, and many more are basic services that a Postfix administrator
    has to deal with. In SELinux policies, we should try to have the domains labeled
    similarly (so the domain will be labeled `postfix_qmgr_t` for the `qmgr` service,
    `postfix_spool_maildrop_t` for the `maildrop` queue, and so on).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发服务策略时，最好将类型和域名命名为与所使用的功能服务相似。例如，在Postfix架构中，`pickup`、`cleanup`、`smtpd`、`qmgr`等功能服务是Postfix管理员必须处理的基本服务。在SELinux策略中，我们应尽量使域名标签保持一致（例如，`qmgr`服务的域标签为`postfix_qmgr_t`，`maildrop`队列的标签为`postfix_spool_maildrop_t`，以此类推）。
- en: Sandbox environment
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 沙箱环境
- en: Being able to play around with a service in a sandbox environment allows us
    to see the interactions at hand. It also allows us to follow online tutorials
    or administration guides to get to know the service.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 能够在沙箱环境中玩转服务让我们可以看到其中的相互作用。它还允许我们通过在线教程或管理指南来了解服务的使用。
- en: There are many technologies available nowadays to play around with technologies.
    Virtualization allows users to run complete systems in an isolated environment
    and has led to the creation of virtual appliances.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有许多技术可以用来玩转技术。虚拟化允许用户在隔离的环境中运行完整的系统，并促成了虚拟设备的创建。
- en: Virtual appliances are virtual images that can be easily installed in a virtualized
    environment. However, a pure virtualization still requires users to install an
    operating system, install the service, and configure it before really starting
    to use it; virtual appliances provide preconfigured systems that host one or more
    services out of the box.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟设备是可以轻松安装在虚拟化环境中的虚拟镜像。然而，纯粹的虚拟化仍然要求用户安装操作系统、安装服务并进行配置，才能真正开始使用；虚拟设备提供了开箱即用的预配置系统，托管一个或多个服务。
- en: Next to virtualization, containers are also starting to play a large role. Unlike
    virtualization, software running inside containers is isolated from other software
    but is still part of the operating system itself.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除了虚拟化之外，容器也开始发挥重要作用。与虚拟化不同，运行在容器中的软件与其他软件隔离，但仍然是操作系统本身的一部分。
- en: The structural documentation
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结构文档
- en: After having a thorough read through the architecture of the application and
    perhaps even playing around with the software, we might need to document the architecture
    of the service further in order to deduce the right SELinux types and resources,
    as well as interfaces and roles related to the service.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在详细阅读应用程序的架构并可能玩转过软件后，我们可能需要进一步记录服务的架构，以推导出正确的SELinux类型和资源，以及与服务相关的接口和角色。
- en: 'In order not to forget anything important, the logical architecture of a service
    can be documented using the **FAMOUS** abbreviation:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了不忘记任何重要的内容，可以使用**FAMOUS**缩写来记录服务的逻辑架构：
- en: '**Feeds**: This tells us which external resources provide input to the service
    in a more-or-less batch-oriented approach as well as which external resources
    the service interacts with.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据流**：它告诉我们哪些外部资源以批处理的方式为服务提供输入，以及服务与哪些外部资源进行交互。'
- en: '**Administration**: This informs us how the service is administered (command-line
    interfaces, user interfaces, or other applications).'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理**：它向我们提供有关如何管理服务的信息（命令行界面、用户界面或其他应用程序）。'
- en: '**Monitoring**: This informs us about logfiles used or commands that are supported
    to verify the state of the service.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控**：它向我们提供关于使用的日志文件或支持的命令的信息，以验证服务的状态。'
- en: '**Operations**: This documents the day-to-day runtime behavior of all the processes
    (and the flows, using the CRUD method—Create, Read, Update, Delete). This is usually
    the architecture information found earlier during the online research phase.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作**：它记录了所有进程的日常运行行为（以及使用CRUD方法——创建、读取、更新、删除的流程）。这通常是在在线研究阶段找到的架构信息。'
- en: '**Users and rights**: This documents how users are defined and managed in the
    service. This also documents which authentication or authorization backends are
    used, how different roles within the service behave, and so forth.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户与权限**：它记录了服务中如何定义和管理用户。还记录了使用了哪些身份验证或授权后端，服务中不同角色的行为如何，等等。'
- en: '**Security-related features**: These tell us about security-related features
    such as application-based access controls, firewall requirements (which in our
    case are important for the policy network rules), and so forth.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与安全相关的功能**：这些功能告诉我们有关安全相关的功能，如基于应用程序的访问控制、防火墙要求（在我们的案例中，这对策略网络规则非常重要）等。'
- en: 'With this information at hand, we can have a clear overview of how the service
    behaves. For instance, a high-level view of the PostgreSQL database service looks
    like the following diagram:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些信息，我们可以清楚地概览服务的行为。例如，PostgreSQL 数据库服务的高级视图如下所示：
- en: '![The structural documentation](img/9669OS_05_02.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![结构文档](img/9669OS_05_02.jpg)'
- en: Such a drawing helps us to identify types later on, both for the processes as
    well as the resources involved. Any interactions with the service provided by
    third-party services is shown as well, as these interactions will result in privileges
    that need to be assigned to the other processes (that is, interfaces in the SELinux
    policy).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的图示帮助我们后续识别类型，包括涉及的过程和资源。任何与第三方服务提供的服务的交互也会展示出来，因为这些交互会导致需要分配给其他过程的权限（即 SELinux
    策略中的接口）。
- en: It is not easy to document how a service works without understanding the service
    at hand. Because of the complexity of the service, it is a good practice to get
    experts or developers of the service together and guide us in understanding the
    service. These developers and engineers can later be used to challenge the SELinux
    policy that is being written.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不理解服务的具体工作方式，记录服务的工作流程并不容易。由于服务的复杂性，最好请服务的专家或开发人员一起指导我们理解服务。这些开发人员和工程师以后可以用来挑战正在编写的
    SELinux 策略。
- en: See also
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'A nonexhaustive list of open source virtual appliance providers is as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 开放源代码虚拟设备提供者的非详尽列表如下：
- en: Artica ([http://www.artica.fr](http://www.artica.fr)) for proxy, mail, and NAS
    appliances.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Artica ([http://www.artica.fr](http://www.artica.fr)) 用于代理、邮件和 NAS 设备。
- en: Turnkey Linux ([http://www.turnkeylinux.org/](http://www.turnkeylinux.org/))
    offers more than a hundred ready-to-use solutions.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Turnkey Linux ([http://www.turnkeylinux.org/](http://www.turnkeylinux.org/))
    提供超过一百个现成可用的解决方案。
- en: Vagrant ([http://www.vagrantup.com/](http://www.vagrantup.com/)) is a management
    platform for virtual systems, and has a large community of Vagrant boxes that
    provide virtual appliance-like setups for many free software services.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vagrant ([http://www.vagrantup.com/](http://www.vagrantup.com/)) 是一个虚拟系统管理平台，拥有大量的
    Vagrant box，提供许多免费软件服务的虚拟设备设置。
- en: Docker ([https://www.docker.io/](https://www.docker.io/)) is not a true virtualization
    setup, but rather a container-based approach. From the Docker Index ([https://index.docker.io/](https://index.docker.io/)),
    many containers can be freely downloaded.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker ([https://www.docker.io/](https://www.docker.io/)) 不是一个真正的虚拟化设置，而是一种基于容器的方法。从
    Docker Index ([https://index.docker.io/](https://index.docker.io/))，可以自由下载许多容器。
- en: Many commercial technologies also provide development virtual machines to deploy.
    Virtualization technology providers such as VMware® have solution-exchange communities,
    where virtual images for various technologies are freely available.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 许多商业技术也提供开发虚拟机来进行部署。像 VMware® 这样的虚拟化技术提供商有解决方案交换社区，其中各种技术的虚拟镜像可以自由获取。
- en: Choosing resource types wisely
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 明智地选择资源类型
- en: Services interact with resources, and the label that we assign to the resources
    is used by the fine-grained access controls assigned to these resources. End user
    files (for users that have a Linux account on the system) are labeled as `user_home_t`,
    which suffices for most uses. However, when we deal with services, the choice
    of the resource label defines if and how other applications can access those resources
    and is much more fine-grained than what we currently use for end user files.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 服务与资源进行交互，我们为资源分配的标签被分配给这些资源的细粒度访问控制所使用。最终用户文件（对于系统中拥有 Linux 账户的用户）被标记为 `user_home_t`，这对于大多数用途来说已足够。然而，当我们处理服务时，资源标签的选择决定了其他应用程序是否以及如何访问这些资源，而且比我们目前为最终用户文件使用的标签更为细粒度。
- en: There are some best practices concerning resource type selection within SELinux
    policies, which we will now look into.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SELinux 策略中有一些关于资源类型选择的最佳实践，我们现在将进行讨论。
- en: How to do it…
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何进行……
- en: 'The service resource types need to be carefully chosen. Their naming implies
    the functional use of the resource, which already pushes the development of the
    policy in a certain structure. The types and their affiliated permissions can
    be developed by completing the following steps:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 服务资源类型需要谨慎选择。它们的命名隐含了资源的功能用途，这已经推动了策略在某种结构中的发展。可以通过完成以下步骤来开发这些类型及其相关权限：
- en: 'Look for the processes that will run within their own specific domain and create
    the domain types. For each domain, look for the entry files of that domain and
    create an `_exec_t` type. Mark the type as either an init daemon type (when the
    service is launched through a service script) or a D-Bus daemon (when the service
    is launched through the D-Bus service). For instance, for the BIND service:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找将在其特定域内运行的进程，并创建域类型。对于每个域，查找该域的入口文件并创建 `_exec_t` 类型。将该类型标记为初始化守护进程类型（当服务通过服务脚本启动时）或
    D-Bus 守护进程（当服务通过 D-Bus 启动时）。例如，对于 BIND 服务：
- en: '[PRE0]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Look for all sets of logical resources that are used by the application. These
    are often files specific to the service architecture (such as database files for
    a database service), but shouldn't be limited to files only.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找应用程序使用的所有逻辑资源集合。这些通常是特定于服务架构的文件（例如，数据库服务的数据库文件），但不应仅限于文件。
- en: 'Create specific types for these resources. For instance, for the Qemu virtual
    guest images:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为这些资源创建特定的类型。例如，对于 Qemu 虚拟客户机镜像：
- en: '[PRE1]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Grant the domains the proper access to these resources. For instance, the `qemu`
    process (running as `qemu_t`) will need manage rights on the images:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授予域对这些资源的适当访问权限。例如，`qemu` 进程（以 `qemu_t` 身份运行）将需要对镜像进行管理权限：
- en: '[PRE2]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Go through the infrastructural resources (PID files, logfiles, and configuration
    files) and label these accordingly. For instance, for the `named` variable, the
    runtime data will be named as follows:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览基础设施资源（PID 文件、日志文件和配置文件）并相应地标记它们。例如，对于 `named` 变量，运行时数据将命名如下：
- en: '[PRE3]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Grant the domains the proper access to these resources, and if possible, enable
    a proper file transition:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授予域对这些资源的适当访问权限，并尽可能启用适当的文件过渡：
- en: '[PRE4]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: How it works…
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: An application policy always provides a common set of privileges. It starts
    with proper domain definitions (showing how the policy will be structured) and
    is followed by the resource access patterns. Resources can be functional in nature
    (specific to the application that is being investigated for the policy) or more
    infrastructural (such as logfiles and configuration files).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 应用策略始终提供一组通用的权限。它从适当的域定义开始（展示策略将如何结构化），然后是资源访问模式。资源可以是功能性的（特定于正在调查的应用程序）或更多基础设施性的（如日志文件和配置文件）。
- en: Domain definitions
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 域定义
- en: Service domains are used to identify long-running processes that have a similar
    functional scope. An example could be the BIND named process (which is defined
    as `named_t`) or the Apache `httpd` processes (which are all running as `httpd_t`).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 服务域用于识别具有相似功能范围的长期运行进程。例如，BIND named 进程（定义为 `named_t`）或 Apache `httpd` 进程（都以
    `httpd_t` 身份运行）。
- en: 'These service domains are usually launched from an `init` script, which results
    in the use of the `init_daemon_domain` interface. If a service is launched by
    D-Bus, then the interface to use is `dbus_system_domain`. Of course, multiple
    interfaces can be used: the PPP daemon, for instance, supports both `init` scripts
    and D-Bus.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这些服务域通常由 `init` 脚本启动，这导致使用 `init_daemon_domain` 接口。如果服务通过 D-Bus 启动，则使用的接口是 `dbus_system_domain`。当然，可以使用多个接口：例如，PPP
    守护进程支持 `init` 脚本和 D-Bus。
- en: 'If a service daemon is launched by another daemon instead, then it is sufficient
    to mark the process domain as a domain type and the executable type as the entry
    point:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个服务守护进程由另一个守护进程启动，则只需将进程域标记为域类型，并将可执行类型标记为入口点：
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In this case, we need to provide the parent domain (in our case, `postfix_master_t`)
    the rights to execute (`postfix_bounce_exec_t`) and transition (to `postfix_bounce_t`):'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们需要为父域（在我们的案例中是 `postfix_master_t`）提供执行（`postfix_bounce_exec_t`）和过渡（到
    `postfix_bounce_t`）的权限：
- en: '[PRE6]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Logical resources
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 逻辑资源
- en: The logical resources are the files that are specific to the applications' functional
    design. For instance, a virtualization layer such as Qemu will have a logical
    resource for the image files (`qemu_image_t`). The logical resources for a web
    server have already been discussed in an earlier chapter (such as `httpd_sys_content_t`
    for standard system read-only web content).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑资源是特定于应用程序功能设计的文件。例如，像Qemu这样的虚拟化层将为镜像文件提供逻辑资源（`qemu_image_t`）。有关Web服务器的逻辑资源已经在前面的章节中讨论过（例如，`httpd_sys_content_t`用于标准系统只读Web内容）。
- en: Such resources are declared as regular file resources and the proper permissions
    are granted to the various domains. Further down the document, when privileges
    for the `qemu_t` domain are summed up, the `manage_files_pattern` line can be
    added to allow the `qemu_t` domain to manage the images.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这些资源被声明为常规文件资源，并为各个域授予适当的权限。稍后在文档中，当总结`qemu_t`域的权限时，可以添加`manage_files_pattern`行，以允许`qemu_t`域管理镜像。
- en: By making separate labels for each of the logical resources, we can create interfaces
    for other processes that might need to interact with these resources without having
    to grant those applications too many privileges.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 通过为每个逻辑资源创建单独的标签，我们可以为其他可能需要与这些资源交互的进程创建接口，而不必授予这些应用程序过多的权限。
- en: Think of a backup application, such as Amanda. The actual backup data itself
    (`amanda_data_t`) should only be accessible by the Amanda application. Other service
    administrators on the same system should not have access to these files—backups
    can contain sensitive information, so only the backup tool itself should have
    access to this data. Even the backup administrators, who need to manage the backup
    infrastructure, might not need direct access to this data.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 以备份应用程序为例，比如Amanda。实际的备份数据本身（`amanda_data_t`）应该仅能由Amanda应用程序访问。系统上的其他服务管理员不应访问这些文件——备份可能包含敏感信息，因此只有备份工具本身才能访问这些数据。即使是备份管理员，尽管需要管理备份基础设施，也可能不需要直接访问这些数据。
- en: Infrastructural resources
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基础设施资源
- en: Infrastructural resources are file types that are often set for applications.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施资源是经常为应用程序设置的文件类型。
- en: 'Logfiles are marked through the `logging_log_file` interface and usually end
    with the `_log_t` suffix, such as `amanda_log_t`. By marking it as a logfile,
    domains that are assigned an operation concerning all logfiles (such as `logging_read_all_logs`)
    automatically have these privileges on the newly defined type. Often, a file transition
    is set so that files created in `/var/log/` automatically get the right type.
    This is done through the `logging_log_filetrans` interface:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 日志文件通过`logging_log_file`接口标记，并通常以`_log_t`后缀结尾，例如`amanda_log_t`。通过将其标记为日志文件，分配给所有日志文件操作（如`logging_read_all_logs`）的域会自动获得这些权限。通常，会设置文件转换规则，使得在`/var/log/`中创建的文件自动获得正确的类型。这是通过`logging_log_filetrans`接口实现的：
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Configuration files are marked as regular files (through `files_type`) and end
    with either `_conf_t` or `_etc_t`. Some policy developers like to use `_conf_t`
    for real configuration files and `_etc_t` for other miscellaneous files in the
    `/etc/` directory structure that are not direct configuration files. In most cases
    though, this is only for semantic reasons as all related domains need the same
    set of privileges on both types.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件被标记为常规文件（通过`files_type`），并且以`_conf_t`或`_etc_t`结尾。一些策略开发人员喜欢使用`_conf_t`表示真实的配置文件，而使用`_etc_t`表示`/etc/`目录结构下的其他杂项文件，这些文件不是直接的配置文件。不过在大多数情况下，这仅仅是出于语义上的考虑，因为所有相关域在这两种类型上需要相同的权限。
- en: 'Temporary files are marked through the `files_tmp_file` interface and end with
    the `_tmp_t` suffix. A file transition is almost always put in place to ensure
    that the temporary files are properly labeled:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 临时文件通过`files_tmp_file`接口标记，并以`_tmp_t`后缀结尾。几乎总会设置文件转换规则，以确保临时文件被正确标记：
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'PID files and other generic run files are usually labeled ending with `_var_run_t`
    and are marked as a PID file through the `files_pid_file` interface. As with logfiles,
    a file transition is usually put in place as well:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: PID文件和其他通用的运行文件通常标记为以`_var_run_t`结尾，并通过`files_pid_file`接口标记为PID文件。与日志文件一样，通常也会设置文件转换规则：
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Other variable data that is not given a logical resource name is often labeled
    ending with `_var_lib_t`. Such files are marked as regular files (using `file_type`)
    and a file transition can be defined using `files_var_lib_filetrans`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 其他没有给出逻辑资源名称的变量数据通常会以`_var_lib_t`结尾进行标注。这类文件被标记为常规文件（使用`file_type`），并可以通过`files_var_lib_filetrans`定义文件转换。
- en: Differentiating policies based on use cases
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根据用例区分策略
- en: As services mature, they often gain more features, which might not always be
    necessary. For instance, daemons that are able to optionally connect to various
    network resources depending on their configuration should not be allowed by the
    SELinux policy to always connect to various network resources.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 随着服务的成熟，它们通常会获得更多的功能，但这些功能并不总是必要的。例如，能够根据配置可选连接到各种网络资源的守护进程，SELinux 策略不应允许其始终连接到各种网络资源。
- en: To govern these features, SELinux policy developers include Booleans to selectively
    toggle policies based on the administrator's requirements.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了管理这些功能，SELinux 策略开发者会包含布尔值，以便根据管理员的需求选择性地切换策略。
- en: How to do it…
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现……
- en: 'Booleans allow policy developers to create policy rules that only participate
    in access control when the administrator has elected to use them. For services
    in particular, this is often used to optionally allow privileges based on the
    use case of the service and is implemented as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值允许策略开发者创建仅在管理员选择使用时才参与访问控制的策略规则。特别是对于服务，这通常用于根据服务的用例有条件地允许权限，具体实现如下：
- en: 'Identify the policy blocks that should be marked as optional, depending on
    the configuration. For instance, this could be a set of policy rules that allow
    PostgreSQL to connect to other PostgreSQL databases:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据配置识别应该标记为可选的策略块。例如，这可能是一组允许 PostgreSQL 连接到其他 PostgreSQL 数据库的策略规则：
- en: '[PRE10]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'For each block, create a well-chosen SELinux Boolean that administrators can
    easily identify as the right Boolean to toggle for their specific use case. For
    instance, we can create a `postgresql_connect_db` Boolean:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个模块，创建一个合适的 SELinux 布尔值，管理员可以轻松识别它作为切换其特定用例的正确布尔值。例如，我们可以创建一个`postgresql_connect_db`布尔值：
- en: '[PRE11]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Surround the policy blocks that need to be toggled with a `tunable_policy`
    statement for the chosen SELinux Boolean, as follows:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用`tunable_policy`语句将需要切换的策略块围绕起来，针对选择的 SELinux 布尔值，如下所示：
- en: '[PRE12]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works…
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: Although we shouldn't over-tune policies by generating dozens of Booleans, isolating
    functionality that is often abused in exploits is a good practice.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们不应通过生成大量布尔值来过度调整策略，但将经常在漏洞利用中被滥用的功能进行隔离是一个良好的做法。
- en: Consider a database engine. Databases can have features that allow them to connect
    to other databases (for instance, to set up database links or support some kind
    of cluster), but in many situations, these features are not needed. If a database
    is compromised (through SQL injection, for instance), it is better to make sure
    that this database cannot access other databases (so the compromised database
    is sufficiently contained).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个数据库引擎。数据库可能具有允许它们连接到其他数据库的功能（例如，设置数据库链接或支持某种集群），但在许多情况下，这些功能是不需要的。如果一个数据库被攻破（例如通过
    SQL 注入），最好确保该数据库不能访问其他数据库（以便攻击的数据库被有效隔离）。
- en: The configuration that toggles this behavior in a PostgreSQL setup could be
    named `postgresql_connect_db` (for database-specific connections) or `postgresql_connect_all_ports`
    (for any target connection) and developed as shown in the previous example (the
    example includes the in-line comment documentation that would be used if the policy
    is meant to become part of the distribution policy or reference policy project).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PostgreSQL 设置中切换此行为的配置可能被命名为`postgresql_connect_db`（针对特定数据库的连接）或`postgresql_connect_all_ports`（针对任何目标连接），并按照之前的示例进行开发（该示例包括了内联注释文档，如果该策略旨在成为分发策略或参考策略项目的一部分，则会使用这些注释）。
- en: Accessing other resources on the network is a common feature that, if it is
    not part of the standard behavior of the application, should be considered for
    making optional.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 访问网络上的其他资源是一个常见的功能，如果它不是应用程序的标准行为的一部分，应考虑将其设置为可选。
- en: 'There are many other use cases that should be considered. Here is a nonexhaustive
    list:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他应该考虑的用例。以下是一个非详尽的列表：
- en: An application that can optionally execute system scripts or user-provided scripts
    should be governed through an `_exec_scripts` or `_exec_user_scripts` Boolean.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以选择性地执行系统脚本或用户提供脚本的应用程序应通过`_exec_scripts`或`_exec_user_scripts`布尔值进行管理。
- en: Allowed domain transitions to higher-privileged domains or increased privileges
    due to some functionality is usually governed through `_use_*` Booleans. For instance,
    a domain optionally supporting Java can have a `_use_java` Boolean.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于某些功能导致允许的域转换到更高特权的域或增加特权，通常通过`_use_*`布尔值进行管理。例如，一个可选择支持Java的域可以具有`_use_java`布尔值。
- en: Access to specific filesystems or devices is also governed through `_use_*`
    Booleans, such as `_use_cifs` (for SMB-CIFS filesystems) or `_use_nfs`.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对特定文件系统或设备的访问也通过`_use_*`布尔值进行管理，例如`_use_cifs`（用于SMB-CIFS文件系统）或`_use_nfs`。
- en: Functional support (such as Nginx support for various protocols) can be made
    optional through `_enable_*` Booleans, such as `nginx_enable_imap_server` or `nginx_enable_pop3_server`.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能支持（例如Nginx对各种协议的支持）可以通过`_enable_*`布尔值使其可选，例如`nginx_enable_imap_server`或`nginx_enable_pop3_server`。
- en: Creating resource-access interfaces
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建资源访问接口
- en: With all the resources defined, we now need to ensure that other domains can
    use those resources as needed. As we've seen, resources can be functional in nature
    (specific to a service) or more infrastructural (such as logfiles).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义了所有资源之后，我们现在需要确保其他域可以根据需要使用这些资源。正如我们所看到的，资源可以是功能性的（特定于某个服务）或更具基础设施性质的（如日志文件）。
- en: Access to resources is provided through SELinux policy rules that need to be
    provided through access interfaces. These interfaces are then used by third-party
    SELinux policy modules to document and allow access to the resource types. Without
    the access interfaces, the resource types we define are not easily accessible
    by other policy developers.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 资源访问是通过SELinux策略规则提供的，这些规则需要通过访问接口提供。这些接口随后被第三方SELinux策略模块使用，以记录并允许访问资源类型。如果没有访问接口，我们定义的资源类型将不容易被其他策略开发人员访问。
- en: How to do it…
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何做到的…
- en: 'To create resource-access interfaces, add the proper interface definition in
    the module''s `.if` file. For instance, to create a set of resource interfaces
    to access ClamAV''s configuration files, follow the next set of steps:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建资源访问接口，在模块的`.if`文件中添加适当的接口定义。例如，要创建一组资源接口以访问ClamAV的配置文件，请按照以下步骤操作：
- en: For each resource, create an overview of the privileges that will be needed.
    For file class resources, these are often search, read, write, and manage privileges.
    In case of logfiles, some applications only need append privileges (which ensures
    that they cannot modify existing data, only add data to it).
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个资源，创建一个所需特权的概述。对于文件类资源，这些通常是搜索、读取、写入和管理特权。对于日志文件，一些应用程序只需要追加权限（这确保它们不能修改现有数据，只能向其中添加数据）。
- en: 'Create the interface in the module''s `.if` file and ensure that it is properly
    documented, as shown in the following code:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模块的`.if`文件中创建接口，并确保正确文档化，如下代码所示：
- en: '[PRE13]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Consider creating a `dontaudit` interface as well to assign to SELinux domains
    that might attempt to perform this action while not needing the privilege:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑创建一个`dontaudit`接口，并将其分配给可能尝试执行此操作但不需要特权的SELinux域：
- en: '[PRE14]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How it works…
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The resource-access interfaces are needed to allow interaction with the SELinux
    types managed through the SELinux module. The build environment does not have
    a default set of privilege interfaces that are generated out of the box, so we
    need to create these interfaces ourselves.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 资源访问接口是允许与通过SELinux模块管理的SELinux类型进行交互所必需的。构建环境没有默认生成的特权接口集，因此我们需要自己创建这些接口。
- en: One might be tempted to only create the resource interfaces that are known to
    be used in the immediate future. However, it is recommended to create the proper
    interfaces for all resources and each individually with a coherent set of supported
    privileges. This is because we never know how the resources will be used by others,
    and by not creating the proper resources, we are forcing other developers to create
    their own `my*` modules to provide interfaces.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 人们可能会倾向于仅创建那些已知在短期内会使用的资源接口。然而，建议为所有资源及每个资源单独创建合适的接口，并配备一组连贯的支持特权。这是因为我们无法预测其他人如何使用这些资源，而不创建适当的资源接口会迫使其他开发人员创建自己的`my*`模块来提供接口。
- en: By covering most access patterns towards the resources, we provide a nice set
    of interfaces that other developers can use while keeping the interfaces all bound
    to a single module.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 通过覆盖大多数资源访问模式，我们提供了一套很好的接口，其他开发人员可以使用这些接口，同时保持所有接口都绑定到单一模块中。
- en: Even the `dontaudit` related interfaces will play an important role for the
    users of the SELinux policy. When policy developers commit policy improvements
    to repositories, they usually do not `dontaudit` unless they are 100 percent convinced
    that these will hide cosmetic denials and thus can be ignored. As a result, default
    SELinux system deployments will have quite a few denials in the audit logs that
    need to be looked into by the system administrator.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是与`dontaudit`相关的接口，对于SELinux策略的用户来说也将发挥重要作用。当策略开发者将策略改进提交到代码库时，他们通常不会使用`dontaudit`，除非他们百分之百确信这些改动只是隐藏了外观上的拒绝，因此可以忽略。结果，默认的SELinux系统部署将会在审计日志中记录相当多的拒绝信息，这些信息需要由系统管理员进行审查。
- en: If the administrator doesn't believe that the denials need to be enabled, then
    they will need to be able to `dontaudit` them. Although the administrator can
    create the proper interfaces themselves, it is much easier if the `dontaudit`
    interface definitions are already provided.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果管理员认为这些拒绝信息不需要启用，那么他们将需要能够`dontaudit`这些信息。尽管管理员可以自己创建适当的接口，但如果`dontaudit`接口定义已经提供，将会更容易一些。
- en: Creating exec, run, and transition interfaces
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建exec、run和transition接口
- en: Service domains usually have a few binaries that are executed by user domains
    or through other service or application domains. Each case of these executions
    need to be properly investigated to see if a domain transition is needed (that
    is, a specific domain needs to be created for that execution environment) or if
    the command can run within the privileges of the caller domain.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 服务域通常有一些二进制文件，这些文件由用户域或通过其他服务或应用程序域执行。每次执行都需要适当调查，以确定是否需要进行域转换（即，需要为该执行环境创建一个特定域）或该命令是否可以在调用者域的权限内运行。
- en: From an interface point of view, this is provided through the `_exec`, `_run`,
    and `_domtrans` interfaces.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 从接口的角度来看，这是通过`_exec`、`_run`和`_domtrans`接口提供的。
- en: How to do it…
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何实现的…
- en: 'Execution-related interfaces allow for other policy modules to define the interaction
    with this application. This interaction can be a regular execution, but can also
    contain a domain transition to switch the application domain to the newly defined
    one. The set of execution interfaces are created as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 与执行相关的接口允许其他策略模块定义与此应用程序的交互。这个交互可以是常规执行，也可以包含一个域转换，将应用程序域切换到新定义的域。执行接口集创建如下：
- en: 'For each execution where the application itself needs to run in the caller
    domain (so no transition has to occur), create an `_exec` interface as follows:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每次执行，其中应用程序本身需要在调用者域中运行（因此不需要进行域转换），创建一个`_exec`接口，如下所示：
- en: '[PRE15]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'For each execution by a domain that is in the same role as the service (usually,
    `system_r`) and where a transition has to occur, create a `_domtrans` interface
    as follows:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每次执行，其中域与服务具有相同角色（通常是`system_r`）且需要进行域转换的情况，创建一个`_domtrans`接口，如下所示：
- en: '[PRE16]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'For each execution by a domain that might not have standard access to the application
    domain, and where a domain transition has to occur, create a `_run` interface
    as follows:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每次执行，其中域可能没有标准访问权限到应用程序域，并且需要进行域转换的情况，创建一个`_run`接口，如下所示：
- en: '[PRE17]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How it works…
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The use of `_exec`, `_run`, and `_domtrans` are standard interface patterns
    in policy development. The `_role` interface that we created during desktop application
    policy development not only includes domain transition and role support, but also
    resource accesses related to the user domain interacting with the desktop application
    domain.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`_exec`、`_run`和`_domtrans`是策略开发中的标准接口模式。在桌面应用程序策略开发过程中，我们创建的`_role`接口不仅包括域转换和角色支持，还包括与用户域交互的桌面应用程序域相关的资源访问。
- en: In the `_run` interface, the only set of privileges that is provided is to transition
    to the right domain and assign the domain to the right role (as part of SELinux
    role-based access control). It is common practice that the order of the parameters
    of a `_run` interface are the domain first and then the role—unlike the `_role`
    interfaces, where the role comes first and then the domain.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `_run` 接口中，提供的唯一权限集是转换到正确的域，并将该域分配到正确的角色（作为 SELinux 基于角色的访问控制的一部分）。通常的做法是，`_run`
    接口的参数顺序是域在前，角色在后——这与 `_role` 接口不同，后者是先角色再域。
- en: In a `_domtrans` interface, only the domain transition is enabled. Usually,
    the `_run` interfaces call the `_domtrans` interface so that both interfaces are
    defined and the right one for the job is called by the caller SELinux policy module.
    But unlike the `_run` interfaces, the `_domtrans` interfaces do not extend roles
    and are usually called by other modules for service domain interaction.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `_domtrans` 接口中，只启用了域转换。通常，`_run` 接口调用 `_domtrans` 接口，以便定义两个接口，并由调用者 SELinux
    策略模块调用适合的接口。但与 `_run` 接口不同，`_domtrans` 接口不会扩展角色，通常由其他模块调用以进行服务域交互。
- en: 'For instance, the `procmail_t` domain (for the procmail daemon) might call
    the `clamscan` application (part of the ClamAV setup) needing to transition to
    `clamscan_t`. It does so through the `clamav_domtrans_clamscan` interface:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`procmail_t` 域（用于 procmail 守护进程）可能会调用 `clamscan` 应用程序（ClamAV 安装的一部分），需要转换为
    `clamscan_t`。它是通过 `clamav_domtrans_clamscan` 接口来实现的：
- en: '[PRE18]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Finally, the `_exec` interface allows a domain to execute a binary without
    any transition. This interface is needed when a binary is labeled as a specific
    executable type (not `bin_t` or `shell_exec_t`) as most domains then do not have
    the privilege to access this file at all, let alone execute it. For instance,
    the Postfix `local` daemon might call the `clamscan` executable but does not need
    to transition, resulting in the following call:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`_exec` 接口允许一个域在没有任何转换的情况下执行二进制文件。当一个二进制文件被标记为特定的可执行类型（而不是 `bin_t` 或 `shell_exec_t`）时，这个接口就变得必要，因为大多数域没有权限访问这个文件，更不用说执行它了。例如，Postfix
    的 `local` 守护进程可能会调用 `clamscan` 可执行文件，但不需要转换，导致如下调用：
- en: '[PRE19]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: See also
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: Assigning the newly created interfaces to roles is covered in [Chapter 6](ch06.html
    "Chapter 6. Setting Up Separate Roles"), *Setting Up Separate Roles*
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将新创建的接口分配给角色的过程已在 [第 6 章](ch06.html "Chapter 6. Setting Up Separate Roles")，*设置单独角色*
    中涵盖。
- en: Creating a stream-connect interface
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建流连接接口
- en: Be it through the specific executable types or by the generic `bin_t` labeled
    commands, executions that remain in the caller domain might still require additional
    privileges to be assigned to the caller domain. These additional privileges could
    be reading of configuration files or interacting with the main domain through
    Unix domain sockets or TCP/UDP sockets.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是通过特定的可执行类型还是通过通用的 `bin_t` 标记的命令，仍然保持在调用域中的执行可能需要向调用域分配额外的权限。这些额外的权限可能包括读取配置文件或通过
    Unix 域套接字或 TCP/UDP 套接字与主域进行交互。
- en: In this recipe, we'll set up a stream-connect interface (as the other privilege
    enhancements are already covered through the regular resource-access interfaces
    or network-access interfaces).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将设置一个流连接接口（因为其他权限增强已经通过常规的资源访问接口或网络访问接口覆盖）。
- en: How to do it…
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现…
- en: Interaction with an application socket can be done either through a socket file
    or through a named Unix domain socket. This is application-specific, so consulting
    the application documentation might be necessary up front.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 与应用程序套接字的交互可以通过套接字文件或命名的 Unix 域套接字来完成。这是特定于应用程序的，因此可能需要提前查阅应用程序文档。
- en: For a Unix domain socket with a socket file
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对于带有套接字文件的 Unix 域套接字
- en: 'If the stream connection is through a Unix domain socket with a socket file,
    the interaction with an application socket can be done by completing the following
    steps:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果流连接是通过带有套接字文件的 Unix 域套接字进行的，则与应用程序套接字的交互可以通过完成以下步骤来进行：
- en: Identify and register the proper types in the `.te` file. Socket files usually
    have the `_var_run_t` suffix as they reside in `/var/run/`.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `.te` 文件中识别并注册适当的类型。套接字文件通常以 `_var_run_t` 后缀结尾，因为它们位于 `/var/run/` 中。
- en: 'Create a stream-connect interface that calls `stream_connect_pattern` as follows:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个调用 `stream_connect_pattern` 的流连接接口，格式如下：
- en: '[PRE20]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: For an abstract Unix domain socket
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对于抽象的 Unix 域套接字
- en: 'If the stream connection is through an abstract Unix domain socket (so no socket
    files are involved), create a stream-connect interface that only provides the
    `connectto` privilege, as follows:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果流连接是通过抽象的 Unix 域套接字（因此不涉及套接字文件），则创建一个仅提供`connectto`特权的流连接接口，如下所示：
- en: '[PRE21]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How it works…
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: Daemons often provide methods to interact with them. Many services support Unix
    domain socket-based communication between a client application (which usually
    runs within the privileges of the caller domain) and the daemon itself.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 守护进程通常提供与其交互的方法。许多服务支持基于 Unix 域套接字的客户端应用程序（通常在调用者域的特权下运行）与守护进程之间的通信。
- en: 'In such cases, the daemon itself creates a socket file (usually in `/var/run/`)
    as some sort of access point (applications can also use abstract namespaces, where
    no socket file is needed anymore) and the caller domain is allowed to write to
    this socket and through it connect to the Unix domain socket held by the daemon.
    The set of privileges is provided by the `stream_connect_pattern` definition and
    can be visually represented as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，守护进程本身会创建一个套接字文件（通常位于`/var/run/`目录下），作为某种访问点（应用程序还可以使用抽象命名空间，这样就不再需要套接字文件），并且允许调用者域写入这个套接字，通过它连接到守护进程持有的
    Unix 域套接字。特权集由`stream_connect_pattern`定义提供，并可以通过以下方式可视化表示：
- en: '![How it works…](img/9669OS_05_01.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的…](img/9669OS_05_01.jpg)'
- en: The most important privilege here is the `connectto` privilege between the caller
    domain and the daemon domain. In case of abstract Unix domain sockets, no socket
    file is used at all and only the `connectto` privilege is needed.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这里最重要的特权是调用者域与守护进程域之间的`connectto`特权。如果是抽象的 Unix 域套接字，则根本不使用套接字文件，仅需要`connectto`特权。
- en: 'These privileges are then written in the following domain-specific interface
    that calls the `stream_connect_pattern` definition, which provides the proper
    privileges in one go:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这些特权随后会写入以下特定于域的接口，该接口调用`stream_connect_pattern`定义，并一次性提供适当的特权：
- en: '[PRE22]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: If stream-connection-oriented applications are used whose binaries are not labeled
    as `bin_t`, then a `_stream_connect` interface call is usually seen together with
    an `_exec` interface call.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用的是面向流连接的应用程序，并且它们的二进制文件没有被标记为`bin_t`，那么通常会看到`_stream_connect`接口调用与`_exec`接口调用一起出现。
- en: Creating the administrative interface
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建管理接口
- en: To end the SELinux module development for services, we need to create proper
    role-based interfaces. Whereas the `_role` interface is usually for nonprivileged
    user roles, an `_admin` interface is used to provide all the necessary privileges
    to fully administer a service.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了结束 SELinux 模块的开发，我们需要创建适当的基于角色的接口。通常，`_role`接口用于非特权用户角色，而`_admin`接口则用于提供完全管理服务所需的所有特权。
- en: How to do it…
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'An administrative interface which we can later assign to the user and role
    that will administer the environment is created with the following steps:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以稍后分配给用户和角色来管理环境的管理接口，通过以下步骤创建：
- en: 'Create a specific `init` script type for the `init` scripts of the daemon.
    For instance, for the `virtd` daemon inside `virt.te`, the following policy rules
    create the proper `init` script type:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为守护进程的`init`脚本创建一个特定的`init`脚本类型。例如，对于`virt.te`中的`virtd`守护进程，以下策略规则会创建适当的`init`脚本类型：
- en: '[PRE23]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Make sure that this `init` script is labeled correctly through the `.fc` file:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保通过`.fc`文件正确标记这个`init`脚本：
- en: '[PRE24]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Start with a skeleton `_admin` interface:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从一个框架 `_admin` 接口开始：
- en: '[PRE25]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Identify all the resources that an administrator would need access to. Keep
    in mind that administrators might need to directly modify files that are otherwise
    managed through the service-related commands—do not take away this right from
    administrators. A common pattern to use here is `admin_pattern`. Add in the proper
    rights in the interface (and do not forget to update the `gen_require` block at
    the beginning). Consider the following example:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别管理员需要访问的所有资源。请记住，管理员可能需要直接修改通过服务相关命令管理的文件——不要剥夺管理员的这个权限。这里常用的模式是`admin_pattern`。在接口中添加适当的权限（并且不要忘记更新开头的`gen_require`块）。考虑以下示例：
- en: '[PRE26]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Look through the administration guides for other operations that administrators
    might need with regards to processes. Perhaps there are certain signals that could
    be allowed to be sent to the daemons:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查阅管理手册，了解管理员可能需要的与进程相关的其他操作。也许有某些信号可以允许发送到守护进程：
- en: '[PRE27]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Allow the administrator to run the `init` script(s):'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许管理员运行`init`脚本：
- en: '[PRE28]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: How it works…
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `_admin` interface is meant to contain all the privileges needed for an
    (otherwise) unprivileged user to administer a service. In essence, this unprivileged
    user will become privileged for this particular service, gaining just those rights
    that the user needs in order to manage the service, but nothing more.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`_admin`接口旨在包含使得一个（否则）无特权的用户能够管理服务所需的所有权限。本质上，这个无特权用户将在这个特定服务中变得有特权，仅获得管理该服务所需的权限，但不会得到更多权限。'
- en: We start by defining a particular `init` script type for the service. By default,
    the `init` scripts are labeled `initrc_exec_t` and only the system administrator
    is allowed to execute them. As we do not want to give a specific service administrator
    the privileges to execute any `init` script, we create a specific script type
    (`_initrc_exec_t`) and then allow the user, through the `_admin` interface, to
    execute that particular script type.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先为该服务定义一个特定的`init`脚本类型。默认情况下，`init`脚本被标记为`initrc_exec_t`，只有系统管理员被允许执行它们。由于我们不想赋予特定服务管理员执行任何`init`脚本的权限，因此我们创建了一个特定的脚本类型（`_initrc_exec_t`），然后通过`_admin`接口允许用户执行该特定脚本类型。
- en: The latter, however, is more than just creating execute rights (which is done
    through the `init_labeled_script_domtrans` call). Executing the script also means
    that the script itself has to run in the `system_r` role. If we do not enforce
    this, then the script would (attempt to) run in the role of the caller domain
    (such as `virtadm_r`) and fail, as the `initrc_t` domain (the type used for the
    `init` scripts) is not allowed for the `virtadm_r` role.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，后者不仅仅是创建执行权限（这通过`init_labeled_script_domtrans`调用完成）。执行脚本还意味着该脚本本身必须以`system_r`角色运行。如果我们不强制执行这一点，那么脚本将（尝试）以调用者域（例如`virtadm_r`）的角色运行，并失败，因为`initrc_t`域（用于`init`脚本的类型）不允许`virtadm_r`角色使用。
- en: 'Transitioning a role upon executing a file is done through the `role_transition`
    directive. In our example, we configure that the user role (such as `virtadm_r`)
    transitions to the `system_r` role upon executing `virtd_initrc_exec_t`:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 执行文件时的角色转换是通过`role_transition`指令完成的。在我们的示例中，我们配置了用户角色（如`virtadm_r`）在执行`virtd_initrc_exec_t`时转换为`system_r`角色：
- en: '[PRE29]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: We need to allow the `system_r` role for the given user role as well, which
    is done through the `allow $2 system_r` call. But even that is not sufficient.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要允许给定用户角色使用`system_r`角色，这可以通过`allow $2 system_r`调用来完成。但即便如此，这还不够。
- en: SELinux has a constraint in place that prevents transitions to `system_r`, as
    the `system_r` role is used for all system services and, as such, is a highly
    privileged role. The constraint is defined so that only specific domains can trigger
    a transition to `system_r`. With the `domain_system_change_exemption` call, we
    mark the user domain as one of these domains.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux有一个约束，防止转换到`system_r`角色，因为`system_r`角色用于所有系统服务，因此是一个高度特权的角色。该约束被定义为只有特定域能够触发到`system_r`角色的转换。通过`domain_system_change_exemption`调用，我们将用户域标记为这些特定域之一。
- en: Besides the `init` script-related permissions, most `_admin` interfaces provide
    administrative rights to almost all resources provided by the module. To simplify
    policy development, the `admin_pattern` call is used. This pattern not only provides
    manage rights (read, write, execute, delete, and so on) on the resources, but
    also relabel rights, allowing the administrator to relabel files and directories
    as the resource types used in the module (or vice versa, relabel from those types
    to other types the administrator has relabel privileges to).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 除了与`init`脚本相关的权限外，大多数`_admin`接口还提供对模块提供的几乎所有资源的管理权限。为了简化策略开发，使用了`admin_pattern`调用。这个模式不仅提供了资源的管理权限（读取、写入、执行、删除等），还提供了重新标记权限，允许管理员将文件和目录重新标记为模块中使用的资源类型（或者反过来，将这些类型重新标记为管理员拥有重新标记权限的其他类型）。
- en: With these relabel rights, administrators can call `restorecon` against files
    to label them correctly (if properly defined in the SELinux policy) or use `chcon`
    to specifically set a label.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些重新标记权限，管理员可以使用`restorecon`命令对文件进行标签修复（如果在SELinux策略中正确定义），或者使用`chcon`命令专门设置标签。
- en: See also
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: Creating new administrative roles is covered in [Chapter 6](ch06.html "Chapter 6. Setting
    Up Separate Roles"), *Setting Up Separate Roles*
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建新管理角色的内容请见[第6章](ch06.html "第6章. 设置单独角色")，*设置单独角色*。
