- en: 14 Vulnerability Scanning and Intrusion Detection
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14 漏洞扫描与入侵检测
- en: Join our book community on Discord
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加入我们的书籍社区，加入 Discord
- en: '[https://packt.link/SecNet](https://packt.link/SecNet)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/SecNet](https://packt.link/SecNet)'
- en: '![](img/file83.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](img/file83.png)'
- en: There are lots of threats out there, and some of them might even penetrate your
    network. You'll want to know when that happens, so you'll want to have a good
    **Network Intrusion Detection System** (**NIDS**) or **Network Intrusion Prevention
    System** (**NIPS**) in place. In this chapter, we'll look at Snort, which is probably
    the most famous one. Then, I'll show you a way to cheat so that you can have a
    good NIDS/NIPS up and running in no time at all. I'll also show you a quick and
    easy way to set up an edge firewall appliance, complete with a built-in NIPS.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 网络上有很多威胁，其中一些可能甚至会突破你的网络防护。你需要知道何时发生这种情况，因此你需要一个好的**网络入侵检测系统**（**NIDS**）或**网络入侵防御系统**（**NIPS**）。在这一章中，我们将介绍Snort，它可能是最著名的一个。然后，我会展示一个窍门，帮助你快速部署一个高效的NIDS/NIPS系统。我还会展示如何快速且轻松地设置一个边缘防火墙设备，并且内建NIPS。
- en: We've already learned how to scan a machine for viruses and rootkits by installing
    scanning tools on the machines that we want to scan. However, there are a lot
    more vulnerabilities for which we can scan, and I'll show you some cool tools
    that you can use for that.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学会了如何通过在要扫描的机器上安装扫描工具来扫描病毒和根套件。然而，还有许多其他漏洞可以进行扫描，我将展示一些你可以用来扫描的酷工具。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Introduction to Snort and Security Onion
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snort和Security Onion简介
- en: IPFire and its built-in Intrusion Prevention System (IPS)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IPFire及其内建的入侵防御系统（IPS）
- en: Scanning and hardening with Lynis
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Lynis进行扫描和加固
- en: Finding vulnerabilities with the Greenbone Security Assistant
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Greenbone Security Assistant查找漏洞
- en: Web server scanning with Nikto
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Nikto进行Web服务器扫描
- en: So, if you're ready, let's begin by digging into the Snort Network Intrusion
    Detection System.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你准备好了，我们就从深入了解Snort网络入侵检测系统开始吧。
- en: Introduction to Snort and Security Onion
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Snort和Security Onion简介
- en: Snort is a **Network Intrusion Detection System** (**NIDS**), which is offered
    as a free open source software product. The program itself is free of charge,
    but you'll need to pay if you want to have a complete, up-to-date set of threat
    detection rules. Snort started out as a one-man project, but it's now owned by
    Cisco. Understand, though, this isn't something that you install on the machine
    that you want to protect. Rather, you'll have at least one dedicated Snort machine
    someplace on the network, just monitoring all network traffic, watching for anomalies.
    When it sees traffic that shouldn't be there – something that indicates the presence
    of a bot, for example – it can either just send an alert message to an administrator
    or it can even block the anomalous traffic, depending on how the rules have been
    configured. For a small network, you can have just one Snort machine that acts
    as both a control console and a sensor. For large networks, you could have one
    Snort machine set up as a control console and have it receive reports from other
    Snort machines that are set up as sensors.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Snort是一个**网络入侵检测系统**（**NIDS**），作为一个免费的开源软件产品提供。程序本身是免费的，但如果你想要一个完整、最新的威胁检测规则集，你需要付费。Snort最初是一个个人项目，但现在由思科（Cisco）拥有。需要理解的是，这并不是你安装在你想要保护的机器上的程序。相反，你会在网络中的某个地方至少设置一台专门的Snort机器，专门监控所有网络流量，观察是否有异常。当它发现有不应该存在的流量时——例如，发现一个机器人程序的迹象——它可以选择只发送警告信息给管理员，或者根据规则配置，它甚至可以阻止这些异常流量。对于小型网络，你可以只用一台Snort机器，既作为控制台又作为传感器。对于大型网络，你可以设置一台Snort机器作为控制台，接收其他作为传感器的Snort机器报告的情况。
- en: Snort isn't too hard to deal with, but setting up a complete Snort solution
    from scratch can be a bit tedious. After we look at the basics of Snort usage,
    I'll show you how to vastly simplify things by setting up a pre-built NIPS appliance.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Snort并不难使用，但从零开始设置一个完整的Snort解决方案可能会有点繁琐。在了解Snort的基本使用方法之后，我会展示如何通过设置一个预构建的NIPS设备来大大简化这一过程。
- en: Space doesn't permit me to present a comprehensive tutorial about Snort. Instead,
    I'll present a high-level overview and then present you with other resources if
    you want to learn about Snort in detail.
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由于篇幅限制，我无法提供关于Snort的全面教程。相反，我将提供一个高层次的概述，如果你希望深入了解Snort，还会推荐其他资源。
- en: ''
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Also, you might be wondering how a NIDS and a NIPS are different. Well, a NIDS
    is supposed to do nothing but alert network administrators about the suspicious
    network traffic that it detects. A NIPS will not only alert the administrator,
    but will also automatically block the suspicious traffic. However, the lines between
    the two types of systems are somewhat blurred, because some systems that are marketed
    as a NIDS can be configured to function as a NIPS.
  id: totrans-18
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 此外，你可能会想知道 NIDS 和 NIPS 有什么区别。NIDS 的功能仅限于警告网络管理员它检测到的可疑网络流量，而 NIPS 不仅会警告管理员，还会自动阻止可疑流量。然而，这两种系统的界限有些模糊，因为一些以
    NIDS 为名的系统也可以配置成 NIPS 功能。
- en: First, let's download and install Snort.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们下载并安装 Snort。
- en: Obtaining and installing Snort
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取和安装 Snort
- en: '**Snort 3**, the newest version of Snort, isn''t in the official repository
    of any Linux distro. So, you''ll need to get it from the Snort website. It used
    to be available as installer packages for either Windows or Linux, but that’s
    no longer the case. Now, with the introduction of Snort 3, it’s available either
    as source code that you’ll need to compile yourself or as a pre-built Docker container.
    Oddly, there’s no mention of the container option on the Snort home page, and
    I only found it after doing a DuckDuckGo search.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**Snort 3**，Snort 的最新版本，并未在任何 Linux 发行版的官方仓库中提供。因此，你需要从 Snort 官网获取它。它曾经以 Windows
    或 Linux 安装包的形式提供，但现在已经不再如此。现在，随着 Snort 3 的发布，它可以作为需要你自己编译的源代码或预构建的 Docker 容器提供。奇怪的是，Snort
    官方主页上并没有提到容器选项，直到我通过 DuckDuckGo 搜索才找到了它。'
- en: 'You can get Snort and Snort training from the official Snort website: [https://www.snort.org](https://www.snort.org).'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以从 Snort 官方网站获取 Snort 和 Snort 培训： [https://www.snort.org](https://www.snort.org)。
- en: Hands-on lab – installing Snort via a Docker container
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 实操实验——通过 Docker 容器安装 Snort
- en: You’ll definitely want to go with the container option instead of the source
    code option. That’s because the directions for setting up the source code option
    aren’t as clear as they should be, and one particular library package doesn’t
    always compile properly. Instead of using the official Docker software, I’ll be
    showing you how to use Podman, which is Red Hat’s drop-in replacement for Docker.
    Podman’s security is better than that of Docker, and it’s available for pretty
    much every Linux distro. Podman is already installed on your AlmaLinux 8 and 9
    virtual machines, but you’ll need to install it yourself on Ubuntu.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你肯定想选择容器选项而不是源代码选项。这是因为设置源代码选项的说明并不如它们应有的那样清晰，且某个特定的库包并不总是能够正确编译。与使用官方的 Docker
    软件不同，我将向你展示如何使用 Podman，它是 Red Hat 为 Docker 提供的替代品。Podman 的安全性优于 Docker，且几乎支持所有
    Linux 发行版。Podman 已经在你的 AlmaLinux 8 和 9 虚拟机上预安装，但你需要在 Ubuntu 上自行安装。
- en: 'On Ubuntu only, install the `podman` package:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在 Ubuntu 上，安装 `podman` 软件包：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'On Ubuntu only, open the `/etc/containers/registries.conf` file in your text
    editor. Find this line:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在 Ubuntu 上，打开 `/etc/containers/registries.conf` 文件并在文本编辑器中查看。找到以下这一行：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Change it to this:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 改为如下：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Download and start the container:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并启动容器：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Next, enter the container so that you can interact with the snort commands:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，进入容器以便与 snort 命令交互：
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If this command executes successfully, you’ll find yourself at the `snorty@snort3`
    command prompt.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这个命令成功执行，你将会进入 `snorty@snort3` 命令提示符。
- en: 'Validate the Snort configuration with this single-word command:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个单词命令验证 Snort 配置：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Snort requires a set of rules that define the potential problems that it should
    analyze. Paying customers will receive up-to-date rulesets, while non-paying users
    can download rulesets that are about one month behind. An old ruleset from 2018
    comes with the Docker container, so you’ll want something that’s a bit more recent.
    You won’t be able to download the rulesets directly to your container, so you’ll
    need to download them to either your virtual machine or to your host machine,
    and then transfer them to the container. On either your host machine or in another
    terminal that’s connected to the virtual machine, download the latest community
    ruleset, like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Snort 需要一组规则来定义它应该分析的潜在问题。付费用户将收到最新的规则集，而非付费用户可以下载大约滞后一个月的规则集。2018 年的旧规则集随 Docker
    容器一起提供，因此你可能需要一些稍微更新的版本。你将无法直接将规则集下载到容器中，因此需要将它们下载到虚拟机或主机机器上，然后再转移到容器中。在主机机器上或连接到虚拟机的另一个终端上，下载最新的社区规则集，方法如下：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can’t use `scp` or `sftp` to connect to the container from the virtual
    machine or your host machine, but you can use them to connect to the virtual machine
    or host machine from the container. So, from within the container, use `sftp`
    to transfer in the new ruleset file. Your commands should look something like
    this:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能使用 `scp` 或 `sftp` 从虚拟机或主机连接到容器，但你可以使用它们从容器连接到虚拟机或主机。所以，在容器内部，使用 `sftp` 来传输新的规则集文件。你的命令应该类似于这样：
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'While still within the container, unarchive the ruleset file and transfer the
    new ruleset to its proper location:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在容器内，解压规则集文件并将新的规则集转移到其正确的位置：
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Test things out by examining a `.pcap` file that’s included with the example
    files:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查随示例文件一起提供的 `.pcap` 文件来进行测试：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Take a look at the tutorial videos at the Snort website. You can see them here:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看 Snort 网站上的教程视频，你可以在这里看到它们：
- en: '[https://www.snort.org/resources](https://www.snort.org/resources)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.snort.org/resources](https://www.snort.org/resources)'
- en: 'When you’re done, type exit to get out of the container. To shutdown the container,
    do this:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，输入 exit 退出容器。要关闭容器，请执行以下操作：
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: End of lab
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 实验结束
- en: Here are some of the significant differences between the new Snort 3 and the
    older Snort 2 that I covered in previous editions of this book.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是新版本的 Snort 3 与我在本书早期版本中介绍的旧版本 Snort 2 之间的一些显著差异。
- en: There were several cool graphical front-ends that you could install for Snort
    2, but there aren’t any for Snort 3\. So, the new Snort 3 is strictly a command-line
    mode program.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虽然你可以为 Snort 2 安装一些很酷的图形前端，但 Snort 3 没有图形前端。因此，新的 Snort 3 完全是一个命令行模式的程序。
- en: Snort 3 can save its output files in `.json` format, which makes it easy for
    centralized log aggregators to read and parse them.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snort 3 可以将其输出文件保存为 `.json` 格式，这使得集中式日志聚合器可以方便地读取和解析这些文件。
- en: The configuration files and rules files for Snort 3 are in `.yaml` format.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snort 3 的配置文件和规则文件是 `.yaml` 格式的。
- en: The Snort 3 rules syntax has been somewhat streamlined, making rules easier
    to write.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snort 3 的规则语法已经有所简化，使得编写规则变得更加容易。
- en: Next, let’s look at a cool appliance that has another Intrusion Detection System
    built into it.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看一个有着另一种入侵检测系统（IDS）内建的酷炫设备。
- en: Using Security Onion
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Security Onion
- en: Security Onion consists of a set of **Free Open-source Software** (**FOSS**)
    tools that you can install on your own local Linux machine. It’s also offered
    as a pre-built Linux distro image, which is really the preferred method of installation.
    In the previous editions of this book, I showed you the original version of Security
    Onion, which was built on Xubuntu Linux. This version had a graphical desktop
    interface, used Snort 2 as the IDS, and included several graphical front-ends
    for Snort. The new Security Onion 2 is a completely different animal. It’s now
    built on a text-mode installation of CentOS 7, and offers way more functionality
    over the original version. In addition to using it as an IDS/IPS, you can now
    use it as a forensics analyzer, a log file aggregator, and a log file analyzer.
    For log file collection and analysis, it includes the ELK stack.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Security Onion 是一套**自由开源软件**（**FOSS**）工具，你可以将其安装在自己的本地 Linux 机器上。它也提供了一个预构建的
    Linux 发行版镜像，这其实是推荐的安装方式。在本书的早期版本中，我展示了原始版本的 Security Onion，该版本是基于 Xubuntu Linux
    构建的。这个版本有一个图形化桌面界面，使用 Snort 2 作为 IDS，并包含了多个 Snort 的图形化前端界面。新的 Security Onion 2
    是一个完全不同的版本。它现在基于 CentOS 7 的文本模式安装，并且提供了比原始版本更多的功能。除了作为 IDS/IPS 使用之外，你现在还可以将其用作取证分析器、日志文件聚合器和日志文件分析器。对于日志文件的收集与分析，它包含了
    ELK 堆栈。
- en: ELK stands for **Elastic Search**, **Logstash**, and **Kibana**. Logstash, used
    with the appropriate collection agents on the end-points that you want to monitor,
    collects log files from the network end-points. Elastic Search stores the log
    messages in a searchable database. Kibana is the web-based graphical component
    that displays the collected log messages.
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ELK 代表**Elastic Search**、**Logstash** 和 **Kibana**。Logstash 与适当的收集代理一起使用，收集来自你希望监控的网络终端的日志文件。Elastic
    Search 将日志信息存储在一个可搜索的数据库中。Kibana 是一个基于 web 的图形组件，用于显示收集到的日志信息。
- en: Instead of Snort, Security Onion 2 now uses Suricata, which is a Snort alternative.
    In place of the graphical front-ends for Snort, Security Onion 2 now uses the
    **Security Onion Console**, which is a web-based front-end.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Security Onion 2 现在使用 Suricata 代替了 Snort，Suricata 是 Snort 的替代品。取代 Snort 的图形前端，Security
    Onion 2 现在使用**Security Onion 控制台**，这是一个基于 web 的前端。
- en: For a couple of reasons, I’m not going to provide a hands-on lab for this. In
    the first place, there’s no real point, because you’ll find detailed tutorials
    on Security Onion’s YouTube channel. Also, there’s a good chance that any hands-on
    lab that I were to provide here would be outdated by the time you read this. That’s
    because the next version of Security Onion, which will be released some time in
    2023, will be based on Rocky Linux 9 instead of CentOS 7\. So, I’m sure that the
    installation and usage procedures will be somewhat different from what they are
    now.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个原因，我不会提供这部分的动手实验。首先，这并没有太大意义，因为你可以在 Security Onion 的 YouTube 频道上找到详细的教程。此外，我提供的任何动手实验很可能在你阅读本书时已经过时了。因为
    Security Onion 的下一个版本将于 2023 年某个时候发布，该版本将基于 Rocky Linux 9 而非 CentOS 7。因此，我相信安装和使用流程会与现在有所不同。
- en: 'You can download Security Onion 2 from here: [https://securityonionsolutions.com/](https://securityonionsolutions.com/)'
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以从这里下载 Security Onion 2：[https://securityonionsolutions.com/](https://securityonionsolutions.com/)
- en: ''
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'You can find the Security Onion YouTube channel here: [https://www.youtube.com/@security-onion](https://www.youtube.com/@security-onion)'
  id: totrans-64
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在这里找到 Security Onion 的 YouTube 频道：[https://www.youtube.com/@security-onion](https://www.youtube.com/@security-onion)
- en: ''
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Fee-based support options, training options, and physical appliances with Security
    Onion pre-installed are also available.
  id: totrans-66
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 也提供收费的支持选项、培训选项以及预装 Security Onion 的物理设备。
- en: 'In lieu of a lab, allow me to leave you with a screenshot of the Security Onion
    Console:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 作为实验的替代，我给你留下一张 Security Onion 控制台的截图：
- en: '![Figure 14.1: The Security Onion Console](img/file84.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.1：Security Onion 控制台](img/file84.png)'
- en: 'Figure 14.1: The Security Onion Console'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.1：Security Onion 控制台
- en: Now, let’s turn our attention to a cool pre-built firewall appliance that also
    has its own Intrusion Prevention System.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来关注一款非常酷的预构建防火墙设备，它还具有自己的入侵防御系统（IPS）。
- en: IPFire and its built-in Intrusion Prevention System (IPS)
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IPFire 及其内置的入侵防御系统（IPS）
- en: When I wrote the original edition of this book, I included a discussion of IPFire
    in the Snort section. At that time, IPFire had Snort built into it. It was a neat
    idea because you had an edge firewall and an **Intrusion Detection System** (**IDS**)
    all in one handy package. But, in the summer of 2019, the IPFire folk replaced
    Snort with their own IPS. So, I've moved IPFire down here into its own section.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当我写这本书的原版时，我在 Snort 部分讨论了 IPFire。当时，IPFire 内置了 Snort。这是一个很棒的想法，因为你有了一个边缘防火墙和一个
    **入侵检测系统**（**IDS**），都在一个方便的包中。但在 2019 年夏季，IPFire 团队将 Snort 替换为他们自己的 IPS。因此，我将
    IPFire 移到了它自己的章节。
- en: The difference between an IDS and an IPS is that an IDS informs you of problems,
    but doesn't block them. An IPS also blocks them.
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: IDS 和 IPS 之间的区别在于，IDS 会通知你问题，但不会阻止它们。而 IPS 则会阻止这些问题。
- en: If you think back to our discussion of firewalls in *Chapter 4*, *Securing Your
    Server with a Firewall – Part 1* and *Chapter 5*, *Securing Your Server with a
    Firewall -- Part 2*, I completely glossed over any discussion of creating the
    **Network Address Translation** (**NAT**) rules that you would need in order to
    set up an edge or gateway type of firewall. That's because there are several Linux
    distros and BSD distros that have been created specifically for this purpose.
    One such distro is **IPFire**.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你回想一下我们在*第 4 章*《用防火墙保护你的服务器 - 第 1 部分》和*第 5 章*《用防火墙保护你的服务器 - 第 2 部分》中的防火墙讨论，我完全忽略了讨论如何创建你需要的
    **网络地址转换**（**NAT**）规则，以便设置边缘或网关类型的防火墙。那是因为有几种专门为此目的创建的 Linux 发行版和 BSD 发行版。其中一个这样的发行版就是
    **IPFire**。
- en: '![Figure 14.2: IPFire installer](img/file85.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.2：IPFire 安装器](img/file85.png)'
- en: 'Figure 14.2: IPFire installer'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.2：IPFire 安装器
- en: 'IPFire is completely free of charge, and it only takes a few minutes to set
    up. You install it on a machine with at least two network interface adapters and
    configure it to match your network configuration. It''s a proxy type of firewall,
    which means that in addition to doing normal firewall-type packet inspection,
    it also includes caching, content filtering, and NAT capabilities. You can set
    up IPFire in a number of different configurations:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: IPFire 完全免费，并且只需要几分钟就能设置。你只需将它安装在至少有两个网络接口适配器的机器上，并根据你的网络配置进行配置。它是一种代理类型的防火墙，这意味着除了执行正常的防火墙包检查外，它还包括缓存、内容过滤和
    NAT 功能。你可以以多种不同的配置方式设置 IPFire：
- en: On a computer with two network interface adapters, you can have one connected
    to the internet and the other connected to the internal LAN.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在有两个网络接口适配器的计算机上，你可以将一个连接到互联网，另一个连接到内部局域网（LAN）。
- en: With three network adapters, you can have one connection to the internet, one
    to the internal LAN, and one to the **Demilitarized Zone** (**DMZ**), where you
    have your Internet-facing servers.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用三个网络适配器，你可以将一个连接到互联网，一个连接到内部局域网，一个连接到**非军事区**（**DMZ**），在这个区域你可以放置面向互联网的服务器。
- en: With a fourth network adapter, you can have all of what we just mentioned, plus
    protection for a wireless network.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用第四个网络适配器，你可以拥有我们刚才提到的所有功能，并且还能为无线网络提供保护。
- en: With all that said, let's give it a try.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 说了这么多，我们来试试看吧。
- en: Hands-on lab – Creating an IPFire virtual machine
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实践实验 – 创建一个 IPFire 虚拟机
- en: 'You won''t normally run IPFire in a virtual machine. Instead, you''ll install
    it on a physical machine that has at least two network interfaces. But, just for
    the sake of letting you see what it looks like, setting it up in a virtual machine
    will do for now. Let''s get started:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你不会在虚拟机中运行 IPFire。相反，你会将其安装在至少有两个网络接口的物理机器上。但是，为了让你看到它的样子，先在虚拟机中进行设置是可以的。让我们开始吧：
- en: 'You can download IPFire from their website: [https://www.ipfire.org/](https://www.ipfire.org/)'
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '你可以从他们的网站下载 IPFire: [https://www.ipfire.org/](https://www.ipfire.org/)'
- en: Create a virtual machine with two network interfaces. Set one to Bridged mode
    and leave the other in NAT mode. Install IPFire into this virtual machine. During
    the setup portion, select the Bridged adapter as the Green interface and select
    the NAT adapter as the Red interface.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个有两个网络接口的虚拟机。将一个设置为桥接模式，另一个保持 NAT 模式。将 IPFire 安装到这个虚拟机中。在设置过程中，选择桥接适配器作为绿色接口，选择
    NAT 适配器作为红色接口。
- en: 'After you install IPFire, you''ll need to use the web browser of your normal
    workstation to navigate to the IPFire dashboard. Do this with this URL:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 IPFire 后，你需要使用常规工作站的网页浏览器导航到 IPFire 仪表板。你可以使用以下 URL 进行访问：
- en: '`https://192.168.0.190:444`'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`https://192.168.0.190:444`'
- en: (Of course, substitute your own IP address for your Green interface.)
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: （当然，你需要将绿色接口的 IP 地址替换为你自己的地址。）
- en: Under the **Firewall** menu, you'll see an entry for **Intrusion Prevention**.
    Click on that to get to this screen, where you can enable Intrusion Prevention.
    The first step for that is to click on the **Add provider** button that’s under
    the **Ruleset Settings** section.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**防火墙**菜单下，你会看到**入侵防御**的选项。点击它进入这个页面，在这里你可以启用入侵防御。第一步是点击**添加提供者**按钮，它位于**规则集设置**部分下方。
- en: '![Figure 14.3: Click the Add provider button](img/file86.png)'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 14.3: 点击添加提供者按钮](img/file86.png)'
- en: 'Figure 14.3: Click the Add provider button'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '图 14.3: 点击添加提供者按钮'
- en: 'On the next page, select the ruleset that you want to use. Leave the **Enable
    automatic updates** checkbox enabled. Then, hit the **Add** button:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页中，选择你想要使用的规则集。保持**启用自动更新**复选框为启用状态。然后，点击**添加**按钮：
- en: '![Figure 14.4: Select the ruleset](img/file87.png)'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 14.4: 选择规则集](img/file87.png)'
- en: 'Figure 14.4: Select the ruleset'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '图 14.4: 选择规则集'
- en: 'You will then see this screen, where you''ll select the interfaces for which
    you want to enable intrusion prevention. (Select both interfaces.) Then, select
    the **Enable Intrusion Prevention System** checkbox and click on Save:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你将看到这个屏幕，在这里你可以选择要启用入侵防御的接口。（选择两个接口。）然后，勾选**启用入侵防御系统**复选框并点击保存：
- en: '![Figure 14.5: Enable the IPS](img/file88.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.5: 启用 IPS](img/file88.png)'
- en: 'Figure 14.5: Enable the IPS'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '图 14.5: 启用 IPS'
- en: 'If all goes well, you''ll see the following output:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你将看到以下输出：
- en: '![Figure 14.6: With the IPS enabled](img/file89.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.6: 启用 IPS 后的状态](img/file89.png)'
- en: 'Figure 14.6: With the IPS enabled'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '图 14.6: 启用 IPS 后的状态'
- en: 'In the **Ruleset Settings** section, click the **Customize ruleset** button.
    On the next page, click on the rules that you want to enable. Then, at the bottom
    of the screen, click the **Apply** button:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**规则集设置**部分，点击**自定义规则集**按钮。在下一页中，点击你想要启用的规则。然后，在屏幕底部点击**应用**按钮：
- en: '![Figure 14.7: Select the desired rules](img/file90.png)'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 14.7: 选择所需的规则](img/file90.png)'
- en: 'Figure 14.7: Select the desired rules'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '图 14.7: 选择所需的规则'
- en: View what's going on with the IPS by selecting **Log/IPS Logs**. (Note that
    what you see will depend upon which rules that you’ve chosen to enable. Even then,
    it might take a while for any entries to show up.)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**日志/IPS 日志**来查看 IPS 的工作情况。（注意，你看到的内容将取决于你启用了哪些规则。即使如此，可能需要一段时间才能看到日志条目。）
- en: '![Figure 14.8: Look at the IPS logs](img/file91.png)'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 14.8：查看 IPS 日志](img/file91.png)'
- en: 'Figure 14.8: Look at the IPS logs'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 14.8：查看 IPS 日志
- en: Click on the other menu items to view IPFire's other features.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击其他菜单项，查看 IPFire 的其他功能。
- en: You have completed this lab – congratulations!
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经完成了这个实验——祝贺你！
- en: You've just seen the easy way to set up an edge firewall with its own network
    IPS. Now, let's look at some scanning tools.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚看到了如何轻松设置一个带有独立网络 IPS 的边缘防火墙。接下来，我们来看一些扫描工具。
- en: Scanning and hardening with Lynis
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Lynis 进行扫描与强化
- en: Lynis is yet another FOSS tool that you can use to scan your systems for vulnerabilities
    and bad security configurations. It comes as a portable shell script that you
    can use not only on Linux, but also on a variety of different Unix and Unix-like
    systems. It's a multipurpose tool that you can use for compliance auditing, vulnerability
    scanning, or hardening. Unlike most vulnerability scanners, you install and run
    Lynis on the system that you want to scan. According to the creator of Lynis,
    this allows for more in-depth scanning.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Lynis 是另一款 FOSS 工具，你可以用它来扫描系统中的漏洞和不良的安全配置。它以便携式 shell 脚本的形式提供，不仅可以在 Linux 上使用，也能在多种
    Unix 和类似 Unix 的系统上使用。这是一个多功能工具，你可以用它进行合规性审计、漏洞扫描或强化。与大多数漏洞扫描器不同，你需要在要扫描的系统上安装并运行
    Lynis。根据 Lynis 的创始人所说，这样可以进行更深入的扫描。
- en: The Lynis scanning tool is available as a free-of-charge version, but its scanning
    capabilities are somewhat limited. If you need all that Lynis has to offer, you'll
    need to purchase an enterprise license.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Lynis 扫描工具有免费版，但其扫描功能有限。如果你需要 Lynis 所提供的全部功能，你需要购买企业版许可证。
- en: Installing Lynis on Red Hat/CentOS
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Red Hat/CentOS 上安装 Lynis
- en: 'Red Hat, CentOS 7, and AlmaLinux 8/9 users will find an up-to-date version
    of Lynis in the EPEL repository. So, if you have EPEL installed, as I showed you
    in *Chapter 1*, *Running Linux in a Virtual Environment*, installation is just
    a simple matter of doing:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Red Hat、CentOS 7 和 AlmaLinux 8/9 用户可以在 EPEL 仓库中找到最新版本的 Lynis。因此，如果你已安装 EPEL，如我在*第
    1 章*《在虚拟环境中运行 Linux》所展示的那样，安装过程非常简单，只需执行以下命令：
- en: '[PRE11]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Installing Lynis on Ubuntu
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Ubuntu 上安装 Lynis
- en: 'Ubuntu has Lynis in its own repository, but it''s just a little bit behind
    what''s current. If you''re okay with using an older version, the command to install
    it is:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu 在其自身的仓库中提供了 Lynis，但版本稍微滞后于最新版本。如果你能接受使用较旧的版本，安装命令是：
- en: '[PRE12]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If you want the newest version for Ubuntu or if you want to use Lynis on operating
    systems that don't have it in their repositories, you can download Lynis from
    [https://cisofy.com/downloads/lynis/](https://cisofy.com/downloads/lynis/).
  id: totrans-119
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你想要获取 Ubuntu 的最新版本，或者如果你想在那些没有 Lynis 的操作系统上使用 Lynis，你可以从 [https://cisofy.com/downloads/lynis/](https://cisofy.com/downloads/lynis/)
    下载 Lynis。
- en: ''
  id: totrans-120
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The cool thing about this is that once you download it, you can use it on any
    Linux, Unix, or Unix-like operating system. (This even includes macOS, which I
    confirmed by running it on my old Mac Pro that was running with macOS High Sierra.)
  id: totrans-121
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这点很酷，因为一旦你下载了它，你就可以在任何 Linux、Unix 或类似 Unix 的操作系统上使用它。（这甚至包括 macOS，我通过在我的老款 Mac
    Pro 上运行 macOS High Sierra 进行了验证。）
- en: 'Since the executable file is nothing but a common shell script, there''s no
    need to perform an actual installation. All you need to do is extract the archive
    file, `cd` into the resultant directory, and run Lynis from there:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 由于可执行文件仅是一个普通的 shell 脚本，因此无需进行实际安装。你只需要提取归档文件，`cd` 进入结果目录，并从那里运行 Lynis：
- en: '[PRE13]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The `lynis -h` command shows you the help screen, along with all of the Lynis
    commands that you need to know about.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`lynis -h` 命令会显示帮助屏幕，以及你需要了解的所有 Lynis 命令。'
- en: Scanning with Lynis
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Lynis 进行扫描
- en: Lynis commands work the same regardless of which operating system that you want
    to scan. The only difference is that if you're running it from the archive file
    that you downloaded from the website, you would `cd` into the `lynis` directory
    and precede the `lynis` commands with a `./`. (That's because, for security reasons,
    your own home directory isn't in the path setting that allows the shell to automatically
    find executable files.)
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你要扫描的操作系统是什么，Lynis 命令的使用方法都是一样的。唯一的不同是，如果你从网站下载的归档文件中运行它，你需要 `cd` 进入 `lynis`
    目录，并在 `lynis` 命令前加上 `./`。（这是因为出于安全原因，你自己的主目录不在路径设置中，无法让 shell 自动找到可执行文件。）
- en: 'To scan your system that has Lynis installed, execute this command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 要扫描已安装 Lynis 的系统，执行以下命令：
- en: '[PRE14]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To scan a system that you just downloaded the archive file on, execute these
    commands:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要扫描一个你刚下载了归档文件的系统，执行以下命令：
- en: '[PRE15]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Running Lynis from the shell script in your home directory presents you with
    this message:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 从你的主目录中的 shell 脚本运行 Lynis 会显示这个信息：
- en: '[PRE16]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This isn't hurting anything, so you can just hit Enter to continue. Or, if seeing
    this message really bothers you, you can change ownership of the Lynis files to
    the root user, as the message tells you. For now, I'll just press Enter.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不会造成任何问题，所以你可以直接按回车键继续。如果看到这个信息真的让你很困扰，你可以按提示将 Lynis 文件的所有权更改为 root 用户。现在，我只会按回车键。
- en: Running a Lynis scan in this manner is similar to running an OpenSCAP scan against
    a generic security profile. The major difference is that OpenSCAP has an automatic
    remediation feature, while Lynis doesn't. Lynis tells you what it finds and suggests
    how to fix what it perceives to be a problem, but it doesn't fix anything for
    you.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式运行 Lynis 扫描类似于对通用安全配置文件运行 OpenSCAP 扫描。主要的区别是，OpenSCAP 具有自动修复功能，而 Lynis
    没有。Lynis 会告诉你它发现了什么，并建议如何修复它认为是问题的部分，但它不会为你修复任何问题。
- en: 'Space doesn''t permit me to show the entire scan output, but I can show you
    a couple of example snippets:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 空间不允许我展示完整的扫描输出，但我可以给你展示一些示例片段：
- en: '[PRE17]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This warning message shows that I don't have password protection for my GRUB2
    bootloader. That may or may not be a big deal because the only way someone can
    exploit it is to gain physical access to the machine. If it's a server that's
    locked away in a room that only a few trusted individuals can access, then I'm
    not going to worry about it, unless rules from an applicable regulatory agency
    dictate that I do. If it's a desktop machine that's out in an open cubicle, then
    I would definitely fix that. (We'll look at GRUB password protection in *Chapter
    16*, *Security Tips and Tricks for the Busy Bee*.)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这个警告信息显示我没有为我的 GRUB2 引导加载程序设置密码保护。这可能是个大问题，也可能不是，因为唯一能利用这一点的方法是获得对机器的物理访问权限。如果这是一台锁在只有少数信任人员才能进入的房间里的服务器，那么我不会担心，除非适用的监管机构要求我这么做。如果它是一台放在开放隔间里的台式机，那么我肯定会修复这个问题。（我们将在*第16章*，*忙碌蜂的安全小贴士与技巧*中查看
    GRUB 密码保护。）
- en: 'In the **File systems** section, we can see some items with the **SUGGESTION**
    flag next to them:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在**文件系统**部分，我们可以看到一些项目前面有**建议**标志：
- en: '[PRE18]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Exactly what Lynis suggests comes near the end of the output:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 正如 Lynis 所建议的那样，这将出现在输出的最后部分：
- en: '[PRE19]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The last thing we''ll look at is the scan details section at the end of the
    output:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最后要看的部分是输出结尾的扫描详细信息：
- en: '[PRE20]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: For **Components**, there's a red **X** by **Malware Scanner**. That's because
    I don't have ClamAV or maldet installed on this machine, so Lynis couldn't do
    a virus scan.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**组件**，在**恶意软件扫描器**旁有一个红色的**X**。这是因为我没有在这台机器上安装 ClamAV 或 maldet，因此 Lynis 无法进行病毒扫描。
- en: For **Lynis Modules**, we see a question mark by **Compliance Status**. That's
    because this feature is reserved for the Enterprise version of Lynis, which requires
    a paid subscription. As we saw in the previous chapter, you have OpenSCAP profiles
    to make a system compliant with several different security standards, and it doesn't
    cost you anything. With Lynis, you have to pay for the compliance profiles, but
    you have a wider range to choose from. For example, Lynis Enterprise can scan
    for Sarbanes-Oxley compliance issues, while OpenSCAP can’t.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**Lynis 模块**，我们在**合规状态**旁看到一个问号。这是因为这个功能是为 Lynis 企业版预留的，企业版需要付费订阅。正如我们在前一章中看到的，你可以使用
    OpenSCAP 配置文件使系统符合多个不同的安全标准，而这不需要花费任何费用。使用 Lynis，你需要为合规性配置文件付费，但你可以选择更多的配置文件。例如，Lynis
    企业版可以扫描 Sarbanes-Oxley 合规性问题，而 OpenSCAP 做不到。
- en: 'The last thing I want to say about Lynis is in regard to the Enterprise version.
    In the following screenshot, which is from their website, you can see the current
    pricing and the differences between the different subscription plans:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我想说的最后一件事是关于 Lynis 企业版的。在以下截图中，这来自他们的网站，你可以看到当前的定价和不同订阅计划之间的差异：
- en: '![Figure 14.9: Pricing for Lynis Enterprise](img/file92.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.9：Lynis 企业版定价](img/file92.png)'
- en: 'Figure 14.9: Pricing for Lynis Enterprise'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.9：Lynis 企业版定价
- en: As you see, you have choices.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，你有选择的余地。
- en: 'You''ll find information about pricing on the Cisofy website: [https://cisofy.com/pricing/](https://cisofy.com/pricing/)'
  id: totrans-150
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在 Cisofy 网站上找到定价信息：[https://cisofy.com/pricing/](https://cisofy.com/pricing/)
- en: That pretty much wraps things up as regards our discussion of Lynis. Next, we'll
    look at an external vulnerability scanner.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上总结了我们对Lynis的讨论。接下来，我们将介绍一个外部漏洞扫描器。
- en: Finding vulnerabilities with the Greenbone Security Assistant
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Greenbone安全助手查找漏洞
- en: In the previous versions of this book, I told you about OpenVAS, which stands
    for Open Vulnerability Assessment Scanner. It’s still with us, but its publisher
    has changed the name to **Greenbone Security Assistant** (**GSA**). Although it’s
    a commercial product, Greenbone also offers a Free Open-source Community Edition
    that’s free-of-charge.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的前几个版本中，我提到过OpenVAS，代表开放漏洞评估扫描器。它仍然存在，但其发布者已将其名称更改为**Greenbone安全助手**（**GSA**）。尽管它是商业产品，但Greenbone也提供免费的开源社区版，完全免费。
- en: The Greenbone Security Assistant is something that you would use to perform
    remote vulnerability scans. You can use it to scan a variety of network devices.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Greenbone安全助手是您用来执行远程漏洞扫描的工具。您可以使用它扫描各种网络设备。
- en: The big three security distros are Kali Linux, Parrot Linux, and Black Arch.
    They're aimed at security researchers and penetration testers, but they contain
    tools that would also be good for just a normal security administrator of either
    the Linux or Windows variety. GSA is one such tool. All three of these security
    distros have their unique advantages and disadvantages. Since Kali is the most
    popular, we'll go with it for the demos.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 三大安全发行版是Kali Linux、Parrot Linux和Black Arch。它们主要面向安全研究人员和渗透测试人员，但它们也包含一些适用于普通Linux或Windows安全管理员的工具。GSA就是其中之一。这三大安全发行版各有优缺点。由于Kali最为流行，我们将在演示中使用它。
- en: You can download Kali Linux from [https://www.kali.org/get-kali/](https://www.kali.org/get-kali/).
  id: totrans-156
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 您可以从[https://www.kali.org/get-kali/](https://www.kali.org/get-kali/)下载Kali Linux。
- en: 'When you go to the Kali download page, you''ll see lots of choices. You can
    download a normal installer image for `x86`, `x86_64`, and Apple Silicon. Other
    options include:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 当您访问Kali下载页面时，会看到许多选择。您可以下载适用于`x86`、`x86_64`和Apple Silicon的常规安装镜像。其他选项包括：
- en: Images for ARM devices, such as the Raspberry Pi
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于ARM设备的镜像，如树莓派
- en: The Cloud
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云
- en: Pre-built virtual machine images for VMWare, VirtualBox, and QEMU
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预构建的虚拟机镜像，适用于VMWare、VirtualBox和QEMU
- en: Pre-built Docker containers
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预构建的Docker容器
- en: Images for mobile devices
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动设备的镜像
- en: Windows Subsystem for Linux
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows子系统Linux
- en: Kali is built from Debian Linux, so installing it and keeping it updated is
    pretty much the same as installing and updating Debian.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: Kali是基于Debian Linux构建的，因此安装和更新它与安装和更新Debian几乎相同。
- en: Greenbone Security Assistant is a rather memory-hungry program, so if you're
    installing Kali in a virtual machine, be sure to allocate at least 3 GB of memory.
  id: totrans-165
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Greenbone安全助手是一个相当占用内存的程序，因此如果您在虚拟机中安装Kali，请确保至少分配3GB内存。
- en: 'The first thing you''ll want to do after installing Kali is to update it, which
    is done in the same way that you''d update any Debian/Ubuntu-type of distro. Then,
    install GSA, like this:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Kali后，您首先需要做的就是更新它，这与更新任何Debian/Ubuntu类型的发行版相同。然后，像这样安装GSA：
- en: '[PRE21]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Note that the `openvas` package is a **transitional package** that will automatically
    install all of the proper Greenbone packages.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`openvas`软件包是一个**过渡软件包**，它将自动安装所有适当的Greenbone软件包。
- en: 'After the GSA installation completes, you''ll need to run a script that will
    create the security certificates and download the vulnerability database:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: GSA安装完成后，您需要运行一个脚本，创建安全证书并下载漏洞数据库：
- en: '[PRE22]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This will take a long time, so you might as well go grab a sandwich and a coffee
    while it''s running. When it''s finally done, you''ll be presented with the password
    that you''ll use to log in to GSA. Write it down and keep it in a safe place:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程会花费很长时间，所以您不妨去拿个三明治和咖啡，等它运行完。当它最终完成时，您将看到用于登录GSA的密码。记下并保存在安全的地方：
- en: '![Figure 14.10: Copy the password](img/file93.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图14.10：复制密码](img/file93.png)'
- en: 'Figure 14.10: Copy the password'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.10：复制密码
- en: 'Next, start the Greenbone services by doing:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，通过以下操作启动Greenbone服务：
- en: '[PRE23]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To ensure that everything works properly, you’ll need to manually sync the
    data feeds, and then restart the GVA services:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保一切正常运行，您需要手动同步数据流，然后重启GVA服务：
- en: '[PRE24]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Wait for 30 seconds, and then restart the services:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 等待30秒，然后重启服务：
- en: '[PRE25]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Once the service startup has completed, open Firefox and navigate to [https://localhost:9392](https://localhost:9392).
    You'll get a security alert because GVA uses a self-signed security certificate,
    but that's okay. Just click on the **Advanced** button, and then click on **Add
    Exception**.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 服务启动完成后，打开 Firefox 并访问 [https://localhost:9392](https://localhost:9392)。你会收到一个安全警告，因为
    GVA 使用的是自签名的安全证书，但没关系。只需点击**高级**按钮，然后点击**添加例外**。
- en: On the login page, enter `admin` as the user and then enter the password that
    was generated by the `gvm-setup` script.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在登录页面，输入`admin`作为用户名，然后输入由`gvm-setup`脚本生成的密码。
- en: '![Figure 14.11: The GVA login screen](img/file94.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.11：GVA 登录界面](img/file94.png)'
- en: 'Figure 14.11: The GVA login screen'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.11：GVA 登录界面
- en: 'There''s all kinds of fancy stuff that you can do with GVA, but for now, we''ll
    just look at how to do a basic vulnerability scan. To begin, select **Tasks**
    from the **Scans** menu on the GVA dashboard:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多花里胡哨的功能可以通过 GVA 实现，但目前我们只看如何进行基础的漏洞扫描。首先，从 GVA 仪表盘的**扫描**菜单中选择**任务**：
- en: '![Figure 14.12: Select Tasks](img/file95.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.12：选择任务](img/file95.png)'
- en: 'Figure 14.12: Select Tasks'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.12：选择任务
- en: 'When the Tasks page comes up, look for the little magic wand at the upper left-hand
    corner. Roll your mouse cursor over this wand, and you’ll see the various choices
    for the Task Wizard:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 当任务页面加载出来后，寻找左上角的小魔法棒。将鼠标指针悬停在这个魔法棒上，你会看到任务向导的各种选项：
- en: '![Figure 14.13: Task Wizard choices](img/file96.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.13：任务向导选项](img/file96.png)'
- en: 'Figure 14.13: Task Wizard choices'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.13：任务向导选项
- en: 'For now, we''ll just select the **Task Wizard** option, which will choose all
    of the default scan settings for us. The only thing you need to do here is enter
    the IP address of the machine that you want to scan, and then start the scan:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们只选择**任务向导**选项，它将为我们选择所有默认的扫描设置。你需要做的唯一事情就是输入你想扫描的机器的 IP 地址，然后开始扫描：
- en: '![Figure 14.14: Start a basic scan](img/file97.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.14：开始基础扫描](img/file97.png)'
- en: 'Figure 14.14: Start a basic scan'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.14：开始基础扫描
- en: 'The scan will take some time, so you might as well go grab a drink:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描需要一些时间，所以你不妨去喝杯饮料：
- en: '![Figure 14.15: Performing a basic scan](img/file98.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.15：执行基础扫描](img/file98.png)'
- en: 'Figure 14.15: Performing a basic scan'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.15：执行基础扫描
- en: 'The type of scan that you''re doing is named **Full and Fast**, which is the
    most comprehensive type of scan that’s now offered. To select another type of
    scan and to configure other scan options, use the **Advanced Task Wizard**, as
    shown here:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 你正在进行的扫描类型名为**全面与快速**，这是目前提供的最全面的扫描类型。要选择其他扫描类型并配置其他扫描选项，请使用**高级任务向导**，如图所示：
- en: '![Figure 14.16: Selecting the scan options](img/file99.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.16：选择扫描选项](img/file99.png)'
- en: 'Figure 14.16: Selecting the scan options'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.16：选择扫描选项
- en: 'When the scan has completed, click on the **Scans/Results** menu item:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描完成后，点击**扫描/结果**菜单项：
- en: '![Figure 14.17: View the results](img/file100.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.17：查看结果](img/file100.png)'
- en: 'Figure 14.17: View the results'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.17：查看结果
- en: For the sake of showing you some interesting stuff, I purposely chose a target
    machine that’s nearly 20 years old, with an outdated operating system and lots
    of vulnerabilities. Here, you see that the machine is using weak encryption algorithms
    for Secure Shell, which is classified as medium severity. Even worse is that it
    supports SSH version 1, which is classified as a high severity problem. Yikes!
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 为了向你展示一些有趣的内容，我特意选择了一台接近 20 年历史、操作系统过时且存在大量漏洞的目标机器。在这里，你看到这台机器使用了弱加密算法进行 Secure
    Shell 连接，且被分类为中等严重性问题。更糟糕的是，它还支持 SSH 版本 1，这被分类为高严重性问题。天哪！
- en: '![Figure 14.18: Scan results](img/file101.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.18：扫描结果](img/file101.png)'
- en: 'Figure 14.18: Scan results'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.18：扫描结果
- en: You also want to pay attention to the items that aren't flagged as vulnerabilities.
    For example, the **VNC security types** item shows that port `5900` is open. This
    means that the **Virtual Network Computing** (**VNC**) daemon is running, which
    allows users to remotely log in to this machine's desktop. If this machine were
    an Internet-facing machine, that would be a real problem because there's no real
    security with VNC like there is with Secure Shell.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要注意那些未标记为漏洞的项目。例如，**VNC 安全类型**项显示端口 `5900` 是开放的。这意味着**虚拟网络计算**（**VNC**）守护进程正在运行，允许用户远程登录到该机器的桌面。如果这台机器是面对互联网的，那将是一个真正的问题，因为
    VNC 并不像 Secure Shell 那样有真正的安全性。
- en: 'By clicking on a vulnerability item, I can see an explanation of the vulnerability:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 点击一个漏洞项，我可以看到该漏洞的解释：
- en: '![Figure 14.19: An explanation of a vulnerability](img/file102.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图14.19：漏洞解释](img/file102.png)'
- en: 'Figure 14.19: An explanation of a vulnerability'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.19：漏洞解释
- en: Keep in mind that the target machine, in this case, is a desktop machine. If
    it were a server, there's a good chance that we'd see even more problems.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，目标机器在这种情况下是一台桌面计算机。如果是服务器，可能会遇到更多问题。
- en: And that pretty much wraps things up for the Greenbone Security Assistant. As
    I mentioned previously, there's a lot of awesome stuff that you can do with it.
    However, what I've shown you here should be enough to get you started. Play around
    with it and try out the different scan options to see the difference in results.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上总结了Greenbone安全助手的内容。如前所述，你可以用它做很多非常棒的事情。不过，我展示给你的这些内容应该足以帮助你入门。你可以尝试使用不同的扫描选项，看看结果的不同。
- en: If you want to find out more about Kali Linux, you'll find a great selection
    of books about it on the Packt Publishing website.
  id: totrans-211
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于Kali Linux的信息，你可以在Packt Publishing网站上找到许多相关的书籍。
- en: Okay, you now know how to do a vulnerability scan with GSA. Now, let's look
    at a scanner that's specifically designed for web servers.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，你现在知道如何使用GSA进行漏洞扫描了。接下来，我们来看看一个专门为Web服务器设计的扫描器。
- en: Web server scanning with Nikto
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Nikto进行Web服务器扫描
- en: The Greenbone Security Assistant, which we just looked at, is a general-purpose
    vulnerability scanner. It can find vulnerabilities for most any kind of operating
    system or for most any server daemon. However, as we've just seen, a GSA scan
    can take a while to run, and it might be more than what you need.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚看过的Greenbone安全助手是一个通用的漏洞扫描工具。它能够发现大多数操作系统或大多数服务器守护进程的漏洞。不过，正如我们刚才所见，GSA扫描可能需要较长时间运行，可能也并不是你需要的。
- en: Nikto is a special-purpose tool with only one purpose. That is, it's meant to
    scan web servers, and only web servers. It's easy to install, easy to use, and
    capable of doing a comprehensive scan of a web server fairly quickly.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto是一个特殊用途的工具，只有一个目的。也就是，它专门用于扫描Web服务器，仅此而已。它易于安装，易于使用，并且能够快速进行全面的Web服务器扫描。
- en: Nikto in Kali Linux
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Kali Linux中的Nikto
- en: 'If you have Kali Linux, you''ll find that Nikto is already installed under
    the **Vulnerability Analysis** menu:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用Kali Linux，你会发现Nikto已经在**漏洞分析**菜单下安装好了：
- en: '![Figure 14.20: Nikto on the Kali Linux menu](img/file103.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图14.20：Kali Linux菜单中的Nikto](img/file103.png)'
- en: 'Figure 14.20: Nikto on the Kali Linux menu'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.20：Kali Linux菜单中的Nikto
- en: 'However, your best bet is to ignore it, and instead use the more up-to-date
    version that you’ll download directly from GitHub. That’s because the Nikto signature
    database that’s installed on Kali hasn’t been updated since 2019, as you see here:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，最好的做法是忽略它，而是直接从GitHub下载更新的版本。因为你看到的这里，安装在Kali上的Nikto签名数据库自2019年以来就没有更新过：
- en: '[PRE26]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: You used to be able to update the database with the `sudo nikto -update` command,
    but that no longer works because the author has deprecated the `-update` option.
    (I had hoped that doing a normal `sudo apt dist-upgrade` command would bring in
    some updates, but no such luck.) Now, the author recommends using the `git` commands
    to download and update Nikto. So, let’s look at how to do that.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 你以前可以使用`sudo nikto -update`命令来更新数据库，但现在不再有效，因为作者已经弃用了`-update`选项。（我曾希望通过正常的`sudo
    apt dist-upgrade`命令来获取一些更新，但没运气。）现在，作者建议使用`git`命令来下载和更新Nikto。那么，让我们来看一下如何操作。
- en: Hands-on lab--Installing Nikto from Github
  id: totrans-223
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 实验室操作——从Github安装Nikto
- en: To make things easy, we’ll do this on Kali, because it already has all of the
    `perl` modules that Nikto needs to operate. If you do this on Debian or Ubuntu,
    it should work, but you’ll need to chase down the `perl` modules that it needs
    yourself. And, forget about doing this on AlmaLinux, because the necessary `perl`
    modules aren’t even in any of the AlmaLinux or EPEL repositories. (There’s an
    alternate way to install them, but that’s beyond the scope of this book.)
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化操作，我们将在Kali上进行这个操作，因为它已经具备了Nikto运行所需的所有`perl`模块。如果你在Debian或Ubuntu上操作，它也应该能正常工作，但你需要自己去找需要的`perl`模块。而且，忘记在AlmaLinux上进行此操作，因为所需的`perl`模块甚至不在任何AlmaLinux或EPEL仓库中。（当然有其他安装方式，但这超出了本书的范围。）
- en: 'In your normal user home directory, clone the Nikto repository. Then, `cd`
    into the `nikto` directory, and checkout the current branch:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的普通用户主目录中，克隆 Nikto 仓库。然后，`cd` 进入 `nikto` 目录，并检出当前分支：
- en: '[PRE27]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To run Nikto, cd into the program subdirectory, and invoke Nikto from there.
    For example, to see the Nikto help screen, do this:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要运行 Nikto，进入程序子目录，然后从那里调用 Nikto。例如，要查看 Nikto 帮助屏幕，可以这样做：
- en: '[PRE28]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Periodically, you’ll want to update the Nikto signature databases. Just `cd`
    into the `nikto` directory and do:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定期更新 Nikto 签名数据库。只需 `cd` 进入 `nikto` 目录并执行：
- en: '[PRE29]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: End of lab
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实验结束
- en: Next, let’s do something useful with Nikto.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们用 Nikto 做一些有用的事情。
- en: Scanning a web server with Nikto
  id: totrans-233
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用 Nikto 扫描 Web 服务器
- en: 'To do a simple scan, use the `-h` option to specify the target host, like this:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要进行简单扫描，使用 `-h` 选项指定目标主机，如下所示：
- en: '[PRE30]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Let''s look at some sample output. Here''s the top part:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看一下部分输出。以下是顶部部分：
- en: '[PRE31]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: At the top, we can see that there's an `shtml.exe` file present, which is supposedly
    for the FrontPage web authoring program. I have no idea why it's there, considering
    that this is a Linux server and that that's a Windows executable. Nikto is telling
    me that by having that file there, someone could possibly do a **Denial of Service**
    (**DOS**) attack against this site.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部，我们可以看到有一个 `shtml.exe` 文件，它显然是用于 FrontPage 网页创作程序的。我不明白它为什么在这里，考虑到这是一个 Linux
    服务器，而那个是 Windows 可执行文件。Nikto 告诉我，通过存在这个文件，有人可能会对该网站发起**拒绝服务**（**DOS**）攻击。
- en: Next, we can see that there are various scripts in the `/cgi-bin/` directory.
    You can see from the explanatory messages that that's not a good thing because
    it could allow attackers to execute commands on my server.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以看到 `/cgi-bin/` 目录中有各种脚本。从解释信息中可以看出，这不是一件好事，因为它可能允许攻击者在我的服务器上执行命令。
- en: 'Let''s look at the second part:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看第二部分：
- en: '[PRE32]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Here, we can see that there's an `author.exe` file in the `vti_bin` directory,
    which could theoretically allow someone to have authoring privileges.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们可以看到 `vti_bin` 目录中有一个 `author.exe` 文件，这理论上可能允许某人获得创作权限。
- en: 'And now, the final part:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，看看最后部分：
- en: '[PRE33]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The final item of interest is the `passwd.txt` file that's in the `wwwboard`
    directory. Apparently, this password file is browsable, which is definitely not
    a good thing.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个值得关注的项目是 `wwwboard` 目录中的 `passwd.txt` 文件。显然，这个密码文件是可以浏览的，这绝对不是一件好事。
- en: Now, before you accuse me of making these problems up, I will reveal that this
    is a scan of a real production website on a real hosting service. (And yes, I
    do have permission to scan it.) So, these problems are real and need to be fixed.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在你指责我编造这些问题之前，我会透露这是对一个实际生产网站进行的扫描，且这个网站是在一个真实的托管服务上。（是的，我确实获得了扫描许可。）所以，这些问题是真实存在的，并且需要修复。
- en: 'Here are a couple of other sample messages that I got from scanning a web server
    that''s running WordPress:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我扫描一个运行 WordPress 的 Web 服务器时获得的其他一些示例消息：
- en: '[PRE34]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: To cut a long story short, both of these two problems could potentially allow
    an attacker to steal user credentials. The fix, in this case, would be to see
    whether the WordPress folk have issued any updates that would fix the problem.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 长话短说，这两个问题可能允许攻击者窃取用户凭证。在这种情况下，解决方法是查看 WordPress 官方是否发布了修复此问题的更新。
- en: 'So, how can we protect a web server against these kinds of vulnerabilities?
    Let''s see:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们如何保护 Web 服务器免受这些漏洞的攻击呢？让我们来看看：
- en: As we saw in the first example, you want to ensure that you don't have any risky
    executable files on your web server. In this case, we found two `.exe` files that
    might not hurt anything on our Linux server, since Windows executable files don't
    run on Linux. On the other hand, it could be a Linux executable that's disguised
    as a Windows executable. We also found some `perl` scripts that definitely would
    run on Linux and that could pose a problem.
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正如我们在第一个例子中看到的，你需要确保你的 Web 服务器上没有任何风险较大的可执行文件。在这种情况下，我们发现了两个 `.exe` 文件，它们在我们的
    Linux 服务器上可能不会造成任何伤害，因为 Windows 可执行文件无法在 Linux 上运行。另一方面，这可能是一个伪装成 Windows 可执行文件的
    Linux 可执行文件。我们还发现了一些 `perl` 脚本，这些脚本在 Linux 上肯定能运行，可能会带来问题。
- en: In the event that someone were to plant some malicious script on your web server,
    you'll want to have some form of mandatory access control, such as SELinux or
    AppArmor, that would keep the malicious scripts from accessing things that they
    shouldn’t access. (See *Chapter 10*, *Implementing Mandatory Access Control with
    SELinux and AppArmor*, for details of that).
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有人在你的web服务器上植入恶意脚本，你会希望有某种强制访问控制措施，比如SELinux或AppArmor，这可以防止恶意脚本访问不应该访问的内容。（有关详细信息，请参阅*第10章*，*使用SELinux和AppArmor实施强制访问控制*）
- en: You may also consider installing a web application firewall, such as ModSecurity.
    Space doesn't permit me to cover the details of ModSecurity, but you'll find a
    book that covers it on the Packt Publishing website.
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你还可以考虑安装Web应用防火墙，如ModSecurity。由于篇幅限制，我无法详细介绍ModSecurity，但你可以在Packt出版公司的网站上找到一本相关书籍。
- en: Keep your systems updated, especially if you're running a PHP-based content
    management system such as WordPress. If you keep up with the IT security news,
    you'll see stories about WordPress vulnerabilities more often than you'd like
    to.
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持系统更新，尤其是当你使用基于PHP的内容管理系统（如WordPress）时。如果你关注IT安全新闻，你会发现关于WordPress漏洞的报道比你希望的还要频繁。
- en: I can’t reveal the URL of the site that I scanned here, but you can download
    a vulnerable virtual machine from [https://www.vulnhub.com/](https://www.vulnhub.com/)
  id: totrans-255
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我不能透露我扫描的站点的URL，但你可以从[https://www.vulnhub.com/](https://www.vulnhub.com/)下载一个易受攻击的虚拟机
- en: ''
  id: totrans-256
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Choose a virtual machine to download, and then import it into VirtualBox. To
    do that, choose **Import Appliance** under the **File** menu.
  id: totrans-257
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 选择一个虚拟机进行下载，然后将其导入到VirtualBox中。为此，在**文件**菜单中选择**导入设备**。
- en: There are other scan options that you can see by just typing `./nikto` at the
    command line. For now though, this is enough to get you started with basic web
    server scanning.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过在命令行中输入`./nikto`查看其他扫描选项。不过，目前这些足以让你开始进行基本的web服务器扫描。
- en: Summary
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: We've reached yet another milestone in our journey, and we saw some cool stuff.
    We started with a discussion about the basics of setting up Snort as a NIDS. Then,
    I showed you how to seriously cheat by deploying a specialty Linux distro that
    already has a NIDS set up and ready to go. As a bonus, I showed you a quick and
    easy edge firewall appliance that comes with a built-in Network Intrusion Prevention
    System.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经达成了旅程中的又一个里程碑，并且看到了很酷的东西。我们从讨论设置Snort作为NIDS的基础开始。然后，我向你展示了如何通过部署一个已经设置好并准备就绪的专业Linux发行版来“作弊”。作为奖励，我还展示了一个快速简单的边缘防火墙设备，它内置了网络入侵防御系统。
- en: Next, I introduced you to Lynis and how you can use it to scan your system for
    various vulnerabilities and compliance issues. Finally, we wrapped things up with
    working demos of the Greenbone Security Assistant and Nikto.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我向你介绍了Lynis，以及你如何使用它扫描系统中的各种漏洞和合规性问题。最后，我们通过Greenbone Security Assistant和Nikto的演示做了总结。
- en: In the next chapter, we'll look at how to block certain applications from running.
    I'll see you there.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将讨论如何阻止某些应用程序运行。下次见。
- en: Questions
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: Which of the following best describes IPFire?
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项最能描述IPFire？
- en: A host-based firewall appliance with a built-in Network Intrusion Detection
    System
  id: totrans-265
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一种内置网络入侵检测系统的主机防火墙设备
- en: An edge firewall appliance with a built-in Network Intrusion Detection System
  id: totrans-266
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一种内置网络入侵检测系统的边缘防火墙设备
- en: Which of the following utilities is best for scanning Sarbanes-Oxley compliance
    issues?
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个工具最适合扫描Sarbanes-Oxley合规性问题？
- en: Lynis
  id: totrans-268
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Lynis
- en: Lynis Enterprise
  id: totrans-269
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Lynis企业版
- en: Greenbone Security Assistant
  id: totrans-270
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Greenbone Security Assistant
- en: OpenSCAP
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenSCAP
- en: Which of the following best represents what Snort is?
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个最能代表Snort的功能？
- en: HIDS
  id: totrans-273
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: HIDS
- en: GIDS
  id: totrans-274
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: GIDS
- en: NIDS
  id: totrans-275
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: NIDS
- en: FIDS
  id: totrans-276
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: FIDS
- en: Which of the following would you use as a general-purpose, external vulnerability
    scanner?
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项工具你会选择作为通用的外部漏洞扫描器？
- en: Greenbone Security Assistant
  id: totrans-278
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Greenbone Security Assistant
- en: Nikto
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nikto
- en: OpenSCAP
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenSCAP
- en: Lynis
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Lynis
- en: Which of these problems would you be most likely to find with a Nikto scan?
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下问题中，使用Nikto扫描最有可能发现哪些问题？
- en: That the Samba service is running, although it shouldn't be
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Samba服务正在运行，尽管不应该运行
- en: That the root user account is exposed to the Internet via SSH
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根用户账户通过SSH暴露在互联网上
- en: That potentially malicious scripts reside in a CGI directory
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可能存在恶意脚本驻留在CGI目录中
- en: That the root user account is configured with a weak password
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根用户账户配置了一个弱密码
- en: What is a unique characteristic about Lynis?
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Lynis的独特特征是什么？
- en: It's a proprietary, closed-source vulnerability scanner.
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它是一个专有的、闭源的漏洞扫描器。
- en: It's a shell script that can be used to scan any Linux, Unix, or Unix-like operating
    system for vulnerabilities.
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它是一个可以用于扫描任何 Linux、Unix 或类 Unix 操作系统漏洞的 shell 脚本。
- en: It's an external vulnerability scanner.
  id: totrans-290
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它是一个外部漏洞扫描器。
- en: It can only be installed on a specialty security distro, such as Kali Linux.
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它只能安装在特定的安全发行版上，例如 Kali Linux。
- en: Which of these problems would you most likely find with Snort?
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Snort 中你最可能发现哪些问题？
- en: A root user account with a weak password
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个密码弱的 root 用户账户
- en: Servers without active firewalls
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有启用防火墙的服务器
- en: Cryptocoin mining malware active on the network
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络上有加密货币挖矿恶意软件活动
- en: Root user accounts exposed to the Internet via SSH
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 SSH 暴露到互联网上的 root 用户账户
- en: Further reading
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Lynis home page: [https://cisofy.com/lynis/](https://cisofy.com/lynis/)'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lynis 首页：[https://cisofy.com/lynis/](https://cisofy.com/lynis/)
- en: 'How Lynis and auditd are different: [https://linux-audit.com/how-are-auditd-and-lynis-different/](https://linux-audit.com/how-are-auditd-and-lynis-different/)'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lynis 和 auditd 的区别：[https://linux-audit.com/how-are-auditd-and-lynis-different/](https://linux-audit.com/how-are-auditd-and-lynis-different/)
- en: 'Greenbone home page: [https://securityonionsolutions.com/](https://securityonionsolutions.com/)'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Greenbone 首页：[https://securityonionsolutions.com/](https://securityonionsolutions.com/)
- en: 'Snort home page: [https://www.snort.org/](https://www.snort.org/)'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Snort 首页：[https://www.snort.org/](https://www.snort.org/)
- en: 'Nikto home page: [https://cirt.net/nikto2](https://cirt.net/nikto2)'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nikto 首页：[https://cirt.net/nikto2](https://cirt.net/nikto2)
- en: 'Security Onion home page: [https://securityonionsolutions.com/](https://securityonionsolutions.com/)'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Security Onion 首页：[https://securityonionsolutions.com/](https://securityonionsolutions.com/)
- en: 'Tutorial for installing Greenbone Security Manager: [https://youtu.be/OUiRTv4Q80c](https://youtu.be/OUiRTv4Q80c)'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Greenbone 安全管理器的教程：[https://youtu.be/OUiRTv4Q80c](https://youtu.be/OUiRTv4Q80c)
- en: Answers
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 答案
- en: b
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: b
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: a
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: a
- en: c
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: b
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
