- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Configuring Linux Servers
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Linux 服务器
- en: In this chapter, you will learn how to set up different types of Linux servers.
    This will include **Domain Name System** (**DNS**) servers, **Domain Host Configuration
    Protocol** (**DHCP**) servers, **Samba** or **Server Message Block**/**Common
    Internet File System** (**SMB**/**CIFS**) file servers, and **Network File System**
    (**NFS**) servers. All these servers, in one way or another, are powering the
    backbone of the World Wide Web. Even though we will not cover it here, you should
    know that the reason your computer is showing the exact time is because of a well-implemented
    **Network Time Protocol** (**NTP**) server. You can shop online and transfer files
    between your friends and colleagues thanks to effective DHCP, web, and file servers.
    Configuring the different types of Linux services that power all these servers
    represents the knowledge base for any Linux system administrator. In this edition
    of the book, we will only cover a select few of these Linux servers, those we
    consider the most important and major Linux servers currently. For further information,
    please refer to the *Further reading* section at the end of this chapter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何设置不同类型的 Linux 服务器。这将包括**域名系统**（**DNS**）服务器、**动态主机配置协议**（**DHCP**）服务器、**Samba**
    或 **服务器消息块**/**通用互联网文件系统**（**SMB**/**CIFS**）文件服务器，以及 **网络文件系统**（**NFS**）服务器。这些服务器在某种程度上都为万维网的骨干提供支持。虽然我们在这里不讨论，但你应当知道，你的计算机显示准确时间的原因是因为有一个良好实现的
    **网络时间协议**（**NTP**）服务器。你能够进行在线购物和与朋友、同事之间的文件传输，得益于高效的 DHCP、Web 和文件服务器。配置这些为服务器提供动力的各种
    Linux 服务，是任何 Linux 系统管理员的知识基础。在本书的本版本中，我们只会涵盖其中的一些 Linux 服务器，这些是我们认为当前最重要的主要 Linux
    服务器。如需进一步了解，请参考本章末尾的*进一步阅读*部分。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要内容：
- en: Introduction to Linux services
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux 服务介绍
- en: Setting up an SSH server
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 SSH 服务器
- en: Setting up a DNS server
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 DNS 服务器
- en: Setting up a DHCP server
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 DHCP 服务器
- en: Setting up an NFS server
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 NFS 服务器
- en: Setting up a Samba file server
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Samba 文件服务器
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Basic knowledge of networking and Linux commands is required. You will need
    access to multiple working systems, preferably on premise or in the cloud. If
    this is not possible, you can use local virtual machines on your system. Furthermore,
    it would be useful to have a domain available for you to use too. We will use
    Ubuntu Server 22.04.2 LTS as the distribution of choice for this chapter’s exercises
    and examples. Nevertheless, any other major Linux distribution—such as Fedora,
    RHEL, openSUSE, or Debian—is equally suitable for the tasks detailed in this chapter.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 需要具备基本的网络知识和 Linux 命令知识。你需要访问多个正常工作的系统，最好是本地系统或云端系统。如果这不可能，你也可以在本地使用虚拟机。此外，拥有一个可以使用的域名会很有帮助。本章的练习和示例将使用
    Ubuntu Server 22.04.2 LTS 版本。但无论是 Fedora、RHEL、openSUSE 还是 Debian 等其他主要 Linux 发行版，都同样适用于本章所涉及的任务。
- en: Introducing Linux services
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Linux 服务
- en: Everything you have learned up until now will easily apply to any workstation
    or desktop/laptop running Linux. We have delved into advanced networking subjects
    that are meant to ease your learning path to becoming a seasoned Linux system
    administrator. Now we will enter the *server* territory as a natural path to the
    *cloud*, which will be discussed in detail in the last four chapters of this book.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你到目前为止所学的内容，能够轻松应用到任何运行 Linux 的工作站或台式机/笔记本上。我们已经深入探讨了一些高级网络主题，旨在帮助你顺利学习，成为一名资深的
    Linux 系统管理员。接下来，我们将进入*服务器*领域，这是通向*云计算*的自然路径，后者将在本书的最后四章中详细讨论。
- en: A **Linux server**, compared to a Linux workstation, is a system that serves
    content over a network. While doing so, a server provides its hardware and software
    resources to different clients that are accessing it. For example, every time
    you enter a website address into your browser, a server is accessed. That particular
    type of server is a **web server**. When you print over the network in your workplace,
    you access a **print server**, and when you read your email, you access a **mail
    server**. All these are specialized systems that run a specific piece of software
    (sometimes called a service) that provides you, the client, with the data you
    requested. Usually, servers are very powerful systems that have lots of resources
    available for a client’s use.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**Linux 服务器**与 Linux 工作站相比，是一个通过网络提供内容的系统。在此过程中，服务器为访问它的不同客户端提供硬件和软件资源。例如，每次你在浏览器中输入一个网站地址时，都会访问到一个服务器。那种类型的服务器是
    **Web 服务器**。当你在工作场所通过网络打印时，你访问的是 **打印服务器**，而当你查看电子邮件时，你访问的是 **邮件服务器**。这些都是专门的系统，运行特定的软件（有时称为服务），为你这个客户端提供你所请求的数据。通常，服务器是非常强大的系统，拥有大量可供客户端使用的资源。'
- en: In contrast, a **workstation** (which is yet another powerful piece of hardware)
    is generally used for personal work, not for client access over a network. A workstation
    is used for intensive work, similar to any regular desktop or laptop system. In
    light of everything we have exposed up to now, the contents of this chapter and
    the following chapters are best suited for server use, but not limited to it.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，**工作站**（这是另一种强大的硬件）通常用于个人工作，而不是用于网络上的客户端访问。工作站用于高强度工作，类似于任何普通的桌面或笔记本系统。考虑到到目前为止我们所揭示的一切，本章及后续章节的内容最适合服务器使用，但并不限于此。
- en: You’ve probably already heard about setting up different Linux servers—such
    as a web server, a file server, or an email server—and have probably wondered
    why they are called that. They do not represent the hardware boxes that are the
    actual servers—they are basically services running on top of Linux. So what are
    Linux services? These are programs that run in the background. Inside the Linux
    world, those services are known as `init` process in [*Chapter 5*](B19682_05.xhtml#_idTextAnchor104),
    *Working with Processes, Daemons, and Signals*, when we discussed what processes,
    daemons, and signals are and how to manage them on Linux. The mother of all processes
    is the `init` process, which is among the first processes when Linux boots up.
    Currently, the latest version of Ubuntu (and also CentOS, Fedora, openSUSE, and
    others) uses `systemd` as the default `init` process.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经听说过设置不同的 Linux 服务器——比如 Web 服务器、文件服务器或邮件服务器——并且可能会想知道它们为什么会被这样称呼。它们并不代表实际的硬件服务器，而是基本上在
    Linux 上运行的服务。那么，什么是 Linux 服务呢？这些是运行在后台的程序。在 Linux 世界中，这些服务被称为 `init` 进程，在我们讨论了进程、守护进程和信号，并且讲解了如何在
    Linux 上管理它们时，这些内容出现在[*第 5 章*](B19682_05.xhtml#_idTextAnchor104)《处理进程、守护进程和信号》中。所有进程的“母进程”是
    `init` 进程，它是 Linux 启动时最先运行的进程之一。目前，Ubuntu（以及 CentOS、Fedora、openSUSE 等）的最新版本使用
    `systemd` 作为默认的 `init` 进程。
- en: We will refresh your memory by using some basic commands for working with services
    on Linux. If you want more information, please refer to [*Chapter 5*](B19682_05.xhtml#_idTextAnchor104),
    *Working with Processes, Daemons,* *and Signals*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过使用一些基本命令来刷新你对 Linux 上服务操作的记忆。如果你想了解更多信息，请参考[*第 5 章*](B19682_05.xhtml#_idTextAnchor104)《处理进程、守护进程和信号》。
- en: 'The first command we will remind you of is the `ps` command. We will use it
    to show the `init` process running, as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先提醒你使用的命令是 `ps` 命令。我们将使用它来显示正在运行的 `init` 进程，如下所示：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output on our Ubuntu 22.04.2 system is shown in the following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 Ubuntu 22.04.2 系统上的输出如以下截图所示：
- en: '![Figure 13.1 – Showing the init process by using the ps command](img/B19682_13_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.1 – 使用 ps 命令显示 init 进程](img/B19682_13_01.jpg)'
- en: Figure 13.1 – Showing the init process by using the ps command
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.1 – 使用 ps 命令显示 init 进程
- en: By using the `-e` flag, we can generate information about all processes, except
    kernel-related ones, while the `-f` flag is used to generate a full listing.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `-e` 标志，我们可以生成关于所有进程的信息，排除与内核相关的进程，而 `-f` 标志用于生成完整的进程列表。
- en: In the process list shown, the first process is either the `init` process or
    `systemd`. Sometimes, on older operating systems (such as Ubuntu 20.04 or 18.04),
    it uses the `init` name for backward-compatibility issues, but to make sure that
    it really is `systemd`, you can use the manual pages of `init` for more details.
    When you type `man init` in the command line, the manual page shown is for `systemd`.
    As the parent of all services, `systemd` starts all the running processes in parallel
    as a way to make the boot process and service-time response more efficient. To
    see how efficient those processes are, you can run the `systemd-analyze` command.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在显示的进程列表中，第一个进程是 `init` 进程或 `systemd`。有时，在较旧的操作系统（如 Ubuntu 20.04 或 18.04）中，它会使用
    `init` 名称以兼容旧版，但为了确保它确实是 `systemd`，你可以查看 `init` 的手册页以获取更多信息。当你在命令行输入 `man init`
    时，显示的手册页是关于 `systemd` 的。作为所有服务的父进程，`systemd` 会并行启动所有运行中的进程，从而提高启动过程和服务响应的效率。要查看这些进程的效率，你可以运行
    `systemd-analyze` 命令。
- en: A command we have frequently used, and one you should already know, is the `systemctl`
    command, which is the main command-line utility for working with `systemd` services
    (or daemons) on Linux.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常使用的一个命令，也是你应该已经知道的命令，是 `systemctl` 命令，它是用于在 Linux 上管理 `systemd` 服务（或守护进程）的主要命令行工具。
- en: 'As you know `systemctl` invokes `systemd`. Those units have several types,
    such as service, mount, socket, and others. To see those units listed by the time
    they take to start up, you can use the `systemd-analyze blame` command, as shown
    in the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所知道的，`systemctl` 调用的是 `systemd`。这些单元有多种类型，如服务、挂载、套接字等。要查看这些单元按启动所需时间的排序，可以使用
    `systemd-analyze blame` 命令，如下图所示：
- en: '![Figure 13.2 – The systemd-analyze blame command](img/B19682_13_02.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.2 – systemd-analyze blame 命令](img/B19682_13_02.jpg)'
- en: Figure 13.2 – The systemd-analyze blame command
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.2 – systemd-analyze blame 命令
- en: The output shows different types of units, such as *service*, *mount*, and *device*.
    The preceding screenshot is only an excerpt of the running units. To learn more
    about the `systemctl` command, feel free to use the manual pages, or go back to
    [*Chapter 5*](B19682_05.xhtml#_idTextAnchor104) to refresh your memory.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示了不同类型的单元，如 *service*、*mount* 和 *device*。前面的截图仅是正在运行的单元的一部分。要了解更多关于 `systemctl`
    命令的信息，可以随时查阅手册页，或者回到[*第 5 章*](B19682_05.xhtml#_idTextAnchor104)刷新记忆。
- en: This brief introduction to Linux services is only a refresher of the respective
    sections from [*Chapter 5*](B19682_05.xhtml#_idTextAnchor104), enough for you
    to start delving into setting up and configuring specific Linux services. In the
    following sections, we will show you how to manage some of the most important
    services on Linux, such as **SSH**, **DNS**, **DHCP**, **NTP**, **Samba**, **NFS**,
    **web**, **File Transfer Protocol** (**FTP**), and **printing services**. Now,
    it’s time to roll up your sleeves and configure them yourself. First, we will
    show you how to set up an SSH server on Ubuntu Linux.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这段简短的 Linux 服务介绍仅仅是[*第 5 章*](B19682_05.xhtml#_idTextAnchor104)中相关部分的复习，足以帮助你开始着手配置和设置特定的
    Linux 服务。在接下来的章节中，我们将向你展示如何管理 Linux 上一些最重要的服务，如 **SSH**、**DNS**、**DHCP**、**NTP**、**Samba**、**NFS**、**web**、**文件传输协议**（**FTP**）和
    **打印服务**。现在，是时候卷起袖子，自己动手配置这些服务了。首先，我们将向你展示如何在 Ubuntu Linux 上设置 SSH 服务器。
- en: Setting up SSH
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 SSH
- en: We will configure SSH on a computer running Ubuntu Server 22.04.2 LTS as the
    host operating system. Throughout the entire book, we used SSH connections several
    times, and showed you how to create an SSH key pair in [*Chapter 11*](B19682_11.xhtml#_idTextAnchor231),
    *Working with Virtual Machines*, when we worked with cloud-init. This time, we
    will show you how to install **OpenSSH**, how to enable SSH, and how to modify
    some of its configuration defaults.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在运行 Ubuntu Server 22.04.2 LTS 作为主操作系统的计算机上配置 SSH。在整本书中，我们多次使用 SSH 连接，并且在我们处理
    cloud-init 时，在[*第 11 章*](B19682_11.xhtml#_idTextAnchor231)《与虚拟机的工作》一节中展示了如何创建
    SSH 密钥对。这次，我们将向您展示如何安装**OpenSSH**，如何启用 SSH，以及如何修改其一些默认配置。
- en: Installing and configuring OpenSSH on Ubuntu
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Ubuntu 上安装和配置 OpenSSH
- en: 'In order to use SSH, the first thing we need to do is to install the `openssh`
    package. On Ubuntu, this can be done by using the following command:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用 SSH，首先我们需要安装 `openssh` 包。在 Ubuntu 上，可以使用以下命令完成此操作：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Chances are that it is already installed on your system. If that is the case,
    you can go ahead and skip this step and go to the configuration files.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令很可能已经安装在你的系统上。如果是这样，你可以跳过这一步，直接进入配置文件部分。
- en: 'After installation, we can start and enable the `openssh` service with the
    following commands:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，我们可以使用以下命令启动并启用`openssh`服务：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For openSSH, the configuration file that we can work with is located under
    `/etc/ssh/sshd_config`. By default, this file already contains a lot of information,
    all we need to do is to open it with our text editor and start modifying the available
    options. Depending on what we want to achieve, the bare minimum configuration
    for SSH involves the following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于openSSH，我们可以操作的配置文件位于`/etc/ssh/sshd_config`。默认情况下，这个文件已经包含了很多信息，我们需要做的就是用文本编辑器打开它并开始修改可用的选项。根据我们要实现的目标，SSH的基本最小配置包括以下内容：
- en: 'Modify the remote root login options; this can be done by changing the line
    with the following code and setting the option accordingly:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改远程根用户登录选项；这可以通过修改以下代码所在的行并相应设置选项来完成：
- en: '[PRE3]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In our case, we modified the default `prohibit-password` option to `no`, so
    that the root user will not be able to connect through SSH at all.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在我们的案例中，我们将默认的`prohibit-password`选项修改为`no`，以使得根用户无法通过SSH连接。
- en: 'Disable the SSH password authentication. This can be done by changing the following
    lines to `no`:'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用SSH密码认证。可以通过将以下行更改为`no`来完成：
- en: '[PRE4]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Do this only after you copy your key pair on the remote machine and make sure
    you can use it. Otherwise, you won’t be able to access your server.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 只有在你将密钥对复制到远程机器并确保可以使用它之后才执行此操作。否则，你将无法访问你的服务器。
- en: 'To allow public key authentication, you will need to uncomment the following
    line:'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要允许公钥认证，你需要取消注释以下行：
- en: '[PRE5]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We will quickly show the commands used in [*Chapter 11*](B19682_11.xhtml#_idTextAnchor231)
    to enable public keys authentication, as a reminder:'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将快速展示在[*第11章*](B19682_11.xhtml#_idTextAnchor231)中使用的命令，以启用公钥认证，作为提醒：
- en: '[PRE6]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: ssh packt@192.168.0.113
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ssh packt@192.168.0.113
- en: '[PRE7]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The configuration options presented here are the base minimum to start using
    SSH when working with a remote system or a virtual machine. However, OpenSSH is
    a very powerful tool that offers lots of options that you could explore. Here
    are two links that could help you in your endeavors: [https://ubuntu.com/server/docs/service-openssh](https://ubuntu.com/server/docs/service-openssh)
    and [https://www.openssh.com/](https://www.openssh.com/)manual.html. In the following
    section, we will show you how to set up a DNS server.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示的配置选项是开始使用SSH时的基本最小配置，适用于远程系统或虚拟机。但是，OpenSSH是一个功能非常强大的工具，提供了很多你可以探索的选项。以下是两个可能对你有所帮助的链接：[https://ubuntu.com/server/docs/service-openssh](https://ubuntu.com/server/docs/service-openssh)和[https://www.openssh.com/](https://www.openssh.com/)manual.html。在接下来的部分中，我们将展示如何设置DNS服务器。
- en: Setting up a DNS server
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置DNS服务器
- en: 'One of the most widely used DNS services is **Berkeley Internet Name Domain
    9** (**BIND 9**). You can visit its official website at the following address:
    [https://www.isc.org/bind/](https://www.isc.org/bind/). Before continuing, let’s
    underline the system configuration and goals. For this section, we will use a
    computer running on Ubuntu Server 22.04.2 LTS. On this system, we will create
    two types of servers, a **caching name server** and a **primary name server**,
    which you can use on your local network to manage hostnames and private IP addresses.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最广泛使用的DNS服务之一是**伯克利互联网域名系统9**（**BIND 9**）。你可以访问其官方网站：[https://www.isc.org/bind/](https://www.isc.org/bind/)。在继续之前，让我们强调系统配置和目标。对于本节内容，我们将使用一台运行Ubuntu
    Server 22.04.2 LTS的计算机。在这台系统上，我们将创建两种类型的服务器，分别是**缓存名称服务器**和**主名称服务器**，你可以在本地网络上使用它们来管理主机名和私有IP地址。
- en: Important note
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'There are different DNS servers, such as **authoritative**, **caching**, or
    **forwarding** types; those are also called functional types. Among those, a caching
    DNS server is the one that always answers recursive requests from clients. Also,
    there are **relational server types**, such as primary and secondary DNS servers.
    Those are authoritative types, and are almost identical, with the only difference
    between the primary and the secondary being the location from which they get the
    zones’ information. For more information on DNS, you can consult the following
    links: [https://www.digitalocean.com/community/tutorials/a-comparison-of-dns-server-types-how-to-choose-the-right-dns-configuration](https://www.digitalocean.com/community/tutorials/a-comparison-of-dns-server-types-how-to-choose-the-right-dns-configuration)
    and [https://www.digitalocean.com/community/tutorials/an-introduction-to-dns-terminology-components-and-concepts](https://www.digitalocean.com/community/tutorials/an-introduction-to-dns-terminology-components-and-concepts).'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: DNS 服务器有不同的类型，比如 **权威**、**缓存** 或 **转发** 类型；这些也称为功能类型。在这些类型中，缓存 DNS 服务器是始终响应客户端递归请求的服务器。此外，还有
    **关系服务器类型**，如主 DNS 服务器和从 DNS 服务器。这些是权威类型，它们几乎相同，唯一的区别是主服务器和从服务器获取区域信息的位置不同。有关
    DNS 的更多信息，你可以参考以下链接：[https://www.digitalocean.com/community/tutorials/a-comparison-of-dns-server-types-how-to-choose-the-right-dns-configuration](https://www.digitalocean.com/community/tutorials/a-comparison-of-dns-server-types-how-to-choose-the-right-dns-configuration)
    和 [https://www.digitalocean.com/community/tutorials/an-introduction-to-dns-terminology-components-and-concepts](https://www.digitalocean.com/community/tutorials/an-introduction-to-dns-terminology-components-and-concepts)。
- en: There are other ways to do this, but for the purpose of showing you the basics
    of DNS setup, this configuration will suffice. If you would like a secondary server,
    you will need to have another spare system, or if you use **virtual private servers**
    (**VPSs**), they would have to be in the same data center and be using the same
    private network. In our case, however, we will use a local system on our small
    private network.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他方法可以实现这一点，但为了向你展示 DNS 设置的基本原理，这个配置已经足够。如果你需要一个辅助服务器，你需要另一个备用系统，或者如果你使用 **虚拟私人服务器**（**VPS**），它们必须位于同一数据中心，并使用相同的私人网络。然而，在我们的案例中，我们将使用一个本地系统，在我们的小型私人网络中。
- en: 'First, we will install the `bind9` package in Ubuntu by using the following
    command:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将通过以下命令在 Ubuntu 中安装 `bind9` 包：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The preceding command will install all the packages needed for BIND9 to run.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将安装运行 BIND9 所需的所有包。
- en: 'Once the packages are installed, you can test them to see whether BIND works
    as expected. For this, we will use the `nslookup` command, as shown in the following
    screenshot, by using the local address (or *loopback* address):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦包安装完成，你可以测试它们以确认 BIND 是否按预期工作。为此，我们将使用 `nslookup` 命令，如下图所示，使用本地地址（或 *环回* 地址）：
- en: '![Figure 13.3 – Checking to see whether BIND is working using nslookup](img/B19682_13_03.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.3 – 使用 nslookup 检查 BIND 是否工作](img/B19682_13_03.jpg)'
- en: Figure 13.3 – Checking to see whether BIND is working using nslookup
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.3 – 使用 nslookup 检查 BIND 是否工作
- en: 'You can now start setting up the service, as you can see it is working. First,
    we will configure a caching DNS service. But before we start, we advise you to
    back up the following configuration files: `/etc/bind/named.conf`, `/etc/bind/named.conf.options`,
    `/etc/hosts`, and `/etc/resolv.conf`. Let’s see how to create a caching server.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以开始设置服务，因为你可以看到它正在工作。首先，我们将配置一个缓存 DNS 服务。但在开始之前，我们建议你备份以下配置文件：`/etc/bind/named.conf`、`/etc/bind/named.conf.options`、`/etc/hosts`
    和 `/etc/resolv.conf`。让我们来看看如何创建一个缓存服务器。
- en: Caching a DNS service
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缓存 DNS 服务
- en: 'The default behavior of BIND9 is as a caching server. This means that setting
    it up is quite straightforward. We will tweak the configuration file just a little,
    in order to make it work according to our requests:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: BIND9 的默认行为是作为一个缓存服务器。这意味着设置它非常简单。我们只需稍微调整配置文件，以便它按照我们的需求工作：
- en: 'After seeing that the installed packages work as intended, you can also configure
    the firewall to allow BIND9, using the following command:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在确认已安装的包能正常工作后，你还可以使用以下命令配置防火墙，以允许 BIND9 通过：
- en: '[PRE9]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: // listen-on-v6 { any; };
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: // listen-on-v6 { any; };
- en: '[PRE10]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You will have to add a list of IP addresses inside the `forwarders` directive.
    This line tells the server where to look in order to find addresses not cached
    locally. For simplicity, we will add the Google public DNS servers, but feel free
    to use your `forwarders` directive to look like this:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要在`forwarders`指令中添加一组IP地址。这一行告诉服务器在哪里查找以找到没有被本地缓存的地址。为了简化操作，我们将添加Google公共DNS服务器，但你也可以自由地将你的`forwarders`指令写成如下形式：
- en: '[PRE11]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You can also add a directive defining the `allow-query` spectrum. This line
    tells the server which networks can be accepted for DNS queries. You can add your
    local network address. In our case, it will be the following:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还可以添加一条指令来定义`allow-query`范围。这一行告诉服务器哪些网络可以进行DNS查询。你可以添加本地网络地址。在我们的案例中，它将是以下内容：
- en: '[PRE12]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'There is also a `listen-on` directive, where you can specify the networks the
    DNS server will work for. This applies for IPv4 addresses and is shown in the
    following code snippet:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还有一条`listen-on`指令，你可以在其中指定DNS服务器将为哪些网络工作。这适用于IPv4地址，示例如下：
- en: '[PRE13]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After the added options, the code you added should appear as in the following
    screenshot:'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在添加选项后，你添加的代码应如下面的截图所示：
- en: '![Figure 13.4 – The final form of /etc/bind/named.conf.options after adding
    new options](img/B19682_13_04.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图13.4 – 添加新选项后的/etc/bind/named.conf.options最终格式](img/B19682_13_04.jpg)'
- en: Figure 13.4 – The final form of /etc/bind/named.conf.options after adding new
    options
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.4 – 添加新选项后的/etc/bind/named.conf.options最终格式
- en: Save the file and exit the editor. You can check the BIND9 configuration with
    the `named-checkconf` command. If there is no output, it means that the configuration
    of the file is correct. Restart the BIND9 service and optionally check its status.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并退出编辑器。你可以使用`named-checkconf`命令检查BIND9配置。如果没有输出，说明文件的配置是正确的。重新启动BIND9服务，并可选择检查其状态。
- en: 'Knowing that the BIND9 service is working fine, you can test the service from
    any other computer on the network with the `nslookup` command, as follows:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 知道BIND9服务正常运行后，你可以通过任何其他网络上的计算机使用`nslookup`命令来测试该服务，如下所示：
- en: '![Figure 13.5 – Testing the BIND9 implementation](img/B19682_13_05.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图13.5 – 测试BIND9实现](img/B19682_13_05.jpg)'
- en: Figure 13.5 – Testing the BIND9 implementation
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.5 – 测试BIND9实现
- en: We used the command with the host’s IP address, as seen in the previous screenshot.
    The output shows that the DNS service on our test machine is working fine. The
    test was conducted from a local ThinkPad on the same network.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了带有主机IP地址的命令，如前面的截图所示。输出结果显示，我们的测试机器上的DNS服务运行正常。该测试是通过同一网络上的本地ThinkPad进行的。
- en: You now have a working caching DNS server on your private network. In the next
    section, we will show you how to create a primary DNS server.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了一个在私有网络上工作的缓存DNS服务器。在下一节中，我们将展示如何创建主DNS服务器。
- en: Creating a primary DNS server
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建主DNS服务器
- en: In order to configure a primary DNS server, we will need a domain name that
    it will serve. For this section’s purpose, we will use the `calcatinge.ro` domain
    name (when you try on your system, please use a domain name you own). We will
    have to create new zones for the BIND9 configuration, and we will add information
    to the `/etc/bind/named.conf.local` file about the ones we create. Right now,
    we will create a new zone for our `calcatinge.ro` domain.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了配置主DNS服务器，我们需要一个它将服务的域名。在本节中，我们将使用`calcatinge.ro`域名（当你在自己的系统上尝试时，请使用你拥有的域名）。我们需要为BIND9配置创建新区域，并将我们创建的区域信息添加到`/etc/bind/named.conf.local`文件中。现在，我们将为`calcatinge.ro`域名创建一个新的区域。
- en: Important note
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'What is a **DNS zone**? The short answer is that it is a part of a domain namespace
    associated with an entity responsible for maintaining it. Zones also offer a granular
    take on administrating different components. For more information on DNS zones,
    please refer to the following link: [https://ns1.com/resources/dns-zones-explained](https://ns1.com/resources/dns-zones-explained).'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**DNS区域**是什么？简短的回答是，它是与负责维护它的实体相关联的域名空间的一部分。区域还提供了一种更细致的管理不同组件的方法。有关DNS区域的更多信息，请参考以下链接：[https://ns1.com/resources/dns-zones-explained](https://ns1.com/resources/dns-zones-explained)。'
- en: 'In the following screenshot, you can see the contents of our configuration
    file, followed by details on each of the lines:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下截图中，你可以看到我们配置文件的内容，随后是每一行的详细说明：
- en: '![Figure 13.6 – New zone for our domain in /etc/bind/named.conf.local file](img/B19682_13_06.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图13.6 – 我们域名在/etc/bind/named.conf.local文件中的新区域](img/B19682_13_06.jpg)'
- en: Figure 13.6 – New zone for our domain in /etc/bind/named.conf.local file
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.6 – /etc/bind/named.conf.local 文件中的我们域的新区域
- en: 'Now, let’s explain the contents of a zone directive:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们解释一下区域指令的内容：
- en: First, we had to add the name of the domain that the zone will serve
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，我们需要添加将由区域服务的域名
- en: The `type` of the zone is set as `master`, but there are other types to use,
    such as `slave`, `forward`, or `hint`
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区域的`type`设置为`master`，但还有其他类型可以使用，如`slave`、`forward`或`hint`
- en: The `file` represents the path to the actual zone file that will be created
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`file`表示将要创建的实际区域文件的路径'
- en: In the `allow-transfer` list, the IPs of DNS servers that handle the zone are
    set
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`allow-transfer`列表中，设置了处理该区域的DNS服务器的IP地址
- en: In the `also-notify` list, the IPs of servers that will be notified about zone
    changes are indicated
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`also-notify`列表中，列出了将被通知有关区域更改的服务器的IP地址
- en: 'Now, let’s create a new zone for our chosen domain:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为我们选择的域创建一个新区域：
- en: 'The following screenshot shows how we copied the `db.local` file under another
    name and used it for a new zone:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下截图显示了我们如何将`db.local`文件复制为另一个名称并将其用于新区域：
- en: '![Figure 13.7 – Creating the zone file for our domain](img/B19682_13_07.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.7 – 为我们的域创建区域文件](img/B19682_13_07.jpg)'
- en: Figure 13.7 – Creating the zone file for our domain
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.7 – 为我们的域创建区域文件
- en: 'The next step is to create the zone file, as indicated in the zone directive
    about `calcatinge.ro`. The details are shown in the preceding screenshot and as
    you can see, its location is `/etc/bind/`. Once the file is created using `db.local`
    as a template, you can open it with your favorite text editor and add information
    about your server IP and domain name. In the following screenshot, you can see
    the zone file for `calcatinge.ro` created on our machine:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是创建区域文件，如关于`calcatinge.ro`的区域指令所示。详情如前述截图所示，位置为`/etc/bind/`。使用`db.local`作为模板创建文件后，您可以使用您喜欢的文本编辑器打开它，并添加有关服务器IP和域名的信息。在以下截图中，您可以看到我们机器上为`calcatinge.ro`创建的区域文件：
- en: '![Figure 13.8 – Zone file information](img/B19682_13_08.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.8 – 区域文件信息](img/B19682_13_08.jpg)'
- en: Figure 13.8 – Zone file information
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.8 – 区域文件信息
- en: 'The DNS records are introduced at the end of the file. Here are some details
    about the contents of the file:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DNS记录在文件的末尾引入。以下是文件内容的一些详细信息：
- en: The table has a specific format that contains details about hostname (first
    column), class (second column), DNS record type (third column), and value (the
    last column).
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格有一个特定格式，包含有关主机名（第一列）、类别（第二列）、DNS记录类型（第三列）和值（最后一列）的详细信息。
- en: For the hostname, we entered `@`, which means that the entry of the record refers
    to the zone name from the file.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于主机名，我们输入了`@`，这意味着记录条目的名称引用了文件中的区域名称。
- en: The class is `IN`, which indicates that the network is the internet.
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类别是`IN`，表示该网络是互联网。
- en: DNS records types are `A`, `NS`, `MX`, `CNAME`, `TXT`, and `SOA`. `A` indicates
    the IP address of the domain name; `NS` indicates the IP address of the DNS server;
    `MX` is the address of the email server; `CNAME` is an alias (canonical name);
    and `TXT` has a custom entry, `SOA`, which indicates the authoritative name server
    for the zone, with details on the administrator, serial number, and refresh rates.
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNS记录类型有`A`、`NS`、`MX`、`CNAME`、`TXT`和`SOA`。`A`表示域名的IP地址；`NS`表示DNS服务器的IP地址；`MX`是邮件服务器的地址；`CNAME`是别名（规范名称）；`TXT`是自定义条目；`SOA`表示区域的权威名称服务器，包含管理员、序列号和刷新速率的详细信息。
- en: The value in the last column most often comprises of the IP address or the hostname.
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后一列的值通常由IP地址或主机名组成。
- en: 'The next step is to restart the **Remote Name Daemon Control** (**RNDC**),
    which is a control utility inside BIND that controls the name server. The command
    to do that is shown here:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是重启**远程名称守护进程控制**（**RNDC**），它是BIND中的一个控制工具，用于控制名称服务器。执行此操作的命令如下所示：
- en: '[PRE14]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now, you can check to see if the primary DNS server works. Try the `nslookup`
    command from another system on the network, as follows:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以检查主DNS服务器是否正常工作。尝试从网络上的另一台系统使用`nslookup`命令，命令如下：
- en: '[PRE15]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The output of the preceding command will most certainly show that the local
    DNS server on the system with the indicated IP address has a working zone file.
    Your primary DNS server works as expected on your local network. Don’t forget
    to use your IP inside the command.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述命令的输出将非常可能显示，具有指示的IP地址的系统上的本地DNS服务器有一个有效的区域文件。您的主要DNS服务器在本地网络上按预期工作。别忘了在命令中使用您的IP。
- en: It is always a good idea to create a secondary DNS server in case the first
    one stops working, which is why we will show you how to set up a second one in
    the following section.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个辅助DNS服务器是个好主意，以防第一个服务器停止工作，这就是为什么我们将在接下来的部分展示如何设置第二个DNS服务器。
- en: Setting up a secondary DNS server
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置一个辅助DNS服务器
- en: It comes as no surprise that the secondary DNS server should be set up on different
    hardware from the primary one, but on the same network. If you do it inside a
    data center, use a VPS in the same network as the first one. If you plan to experiment
    with it on your home private network, make sure you have another system at your
    disposal.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 毫不奇怪，辅助DNS服务器应设置在与主服务器不同的硬件上，但在同一网络中。如果您在数据中心中进行此操作，可以使用与第一个服务器在同一网络中的VPS。如果您打算在家庭私人网络中进行实验，确保有另一台系统可以使用。
- en: We will start another NUC system available that is also running Ubuntu Server
    22.04.2 LTS. We will need to know its IP address in order to use it in our configuration.
    In our case, the IP of the new system is `192.168.0.140`. This second machine
    needs to have BIND9 installed and configured too. Before setting up the secondary
    server, you will need to modify the configuration of the primary DNS server first.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将启动另一台也运行Ubuntu Server 22.04.2 LTS的NUC系统。我们需要知道它的IP地址，以便在配置中使用。我们的新系统的IP地址是`192.168.0.140`。这台第二台机器也需要安装和配置BIND9。在设置辅助服务器之前，您需要先修改主DNS服务器的配置。
- en: Modifying the primary server configuration files
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改主服务器配置文件
- en: 'To modify the configuration of the primary DNS server and allow it to send
    the zone details to the secondary server, follow these steps:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改主DNS服务器的配置，并允许它将区域详情发送到辅助服务器，请按照以下步骤操作：
- en: 'You will have to open the `/etc/bind/named.conf.local` configuration file and
    add some new lines to it. We add the second server’s IP address inside the `allow-transfer`
    and `also-notify` directives, as shown in the following screenshot:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要打开`/etc/bind/named.conf.local`配置文件，并在其中添加一些新行。我们将在`allow-transfer`和`also-notify`指令内添加第二台服务器的IP地址，如下图所示：
- en: '![Figure 13.9 – Adding the IP of the secondary DNS server](img/B19682_13_09.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图13.9 – 添加辅助DNS服务器的IP地址](img/B19682_13_09.jpg)'
- en: Figure 13.9 – Adding the IP of the secondary DNS server
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.9 – 添加辅助DNS服务器的IP地址
- en: Save the file and restart the BIND9 service.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并重启BIND9服务。
- en: You will also need to open the `/etc/bind/named.conf.options` configuration
    file and add an access list parameter (`acl "trusted"`) with all the accepted
    IP addresses on the network. In our case, the primary server has the address `192.168.0.113`,
    and the secondary server has the address `192.168.0.140`. Add this before the
    already existing `options` directive.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还需要打开`/etc/bind/named.conf.options`配置文件，并添加一个访问列表参数（`acl "trusted"`），列出网络上所有被接受的IP地址。在我们的例子中，主服务器的地址是`192.168.0.113`，而辅助服务器的地址是`192.168.0.140`。请将其添加到已存在的`options`指令之前。
- en: 'Inside the `options` directive block, below the comments, we also add the following
    directives:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`options`指令块内，注释下面，我们还添加以下指令：
- en: '![Figure 13.10 – Adding new directive inside /etc/bind/named.conf.options file](img/B19682_13_10.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图13.10 – 在/etc/bind/named.conf.options文件中添加新指令](img/B19682_13_10.jpg)'
- en: Figure 13.10 – Adding new directive inside /etc/bind/named.conf.options file
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.10 – 在/etc/bind/named.conf.options文件中添加新指令
- en: 'The configuration is finished, and we will restart the BIND9 service using
    the `systemctl` command, as follows:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置已完成，我们将使用`systemctl`命令重启BIND9服务，如下所示：
- en: '[PRE16]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Before proceeding further, let’s understand the directives used. The `recursion`
    directive has a boolean value (`yes` | `no`) and defines whether recursion and
    caching are allowed or not on the server. The default is `yes`, and thus the server
    will require DNS query recursion by solving all the attempts.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，让我们了解一下所使用的指令。`recursion`指令具有布尔值（`yes` | `no`），定义是否允许服务器进行递归查询和缓存。默认值是`yes`，因此服务器将要求通过解决所有尝试来执行DNS查询递归。
- en: Important note
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: '**Recursion** is also known as **recursive query**, which in the case of DNS
    refers to the way a name resolution is solved. The recursive mode represents the
    way a computer looks for a FQDN by inquiring first at the local cache data and
    the local DNS server. The request is clear and demands a precise answer, and the
    solution for that answer is the responsibility of the DNS server. Thus, the query
    initiated by the computer, which is a DNS client, to the DNS server is a recursive
    query.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**递归** 也被称为 **递归查询**，在 DNS 中指的是一种解决名称解析的方法。递归模式表示计算机通过首先查询本地缓存数据和本地 DNS 服务器来查找
    FQDN。请求是明确的，需要一个精确的答案，而提供该答案的责任在于 DNS 服务器。因此，计算机发起的查询，即 DNS 客户端向 DNS 服务器发起的查询，是一个递归查询。'
- en: 'The `allow-recursion` directive is referenced to a list of matching addresses
    of clients, in our case specified by a `listen-on` directive specifies the IP
    on which the server listens. And we also used the `allow-transfer` directive that
    provides a list of hosts that are allowed to transfer zone information (in our
    case, none). For more information about configuration options, please refer to
    the following link: [https://bind9.readthedocs.io/en/latest/reference.html#](https://bind9.readthedocs.io/en/latest/reference.html#).'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`allow-recursion` 指令引用了一个匹配客户端地址的列表，在我们的案例中，这些地址通过 `listen-on` 指令指定服务器监听的 IP
    地址。同时，我们还使用了 `allow-transfer` 指令，提供了允许传输区域信息的主机列表（在我们的案例中，没有主机）。有关配置选项的更多信息，请参考以下链接：[https://bind9.readthedocs.io/en/latest/reference.html#](https://bind9.readthedocs.io/en/latest/reference.html#)。'
- en: Next, let’s learn how to configure the secondary server.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来学习如何配置辅助服务器。
- en: Setting up the secondary server
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置辅助服务器
- en: 'On the secondary server, as stated earlier, you will need to install BIND9
    too. Once it is installed, you will need to follow these steps:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，在辅助服务器上，您还需要安装 BIND9。安装完成后，您需要按照以下步骤操作：
- en: 'Go to the `/etc/bind/named.conf.options` file and add the following lines in
    an `acl` directive, before the already existing `options` directive:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 `/etc/bind/named.conf.options` 文件，在已经存在的 `options` 指令之前，添加以下行到 `acl` 指令中：
- en: '![Figure 13.11 – Adding an acl directive on the secondary server](img/B19682_13_11.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.11 – 在辅助服务器上添加 acl 指令](img/B19682_13_11.jpg)'
- en: Figure 13.11 – Adding an acl directive on the secondary server
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.11 – 在辅助服务器上添加 acl 指令
- en: 'Also, add the following lines inside the `options` directive:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时，在 `options` 指令内部添加以下行：
- en: '![Figure 13.12 – Adding new directives inside options](img/B19682_13_12.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.12 – 在选项内部添加新指令](img/B19682_13_12.jpg)'
- en: Figure 13.12 – Adding new directives inside options
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.12 – 在选项内部添加新指令
- en: Now edit the `/etc/bind/named.conf.local` file and add the zones you want, but
    this time use the `secondary` type, as opposed to the `master` one used on the
    primary DNS server.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在编辑 `/etc/bind/named.conf.local` 文件并添加所需的区域，但这次使用 `secondary` 类型，而不是在主 DNS
    服务器上使用的 `master` 类型。
- en: 'The following is a comparison between the two `/etc/bind/named.conf.local`
    files. On the left is the file on the primary DNS server, and on the right is
    the file on the secondary DNS server:'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是两个 `/etc/bind/named.conf.local` 文件的对比。左边是主 DNS 服务器的文件，右边是辅助 DNS 服务器的文件：
- en: '![Figure 13.13 – Configuration files from primary (left) and secondary (right)
    servers](img/B19682_13_13.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.13 – 主服务器（左）和辅助服务器（右）的配置文件](img/B19682_13_13.jpg)'
- en: Figure 13.13 – Configuration files from primary (left) and secondary (right)
    servers
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.13 – 主服务器（左）和辅助服务器（右）的配置文件
- en: 'Now we can restart the BIND9 service and make sure that the firewall is allowing
    DNS connections on the second server with the following commands:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以重新启动 BIND9 服务，并确保防火墙允许第二台服务器上的 DNS 连接，使用以下命令：
- en: '[PRE17]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now you have two DNS servers set up and working, one primary and one secondary.
    In the following section, we will show you how to set up a local DHCP server.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经设置并启动了两台 DNS 服务器，一台是主服务器，另一台是辅助服务器。在接下来的章节中，我们将向您展示如何设置本地 DHCP 服务器。
- en: Setting up a DHCP server
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 DHCP 服务器
- en: DHCP is a network service that is used to assign IP addresses to hosts on a
    network. The settings are enabled by the server, without any control from the
    host. Most commonly, the DHCP server provides the IP addresses and netmasks for
    clients, the default gateway IP, and the DNS server’s IP address.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: DHCP 是一种网络服务，用于为网络中的主机分配 IP 地址。该服务由服务器启用，主机无需进行任何控制。最常见的是，DHCP 服务器为客户端提供 IP
    地址和子网掩码、默认网关 IP 地址以及 DNS 服务器的 IP 地址。
- en: 'To install the DHCP service on Ubuntu, use the following command:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Ubuntu 上安装 DHCP 服务，请使用以下命令：
- en: '[PRE18]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'As a test system, we will use the same system on which we installed the DNS
    services in the previous section. After installation, we will configure two specific
    files. On an Ubuntu system, like ours, the default configuration will be set inside
    the `/etc/dhcp/dhcpd.conf` file, while the interfaces will be configured inside
    the `/``etc/default/isc-dhcp-server` file:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 作为测试系统，我们将使用在上一节中安装了 DNS 服务的相同系统。安装完成后，我们将配置两个特定的文件。在像我们这样的 Ubuntu 系统中，默认配置将设置在`/etc/dhcp/dhcpd.conf`文件中，而网络接口的配置则会在`/etc/default/isc-dhcp-server`文件中进行：
- en: 'We will first show you how to set up a basic local DHCP server. In this respect,
    we will alter the `/etc/dhcp/dhcpd.conf` file by adding the IP address pool. You
    can either uncomment one of the `subnet` directives already available inside the
    file, or you can add a new one, which is what we will do. Our existing subnet
    is `192.168.0.0/24`, and we will add a new one for this new DHCP server, as shown
    in the following screenshot (for a refresher on networking, please refer to [*Chapter
    7*](B19682_07.xhtml#_idTextAnchor139), *Networking* *with Linux*):'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先将向您展示如何设置一个基本的本地 DHCP 服务器。在这方面，我们将通过添加 IP 地址池来修改`/etc/dhcp/dhcpd.conf`文件。您可以取消注释文件中已存在的某个`subnet`指令，也可以添加一个新的，就像我们所做的那样。我们现有的子网是`192.168.0.0/24`，我们将为这个新的
    DHCP 服务器添加一个新的子网，具体操作如以下截图所示（有关网络的基础知识，请参考[*第 7 章*](B19682_07.xhtml#_idTextAnchor139)，*Linux
    网络*）：
- en: '![Figure 13.14 – Defining a new subnet in /etc/dhcp/dhcpd.conf](img/B19682_13_14.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.14 – 在 /etc/dhcp/dhcpd.conf 中定义一个新的子网](img/B19682_13_14.jpg)'
- en: Figure 13.14 – Defining a new subnet in /etc/dhcp/dhcpd.conf
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.14 – 在 /etc/dhcp/dhcpd.conf 中定义一个新的子网
- en: Inside the same `/etc/dhcp/dhcpd.conf` file, you can uncomment the line that
    says `authoritative;`. The `authoritative` DHCP clause ensures that the server
    will automatically resolve any invalid IP numbers on the network and assign a
    new and valid IP to each new device registered without requiring the user’s manual
    interaction.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在相同的`/etc/dhcp/dhcpd.conf`文件中，您可以取消注释那一行`authoritative;`。`authoritative` DHCP
    子句确保服务器会自动解决网络上的任何无效 IP 地址，并为每个新注册的设备分配一个新的有效 IP 地址，而无需用户手动干预。
- en: 'Once the options are modified, you must specify the network interface name
    in the `/etc/default/isc-dhcp-server` file. This is needed for the server to know
    which network device to use. To do this, open the file with your preferred editor
    and add the interface’s name. If you don’t remember your interface name, run the
    `ip addr show` command and select the appropriate interface. In our case, the
    system we use has both Ethernet and wireless interfaces, and we will choose the
    Ethernet interface for the DHCP server, which is `enp0s25`. Inside the `/etc/default/isc-dhcp-server`
    file, add the interface as follows:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦修改了选项，您必须在`/etc/default/isc-dhcp-server`文件中指定网络接口名称。这是为了让服务器知道使用哪个网络设备。为此，使用您喜欢的编辑器打开该文件并添加接口名称。如果您不记得接口名称，可以运行`ip
    addr show`命令并选择相应的接口。在我们的案例中，我们使用的系统既有以太网接口，也有无线接口，我们将选择以太网接口作为 DHCP 服务器的接口，即`enp0s25`。在`/etc/default/isc-dhcp-server`文件中，按以下方式添加接口：
- en: '[PRE19]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Then, save the changes to the file and restart the DHCP service with the following
    command:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，保存文件的更改并使用以下命令重新启动 DHCP 服务：
- en: '[PRE20]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now, you have a working DHCP server on your system of choice. A DHCP server
    gives you some advantages in managing your local network, but there are times
    when you might not need to create a new one, as all the network routers provide
    a fully working DHCP service right out of the box.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您在所选系统上有一个正常工作的 DHCP 服务器。DHCP 服务器为您管理本地网络提供了一些优势，但有时您可能不需要创建一个新的，因为所有的网络路由器都提供了一个开箱即用的
    DHCP 服务。
- en: Important note
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: To avoid conflicts, you might want to isolate the new DHCP server from your
    local network router. Your network router already has a fully functional DHCP
    server that will most likely conflict with the new one. In most cases, `isc-dhcp-server.service`
    will give you an error as an indication that it was not able to connect to any
    interface.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免冲突，您可能希望将新的 DHCP 服务器与本地网络路由器隔离开来。您的网络路由器已经有一个功能完整的 DHCP 服务器，它可能会与新的 DHCP
    服务器发生冲突。在大多数情况下，`isc-dhcp-server.service`会给出一个错误，表示它无法连接到任何接口。
- en: 'Taking the preceding note into consideration, when we check to see whether
    the DHCP service is running with the following command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到前面的说明，当我们通过以下命令检查 DHCP 服务是否正在运行时：
- en: '[PRE21]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We received an error, as shown in the following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们收到了一个错误，如以下截图所示：
- en: '![Figure 13.15 – Error running the DHCP service](img/B19682_13_15.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图13.15 – 运行DHCP服务时出错](img/B19682_13_15.jpg)'
- en: Figure 13.15 – Error running the DHCP service
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.15 – 运行DHCP服务时出错
- en: Once you isolate the machine from your local network and use it as a single
    DHCP server, the service will be running as intended.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将机器从本地网络中隔离出来，并将其用作唯一的DHCP服务器，服务将按预期运行。
- en: In the next section, we will show you how to set up an NFS server on your local
    network.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将向你展示如何在本地网络上设置NFS服务器。
- en: Setting up an NFS server
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置NFS服务器
- en: NFS is a distributed filesystem used to share files over a network. To show
    you how it works, we will set up the NFS server on one of our machines on the
    network. We will use Ubuntu 22.04.2 LTS as the base for the NFS server. For more
    in-depth theoretical information about NFS, please refer to [*Chapter 7*](B19682_07.xhtml#_idTextAnchor139),
    *Networking* *with Linux*.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: NFS是一个分布式文件系统，用于通过网络共享文件。为了展示它是如何工作的，我们将在网络中的一台机器上设置NFS服务器。我们将使用Ubuntu 22.04.2
    LTS作为NFS服务器的基础。有关NFS的更深入理论信息，请参考[*第7章*](B19682_07.xhtml#_idTextAnchor139)，*与Linux的网络连接*。
- en: The NFS filesystem type is supported by any Linux and/or Unix environment and
    also by Windows, but with some limitations. For mostly-Windows client environments,
    we recommend using the Samba/**Common Internet File System** (**CIFS**) protocol
    instead. Also, for those of you concerned about privacy and security, please keep
    in mind that the NFS protocol is not encrypted, thus any transfer of data is not
    protected by default.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: NFS文件系统类型在任何Linux和/或Unix环境中都得到支持，Windows也支持NFS，但有一些限制。对于主要使用Windows客户端环境的情况，我们建议改用Samba/**通用互联网文件系统**（**CIFS**）协议。此外，对于那些关心隐私和安全的人，请记住，NFS协议本身不加密，因此数据传输默认情况下不受保护。
- en: Installing and configuring the NFS server
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装并配置NFS服务器
- en: 'On our network, we will use an Ubuntu machine as a server and we will show
    you how to access the files from another Linux client. First, let’s install and
    configure the server, as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的网络中，我们将使用一台Ubuntu机器作为服务器，并展示如何从另一台Linux客户端访问文件。首先，让我们安装并配置服务器，具体步骤如下：
- en: 'We will install the `nfs-kernel-server` package using the following command:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用以下命令安装`nfs-kernel-server`软件包：
- en: '[PRE22]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: sudo systemctl start nfs-kernel-server.service
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sudo systemctl start nfs-kernel-server.service
- en: sudo systemctl enable nfs-kernel-server.service
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sudo systemctl enable nfs-kernel-server.service
- en: '/home directory for all clients on the network, or you could make a dedicated
    shared directory from the start. You could create a new directory starting from
    the root, but you could also create your shared directory inside specific directories
    such as /var, /mnt, or /srv—it’s your choice.We will create a new directory called
    `/home/export/shares` inside our `/home` directory using the following commands
    (make sure that you are already inside your `/home` directory if you want to use
    the command as is):'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为所有网络上的客户端设置`/home`目录，或者你也可以从一开始就创建一个专用的共享目录。你可以从根目录开始创建一个新目录，也可以在特定目录下创建共享目录，例如`/var`、`/mnt`或`/srv`—这完全取决于你。我们将使用以下命令在`/home`目录下创建一个新的目录`/home/export/shares`（如果你想按照这个命令执行，请确保已经进入`/home`目录）：
- en: '[PRE23]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '/etc/exports file. There are three configuration files for NFS (/etc/default/nfs-kernel-server,
    /etc/default/nfs-common, and /etc/exports) but we will only alter one of them.
    In the following screenshot, you will see the two files inside /etc/default and
    the default contents of the /etc/exports configuration file:'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: /etc/exports文件。NFS有三个配置文件（/etc/default/nfs-kernel-server、/etc/default/nfs-common和/etc/exports），但我们只会更改其中一个。在下面的截图中，你将看到/etc/default目录下的两个文件以及/etc/exports配置文件的默认内容：
- en: '[PRE24]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Figure 13.16 – The configuration files inside /etc/default and the contents
    of the /etc/exports configuration file](img/B19682_13_16.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![图13.16 – /etc/default目录中的配置文件以及/etc/exports配置文件的内容](img/B19682_13_16.jpg)'
- en: Figure 13.16 – The configuration files inside /etc/default and the contents
    of the /etc/exports configuration file
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.16 – /etc/default目录中的配置文件以及/etc/exports配置文件的内容
- en: 'Open the `/etc/exports` file with your preferred text editor and edit it according
    to your configuration. Inside the file, we will add lines for each shared directory.
    Before doing that, you might have noticed that inside the file there are two types
    of directives: one for NFS versions 2 and 3, and one for version 4\. For more
    details about the differences between those versions, we encourage you to consult
    the following document: [https://archive.fosdem.org/2018/schedule/event/nfs3_to_nfs4/attachments/slides/2702/export/events/attachments/nfs3_to_nfs4/slides/2702/FOSDEM_Presentation_Final_pdf.pdf](https://archive.fosdem.org/2018/schedule/event/nfs3_to_nfs4/attachments/slides/2702/export/events/attachments/nfs3_to_nfs4/slides/2702/FOSDEM_Presentation_Final_pdf.pdf).'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 使用您喜欢的文本编辑器打开`/etc/exports`文件，并根据您的配置进行编辑。在文件中，我们将为每个共享目录添加一行。在此之前，您可能已经注意到文件中有两种指令：一种是针对NFS版本2和3的，另一种是针对版本4的。关于这些版本之间的差异，建议您参考以下文档：[https://archive.fosdem.org/2018/schedule/event/nfs3_to_nfs4/attachments/slides/2702/export/events/attachments/nfs3_to_nfs4/slides/2702/FOSDEM_Presentation_Final_pdf.pdf](https://archive.fosdem.org/2018/schedule/event/nfs3_to_nfs4/attachments/slides/2702/export/events/attachments/nfs3_to_nfs4/slides/2702/FOSDEM_Presentation_Final_pdf.pdf)。
- en: 'Now let’s start editing the configuration file. We will add a new line containing
    the directory, the IP address of the client, and configuration options. The general
    syntax is as follows:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们开始编辑配置文件。我们将添加一行，包含目录、客户端的IP地址和配置选项。一般语法如下：
- en: '[PRE26]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We share only one directory, hence the single line added. If you want all clients
    on the network to access the shares, you can add the subnet class (for example,
    `192.168.0.0/24`). Or, if you want only specific clients to access the shares,
    you should add their IPs. More clients will be added on the same line, separated
    by spaces. There are many options that you can add, and for a full list, we advise
    that you consult [https://linux.die.net/man/5/exports](https://linux.die.net/man/5/exports)
    or the local manual file with the `man exports` command. In our file, we added
    the following options:'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们只共享一个目录，因此只添加了一行。如果您希望网络上的所有客户端都能访问共享，您可以添加子网类（例如，`192.168.0.0/24`）。或者，如果您只希望特定的客户端访问共享，您应该添加它们的IP地址。更多的客户端可以在同一行添加，IP地址之间用空格分隔。您可以添加很多选项，完整的选项列表可以参考[https://linux.die.net/man/5/exports](https://linux.die.net/man/5/exports)或者使用`man
    exports`命令查看本地手册。在我们的文件中，我们添加了以下选项：
- en: '`rw` for both read and write access'
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rw` 表示既可以读取也可以写入'
- en: '`sync` to force write changes to disk (this reduces the speed, though)'
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sync` 强制将更改写入磁盘（不过这样会降低速度）'
- en: '`no_subtree_check` to prevent subtree checking, which is mainly a check to
    see whether the file is still available before the request'
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no_subtree_check` 用于防止子树检查，主要是检查文件在请求前是否仍然可用'
- en: 'In a nutshell, here is the line we added to the file (please take into consideration
    that this is only a single line, with a space between `/home/export/shares` and
    the IP, and there is no space between the IP and the parentheses):'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 简而言之，这就是我们添加到文件中的那一行（请注意，这只是一行，其中`/home/export/shares`和IP地址之间有空格，而IP地址和括号之间没有空格）：
- en: '[PRE27]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'After saving and closing the file, restart the service with the following command:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭文件后，使用以下命令重启服务：
- en: '[PRE28]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Then, apply the configuration with the following command:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用以下命令应用配置：
- en: '[PRE29]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Once the service is restarted and running, you can set up a firewall to allow
    NFS access. For this, it is extremely useful to know that the port NFS is using
    port `2049` by default. As we allow all the systems from our network to access
    the shares, we will add the following new rule to the firewall:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦服务重启并运行，您可以设置防火墙以允许NFS访问。为此，知道NFS默认使用`2049`端口是非常有用的。由于我们允许网络中的所有系统访问共享目录，我们将向防火墙添加以下新规则：
- en: '[PRE30]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now that the new firewall rule has been added, we can run the following command
    to make sure that it is running according to our needs:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在新防火墙规则已经添加完毕，我们可以运行以下命令来确保它按照我们的需求运行：
- en: '[PRE31]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'If your firewall is not actively running, you can use the following command
    to activate it:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的防火墙没有在运行，您可以使用以下命令来激活它：
- en: '[PRE32]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '![Figure 13.17 – Showing the new firewall rule to allow NFS shares](img/B19682_13_17.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.17 – 显示允许NFS共享的新防火墙规则](img/B19682_13_17.jpg)'
- en: Figure 13.17 – Showing the new firewall rule to allow NFS shares
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.17 – 显示允许NFS共享的新防火墙规则
- en: In the preceding screenshot, you can see that after adding the new rule using
    the `sudo ufw allow nfs` command, port `2049` was added to the list of allowed
    rules.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，你可以看到在使用 `sudo ufw allow nfs` 命令添加新规则后，端口 `2049` 被添加到了允许规则的列表中。
- en: The basic configuration of the server is now complete. In order to access the
    files, you will need to configure the clients too. We will show you how to do
    this in the next section.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器的基本配置现在已经完成。为了访问文件，你还需要配置客户端。我们将在下一部分向你展示如何操作。
- en: Configuring the NFS client
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 NFS 客户端
- en: 'As a client, we will use another system, a laptop running Debian GNU/Linux
    12 Bookworm. First, we will have to install NFS on the client by using the following
    command:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 作为客户端，我们将使用另一台系统，即运行 Debian GNU/Linux 12 Bookworm 的笔记本。首先，我们需要使用以下命令在客户端安装 NFS：
- en: '[PRE33]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now that the needed packages are installed on the client too, we can create
    directories on the client to mount the shares to. We will create a new directory
    on the client, where the shares from the server will be mounted. This new directory
    will be `/home/shares`. We create it with the following command:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 现在所需的软件包也已安装在客户端，我们可以在客户端上创建目录来挂载共享。我们将在客户端创建一个新目录，用于挂载来自服务器的共享。这个新目录将是 `/home/shares`。我们使用以下命令创建它：
- en: '[PRE34]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Now that the new directory is created, we can mount the location from the server:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 现在新目录已创建，我们可以从服务器挂载该位置：
- en: '[PRE35]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'With the preceding command, we mounted the shares from the server on the client
    using the `mount` command. We gave the location on the server as the first argument,
    followed by the location on the client as the second argument. We can also check
    to see whether everything went well by using the `df -h` command. The new mount
    is shown last in the `df` command’s output. The following is a screenshot showing
    the commands used to create, mount, and check the new shares directory:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的命令，我们通过 `mount` 命令将服务器上的共享挂载到客户端。我们将服务器上的位置作为第一个参数，客户端上的位置作为第二个参数。我们还可以使用
    `df -h` 命令检查一切是否顺利。新挂载的内容会在 `df` 命令的输出中最后显示。以下是一个截图，展示了创建、挂载并检查新共享目录所使用的命令：
- en: '![Figure 13.18 – Mounting the new shares directory on the client](img/B19682_13_18.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.18 – 在客户端上挂载新共享目录](img/B19682_13_18.jpg)'
- en: Figure 13.18 – Mounting the new shares directory on the client
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.18 – 在客户端上挂载新共享目录
- en: At this point, we have finished the setup for the NFS shares. We now need to
    test the configuration to prove that it works.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们已经完成了 NFS 共享的设置。接下来，我们需要测试配置，确保它能够正常工作。
- en: Testing the NFS setup
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试 NFS 设置
- en: 'Once the setup is finished on both server and client, you can test to see if
    everything works according to your expectations. In our test, we created several
    files named `testing_files` using the `packt` user on the server, and a file called
    `file` using the regular user `alexandru` on the client machine. The following
    is the output showing the contents of the `/home/shares` directory on our Debian
    local system:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦服务器和客户端的设置完成，你可以测试一切是否如预期般工作。在我们的测试中，我们使用服务器上的 `packt` 用户创建了几个名为 `testing_files`
    的文件，并且在客户端机器上的常规用户 `alexandru` 下创建了一个名为 `file` 的文件。以下是显示我们在 Debian 本地系统上的 `/home/shares`
    目录内容的输出：
- en: '![Figure 13.19 – Testing the NFS on our local client](img/B19682_13_19.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.19 – 在本地客户端上测试 NFS](img/B19682_13_19.jpg)'
- en: Figure 13.19 – Testing the NFS on our local client
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.19 – 在本地客户端上测试 NFS
- en: There you have it, the NFS server and client are working just fine. You can
    use the **graphical user interface** (**GUI**) on the client (as shown in the
    previous screenshot), and also the **command-line interface** (**CLI**) to access
    the NFS shares.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，NFS 服务器和客户端都运行良好。你可以使用客户端上的**图形用户界面**（**GUI**）（如前面的截图所示），也可以使用**命令行界面**（**CLI**）访问
    NFS 共享。
- en: In the next section, we will show you how to configure a Samba/CIFS share that
    can be accessed by Windows clients on the network.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将展示如何配置一个可以通过网络访问的 Samba/CIFS 共享。
- en: Setting up a Samba file server
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Samba 文件服务器
- en: The Samba server allows you to share files over a network where clients use
    different operating systems, such as Windows, macOS, and Linux. In this section,
    we will set up a Samba server on Ubuntu 22.04.2 LTS and access shares from different
    operating systems on the network. The SMB/CIFS protocol is developed by Microsoft;
    for more details, you can visit their developer pages at [https://docs.microsoft.com/en-us/windows/win32/fileio/microsoft-smb-protocol-and-cifs-protocol-overview](https://docs.microsoft.com/en-us/windows/win32/fileio/microsoft-smb-protocol-and-cifs-protocol-overview).
    Some information about the SMB/CIFS protocol can be found in [*Chapter 7*](B19682_07.xhtml#_idTextAnchor139),
    *Networking with Linux*, too. In the following sub-sections we will show you how
    to install and configure it on your local network.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Samba服务器允许您通过网络共享文件，客户端可以使用不同的操作系统，例如Windows、macOS和Linux。在本节中，我们将在Ubuntu 22.04.2
    LTS上设置Samba服务器，并从网络上的不同操作系统访问共享。SMB/CIFS协议是由微软开发的；有关更多详细信息，您可以访问他们的开发者页面[https://docs.microsoft.com/en-us/windows/win32/fileio/microsoft-smb-protocol-and-cifs-protocol-overview](https://docs.microsoft.com/en-us/windows/win32/fileio/microsoft-smb-protocol-and-cifs-protocol-overview)。关于SMB/CIFS协议的更多信息也可以在[*第7章*](B19682_07.xhtml#_idTextAnchor139)
    *与Linux网络互联*中找到。在接下来的子章节中，我们将向您展示如何在本地网络上安装和配置它。
- en: Installing and configuring Samba
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和配置Samba
- en: 'The installation procedure has the following steps:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程包含以下步骤：
- en: 'First, we will install Samba on the system using the following command:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将使用以下命令在系统上安装Samba：
- en: '[PRE36]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Once Samba is installed, we can check whether the service is running as expected.
    We will run the following command for this:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Samba后，我们可以检查服务是否按预期运行。我们将执行以下命令来检查：
- en: '[PRE37]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '/etc/samba/smb.conf. The configuration file has two major sections: a [global]
    section with general configuration settings, and a [shares] section that configures
    the shares’ behavior. A safe practice is to back up the original configuration
    file before starting to modify it. We will do this with the following command:'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: /etc/samba/smb.conf。该配置文件有两个主要部分：一个是包含一般配置设置的[global]部分，另一个是配置共享行为的[shares]部分。一个安全的做法是在开始修改之前备份原始配置文件。我们将使用以下命令来执行此操作：
- en: '[PRE38]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '![Figure 13.20 – The smb.conf global directive](img/B19682_13_20.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.20 – smb.conf全局指令](img/B19682_13_20.jpg)'
- en: Figure 13.20 – The smb.conf global directive
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.20 – smb.conf全局指令
- en: 'Let us briefly explain the content shown in the preceding screenshot:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要解释一下前面截图中显示的内容：
- en: The first line sets a server name, in our case Local Samba File Server
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一行设置了服务器名称，在我们的情况下是本地Samba文件服务器。
- en: The second line sets the `workgroup` name, in our case the Windows default name,
    `WORKGROUP`
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二行设置了`workgroup`名称，在我们的情况下是Windows的默认名称`WORKGROUP`。
- en: The third line determines that it will not be necessary to have a Samba user
    account in order to access the shares (mapping the guest to `Bad User`)
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三行确定不需要拥有Samba用户账户就能访问共享（将游客映射为`Bad User`）。
- en: Guest users are allowed on the fourth line
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许游客用户在第四行进行访问。
- en: Then we set the interfaces used by Samba, which in our case will be the Ethernet
    connection (`eno1`) and the loopback (`lo`) interfaces (check your exact interface
    name with the `ip addr show` or `ip` `link` commands)
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接着，我们设置Samba使用的接口，在我们的情况下将是以太网接口（`eno1`）和回环接口（`lo`）（使用`ip addr show`或`ip link`命令检查确切的接口名称）。
- en: We will set the `server role` and the hosts allowed (from the local pool)
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将设置`server role`和允许的主机（来自本地池）。
- en: The last line sets the order the hostnames are checked, using the broadcast
    (`bcast`) method
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后一行设置了主机名检查的顺序，使用广播（`bcast`）方法。
- en: 'Now we will create the `[shares]` directive and add the necessary configuration
    options for the shares. We will add details about the shared directory on our
    server, user details, and permissions. See the following screenshot for details:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们将创建`[shares]`指令，并为共享添加必要的配置选项。我们将添加有关服务器上共享目录的详细信息、用户详细信息以及权限设置。请参见以下截图了解详细信息：
- en: '![Figure 13.21 – Adding information inside the shares.conf file](img/B19682_13_21.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.21 – 在shares.conf文件中添加信息](img/B19682_13_21.jpg)'
- en: Figure 13.21 – Adding information inside the shares.conf file
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.21 – 在shares.conf文件中添加信息
- en: 'Let us briefly explain the contents of this directive:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要解释一下此指令的内容：
- en: We first set a name for the shares
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们首先为共享设置一个名称。
- en: Then we set the path of our local shared directory
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，我们设置本地共享目录的路径。
- en: Next, we set the default permissions for the directory and files
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，我们设置目录和文件的默认权限。
- en: We also set the default mask values
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还设置了默认的掩码值。
- en: Finally, we set the shares as public, guest-user friendly, and writable
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们将共享设置为公共的、友好的游客用户并允许写入
- en: 'Once the modifications are done, we restart the service with the following
    command:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改完成后，我们用以下命令重启服务：
- en: '[PRE40]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Furthermore, we adjust the firewall rules to allow Samba using the following
    command:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，我们通过以下命令调整防火墙规则，允许 Samba 访问：
- en: '[PRE41]'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![Figure 13.22 – Testing the Samba configuration](img/B19682_13_22.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.22 – 测试 Samba 配置](img/B19682_13_22.jpg)'
- en: Figure 13.22 – Testing the Samba configuration
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.22 – 测试 Samba 配置
- en: The output shows `Loaded services file OK`, which means that the configuration
    files have no syntax errors.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示 `Loaded services file OK`，这意味着配置文件没有语法错误。
- en: After the system is restarted and the firewall configured, we can proceed to
    setting up a Samba password for users who can access the shares. In the next section,
    we will create new Samba users and groups.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 系统重启并配置好防火墙后，我们可以继续为可以访问共享的用户设置 Samba 密码。在接下来的部分，我们将创建新的 Samba 用户和组。
- en: Creating Samba users
  id: totrans-270
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Samba 用户
- en: Each Samba server needs to have specific users that can access the shared directories
    and files. Those users need to be both Samba and system users, as this is necessary
    for users to be able to authenticate and to read and write system files. Let’s
    assume that you need to create a local share for your small business or family
    group.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Samba 服务器都需要有特定的用户可以访问共享的目录和文件。这些用户既需要是 Samba 用户，也需要是系统用户，因为这是用户能够进行身份验证并读取和写入系统文件的必要条件。假设你需要为你的家庭或小型企业组创建一个本地共享。
- en: 'By creating local users specifically for using the Samba shares, you don’t
    need them to act like actual users as they only need to be able to access the
    shares. However, local Samba users need to be local system users. In our case,
    we will use our local `packt` user to create a new user for Samba:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 通过为使用 Samba 共享创建专用的本地用户，你不需要让它们充当实际用户，因为它们只需要能够访问共享。然而，本地 Samba 用户需要是本地系统用户。在我们的案例中，我们将使用本地的
    `packt` 用户来为 Samba 创建新用户：
- en: 'We use the following command to add the `packt` local user to Samba:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用以下命令将 `packt` 本地用户添加到 Samba：
- en: '[PRE42]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'alex using the following command:'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下命令的 alex：
- en: '[PRE43]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Then we add it to Samba with the following command:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们用以下命令将其添加到 Samba：
- en: '[PRE45]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: valid users = @packt @alex
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: valid users = @packt @alex
- en: '[PRE46]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Before testing the new user’s access to Samba, we will need to give the user
    `alex` access to the shared directory. To do this, we follow these steps:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试新用户访问 Samba 之前，我们需要授予 `alex` 用户访问共享目录的权限。为此，我们按照以下步骤操作：
- en: 'We add the `acl` package in Ubuntu with the following command:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们通过以下命令在 Ubuntu 中添加 `acl` 软件包：
- en: '[PRE47]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: sudo setfacl -R -m "u:alex:rwx" /home/packt/samba_shares
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sudo setfacl -R -m "u:alex:rwx" /home/packt/samba_shares
- en: '[PRE48]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: In the next section, we will show you how to access the Samba shares from different
    systems on the network.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将展示如何从网络中的不同系统访问 Samba 共享。
- en: Accessing the Samba shares
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问 Samba 共享
- en: On your network, you can access the shares from Linux, macOS, or Windows. To
    make everything a little bit challenging—worthy of a Linux master!—we will show
    you how to access the Samba shares in Linux using the CLI only. We will let you
    find out for yourselves how to access them from the GUI or from a Windows or macOS
    client. To access the shares from the CLI, use the `smbclient` tool.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的网络中，你可以从 Linux、macOS 或 Windows 访问共享文件。为了增加一些挑战——值得一个 Linux 大师的挑战！——我们将展示如何仅使用
    CLI 在 Linux 中访问 Samba 共享。我们将让你自己探索如何通过 GUI 或 Windows/macOS 客户端访问它们。要通过 CLI 访问共享，请使用
    `smbclient` 工具。
- en: 'On a Linux system, you need to install the Samba client `smbclient` first.
    We will assume that you will have an Ubuntu or Debian Linux client, but the steps
    are similar for other Linux distributions too. On Ubuntu/Debian, first install
    the Samba client with the following command, but make sure that your repositories
    are updated before you do this:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 系统中，你需要先安装 Samba 客户端 `smbclient`。我们假设你使用的是 Ubuntu 或 Debian Linux 客户端，但其他
    Linux 发行版的步骤也类似。在 Ubuntu/Debian 上，首先使用以下命令安装 Samba 客户端，但在此之前确保你的软件库已更新：
- en: '[PRE49]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'If you are running a Fedora/RHEL client, install the Samba client with the
    following command:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在运行 Fedora/RHEL 客户端，请使用以下命令安装 Samba 客户端：
- en: '[PRE50]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'For example, let’s access the shares of user `packt` from one of our local
    machines. Remember that the shares are on a local server running Ubuntu. We will
    use our local IP for the server and run the following code:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们从本地机器之一访问 `packt` 用户的共享。记住，这些共享文件位于运行 Ubuntu 的本地服务器上。我们将使用服务器的本地 IP 地址，并运行以下代码：
- en: '![Figure 13.23 – Accessing shares from a Linux CLI client](img/B19682_13_23.jpg)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.23 – 从 Linux CLI 客户端访问共享文件](img/B19682_13_23.jpg)'
- en: Figure 13.23 – Accessing shares from a Linux CLI client
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.23 – 从 Linux CLI 客户端访问共享文件
- en: 'In the preceding screenshot, you can see that the Samba access was successful,
    and the user `packt` managed to access the Samba shares on the server. We used
    the `-U` option followed by the username to specify the name of the user we are
    connecting with. The location was given using the server’s local IP, followed
    by the Samba `samba shares` name. Furthermore, if we would like to see the Samba
    services available on the server, we could use the `-L` option with the `smbclient`
    command, as follows:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的截图中，你可以看到 Samba 访问成功，用户 `packt` 成功访问了服务器上的 Samba 共享文件。我们使用了 `-U` 选项，后跟用户名，来指定我们正在连接的用户名。位置使用服务器的本地
    IP 地址，后跟 Samba `samba shares` 名称。此外，如果我们想查看服务器上可用的 Samba 服务，可以使用 `-L` 选项与 `smbclient`
    命令，命令如下：
- en: '![Figure 13.24 – Listing the available services on the Samba server](img/B19682_13_24.jpg)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.24 – 列出 Samba 服务器上的可用服务](img/B19682_13_24.jpg)'
- en: Figure 13.24 – Listing the available services on the Samba server
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.24 – 列出 Samba 服务器上的可用服务
- en: Here we are, at the end of this chapter on configuring Linux servers. The servers
    showcased were considered important and relevant for any Linux sysadmin to know.
    However, there are many other types of Linux servers not covered due to page-count
    constraints. Nevertheless, there are plenty of resources you can find online.
    As a base, you can start with the official documentation for RHEL, Ubuntu, or
    Debian, which will cover most of the Linux server types that you should know.
    One server type that will prove useful to know how to configure is the web server.
    Feel free to explore any other resources that you find relevant and might not
    be included in the *Further* *reading* list.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们关于配置 Linux 服务器的本章的结尾。展示的服务器被认为是任何 Linux 系统管理员需要了解的重要和相关服务。然而，由于篇幅限制，许多其他类型的
    Linux 服务器没有覆盖。尽管如此，你可以在线找到大量资源。作为基础，你可以从 RHEL、Ubuntu 或 Debian 的官方文档开始，这些文档涵盖了大多数你需要了解的
    Linux 服务器类型。一个有用的服务器类型是 Web 服务器，了解如何配置它将非常有用。随时探索任何其他你认为相关的资源，可能未包含在*进一步阅读*列表中。
- en: Summary
  id: totrans-301
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we covered the installation and configuration processes for
    the most well-known services available for Linux. Knowing how to configure all
    the servers described in this chapter—from DNS to DHCP, Apache, and a printing
    server—is a minimum requirement for any Linux administrator.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了为 Linux 配置最知名服务的安装和配置过程。了解如何配置本章中描述的所有服务器——从 DNS 到 DHCP、Apache 和打印服务器——是任何
    Linux 管理员的基本要求。
- en: By going through this chapter, you learned how to provide essential services
    for any Linux server. You learned how to set up and configure a web server using
    the Apache package; how to provide networked printing services to a small office
    or home office; how to run an FTP server and share files over TCP; how to share
    files with Windows clients on your network using the Samba/CIFS protocol; how
    to share files over Unix and Linux systems using the NFS file-sharing protocol;
    how to set up NTP to show an accurate time; and how to configure DNS and local
    DHCP servers. In a nutshell, you learned a lot in this chapter, and yet we have
    barely scratched the surface of Linux server administration.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本章的学习，你了解了如何为任何 Linux 服务器提供基本服务。你学习了如何使用 Apache 包设置和配置 Web 服务器；如何为小型办公室或家庭办公室提供网络打印服务；如何运行
    FTP 服务器并通过 TCP 共享文件；如何使用 Samba/CIFS 协议与 Windows 客户端共享文件；如何使用 NFS 文件共享协议在 Unix
    和 Linux 系统之间共享文件；如何设置 NTP 以显示准确时间；以及如何配置 DNS 和本地 DHCP 服务器。简而言之，你在本章中学到了很多内容，然而我们只是
    Linux 服务器管理的皮毛。
- en: In the next chapter, we will introduce you to cloud technologies.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将向你介绍云技术。
- en: Questions
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Now that you have a clear view of how to manage some of the most widely used
    services in Linux, here are some exercises that will further contribute to your
    learning:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经清楚地了解了如何管理 Linux 中一些最广泛使用的服务，以下是一些可以进一步促进你学习的练习：
- en: Try using a VPS for all the services detailed in this chapter, not on your local
    network.
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试使用 VPS 运行本章中详细描述的所有服务，而不是在本地网络上。
- en: Try setting up a LEMP stack on Ubuntu.
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试在 Ubuntu 上设置 LEMP 堆栈。
- en: Test all the services described in this chapter using Fedora or RHEL-based distributions.
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Fedora 或基于 RHEL 的发行版测试本章中描述的所有服务。
- en: Further reading
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'For more information about the topics covered in the chapter, you can refer
    to the following links:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 有关本章所涵盖主题的更多信息，请参考以下链接：
- en: 'Official Ubuntu documentation: [https://ubuntu.com/server/docs](https://ubuntu.com/server/docs)'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方 Ubuntu 文档：[https://ubuntu.com/server/docs](https://ubuntu.com/server/docs)
- en: 'RHEL official docs: [https://www.redhat.com/sysadmin/install-apache-web-server](https://www.redhat.com/sysadmin/install-apache-web-server)'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHEL 官方文档：[https://www.redhat.com/sysadmin/install-apache-web-server](https://www.redhat.com/sysadmin/install-apache-web-server)
- en: 'NGINX official docs: [https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/](https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/)'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NGINX 官方文档：[https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/](https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/)
- en: 'DigitalOcean official docs: [https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-22-04](https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-22-04)'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DigitalOcean 官方文档：[https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-22-04](https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-22-04)
- en: Part 4:Cloud Administration
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四部分：云计算管理
- en: In this fourth part, you will learn about advanced concepts related to cloud
    computing. By the end of this part, you will be proficient in using specific tools
    such as Kubernetes and Ansible and deploying Linux to the AWS and Azure clouds.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 在第四部分，你将学习与云计算相关的高级概念。到本部分结束时，你将熟练掌握使用 Kubernetes 和 Ansible 等特定工具，并能将 Linux
    部署到 AWS 和 Azure 云平台。
- en: 'This part has the following chapters:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 14*](B19682_14.xhtml#_idTextAnchor299), *Short Introduction to* *Computing*'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第14章*](B19682_14.xhtml#_idTextAnchor299)，*计算简短介绍*'
- en: '[*Chapter 15*](B19682_15.xhtml#_idTextAnchor326), *Deploying to the Cloud with
    AWS and Azure*'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第15章*](B19682_15.xhtml#_idTextAnchor326)，*使用 AWS 和 Azure 部署到云端*'
- en: '[*Chapter 16*](B19682_16.xhtml#_idTextAnchor342), *Deploying Applications with
    Kubernetes*'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第16章*](B19682_16.xhtml#_idTextAnchor342)，*使用 Kubernetes 部署应用程序*'
- en: '[*Chapter 17*](B19682_17.xhtml#_idTextAnchor359), *Infrastructure and Automation
    with Ansible*'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第17章*](B19682_17.xhtml#_idTextAnchor359)，*使用 Ansible 进行基础设施和自动化*'
