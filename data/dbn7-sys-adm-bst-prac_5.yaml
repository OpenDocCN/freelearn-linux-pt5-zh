- en: Chapter 5. System Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章 系统管理
- en: Aside from configuring individual software packages, an administrator is responsible
    for managing how the various services on his systems are started and stopped,
    managing network connections, maintaining the filesystem, managing system logs,
    and configuring the face the system shows to the users.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 除了配置各个软件包外，管理员还负责管理系统上各种服务的启动和停止，管理网络连接，维护文件系统，管理系统日志，并配置系统面向用户的界面。
- en: Startup and shutdown
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动与关闭
- en: The proper startup and shutdown of services required for a system to function
    and fulfill its purpose is central to its management. While Unix `init` scripts
    (also known as System V or SysV scripts, due to their origin in Unix System V)
    have a long history and are in one form or another, common to all Unix and Linux
    systems, the way in which they are managed, sequenced, enabled, disabled, and
    the preferred script format often differs somewhat between distributions. The
    primary areas to be aware of for Debian startup and shutdown scripts include the
    purpose of run levels, dependency-based sequencing, and utilities available for
    administering the boot sequence.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 正确启动和关闭服务，对于系统功能和实现其目的至关重要。尽管 Unix `init` 脚本（也称为 System V 或 SysV 脚本，因其起源于 Unix
    System V）有着悠久的历史，并且在某种形式上是所有 Unix 和 Linux 系统的通用脚本，它们的管理、顺序、启用、禁用方式以及首选脚本格式通常在不同发行版之间有所不同。Debian
    启动和关闭脚本的主要关注点包括运行级别的目的、基于依赖的顺序以及可用于管理启动顺序的工具。
- en: Debian run levels
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Debian 运行级别
- en: 'In Debian, as in nearly all Unix/Linux operating systems, run levels from 0
    through 6 are available, defined as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Debian 系统中，与几乎所有的 Unix/Linux 操作系统一样，提供了从 0 到 6 的运行级别，具体定义如下：
- en: '0: System Halt'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '0: 系统停止'
- en: '1: Single User (maintenance)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '1: 单用户模式（维护）'
- en: '2 to 5: Multi-User Modes'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '2 到 5: 多用户模式'
- en: '6: System Reboot'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '6: 系统重启'
- en: Note that run levels 2 through 5 are identical in Debian. This is unlike some
    other distributions, such as RedHat, Fedora, SuSE, or OpenSuSE, which give specific
    purposes to some of these run levels. For example, run level 2 in these distributions
    is often defined as one without network support, 3 with networking, 4 with file
    sharing, and 5 includes a display manager which isn't active in the other run
    levels.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在 Debian 中，运行级别 2 到 5 是相同的。这与一些其他发行版不同，比如 RedHat、Fedora、SuSE 或 OpenSuSE，它们为这些运行级别中的某些级别指定了特定的用途。例如，这些发行版中的运行级别
    2 通常定义为没有网络支持，3 为具有网络支持，4 为文件共享，5 包含显示管理器，而其他运行级别没有启用显示管理器。
- en: In most Debian systems, there is no difference between the multiuser run levels,
    and all of the `init` scripts default to active in levels 2 through 5\. This doesn't
    mean you can't define your own purposes for different run levels. However, if
    you do choose to do this, do not manually edit the various links to `init` scripts
    in the run level directories. The `update-rc.d` command should be used instead.
    The reason for this is that Debian now defaults to dependency based boot sequencing.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数 Debian 系统中，多用户运行级别之间没有区别，所有 `init` 脚本默认在 2 到 5 级别处于活动状态。这并不意味着不能为不同的运行级别定义自己的用途。然而，如果你确实选择这么做，切勿手动编辑运行级别目录中指向
    `init` 脚本的各种链接。应该使用 `update-rc.d` 命令。这样做的原因是，Debian 现在默认使用基于依赖的启动顺序。
- en: Dependency-based boot sequence
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于依赖的启动顺序
- en: As mentioned previously, this is now the default as of Debian 7 Wheezy. It was
    introduced in Debian 6 Squeeze, although it could be turned off. It is now always
    enabled, although provisions are made for legacy ordering (assigning specific
    numbers to start and stop scripts). Because of this, the administrator no longer
    needs to determine the order in which the `init` scripts are run. This is now
    handled by the `insserv` utility.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，这已经是 Debian 7 Wheezy 版本的默认设置。它是在 Debian 6 Squeeze 版本中引入的，尽管可以关闭该功能。现在它始终启用，尽管仍为遗留顺序（为启动和停止脚本分配特定编号）提供了相应的配置。因此，管理员不再需要确定
    `init` 脚本的运行顺序。现在，这一任务由 `insserv` 工具处理。
- en: Tip
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The `insserv` utility should not be called directly. The `update-rc.d` utility
    provided by Debian, which calls the low-level `insserv` command, is the recommended
    interface to manage `init` scripts.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 不应直接调用 `insserv` 工具。建议使用 Debian 提供的 `update-rc.d` 工具，它会调用低级别的 `insserv` 命令，作为管理
    `init` 脚本的推荐接口。
- en: 'The `init` scripts must now have dependencies and defaults listed in a special
    set of headers, along with a description of the script, what service or services
    it provides, and what run levels the service should be active in. A good example
    is the beginning of the script for starting Apache:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`init` 脚本现在必须在一组特殊的头文件中列出依赖关系和默认值，同时描述脚本的功能、它提供的服务以及服务应该在哪些运行级别中处于活动状态。一个好的例子是启动
    Apache 的脚本开头：'
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The fields are fairly self-explanatory. This script provides the apache2 service.
    Other scripts can name this service as a pre-requisite. This script requires that
    local and remote filesystems be mounted, and that the network be up, and that
    `syslog` and named services be available prior to starting. Likewise, these services
    must not be stopped after this script has shut down the apache2 service. The default
    runlevels where apache2 should be active are 2 through 5, and of course, 0, 1,
    and 6 is where it is stopped. The X-Interactive field means that the script can
    require user input if it is run in such a way that a terminal is available to
    communicate with the script. There are other fields available as well, which are
    documented in the `insserv` manual page.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 各字段的含义相当直观。该脚本提供 apache2 服务。其他脚本可以将此服务作为先决条件。该脚本要求本地和远程文件系统被挂载，网络连接正常，且 `syslog`
    和 named 服务在启动之前可用。同样，在该脚本关闭 apache2 服务后，这些服务不得被停止。apache2 应该在运行级别 2 到 5 中保持活动，当然，0、1
    和 6 是它停止的地方。X-Interactive 字段表示，如果脚本以某种方式运行且终端可用与脚本进行通信，则脚本可能需要用户输入。还有其他可用字段，具体内容可以参考
    `insserv` 手册页。
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: These headers are called **LSB** headers, since they are defined in the **Linux
    Standard Base** document, developed jointly by a number of Linux distributions
    under the organizational structure of the Linux Foundation.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这些头文件被称为 **LSB** 头文件，因为它们是在 **Linux Standard Base** 文档中定义的，该文档由多个 Linux 发行版在
    Linux 基金会的组织架构下共同开发。
- en: While dependencies generally do not change, the administrator can modify what
    run levels a script is active in. This should not be done by editing the headers.
    Rather, `update-rc.d` should be used to modify the run levels. For example, suppose
    you want apache to run only in run levels 4 and 5, and not 2 or 3, the command
    `update-rc.d apache2 disable 2 3` will do this.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管依赖关系通常不会变化，管理员仍然可以修改脚本在哪些运行级别下处于活动状态。这不应通过编辑头文件来完成，而应使用 `update-rc.d` 来修改运行级别。例如，假设你希望
    apache 仅在运行级别 4 和 5 下运行，而在 2 或 3 下不运行，命令 `update-rc.d apache2 disable 2 3` 就可以实现这一点。
- en: Tip
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Many scripts provide a switch in their `/etc/default` config file that defines
    whether the service should run at all. When you want to disable a service completely,
    this switch should be used in preference to disabling the script in all run levels
    via `update-rc.d`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 许多脚本在其 `/etc/default` 配置文件中提供了一个开关，用于定义服务是否应当运行。当你希望完全禁用某个服务时，应该使用这个开关，而不是通过
    `update-rc.d` 禁用脚本在所有运行级别中的执行。
- en: The manual page for `update-rc.d` also documents the options `start` and `stop`,
    as well as a means of specifying the start or stop order of a script (using the
    legacy method of assigning numbers to the start and stop links). However, these
    are deprecated and it appears they will be removed in Jessie (Debian 8).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`update-rc.d` 的手册页还记录了 `start` 和 `stop` 选项，以及指定脚本启动或停止顺序的方式（使用传统方法为启动和停止链接分配数字）。然而，这些选项已被弃用，看来它们将在
    Jessie（Debian 8）中被移除。'
- en: Note
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you have locally developed or third-party `init` scripts that do not include
    the necessary headers, Debian 7 will still boot using the old method of script
    ordering, but will notify you of the reasons it can't migrate to a dependency-based
    boot sequence.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有本地开发的或第三方的 `init` 脚本，这些脚本没有包含必要的头文件，Debian 7 仍然会使用旧的脚本排序方法启动，但会通知你它无法迁移到基于依赖关系的启动序列的原因。
- en: Managing SysV scripts
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理 SysV 脚本
- en: The `update-rc.d` utility has already been mentioned, and is one of the primary
    command line interfaces for managing `init` scripts. However, there are several
    other utilities that are essentially a frontend for `update-rc.d` that make the
    administrator's job a little easier. The primary ones are `bum` and `sysv-rc-conf`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`update-rc.d` 工具已经提到过，是管理 `init` 脚本的主要命令行接口之一。然而，还有几个其他工具，本质上是 `update-rc.d`
    的前端，能够让管理员的工作变得更加轻松。主要的工具是 `bum` 和 `sysv-rc-conf`。'
- en: The Boot Up Manager, or `bum`, is a graphical application for managing `init`
    scripts. It requires a window manager to run, and provides a nice interface showing
    what services are running and what scripts are enabled. In advanced mode, it will
    also allow you to adjust individual run levels and run order.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 启动管理器（`bum`）是一个图形化应用程序，用于管理 `init` 脚本。它需要窗口管理器来运行，并提供一个友好的界面，展示正在运行的服务和启用的脚本。在高级模式下，它还允许你调整各个运行级别和运行顺序。
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: As mentioned for the `update-rc.d` start and stop commands, adjusting script
    ordering is not recommended.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如 `update-rc.d` 的启动和停止命令所提到的，调整脚本的顺序并不推荐。
- en: There is also a utility called `sys-rc-conf`. It uses the curses library to
    provide a full-screen text interface. In its default mode, it will not modify
    script order, although special options on the command line will allow this if
    you really need this functionality.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个名为 `sys-rc-conf` 的工具。它使用 curses 库提供全屏文本界面。在默认模式下，它不会修改脚本顺序，尽管在命令行上使用特定选项可以允许这一点，如果你真的需要这个功能。
- en: Both utilities are pretty much self-explanatory. Check the services you want,
    uncheck those you don't, and you can set or unset check marks for different run
    levels on the same script.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个工具基本上是不言自明的。选中你需要的服务，取消选中不需要的服务，你可以为同一个脚本设置或取消不同运行级别的勾选标记。
- en: Tip
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Frequently, you will need to execute a SysV script manually, either to check
    the status, or to restart a service that requires it. Although the script in `/etc/init.d`
    may be executed manually, the recommended method is to use the `invoke-rc.d` command,
    which ensures that system policy and run level constraints are satisfied.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 经常需要手动执行一个 SysV 脚本，可能是为了检查状态，或是重新启动某些需要的服务。虽然 `/etc/init.d` 中的脚本可以手动执行，但推荐使用
    `invoke-rc.d` 命令，这样可以确保系统策略和运行级别的约束条件得到满足。
- en: Third-party and local scripts
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三方和本地脚本
- en: Non-Debian third-party packages often do not provide SysV scripts to start and
    stop their software's background processes, and you may need to write your own.
    Even if such scripts are provided, they may need to be modified to follow the
    Debian standards, particularly if they use prepackaged functions available in
    other distributions that differ from those in Debian.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 非 Debian 的第三方包通常不提供用于启动和停止其软件后台进程的 SysV 脚本，你可能需要自己编写。即使提供了此类脚本，也可能需要修改它们以遵循
    Debian 标准，特别是如果它们使用了其他发行版中的预打包功能，而这些功能与 Debian 中的不同。
- en: Writing `init` scripts is a whole subject in itself. However, the Debian `initscripts`
    package includes a `/etc/init.d/skeleton` script that can be copied and modified
    according to your needs. The requirements for such scripts are defined in *Chapter
    9*, *The Operating System* of the *Debian Policy Manual* (available as a Debian
    package and at [http://www.debian.org/doc/debian-policy/](http://www.debian.org/doc/debian-policy/))
    and *Chapter 20*, *System Initialization* of the *Core Linux System Base standard*
    (available at [http://refspecs.linuxfoundation.org/lsb.shtml](http://refspecs.linuxfoundation.org/lsb.shtml)).
    The latter also provides for some standard functions in `/lib/lsb/init-functions`
    to assist in script coding.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 编写 `init` 脚本本身就是一个完整的主题。然而，Debian 的 `initscripts` 包包括一个 `/etc/init.d/skeleton`
    脚本，可以根据需要复制并修改。此类脚本的要求在 *第 9 章*，《操作系统》部分的 *Debian 政策手册* 中有详细定义（可以通过 Debian 包和
    [http://www.debian.org/doc/debian-policy/](http://www.debian.org/doc/debian-policy/)
    获得），以及 *第 20 章*，《系统初始化》部分的 *Core Linux System Base 标准*（可以通过 [http://refspecs.linuxfoundation.org/lsb.shtml](http://refspecs.linuxfoundation.org/lsb.shtml)
    获取）。后者还提供了 `/lib/lsb/init-functions` 中的一些标准功能，以帮助编写脚本。
- en: Network administration
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络管理
- en: Basic to any system is network access, either to allow others to use its services,
    or to allow users to access services on other systems. There are two main ways
    of setting up and controlling networking, the static `/etc/network/interfaces`
    file, and the more dynamic Network Manager.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 网络访问是任何系统的基础，不论是为了允许其他人使用其服务，还是为了允许用户访问其他系统上的服务。设置和控制网络有两种主要方式：静态的 `/etc/network/interfaces`
    文件和更动态的网络管理器。
- en: The interfaces file
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 接口文件
- en: This is the traditional method for setting up networking on a Debian system.
    It involves a series of files in `/etc/network`. RPM-based systems such as RedHat
    Fedora and SuSE Linux use a different layout in `/etc/sysconfig/network` that
    is managed by their own utilities.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在 Debian 系统上设置网络的传统方法。它涉及到 `/etc/network` 中的一系列文件。基于 RPM 的系统，如 RedHat Fedora
    和 SuSE Linux，使用 `/etc/sysconfig/network` 中不同的布局，并由它们自己的工具进行管理。
- en: The `/etc/network/interfaces` file is probably the simplest way to get a network
    up and running. While it must be edited manually, it is easy to understand and
    a minimum number of configuration lines are needed to handle most situations.
    In fact, the Debian installation process will set up this file for you. If you
    use the same networking configuration as you used for installation, the network
    will work immediately and require minimal tweaking. In fact, a minimal interfaces
    file is usually sufficient for most servers that aren't part of a cluster. Even
    if you do use an alternate method for network configuration, such as Network Manager,
    the local loopback interface is usually left configured in the interfaces file
    to keep the alternate configuration uncluttered, since it requires only basic
    configuration and doesn't normally need to be modified.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/network/interfaces`文件可能是最简单的启动和运行网络的方式。虽然必须手动编辑它，但它易于理解，并且大多数情况下只需要最少的配置行即可应对大多数情况。事实上，Debian安装过程中会为你设置这个文件。如果你使用与安装时相同的网络配置，网络会立即生效，并且只需最少的调整。实际上，最简化的接口文件通常对于大多数不属于集群的服务器来说已经足够了。即使你使用其他网络配置方法，如Network
    Manager，通常也会在接口文件中保留本地回环接口的配置，以保持其他配置简洁，因为它只需要基本配置，并且通常不需要修改。'
- en: 'The interfaces file, while it can be very simple, also offers many options
    for more complex setups. You can configure wired, wireless, **VLAN** (**Virtual
    Local Area Network**) and Bridge interfaces, IP tunnels, and **Point to Point**
    (**PPP**) interfaces. Each interface can be configured to use DHCP or a static
    IP address, with both IPv4 and IPv6 supported as well as Novell''s IPX protocol.
    A simple interfaces file is shown as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接口文件虽然可以非常简单，但也提供了许多选项来进行更复杂的配置。你可以配置有线、无线、**VLAN**（**虚拟局域网**）和桥接接口、IP隧道以及**点对点**（**PPP**）接口。每个接口可以配置为使用DHCP或静态IP地址，支持IPv4和IPv6，同时也支持Novell的IPX协议。一个简单的接口文件如下所示：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Lines beginning with `#` are comments, of course. The purpose of other lines
    is as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以`#`开头的行是注释，当然。其他行的目的如下：
- en: '`auto lo`: The `lo` interface is brought up whenever `ifup` is run with the
    `-a` option, as it is during system initialization'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto lo`：每当运行`ifup`并带上`-a`选项时，`lo`接口会被激活，就像系统初始化时一样'
- en: '`iface lo inet loopback`: This defines the basic loopback interface ; the address
    is always `127.0.0.1` or `::1` for IPv6'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iface lo inet loopback`：这定义了基本的回环接口；地址始终是`127.0.0.1`或IPv6的`::1`'
- en: '`allow-hotplug eth0`: This brings up Ethernet 0 if it is available and plugged
    in'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`allow-hotplug eth0`：如果以太网0可用且已插入，它会被激活'
- en: '`iface eth0 inet static`: This defines Ethernet 0 as an interface with a static
    IP address'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iface eth0 inet static`：这定义了以太网0为一个具有静态IP地址的接口'
- en: '`address`, `netmask`, and `gateway`: These define Ethernet 0''s address, net
    mask, and the default IP gateway, respectively.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`address`、`netmask`和`gateway`：这些分别定义了以太网0的地址、子网掩码和默认IP网关。'
- en: Simple and to the point. This file was actually set up during Debian installation
    and works as is. Of course, there are many other options available which are documented
    in the interfaces manual page that allow you to handle much more complex configurations.
    The details on setting up the interfaces file may be found in the interfaces manual
    page. It includes information on setting up IPv6 and many other protocols.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 简单明了。这个文件实际上是在Debian安装过程中设置的，并且按原样工作。当然，还有许多其他选项可用，这些选项在接口手册页中有详细记录，允许你处理更复杂的配置。有关设置接口文件的详细信息可以在接口手册页中找到。它包括设置IPv6和许多其他协议的信息。
- en: In addition to the interfaces file, there are a number of scripts in the `/etc/network`
    hierarchy that are related. In particular, the subdirectories `if-pre-up.d`, `if-up.d`,
    `if-down.d`, and `if-post-down.d` contain scripts that are run automatically when
    interfaces are brought up or down. In addition, specific scripts can be identified
    in the interfaces file to be executed when a particular interface is brought up
    or down (this is especially useful in configuring Bridges). The major disadvantage
    to using the `/etc/network/interfaces` file is that there is no provision to configure
    **Virtual Private Networks** (**VPN**). However, in general, these can be configured
    using command line tools.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 除了接口文件外，`/etc/network` 目录下还有许多相关的脚本。特别是，子目录 `if-pre-up.d`、`if-up.d`、`if-down.d`
    和 `if-post-down.d` 包含当接口启动或关闭时自动运行的脚本。此外，还可以在接口文件中指定特定脚本，以便在某个接口启动或关闭时执行（这在配置桥接时尤其有用）。使用
    `/etc/network/interfaces` 文件的主要缺点是没有办法配置**虚拟专用网络**（**VPN**）。然而，通常可以使用命令行工具来配置这些。
- en: Note
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Additional details and examples may be found in [Chapter 5](ch05.html "Chapter 5. System
    Management"), *Network Setup* of the Debian Reference Manual ([http://www.debian.org/doc/manuals/debian-reference/ch05.en.html](http://www.debian.org/doc/manuals/debian-reference/ch05.en.html)).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 详细信息和示例可以在[第 5 章](ch05.html "第 5 章. 系统管理")，Debian 参考手册的 *网络设置* 部分找到（[http://www.debian.org/doc/manuals/debian-reference/ch05.en.html](http://www.debian.org/doc/manuals/debian-reference/ch05.en.html)）。
- en: Network Manager
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Network Manager
- en: As flexible as the `/etc/network/interfaces` configuration is, many administrators
    prefer a more graphical interface to network configuration that may be used in
    a more dynamic network environment. Network Manager is most often used to manage
    wireless connections. It consists of a background process that does the actual
    connection management and has both a command line and a graphical utility that
    allows you to configure and control the managed connections.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 `/etc/network/interfaces` 配置非常灵活，许多管理员更喜欢使用图形化界面来配置网络，以便在更动态的网络环境中使用。Network
    Manager 最常用于管理无线连接。它由一个后台进程组成，负责实际的连接管理，并且有一个命令行工具和一个图形化工具，允许你配置和控制已管理的连接。
- en: The graphical utility displays available access points and provides a menu and
    an easy way to configure the connection. It can also be used for wired connections
    and can manage VPN connections to a private network as well. The main disadvantage
    of Network Manager is that it does not handle bridging, VLANs, or the IPX protocol.
    Of course, command line tools can be used to supplement Network Manager in order
    to configure these options, or the interfaces file can be used to manually configure
    them while Network Manager handles the rest.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图形化工具显示可用的接入点，并提供菜单和简单的方式来配置连接。它也可以用于有线连接，并且还可以管理到私有网络的 VPN 连接。Network Manager
    的主要缺点是它不支持桥接、VLAN 或 IPX 协议。当然，可以使用命令行工具来补充 Network Manager，以配置这些选项，或者可以使用接口文件手动配置它们，同时
    Network Manager 处理其余部分。
- en: There are other packages that provide a GUI interface for network configuration.
    One of the main ones is `wicd`. Some users prefer it as it handles wireless connections
    in a different manner that may allow certain wireless cards to work better, but
    it has fewer features.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他一些软件包提供了用于网络配置的 GUI 界面。其中一个主要的就是 `wicd`。一些用户更喜欢它，因为它以不同的方式处理无线连接，这可能使某些无线网卡的性能更好，但它的功能较少。
- en: Combining methods
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并方法
- en: It is possible to combine both the interfaces file and Network Manager methods
    of network configuration, with each responsible for a portion of the configuration.
    This technique might be used when certain features are required that only one
    of the methods support. For example, Network Manager doesn't handle network bridging,
    and the interfaces file generally can't be used to configure VPN connections.
    If you needed both, you would set up bridging using the interfaces file and configure
    your VPN connection using Network Manager.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 可以结合使用接口文件和 Network Manager 的网络配置方法，每种方法负责配置的一部分。这个技巧可能会在需要某些只有其中一个方法支持的功能时使用。例如，Network
    Manager 不支持网络桥接，而接口文件通常不能用来配置 VPN 连接。如果你需要两者，你可以使用接口文件来设置桥接，并使用 Network Manager
    配置 VPN 连接。
- en: 'For those unfamiliar with network bridging, a good example would be a development
    system that runs one or more virtual machines that require direct access to the
    network (meaning its connection must behave as if it is an actual interface with
    a direct network connection). The basic setup looks like the following diagram:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不熟悉网络桥接的人，一个很好的例子是一个开发系统，该系统运行一个或多个需要直接访问网络的虚拟机（这意味着它的连接必须表现得像是一个具有直接网络连接的实际接口）。基本设置看起来像以下图示：
- en: '![Combining methods](img/3118OS_05_01.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![组合方法](img/3118OS_05_01.jpg)'
- en: Note that the host machine now uses **br0** instead of **eth0** as its primary
    interface. The bridge interface uses eth0 to connect to the actual network. The
    **VM** (**Virtual Machine**) will set up its own network interface (or you will
    set it up). These are generally set up as a tap or tunnel interface (hence the
    name **tap0**).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，主机现在使用**br0**而不是**eth0**作为其主要接口。桥接接口使用eth0连接到实际网络。**虚拟机**（**VM**）将设置自己的网络接口（或者你可以自行设置）。这些通常被设置为tap或隧道接口（因此命名为**tap0**）。
- en: 'To set it up, the basic interfaces file might look like the following listing
    (assuming the hardware Ethernet card is eth0):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置它，基本的接口文件可能看起来像以下列表（假设硬件以太网卡是eth0）：
- en: '[PRE2]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This sets up a TAP device using the `tunctl` command to create the device. It
    must appear before the bridge or it won't be there when the bridge device is initialized
    and attempts to connect it to the bridge. The bridge setup creates the bridge
    interface and uses DHCP to obtain the IP address. The `bridge_ports` line indicates
    that it bridges traffic to the real interface (eth0) and the tap0 interface, which
    will be used by the VM. I've left out the loopback entry for clarity. In this
    example, VPN and wireless connections are left for Network Manager to handle.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这通过`tunctl`命令设置一个TAP设备来创建设备。它必须出现在桥接之前，否则当桥接设备初始化并尝试将其连接到桥接时，设备将不会存在。桥接设置创建桥接接口，并使用DHCP获取IP地址。`bridge_ports`行表示它将流量桥接到实际接口（eth0）和tap0接口，虚拟机将使用此接口。我已省略了环回条目以保持清晰。在这个例子中，VPN和无线连接由Network
    Manager处理。
- en: More about network bridging may be found in the `bridge-utils` package, and
    network tap and tunnel interfaces are covered by the `uml-utilities` package.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 有关网络桥接的更多信息可以在`bridge-utils`包中找到，网络tap和隧道接口由`uml-utilities`包涵盖。
- en: Which method?
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 哪种方法？
- en: Network Manager is automatically installed with the GNOME Window Manager. It
    is especially useful in a laptop environment. For servers, the interfaces file
    is probably the best and most flexible option. Of course, if you require certain
    features available only in one or the other, use whatever provides them, combining
    the two techniques if necessary.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Network Manager会随GNOME窗口管理器自动安装。它在笔记本电脑环境中特别有用。对于服务器，接口文件可能是最佳且最灵活的选择。当然，如果你需要某些仅在其中一个中可用的功能，可以使用提供这些功能的任何方法，必要时结合这两种技术。
- en: Tip
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Don't attempt to control the same interface using both methods. While Network
    Manager will refuse to manage a connection defined in the interfaces file, and
    the `ifup` command will generate an error if it attempts to set up an interface
    already controlled by Network Manager, it is possible to circumvent these protections.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 不要尝试使用两种方法同时控制相同的接口。虽然Network Manager会拒绝管理在接口文件中定义的连接，而`ifup`命令如果尝试设置已由Network
    Manager控制的接口则会生成错误，但仍然可以绕过这些保护。
- en: Filesystem maintenance
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统维护
- en: 'There are two types of filesystem maintenance: partition and content maintenance.
    The former includes periodic checking of the filesystem''s underlying structure
    and metadata, modifying the partition layout, and low-level backups. The latter
    involves monitoring and controlling the space used by files as well as file backup
    and recovery.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 文件系统维护分为两种类型：分区维护和内容维护。前者包括定期检查文件系统的底层结构和元数据、修改分区布局以及低级备份。后者涉及监控和控制文件使用的空间以及文件备份和恢复。
- en: Partition maintenance
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分区维护
- en: Although modern journaling filesystems are quite resilient, they will, on occasion,
    suffer an error in the underlying infrastructure. The reasons are many and include
    power fluctuations, hardware failures, and certain types of kernel failures. While
    the last is extremely rare in Debian stable releases, it does happen, especially
    if third-party kernel modules that are not part of Debian are installed or if
    the kernel has been modified locally for some reason.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管现代日志文件系统非常坚韧，但它们偶尔也会遭遇底层基础设施的错误。原因有很多，包括电力波动、硬件故障以及某些类型的内核故障。虽然在Debian稳定版中极为罕见，但确实发生过，尤其是当安装了不属于Debian的第三方内核模块，或内核因某些原因被本地修改时。
- en: Filesystem Check (FSCK)
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文件系统检查（FSCK）
- en: Maintenance involves running the **Filesystem Check program** (**FSCK**). If
    the system is rebooted frequently, as is the case with laptops or workstations,
    or the partition is unmounted and mounted frequently, this will normally happen
    automatically. EXT3 and EXT4 filesystems default to every 39 mounts when originally
    created unless otherwise requested. This may be changed using the `tune2fs` utility
    which can also set a time-dependent check interval instead of mount count dependent.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 维护涉及运行**文件系统检查程序**（**FSCK**）。如果系统经常重启，例如笔记本电脑或工作站，或者分区频繁卸载和挂载，通常会自动进行此操作。EXT3和EXT4文件系统默认在每39次挂载时进行检查，除非另有要求。可以使用`tune2fs`工具更改这一设置，该工具还可以设置时间依赖的检查间隔，而不是基于挂载次数。
- en: Tip
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Although it is possible, periodic checking should not be disabled. Journaling
    filesystems in general are always marked clean and so Linux will not recognize
    when such a system may have problems.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以禁用定期检查，但不建议这样做。日志文件系统通常总是被标记为干净的，因此Linux不会识别出此类系统可能出现的问题。
- en: If your system is always up and the partition in question is never unmounted,
    you may want to arrange for a periodic reboot of the system, either via the `shutdown
    -rF` command that forces a filesystem check, or by using `tune2fs` to set a time-dependent
    check interval that is less than the reboot interval. Of course, if problems are
    found, you must have access to the physical console in order to answer the questions
    about how to fix them.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统始终在线且相关分区从未卸载，可能需要安排定期重启系统，可以通过`shutdown -rF`命令强制进行文件系统检查，或者使用`tune2fs`设置时间依赖的检查间隔，该间隔小于重启间隔。当然，如果发现问题，你必须能够访问物理控制台来回答有关如何解决问题的问题。
- en: An alternative is to never check the filesystem except when problems are obvious
    or likely. Normally, after a failure that could potentially cause filesystem infrastructure
    errors, the system will need to be rebooted anyway, if it isn't forced. This is
    the time to run the FSCK manually in maintenance (single user) mode, or to force
    the check by having a short, time-dependent check interval set. Again, if problems
    arise, someone will need access to the physical console in order to answer questions.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是除非明显出现问题或有可能出现问题，否则永远不检查文件系统。通常，在可能导致文件系统基础设施错误的故障发生后，系统无论如何都需要重新启动（除非强制重启）。此时，你可以进入维护（单用户）模式手动运行FSCK，或者通过设置较短的时间依赖检查间隔来强制执行检查。如果出现问题，仍然需要有人员访问物理控制台来解答相关问题。
- en: Note
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To speed up periodic filesystem checks, use EXT4 instead of EXT3\. In most circumstances,
    checks are anywhere from 2 to 20 times faster for EXT4.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加速定期的文件系统检查，请使用EXT4代替EXT3。在大多数情况下，EXT4的检查速度是EXT3的2到20倍。
- en: Partition resizing
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分区调整
- en: Partition resizing may be required if you need more space. To get a quick overview
    of your disk space usage, use the `df` command. There is also a disk usage (`du`)
    command that summarizes file and directory space. Refer to the manual pages for
    details.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要更多空间，可能需要调整分区大小。要快速查看磁盘空间使用情况，请使用`df`命令。还有一个磁盘使用（`du`）命令，它汇总了文件和目录的空间。有关详细信息，请参阅手册页。
- en: If you must resize a disk partition, the procedures are fairly straightforward
    but there are some considerations.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果必须调整磁盘分区，操作流程相对简单，但有一些需要注意的事项。
- en: Tip
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: There is always a risk in modifying your partition layout. Make sure you have
    current backups prior to modifying the layout.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 修改分区布局始终存在风险。在修改布局之前，确保你有当前的备份。
- en: If the partition is being expanded, there must be room to expand it. If you
    are using **Logical Volume Manager** (**LVM**), this can be as simple as adding
    a physical volume to the volume group if there is not enough space left in it.
    If you are not using LVM, or if you have multiple partitions configured on the
    same logical volume, then there must be free space available on the physical disk
    or logical volume following the end of the partition to be expanded. If there
    isn't, it must be created somehow. If the partition is to be shrunk, space is
    not an issue, although you may want to move or expand other partitions to use
    the space freed up by shrinking. Also, it is sometimes necessary to move partitions
    around. This is not necessary if you use LVM and assign one partition per logical
    volume.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果分区正在扩展，必须有足够的空间。如果你使用的是**逻辑卷管理器**（**LVM**），如果卷组中没有足够的空间，可以通过向卷组中添加物理卷来解决。
    如果你没有使用LVM，或者在同一逻辑卷上配置了多个分区，那么必须在要扩展的分区结束后，物理磁盘或逻辑卷中必须有空闲空间。如果没有，必须以某种方式创建。 如果分区要缩小，空间就不是问题，尽管你可能希望移动或扩展其他分区来利用缩小后腾出的空间。此外，有时需要移动分区。如果你使用LVM并为每个逻辑卷分配一个分区，则无需进行此操作。
- en: Moving or shrinking a partition may only be done with unmounted (offline) partitions,
    since it requires moving files and risks corruption if any files are in use. Some
    filesystems, EXT3 and EXT4 in particular, may be expanded while the partition
    is still mounted, however, since this doesn't require moving any files, just modifying
    the filesystem metadata.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 移动或缩小分区只能在未挂载（离线）分区上进行，因为这需要移动文件，若文件正在使用中，可能会导致数据损坏。一些文件系统，特别是EXT3和EXT4，在分区仍然挂载时也可以扩展，因为这只需要修改文件系统元数据，而无需移动任何文件。
- en: While each filesystem architecture has appropriate tools for resizing and there
    are simple tools for managing the partition table, the primary tool for managing
    partitions is `parted`. There are other, mostly commercial tools, but `parted`
    does pretty much everything that is necessary, is available as an easy to use
    graphical utility (`gparted`), and it is free. There is even a live CD version
    you can boot to manage your partitions regardless of what operating system is
    installed. Many Windows administrators use it quite successfully. It handles both
    enlarging and shrinking partitions as well as moving them, and will handle many
    different filesystem architectures, and ensures that the partition table matches
    the filesystem sizes.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然每种文件系统架构都有适当的工具用于调整大小，并且有一些简单的工具用于管理分区表，但管理分区的主要工具是`parted`。还有其他一些工具，大多是商业工具，但`parted`几乎可以完成所有必要的操作，提供一个易于使用的图形工具（`gparted`），并且是免费的。甚至还有一个可以引导的Live
    CD版本，你可以用它来管理分区，而不管安装了什么操作系统。许多Windows管理员成功地使用它。它支持扩展、缩小和移动分区，并能处理许多不同的文件系统架构，同时确保分区表与文件系统大小一致。
- en: Tip
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Unfortunately, neither `parted` nor `gparted` will not allow you to expand a
    mounted partition. If you must expand a partition while it is in use, you must
    delete and recreate the partition with the same, identical beginning position,
    force a reread of the partition table, and then use the appropriate filesystem
    resizing commands. This is extremely dangerous and should never be used for resizing
    the root partition.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，`parted` 和 `gparted` 都无法扩展已挂载的分区。如果你必须在分区正在使用时扩展它，你必须删除并重新创建分区，确保起始位置完全相同，强制重新读取分区表，然后使用适当的文件系统调整命令。这是非常危险的，绝对不应当用于调整根分区的大小。
- en: Note
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The procedures for modifying partition layout are straightforward. Note that
    if you aren't booted from a `gparted` live CD or similar utility disk, you cannot
    unmount partitions required to run the necessary utilities and operating system
    services.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 修改分区布局的过程是简单直接的。请注意，如果你没有从`gparted` Live CD或类似的工具磁盘启动，就无法卸载运行必要工具和操作系统服务所需的分区。
- en: 'To manually modify your partition layout:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 手动修改分区布局：
- en: Ensure there is adequate space for the expanded partition, or to hold the partition
    being moved. If necessary, shrink or move other partitions or expand the logical
    volume.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保有足够的空间用于扩展分区，或用于容纳正在移动的分区。如果需要，可以缩小或移动其他分区，或扩展逻辑卷。
- en: You must ensure the partition table matches the resized or moved partition exactly.
    Failing to do this can result in corrupted or lost data. `gparted` will handle
    this for you automatically.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你必须确保分区表与调整大小或移动后的分区完全匹配。未能做到这一点可能会导致数据损坏或丢失。`gparted`会自动为你处理这一点。
- en: To shrink a partition, it must be offline (unmounted). Resize the filesystem
    first, then modify the partition table to match the new size.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要缩小分区，它必须处于脱机状态（未挂载）。先调整文件系统大小，然后修改分区表以匹配新大小。
- en: To expand a partition, modify the partition table first, then expand the filesystem.
    If you are doing this with a mounted partition, you must use the procedure outlined
    previously.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要扩展分区，请首先修改分区表，然后扩展文件系统。如果正在处理挂载的分区，请使用前面概述的过程。
- en: To move a partition, you must first create a new partition of the same size
    as the original. Then you must unmount the current partition, copy the data to
    the new partition exactly, and delete the old partition.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要移动分区，必须首先创建一个与原始分区大小相同的新分区。然后必须卸载当前分区，精确复制数据到新分区，然后删除旧分区。
- en: In all cases, the partition must be clean prior to modifying or moving it, and
    should be checked afterwards prior to mounting it. The `gparted` utility or similar
    will handle the steps above automatically, including the necessary filesystem
    checks, data movement, and partition table modifications.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有情况下，在修改或移动分区之前，分区必须是干净的，并且在挂载之前应该进行检查。`gparted`工具或类似工具将自动处理上述步骤，包括必要的文件系统检查、数据移动和分区表修改。
- en: Note that either `gparted` or the manual procedures may be used on a live system,
    provided the partitions being modified can be unmounted, or if a mounted partition
    must be modified, it is only being expanded and `gparted` is not being used.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，可以在活动系统上使用`gparted`或手动程序，前提是要修改的分区可以卸载，或者如果必须修改挂载的分区，则只能扩展，不能使用`gparted`。
- en: Tip
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Unless you must expand a partition while it remains mounted and in use, the
    recommended procedure is to boot from a `gparted` live CD. This greatly simplifies
    the whole process, allows modification of all partitions, not just those that
    aren't required for operating system services and necessary utilities, and reduces
    the risk of corruption.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 除非必须在分区仍然挂载和使用的情况下扩展分区，否则建议的过程是从`gparted` live CD启动。这极大地简化了整个过程，允许修改所有分区，而不仅仅是不需要操作系统服务和必要工具的那些分区，并减少了损坏的风险。
- en: Backups
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备份
- en: 'In general, there are two types of backups: low-level image backups, and file-level
    backups.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，备份分为两种类型：低级别镜像备份和文件级别备份。
- en: Low-level backups
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 低级别备份
- en: Low-level disk image or so-called Bare Metal backups, are byte-level copies
    of a full partition or even a complete logical or physical disk. Some utilities
    will only include used sectors in the copy, thus reducing the size and speed of
    the backup and restore operations, but this is not always the case. When restoring
    such a backup, some sort of media, such as a live CD, is required in order to
    boot up the software to restore the image.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 低级别磁盘镜像或所谓的裸机备份，是完整分区甚至完整逻辑或物理磁盘的字节级复制。某些实用程序只包括备份中使用的扇区，从而减少备份和恢复操作的大小和速度，但并非总是如此。恢复此类备份时，需要一种媒体，如live
    CD，以便启动软件来恢复映像。
- en: Full disk byte-level backups are useful if you need to duplicate or restore
    a system quickly, as long as the disk being restored is the same or larger. Partition
    backups of this type may also be done, but in order to restore them you will need
    some way to restore the partition information to the disk partition table.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要快速复制或恢复系统，则全磁盘字节级备份非常有用，只要恢复的磁盘与原来的相同或更大。也可以执行此类分区备份，但为了恢复它们，您需要一些方法将分区信息恢复到磁盘分区表中。
- en: 'Low-level backups are useful in two situations:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 低级别备份在两种情况下很有用：
- en: When a system must be replaced and restored quickly with identical hardware
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当需要快速用相同硬件替换和恢复系统时
- en: When a system needs to be duplicated many times on identical hardware
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当需要在相同硬件上多次复制系统时
- en: A good example of the latter is when a company provides workers with preconfigured
    systems all with identical or nearly identical initial configurations. In this
    case, it is easy just to restore the disk from a standardized copy whenever a
    new system is required or an old one needs to be returned to its original condition
    for a new employee.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 后者的一个很好的例子是当公司为工人提供预配置的系统，所有系统都具有相同或几乎相同的初始配置。在这种情况下，只需从标准化的副本中恢复磁盘，无论何时需要新系统或旧系统需要返回到其原始状态以供新员工使用，都非常容易。
- en: File-level backups
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文件级别备份
- en: File-level backups can be as simple as a file-by-file copy of everything in
    your directory hierarchy, to a backup that takes into account the filesystem metadata
    structures and that doesn't store duplicate data (commonly called **data de-duplication**).
    Restoration generally requires a minimal installed system, or a live CD. File-level
    backups do not have the ability to restore boot sectors or partition tables, so
    these must already exist or be created prior to restoring your files. Many file-level
    backup utilities provide the ability to back up only files that have changed since
    a previous backup.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 文件级备份可以像是将目录层次结构中的所有内容逐个文件复制一样简单，也可以是考虑到文件系统元数据结构的备份，并且不存储重复数据（通常称为**数据去重**）。恢复通常只需要一个最小化安装的系统，或者一个实时CD。文件级备份无法恢复启动扇区或分区表，因此这些必须在恢复文件之前已经存在或创建。许多文件级备份工具提供仅备份自上次备份以来发生变化的文件的功能。
- en: File-level backups are most useful when individual files or directories are
    lost or corrupted, or need to be reverted to an earlier version, as only the files
    necessary need to be restored. This is not possible with low-level image backups.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 文件级备份在丢失或损坏单个文件或目录，或需要恢复到早期版本时最为有用，因为只需要恢复必要的文件。这是低级镜像备份无法实现的。
- en: Backup utilities
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备份工具
- en: There are many backup utilities available and they vary from simple ones appropriate
    for individual systems, to complex backup suites appropriate for managing backups
    for multiple production systems and clusters.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多备份工具可用，范围从适用于单一系统的简单工具，到适用于管理多个生产系统和集群的复杂备份套件。
- en: The simpler utilities generally provide file-level backups that are written
    to external media or even a remote network location. They frequently provide options
    for incremental backups, where only changed files are copied after the first,
    full backup. Mostly, these are command line utilities which can be scripted and
    executed periodically via a CRON job, although there are graphical front ends
    available. The disadvantage of most of these are that in the event you need to
    restore after a complete disk failure, you must have some other means of restoring
    the partition information correctly, and of recreating the boot sector information
    properly so the system will be bootable.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的实用程序通常提供文件级备份，将备份写入外部存储介质甚至远程网络位置。它们通常提供增量备份选项，在第一次完整备份后，仅复制发生变化的文件。大多数这些工具是命令行工具，可以通过脚本编写并通过CRON作业定期执行，尽管也有图形化前端可用。这些工具的缺点是，如果在完全磁盘故障后需要恢复，你必须有其他方式正确恢复分区信息，并正确重建启动扇区信息，以便系统可以正常启动。
- en: Among the more common of the simple utility commands are `rsync` and `tar`.
    Frequently, these utilities are used in the more complex backup software to actually
    store the data. If you use one of the EXT filesystems, the `dump` and `restore`
    commands are of particular interest, because they understand and take into account
    the filesystem's metadata and are thus faster and more efficient than the simpler
    copy utilities. The disadvantage, of course, is that restores may only be done
    to an equivalent EXT filesystem. Other utilities such as `rsync` can restore to
    a completely different filesystem type, although certain metadata, such as file
    ownership and permissions, may be lost if the type is too different, such as backing
    up from an EXT4 filesystem and restoring to an NTFS partition.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 较为常见的简单实用命令包括`rsync`和`tar`。这些实用程序常常用于更复杂的备份软件中，实际存储数据。如果你使用的是某种EXT文件系统，`dump`和`restore`命令尤为重要，因为它们理解并考虑文件系统的元数据，因此比简单的复制工具更快、更高效。当然，它们的缺点是恢复只能在相同的EXT文件系统上进行。而像`rsync`这样的其他工具则可以恢复到完全不同的文件系统类型，尽管如果文件系统类型差异过大，比如从EXT4文件系统备份到NTFS分区时，某些元数据（如文件所有权和权限）可能会丢失。
- en: More complex backup software is sometimes capable of so-called Bare Metal backups.
    These combine small, low-level backups of (or at least the ability to recreate)
    the non-filesystem structures such as the partition tables and boot sectors, with
    file-level backups of the filesystem contents. Many are multisystem backup solutions
    that can be administered from a central location and which can store the backups
    on various media in various locations. Usually, these multisystem suites include
    the ability to define and control backup schedules, contents, and locations as
    well as provide for off-site archiving.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 更复杂的备份软件有时能够进行所谓的裸金属备份。这些备份结合了对非文件系统结构（如分区表和启动扇区）的低级小规模备份（或至少能够重新创建的能力），以及对文件系统内容的文件级备份。许多都是多系统备份解决方案，可以从一个中心位置进行管理，并且能够将备份存储在不同位置的不同介质上。通常，这些多系统套件包括定义和控制备份计划、内容和位置的功能，并提供远程存档的支持。
- en: Choosing your solution
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择你的解决方案
- en: Which backup software you choose is somewhat a matter of taste, but there are
    some guidelines. For quick and dirty backups of individual files, the standard
    `rsync`, `tar`, and `cpio` utilities are usually sufficient. For more routine
    backup of individual systems, one of the software packages that provide for configuring
    and scheduling automatic backups, both full and incremental, is your best bet.
    If you have multiple systems to back up, one of the major backup suites that provide
    central control, scheduling, and storage is best. We will discuss this further
    in [Chapter 7](ch07.html "Chapter 7. Advanced System Management"), *Advanced System
    Management*.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 选择什么备份软件有一定的个人偏好，但也有一些指导原则。对于单个文件的快速和临时备份，标准的`rsync`、`tar`和`cpio`工具通常已足够。对于更常规的单个系统备份，最好选择一些可以配置和调度自动备份（包括全量和增量备份）的软件包。如果你有多个系统需要备份，最好选择一些提供中央控制、调度和存储的主要备份套件。我们将在[第七章](ch07.html
    "第七章。高级系统管理")中进一步讨论，*高级系统管理*。
- en: In all cases, if your backup solution doesn't automatically take care of it,
    be sure to include a rescue or live CD that includes the software necessary to
    format and partition the disk drive, restore the files, and recreate the boot
    information. Some backup packages, such as `Mondo`, include the creation of such
    bootable media as part of their software.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有情况下，如果你的备份解决方案没有自动处理，务必包括一张救援或实时CD，里面包含必要的软件来格式化和分区磁盘，恢复文件，并重建启动信息。一些备份包，比如`Mondo`，会将创建这种可启动媒体作为其软件的一部分。
- en: Tip
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Don't neglect backups. Even the most resilient VM environment with multipath
    **Network Addressable Storage** (**NAS**) can fail in unexpected ways that will
    corrupt your data. I am aware of one such environment where the UPS was disconnected
    in a way that removed power from both the NAS system and the VM host. Although
    the Debian system used a non-cached journal for its filesystem, the NAS was buffering
    the journal writes. When power was lost, the journal was incomplete, and the disk
    ended up quite corrupted. Lesson learned.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忽视备份。即使是具有多路径**网络可寻址存储**（**NAS**）的最具韧性的虚拟机环境，也可能以意想不到的方式失败，从而导致数据损坏。我知道有一个这样的环境，其中UPS以某种方式被断开，导致NAS系统和虚拟机主机都断电。尽管Debian系统使用了非缓存的文件系统日志，但NAS系统却在缓存日志写入。当电力丧失时，日志不完整，磁盘最终严重损坏。教训已经吸取。
- en: System logging
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 系统日志
- en: Another one of the system administrator's responsibilities is to manage the
    system logs. Debian systems by default log information that can tell an administrator
    how the system is being used, provide warnings and error messages that can indicate
    problems with software or hardware, and even provide early signs the system is
    being attacked or misused.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 系统管理员的另一个职责是管理系统日志。Debian系统默认会记录信息，这些信息能够告诉管理员系统的使用情况，提供可能表明软件或硬件存在问题的警告和错误消息，甚至提供系统被攻击或滥用的早期迹象。
- en: System logs are handled by the `rsyslog` package, and normally reside in `/var/log`
    and its subdirectories. Various software packages and especially those that provide
    important services, such as DNS, FTP, E-Mail, and HTTP (Apache), often do extensive
    logging that may include entries that allow activity to be tracked and warn of
    potential problems or misconfiguration. The package documentation includes information
    on how to configure what is logged and where.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 系统日志由`rsyslog`包处理，通常存储在`/var/log`及其子目录中。各种软件包，尤其是那些提供重要服务的软件，如DNS、FTP、电子邮件和HTTP（Apache），经常会进行大量日志记录，这些日志可能包括可以追踪活动并警告潜在问题或配置错误的条目。包文档中包含了如何配置日志记录内容和存储位置的信息。
- en: The logging facility
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 日志设施
- en: The `rsyslog` system logging facility in Linux provides for various options,
    facilities, and log levels. The options control what happens when a message is
    logged, such as whether it is sent to the console if it can't be logged in a file,
    whether the **process ID** (**PID**) is included in the message. The facilities
    provide a means to divide messages into various areas according to what subsystem
    is involved, such as AUTH for authorization messages, CRON for scheduled jobs,
    KERN for kernel messages. Most software that uses the system log provides configuration
    items to control the options, files, and facilities it uses for its messages.
    In addition, and most important, are the levels of log messages, which determine
    how important a message is.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: Linux中的`rsyslog`系统日志设施提供了多种选项、设施和日志级别。这些选项控制消息记录时的行为，例如是否在无法将消息记录到文件时将其发送到控制台，是否在消息中包含**进程ID**（**PID**）。这些设施提供了一种根据相关子系统将消息分配到不同区域的方式，例如AUTH用于授权消息，CRON用于计划任务，KERN用于内核消息。大多数使用系统日志的软件都提供配置项来控制它们使用的选项、文件和设施。此外，最重要的是日志消息的级别，它们决定了消息的重要性。
- en: Log levels detail which messages, of the many that might be sent to the system
    log, actually get logged. This varies from the EMERG level, which only involves
    messages that essentially mean the system is unusable, down through ALERT (immediate
    action required), CRIT (critical), and ERR (errors) to WARN (warning conditions),
    NOTICE (normal but significant), INFO, and DEBUG. Setting the log level to any
    of the latter three can generate a significant number of entries and use a lot
    of disk space as well as requiring significant system overhead.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 日志级别详细说明了哪些消息会被记录到系统日志中，这些消息可能很多。日志级别从EMERG开始，表示系统基本无法使用，到ALERT（需要立即采取行动）、CRIT（关键）、ERR（错误）、WARN（警告条件）、NOTICE（正常但重要）、INFO和DEBUG。将日志级别设置为后面三种之一，可能会生成大量条目，占用大量磁盘空间，并且会增加系统开销。
- en: 'For that reason, there are some guidelines as to what should be logged:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，有一些指导原则，规定了应该记录哪些内容：
- en: Production systems should only log EMERG, CRIT, ALERT, ERR, and WARN levels.
    NOTICE, INFO, and DEBUG should never be logged on a production system unless absolutely
    necessary.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产系统只应记录EMERG、CRIT、ALERT、ERR和WARN级别的日志。除非绝对必要，否则不应在生产系统上记录NOTICE、INFO和DEBUG级别的日志。
- en: Development systems should log those levels mentioned in the previous point,
    along with NOTICE and perhaps INFO levels to provide information necessary to
    the software developers. DEBUG may also be used when necessary.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发系统应记录前一点提到的级别，以及NOTICE和可能的INFO级别，以提供开发人员所需的信息。在必要时也可以使用DEBUG级别。
- en: The idea is to provide the necessary information without unduly burdening a
    system. In particular, NOTICE, INFO and especially DEBUG levels can produce massive
    amounts of data that are generally unnecessary in a stable production system.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 其目的是提供必要的信息，同时不对系统造成过多负担。特别是NOTICE、INFO，尤其是DEBUG级别，可能会生成大量数据，这些数据在稳定的生产系统中通常是不必要的。
- en: Log data is frequently used to analyze how the system is being used, who accesses
    it, what activities are being performed, as well as to notify the administrator
    of things that need attention.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 日志数据经常用于分析系统的使用情况、谁在访问它、执行了哪些活动，并通知管理员需要关注的事项。
- en: Controlling the logs
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 控制日志
- en: Even production system logs will eventually grow to the point where they take
    up a significant amount of disk space, and this is even more of a problem with
    development systems that follow the preceding guidelines. One of the administrator's
    duties is to determine how much log data should be kept, and manage the files
    appropriately.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是生产系统的日志，最终也会增长到占用大量磁盘空间的程度，遵循前述指南的开发系统问题更为严重。管理员的职责之一是确定应该保留多少日志数据，并适当地管理这些文件。
- en: All distributions, and Debian is no exception, provide by default a job or jobs
    that run periodically to close the current log files, mark them with a cycle number,
    and open new, clean files for logging. In Debian, this is provided by the `logrotate`
    package. While this package is primarily concerned with log files, it can be used
    for any other files that grow constantly and need to be cycled. Detailed documentation
    is provided with the package, but the basic idea is that each log file is checked
    and if it is over a certain size, it is closed. Then all cycles of the log file
    are renamed, and if necessary, those over a certain age or cycle number are deleted.
    A new log file is then created to continue logging.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的发行版，包括Debian，默认提供一个或多个定期运行的任务，用来关闭当前的日志文件，标记其周期号，并为日志记录打开新的、干净的文件。在Debian中，这由`logrotate`包提供。虽然这个包主要处理日志文件，但它也可以用于任何其他不断增长并需要周期性处理的文件。该包提供了详细的文档，但基本的思路是：每个日志文件都会被检查，如果它超过了某个大小，就会关闭。然后，所有日志文件的周期会被重命名，如果需要，超出一定年龄或周期号的日志文件会被删除。接着会创建一个新的日志文件继续记录。
- en: You can configure how many cycles are kept, or even how old the cycles can be
    before they are deleted. The primary choice here is how long you wish to keep
    log entries. The defaults installed with each package reflect the experience of
    many administrators and are usually appropriate in most circumstances.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以配置保留多少个周期，甚至配置周期的最大年龄，超过该年龄的日志会被删除。这里的主要选择是你希望保留日志条目的时间。每个软件包安装时的默认值反映了许多管理员的经验，通常在大多数情况下是合适的。
- en: Monitoring the logs
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 日志监控
- en: So, does an administrator need to wade through all of the log entries daily?
    That would be an extremely tedious task, and is really not necessary. A number
    of packages exist in Debian that will scan the logs for certain conditions and
    email the results to the administrator for further checking and action. The most
    common is `logcheck`, which checks the latest log cycles against a database of
    entries that an administrator might be interested in. It then emails the important
    ones to the administrator for further checking. There are also packages that perform
    various analysis tasks, such as email statistics or HTTP access statistics, using
    the system logs often combined with other information sources. They may be found
    using the Debian package management search facilities.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，管理员是否需要每天逐一查看所有日志条目呢？那将是一个非常繁琐的任务，实际上并不必要。Debian中有许多软件包可以扫描日志中的特定条件，并通过邮件将结果发送给管理员以便进一步检查和处理。最常见的是`logcheck`，它会检查最新的日志周期，并与一个管理员可能感兴趣的条目数据库进行对比。然后，它会将重要的条目通过邮件发送给管理员进行进一步检查。还有一些软件包可以执行各种分析任务，比如邮件统计或HTTP访问统计，这些任务使用系统日志，通常会与其他信息来源结合使用。你可以通过Debian的包管理搜索功能找到它们。
- en: Tip
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: What package you use to check the logs, or even whether you use your own scripts
    based on string searches, is not important. The critical thing is to check the
    logs regularly. They can give you timely warning of impending hardware issues,
    software instabilities, programming problems, and attacks on your system.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你使用什么软件包来检查日志，或者是否使用自己的基于字符串搜索的脚本并不重要。关键是要定期检查日志。日志可以及时警告你即将发生的硬件问题、软件不稳定、编程问题和系统攻击。
- en: Display managers
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示管理器
- en: Straight servers, as opposed to development servers, generally do not require
    a display manager. Of course, development servers and those servers that do provide
    the ability to log in to a managed display environment do require both a display
    manager and a window manager. The former handles the creation and security of
    the X-Windows display environment and resources required, while the latter handles
    the actual desktop environment presented to the user.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 与开发服务器不同，普通服务器通常不需要显示管理器。当然，开发服务器以及那些提供登录到受管显示环境的服务器需要显示管理器和窗口管理器。前者负责X-Windows显示环境及其所需资源的创建和安全性，而后者则负责呈现给用户的实际桌面环境。
- en: There are several major environments, each with its associated Display and Window
    Managers. The two major environments are GNOME and KDE. Both support a variety
    of graphic toolkit libraries, so that most applications that run in one will run
    in the other, provided the necessary services are available. These services are
    usually installed as a dependency when the application is installed if you don't
    install the basic meta package for either GNOME or KDE. So if, for example, you
    like the `KcacheGrind` tool for browsing program profiling data, but are using
    GNOME, you can go ahead and install and use it under GNOME. It will work fine.
    Likewise, if you prefer the **K Display Manager** (**KDM**) that comes with KDE
    to the **GNOME Display Manager** (**GDM**) provided by GNOME, it will work just
    as well.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个主要的桌面环境，每个环境都有其关联的显示和窗口管理器。两个主要的环境是 GNOME 和 KDE。它们都支持多种图形工具包库，因此在一个环境中运行的绝大多数应用程序也能在另一个环境中运行，只要必要的服务已安装。这些服务通常会在安装应用程序时作为依赖项自动安装，前提是你没有安装
    GNOME 或 KDE 的基础元包。所以，例如，如果你喜欢 `KcacheGrind` 工具来浏览程序性能数据，但正在使用 GNOME，你可以继续安装并在
    GNOME 下使用它，它会正常工作。同样，如果你更喜欢 KDE 附带的 **K Display Manager** (**KDM**) 而不是 GNOME
    提供的 **GNOME Display Manager** (**GDM**)，它也会同样有效。
- en: Given this interoperability, why choose one over the other? It is mostly a matter
    of personal preference. As mentioned in the first chapter, KDE is usually preferred
    by European users, while GNOME is more of an American preference. Our main concern
    in this section will be where to find configuration files or applications for
    each.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于这种互操作性，为什么要选择一个而不是另一个呢？这主要是个人喜好的问题。如第一章所述，KDE 通常更受欧洲用户的青睐，而 GNOME 则更多是美国用户的偏好。本节的主要关注点将是在哪里找到每个桌面环境的配置文件或应用程序。
- en: Where did my desktop go?
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我的桌面去哪儿了？
- en: Both GNOME and KDE, like the new Windows 8, have abandoned the old desktop metaphor
    for a more activity or task oriented look. It takes some getting used to and can
    be disconcerting at first. Covering the changes from the old look to the new would
    take a book for each Desktop Manager! However, the home sites for both KDE and
    GNOME provide tutorials and documentation to help you get started. If you prefer
    the older desktop metaphor, both GNOME and KDE provide ways to set this up as
    well.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: GNOME 和 KDE，像新版本的 Windows 8 一样，都放弃了传统的桌面隐喻，采用了更注重活动或任务导向的界面。这需要一些适应，刚开始可能会让人不太习惯。要涵盖从旧界面到新界面的变化，每个桌面管理器至少需要一本书！然而，KDE
    和 GNOME 的官方网站提供了教程和文档，帮助你快速上手。如果你更喜欢传统的桌面隐喻，GNOME 和 KDE 也提供了相应的设置方式。
- en: GNOME
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GNOME
- en: The current GNOME release in Debian 7 is 3.4\. If you install the `gnome` meta
    package, all major GNOME applications as well as the window and display managers,
    will be installed. Configuration is pretty straightforward, as the user menu provides
    a System Settings application to access the major settings of your workspace in
    order to alter how it looks and feels.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 7 中当前的 GNOME 版本是 3.4。如果安装 `gnome` 元包，所有主要的 GNOME 应用程序以及窗口和显示管理器都会被安装。配置过程相当简单，因为用户菜单提供了一个“系统设置”应用程序，可以访问工作区的主要设置，以便更改其外观和感觉。
- en: Modifying the GNOME login screen, GDM3, if you don't want the default behavior,
    requires manual editing of `/etc/gdm3/greeter.gsettings` and `/etc/gdm3/daemon.conf`
    as the root user. Then execute the `dpkg-reconfigure gdm3` command.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不想使用默认行为，修改 GNOME 登录屏幕 GDM3 需要以 root 用户身份手动编辑 `/etc/gdm3/greeter.gsettings`
    和 `/etc/gdm3/daemon.conf`，然后执行 `dpkg-reconfigure gdm3` 命令。
- en: Note
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Part of the reason for this is that GDM is being integrated more fully into
    GNOME, and is being moved to the `dconf` settings framework from the old GNOME
    2 `gconf` based settings. At some point, the GNOME control center should provide
    the appropriate utility but, at this time, there is no official GDM3 setup utility.
    An unofficial utility called `gdm3`setup exists, but has not found its way into
    Debian, yet.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个原因是 GDM 正在更完全地集成到 GNOME 中，并从旧版 GNOME 2 使用的 `gconf` 设置框架迁移到新的 `dconf` 设置框架。到某个时刻，GNOME
    控制中心应该会提供适当的工具，但目前没有官方的 GDM3 设置工具。虽然有一个名为 `gdm3`setup 的非官方工具存在，但它尚未被加入到 Debian
    中。
- en: KDE
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KDE
- en: The current KDE release for Debian 7 is 4.8.4\. The `kde-full` meta package
    will provide all KDE applications as well as the window and display managers.
    The KDE user environment provides a System Settings application just as GNOME
    does, but it is a bit more comprehensive as it includes the ability to configure
    KDM, the display manager responsible for the login screen. In fact, because of
    this, some administrators use KDM as the display manager, even though the default
    session may be GNOME.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 当前 Debian 7 的 KDE 版本为 4.8.4。`kde-full` 元包将提供所有 KDE 应用程序以及窗口和显示管理器。KDE 用户环境提供了一个与
    GNOME 类似的系统设置应用程序，但它更为全面，因为它包括配置 KDM 的功能，KDM 是负责登录屏幕的显示管理器。事实上，由于这一点，一些管理员会使用
    KDM 作为显示管理器，尽管默认会话可能是 GNOME。
- en: Other desktops
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他桌面
- en: XFCE and LXDE are the most common alternatives to KDE or GNOME, although there
    are others. Neither one provides a display manager for login screens, although
    LXDE recommends LightDM, a lightweight display manager. XFCE and LXDE (as well
    as LightDM) retain the old desktop metaphor, and are designed to place a minimal
    load on the system, making them appropriate for older hardware.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: XFCE 和 LXDE 是最常见的 KDE 或 GNOME 替代品，尽管也有其他选择。它们都没有提供用于登录屏幕的显示管理器，尽管 LXDE 推荐使用
    LightDM 这一轻量级显示管理器。XFCE 和 LXDE（以及 LightDM）保留了传统的桌面隐喻，旨在减少对系统的负担，因此它们适合老旧硬件。
- en: Note
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: During the time *Linus Torvalds* abandoned GNOME3, he ran XFCE.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在*Linus Torvalds* 放弃 GNOME3 期间，他使用了 XFCE。
- en: Like both GNOME and KDE, both XFCE and LXDE provide a system settings application
    to control the look and feel. LightDM also provides a graphical settings utility.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 和GNOME及KDE一样，XFCE和LXDE也提供了一个系统设置应用程序，用于控制外观和感觉。LightDM还提供了一个图形化设置工具。
- en: Showing your best face
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展示你的最佳形象
- en: Take time to at least look into the settings for your chosen display manager.
    Unless you are running a server that never sees a graphical login, this is the
    first and last thing your users see. You may also want to look into appropriate
    backgrounds for your users' desktops. They don't need to be fancy but they do
    make an impression.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 花时间至少了解一下你选择的显示管理器的设置。除非你在运行一个永远不会显示图形登录的服务器，否则这是用户首先和最后看到的内容。你可能还想了解适合用户桌面的背景。它们不需要过于花哨，但确实会留下印象。
- en: Summary
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The tasks of an administrator are many and include the responsibility for what
    services the system provides (especially how they are started and shut down),
    network configuration, system backup, filesystem space management, system operation
    (system logs), and providing the face the system shows to the world. We've covered
    some of the issues in each of these areas, although comprehensive coverage of
    any of the subjects could take several books. One subject not covered here that
    must be covered in depth is basic system security. We will cover this in the next
    chapter.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 管理员的任务繁多，包括负责系统提供的服务（特别是如何启动和关闭它们）、网络配置、系统备份、文件系统空间管理、系统操作（系统日志）以及提供系统对外展示的界面。我们已经涵盖了这些领域中的一些问题，尽管对任何一个主题的全面覆盖可能需要几本书的篇幅。这里没有涉及的一个主题是基础的系统安全性，我们将在下一章详细讨论。
