- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Disaster Recovery, Diagnostics, and Troubleshooting
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 灾难恢复、诊断和故障排除
- en: In this chapter, you will learn how to do a system backup and restore in a disaster
    recovery scenario, and how to **diagnose** and **troubleshoot** a common array
    of problems. These are skills that each Linux system administrator needs to have
    if they wish to be prepared for worst-case scenarios such as power outages, theft,
    or hardware failure. The world’s IT backbone runs on Linux and we need to be prepared
    for anything that life throws at us.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何在灾难恢复场景中进行系统备份和恢复，以及如何**诊断**和**排除故障**常见的一系列问题。这些是每个Linux系统管理员都需要掌握的技能，只有掌握了这些技能，他们才能为停电、盗窃或硬件故障等最坏情况做好准备。全球IT的支柱运行在Linux上，我们需要为生活中任何突发事件做好准备。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Planning for disaster recovery
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灾难恢复规划
- en: Backing up and restoring the system
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统备份与恢复
- en: Introducing common Linux diagnostic tools for troubleshooting
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍常用的Linux诊断工具来进行故障排除
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: No special technical requirements are needed for this chapter, just a working
    installation of Linux on your system or even two different working systems on
    your local network for some of the examples used. Ubuntu and Fedora are equally
    suitable for this chapter’s exercises, but in this chapter, we’ll be using Ubuntu
    22.04.2 LTS Server and Desktop editions.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章不需要任何特殊的技术要求，只需系统中有Linux操作系统的正常安装，或者在本地网络中有两台不同的工作系统来进行一些示例。Ubuntu和Fedora都非常适合本章的练习，但在本章中，我们将使用Ubuntu
    22.04.2 LTS服务器版和桌面版。
- en: Planning for disaster recovery
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 灾难恢复规划
- en: Managing risks is an important asset for every business or individual. The responsibility
    of this is tremendous for everyone involved in system administration. For all
    businesses, managing risks should be part of a wider **risk management strategy**.
    There are various types of risks in IT, starting from natural hazards directly
    impacting data centers or business locations, all the way up to cyber security
    threats. IT’s footprint inside a company has exponentially grown in the last decade.
    Nowadays, there is no activity that does not involve some sort of IT operations
    being behind it, be it inside small businesses, big corporations, government agencies,
    or the health and education public sectors, just to give a few examples. Each
    activity is unique in its own way, so it needs a specific type of assessment.
    Unfortunately, with regard to the information security field, risk management
    has largely evolved into a one-size-fits-all practice, based on checklists that
    should be implemented by IT management. Let’s begin with a brief introduction
    to risk management before moving on to learning how we can assess risk.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 管理风险是每个企业或个人的重要资产。对于参与系统管理的每个人来说，这项责任是巨大的。对于所有企业而言，风险管理应成为更广泛的**风险管理策略**的一部分。IT领域中存在各种风险，从直接影响数据中心或企业位置的自然灾害，到网络安全威胁。过去十年，IT在公司内部的影响力呈指数级增长。如今，没有任何活动不涉及某种形式的IT操作，无论是在小型企业、大型公司、政府机构，还是健康和教育公共部门，仅举几例。每项活动都有其独特性，因此需要进行特定类型的评估。不幸的是，在信息安全领域，风险管理已发展成一种“放之四海而皆准”的实践，依赖于IT管理实施的检查清单。在我们开始学习如何评估风险之前，先简要介绍一下风险管理。
- en: A brief introduction to risk management
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 风险管理简介
- en: What is **risk management**? In a nutshell, it is comprised of specific operations
    that are set to mitigate any possible threat that could impact the overall continuity
    of a business. The risk management process is crucial for every IT department.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是**风险管理**？简而言之，它包括一系列具体操作，旨在减轻任何可能影响企业整体持续性的威胁。风险管理过程对每个IT部门来说至关重要。
- en: Risk management frameworks initially arose in the United States due to the **Federal
    Information Systems Modernization Act** (**FISMA**) laws, which started in 2002\.
    This was the time when the United States **National Institute of Standards and
    Technology** (**NIST**) began to create new standards and methods for cyber security
    assessments among all US government agencies. Therefore, security certifications
    and compliances are of utmost importance for every Linux distribution provider
    that sees itself as a worthy competitor in the corporate and governmental space.
    Similar to the US certification bodies discussed previously, there are other agencies
    in the UK and Russia that develop specific security certifications. In this respect,
    all major Linux distributions from Red Hat, SUSE, and Canonical have certifications
    from NIST, the UK’s **National Cyber Security Centre** (**NCSC**), or Russia’s
    **Federal Service for Technic and Export** **Control** (**FSTEC**).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 风险管理框架最初在美国出现，源于**联邦信息系统现代化法案**（**FISMA**）法律，该法律于2002年开始实施。此时，美国**国家标准与技术研究院**（**NIST**）开始为所有美国政府机构创建新的网络安全评估标准和方法。因此，安全认证和合规性对每一个在企业和政府领域自视为有竞争力的Linux发行版提供商至关重要。与之前讨论的美国认证机构类似，英国和俄罗斯也有其他机构开发特定的安全认证。在这方面，所有主要的Linux发行版，如Red
    Hat、SUSE和Canonical，都获得了NIST、英国**国家网络安全中心**（**NCSC**）或俄罗斯**技术与出口控制联邦服务**（**FSTEC**）的认证。
- en: 'The risk management framework, according to NIST SP 800-37r2 (see the official
    NIST website at [https://csrc.nist.gov/publications/detail/sp/800-37/rev-2/final](https://csrc.nist.gov/publications/detail/sp/800-37/rev-2/final)),
    has seven steps, starting with preparing for the framework’s execution, up to
    monitoring the organization’s systems on a daily basis. We will not discuss those
    steps in detail; instead, we will provide a link at the end of this chapter for
    NIST’s official documentation. In a nutshell, the risk management framework is
    comprised of several important branches, such as the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 根据NIST SP 800-37r2的风险管理框架（详见官方NIST网站：[https://csrc.nist.gov/publications/detail/sp/800-37/rev-2/final](https://csrc.nist.gov/publications/detail/sp/800-37/rev-2/final)），有七个步骤，从为框架的执行做准备开始，到每天监控组织系统。我们将不会详细讨论这些步骤，而是在本章结束时提供NIST官方文档的链接。简而言之，风险管理框架包括多个重要的分支，如下所示：
- en: '**Inventory**: A thorough inventory of all available systems that are on-premises,
    and a list of all software solutions'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**库存**：对所有本地可用系统进行全面清单梳理，并列出所有软件解决方案'
- en: '**System categorization**: Assesses the impact level for each data type that’s
    used with regard to availability, integrity, and confidentiality'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统分类**：评估每种数据类型在可用性、完整性和保密性方面的影响级别'
- en: '**Security control**: Subject to detailed procedures with regard to hundreds
    of computer systems’ security – a compendium of NIST security controls can be
    found under SP800-53r4 (the following is a link to the official NIST website:
    [https://csrc.nist.gov/publications/detail/sp/800-53/rev-4/final](https://csrc.nist.gov/publications/detail/sp/800-53/rev-4/final))'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全控制**：涉及数百个计算机系统安全的详细程序——NIST安全控制汇编可以在SP800-53r4中找到（以下是官方NIST网站链接：[https://csrc.nist.gov/publications/detail/sp/800-53/rev-4/final](https://csrc.nist.gov/publications/detail/sp/800-53/rev-4/final)）'
- en: '**Risk assessment**: A series of steps that cover threat source identification,
    vulnerability identification, impact determination, information sharing, risk
    monitoring, and periodical updates'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险评估**：一系列步骤，包括威胁源识别、漏洞识别、影响评估、信息共享、风险监控和定期更新'
- en: '**System security plan**: A report based on every security control and how
    future actions are assessed, including their implementation and effectiveness'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统安全计划**：基于每项安全控制的报告，评估未来行动，包括实施及其有效性'
- en: '**Certification, accreditation, assessment, and authorization**: The process
    of reviewing security assessments and highlighting security issues and effective
    resolutions that are detailed in a future plan of action'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**认证、批准、评估和授权**：审查安全评估并突出安全问题及有效解决方案的过程，这些内容将在未来的行动计划中详细说明'
- en: '**Plan of action**: A tool that’s used to track security weaknesses and apply
    the correct response procedures'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**行动计划**：用于跟踪安全弱点并应用正确响应程序的工具'
- en: 'There are many types of risks when it comes to information technology, including
    hardware failure, software errors, spam and viruses, human error, and natural
    disasters (fires, floods, earthquakes, hurricanes, and so on). There are also
    risks of a more criminal nature, including security breaches, employee dishonesty,
    corporate espionage, or anything else that could be considered a cybercrime. These
    risks can be addressed by implementing an appropriate risk management strategy.
    As a basis, such a strategy should have five distinct steps:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 信息技术领域存在许多类型的风险，包括硬件故障、软件错误、垃圾邮件和病毒、人为错误，以及自然灾害（火灾、洪水、地震、飓风等）。还有一些更具犯罪性质的风险，包括安全漏洞、员工不诚实、企业间谍活动或任何可以被视为网络犯罪的行为。这些风险可以通过实施适当的风险管理策略来解决。作为基础，这样的策略应该包括五个明确的步骤：
- en: '**Identifying risk**: Identifying possible threats and vulnerabilities that
    could impact your ongoing IT operations.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**识别风险**：识别可能影响你正在进行的IT操作的威胁和漏洞。'
- en: '**Analyzing risk**: Deciding how big or small it is, based on thorough studies.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**分析风险**：根据深入研究判断风险的大小。'
- en: '**Evaluating risk**: Evaluating the impact that it could have on your operations;
    the immediate action is to respond to the risk based on the impact it has. This
    calls for real actions to be performed at every level of your operations.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**评估风险**：评估风险可能对你的运营产生的影响；立即采取行动，根据风险的影响做出响应。这要求在你运营的各个层级采取实际行动。'
- en: '**Responding to risk**: Activating your **disaster recovery plans** (**DRPs**),
    combined with strategies for prevention and mitigation.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**应对风险**：启动你的**灾难恢复计划**（**DRPs**），结合预防和缓解策略。'
- en: '**Monitoring and reviewing risk**: Triggering a drastic monitoring and reviewing
    strategy will ensure that all the IT teams know how to respond to the risk and
    have the tools and abilities to isolate it and enforce the company’s infrastructure.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**监控与审查风险**：触发一个严密的监控与审查策略，将确保所有IT团队知道如何应对风险，并且具备隔离风险的工具和能力，保障公司基础设施的安全。'
- en: Risk assessment is extremely important to any business and should be taken very
    seriously by IT management. Now that we’ve tackled some concepts of risk management,
    it is time to explain what it really is.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 风险评估对于任何企业都极其重要，IT管理层应当非常重视。现在我们已经探讨了一些风险管理的概念，接下来该解释一下它到底是什么。
- en: Risk calculation
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 风险计算
- en: '**Risk assessment**, also known as **risk calculation** or **risk analysis**,
    refers to the action of finding and calculating solutions to possible threats
    and vulnerabilities. The following are some basic terms you should know when you
    talk about risk impact:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**风险评估**，也称为**风险计算**或**风险分析**，指的是寻找并计算可能威胁和漏洞的解决方案。以下是你在讨论风险影响时应了解的一些基本术语：'
- en: The **annual loss expectancy** (**ALE**) defines the loss that’s expected in
    1 year.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**年损失预期**（**ALE**）定义了1年内预计的损失。'
- en: The **single loss expectancy** (**SLE**) represents how much loss is expected
    at any given time.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单次损失预期**（**SLE**）表示在任何给定时刻预期的损失金额。'
- en: The **annual rate of occurrence** (**ARO**) is the likeliness of a risky event
    occurring within 1 year.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**年发生率**（**ARO**）是指某个风险事件在1年内发生的可能性。'
- en: The **risk calculation formula** is *SLE x ARO = ALE*. There is a monetary value
    that each element of the formula will provide, so the final result is also expressed
    as a monetary value. This is a formula that is useful to know.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险计算公式**是 *SLE x ARO = ALE*。公式中的每个元素都有一个货币值，因此最终结果也以货币值表示。这个公式是非常有用的。'
- en: The **mean time between failures** (**MTBF**) is used to measure the time between
    anticipated and reparable failures.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平均故障间隔时间**（**MTBF**）用于衡量预期的可修复故障之间的时间间隔。'
- en: The **mean time to failure** (**MTTF**) is the average time the system can operate
    before experiencing an irreparable failure.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平均故障时间**（**MTTF**）是指系统在发生无法修复的故障之前能够运行的平均时间。'
- en: The **mean time to restore** (**MTTR**) measures the time needed to repair an
    affected system.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平均修复时间**（**MTTR**）衡量修复受影响系统所需的时间。'
- en: The **recovery time objective** (**RTO**) represents the maximum time that’s
    allocated for downtime.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复时间目标**（**RTO**）表示为停机分配的最大时间。'
- en: The **recovery point objective** (**RPO**) defines the time when a system needs
    to be restored.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复点目标**（**RPO**）定义了系统需要恢复的时间。'
- en: 'Knowing those terms will help you understand risk assessments so that you can
    perform a well-documented assessment if or when needed. Risk assessment is based
    on two major types of actions (or better said, strategies):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 了解这些术语将帮助你理解风险评估，以便在需要时能够进行有据可依的评估。风险评估基于两种主要的行动类型（或更准确地说，是战略）：
- en: '**Proactive actions**:'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主动措施**：'
- en: '**Risk avoidance**: Based on risk identification and finding a quick solution
    to avoid its occurrence'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险回避**：基于风险识别并找到快速解决方案以避免其发生。'
- en: '**Risk mitigation**: Based on actions taken to reduce the occurrence of a possible
    risk'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险缓解**：基于采取措施减少可能风险发生的概率。'
- en: '**Risk transference**: Transferring the risk’s possible outcome with an external
    entity'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险转移**：将风险的可能结果转移给外部实体。'
- en: '**Risk deterrence**: Based on specific systems and policies that should discourage
    any attacker from exploiting the system'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险威慑**：基于特定的系统和政策，应该使任何攻击者不敢利用该系统。'
- en: '**Non-active actions**:'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非主动措施**：'
- en: '**Risk acceptance**: Accepting the risk if the other proactive actions could
    exceed the cost of the harm that’s done by the risk'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**风险接受**：如果其他主动措施可能超过由风险带来的损害成本，则接受该风险。'
- en: The strategies described here can be applied to the risk associated with generic,
    on-premises computing, but nowadays, cloud computing is slowly and surely taking
    over the world. So, how could these risk strategies apply to cloud computing?
    In cloud computing, you use the infrastructure of a third party, but with your
    own data. Even though we will start discussing Linux in the cloud in [*Chapter
    14*](B19682_14.xhtml#_idTextAnchor299), *Short Introduction to* *Computing*, there
    are some concepts that we will introduce now. As we mentioned earlier, the cloud
    is taking the infrastructure operations from your on-premises environment to a
    larger player, such as Amazon, Microsoft, or Google. This could generally be seen
    as outsourcing. This means that some risks that were a threat when you were running
    services on-premises are now transferred to third parties.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这里描述的策略可以应用于与传统本地计算相关的风险，但如今，云计算正在缓慢而稳步地接管世界。那么，这些风险策略如何应用于云计算呢？在云计算中，你使用第三方的基础设施，但使用的是你自己的数据。尽管我们将在[*第14章*](B19682_14.xhtml#_idTextAnchor299)中开始讨论云中的Linux，*计算简介*，但有些概念我们现在就可以介绍。如前所述，云计算将基础设施操作从本地环境转移到更大的参与者，如Amazon、Microsoft或Google。这通常可以视为外包。这意味着，当你在本地运行服务时，一些曾是威胁的风险现在已经转移到了第三方。
- en: 'There are three major cloud paradigms that are now buzzwords all over technology
    media:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有三个主要的云计算范式已经成为技术媒体的流行词：
- en: '**Software as a service** (**SaaS**): This is a software solution for companies
    looking to reduce IT costs and rely on software subscriptions. Some examples of
    SaaS solutions are **Slack**, **Microsoft 365**, **Google Apps**, and **Dropbox**,
    among others.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件即服务**（**SaaS**）：这是一种为寻求减少IT成本并依赖软件订阅的公司提供的软件解决方案。一些SaaS解决方案的例子包括**Slack**、**Microsoft
    365**、**Google Apps**、**Dropbox**等。'
- en: '**Platform as a service** (**PaaS**): The way you get software applications
    to your clients using another’s infrastructure, runtimes, and dependencies is
    also known as an application platform. This can be on a public cloud, on a private
    cloud, or on a hybrid solution. Some examples of PaaS are **Microsoft Azure**,
    **AWS Lambda**, **Google App Engine**, **SAP Cloud Platform**, **Heroku**, and
    **Red** **Hat OpenShift**.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台即服务**（**PaaS**）：通过使用他人的基础设施、运行时和依赖项向客户提供软件应用程序的方式也被称为应用平台。这可以是在公共云、私有云或混合解决方案上。一些PaaS的例子包括**Microsoft
    Azure**、**AWS Lambda**、**Google App Engine**、**SAP Cloud Platform**、**Heroku**和**Red**
    **Hat OpenShift**。'
- en: '**Infrastructure as a service** (**IaaS**): These are services that are run
    online and provide high-level **application programming interfaces** (**APIs**).
    A notable example is **OpenStack**.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施即服务**（**IaaS**）：这些是在线运行并提供高级**应用程序编程接口**（**APIs**）的服务。一个著名的例子是**OpenStack**。'
- en: Details about all these technologies will be provided in [*Chapter 14*](B19682_14.xhtml#_idTextAnchor299),
    *Short Introduction to* *Computing*, but for this chapter’s purpose, we have provided
    enough information. Major risks regarding cloud computing are concerned with data
    integration and compatibility. Those are among the risks that you must still overcome
    since most of the other risks are no longer your concern as they are transferred
    to the third party managing the infrastructure.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 关于所有这些技术的详细信息将提供在[*第14章*](B19682_14.xhtml#_idTextAnchor299)，《计算简短介绍》中，但为了本章的目的，我们已经提供了足够的信息。关于云计算的主要风险与数据集成和兼容性相关。这些是你必须克服的风险，因为其他大多数风险已经不再是你的关注点，因为它们已经转移给了管理基础设施的第三方。
- en: Risk calculation can be managed in different ways, depending on the IT scenario
    a company uses. When you’re using the on-premises scenario and you’re managing
    all the components in-house, risk assessments become quite challenging. When you’re
    using the IaaS, PaaS, and SaaS scenarios, risk assessment becomes less challenging
    as responsibilities are gradually transferred to an external entity.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 风险计算可以通过不同的方式进行管理，取决于公司使用的IT场景。当你使用本地部署场景并管理所有组件时，风险评估变得相当具有挑战性。当你使用IaaS、PaaS和SaaS场景时，风险评估变得较为轻松，因为责任逐步转移到外部实体。
- en: Risk assessment should always be taken seriously by any individual concerned
    with the safety of their network and systems and by any IT manager. This is when
    a DRP comes into action. The foundation of a good DRP and strategy is having an
    effective risk assessment.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 风险评估应该始终被任何关心其网络和系统安全的个人以及任何IT经理认真对待。这时，灾难恢复计划（DRP）便开始发挥作用。一个好的DRP和策略的基础是进行有效的风险评估。
- en: Designing a DRP
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计灾难恢复计划（DRP）
- en: A DRP is structured around the steps that should be taken when an incident occurs.
    In most cases, the DRP is part of a **business continuity plan**. This determines
    how a company should continue to operate based on a functioning infrastructure.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 灾难恢复计划（DRP）围绕在事件发生时应采取的步骤进行结构化。在大多数情况下，DRP是**业务连续性计划**的一部分。它决定了公司如何在一个正常运作的基础设施下继续运营。
- en: Every DRP needs to start from an accurate **hardware inventory**, followed by
    a **software applications inventory** and a separate **data inventory**. The most
    important part of this is the strategy that’s designed to back up all the information
    that’s used.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 每个灾难恢复计划（DRP）需要从准确的**硬件清单**开始，然后是**软件应用清单**和单独的**数据清单**。其中最重要的是设计一个策略，备份所有使用的信息。
- en: In terms of the hardware that’s used, there must be a clear policy for standardized
    hardware. This will ensure that faulty hardware can easily be replaced. This kind
    of policy ensures that everything works and is optimized. Standardized hardware
    surely has good driver support, and this is very important in the Linux world.
    Nevertheless, using standardized hardware will tremendously limit practices such
    as **bring your own device** (**BYOD**), since employees only need to use the
    hardware provided by their employer. Using standardized hardware comes with using
    specific software applications that have been set up and configured by the company’s
    IT department, with limited input available from the user.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用的硬件方面，必须有明确的标准化硬件政策。这将确保故障硬件能够轻松更换。这样的政策确保了所有设备的正常运行并进行了优化。标准化硬件肯定有良好的驱动程序支持，这在Linux世界中非常重要。然而，使用标准化硬件会极大地限制**自带设备**（**BYOD**）等做法，因为员工只需使用雇主提供的硬件。使用标准化硬件意味着使用由公司IT部门设置和配置的特定软件应用，用户的输入受到限制。
- en: The IT department’s responsibility is huge, and it plays an important role in
    designing the **IT recovery strategies** as part of a DRP. Key tolerances for
    downtime and loss of data should be defined based on the minimal acceptable RPO
    and RTO.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: IT部门的责任重大，它在设计**IT恢复策略**作为灾难恢复计划（DRP）的一部分时，起着重要作用。停机时间和数据丢失的关键容忍度应该根据最小可接受的RPO和RTO来定义。
- en: Deciding on the **roles** regarding who is responsible for what is another key
    step of a good DRP. This way, the response time for implementing the plan will
    be dramatically reduced and everyone will know their own responsibilities in case
    any risks arise. In this case, having a good **communication strategy** is critical.
    Enforcing clear procedures for every level of the organizational pyramid will
    provide clear communication, centralized decisions, and a succession plan for
    backup personnel.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 确定**角色**，即谁负责什么，是制定良好DRP的另一个关键步骤。这样，实施计划的响应时间将大大缩短，每个人都会知道在出现风险时自己的责任。在这种情况下，拥有良好的**沟通策略**至关重要。为每个组织层级强制执行清晰的流程，将提供清晰的沟通、集中的决策和备份人员的继任计划。
- en: DRPs need to be thoroughly tested at least twice a year to prove their efficiency.
    Unplanned downtime and outages can negatively impact a business, both on-premises
    and in any multi-cloud environment. Being prepared for worst-case scenarios is
    important. Therefore, in the following sections, we will show you some of the
    best tools and practices for backing up and restoring a Linux system.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: DRP（灾难恢复计划）需要至少每年彻底测试两次，以证明其效率。计划外的停机和故障可能会对企业造成负面影响，无论是在本地环境还是在任何多云环境中。为最坏的情况做好准备非常重要。因此，在接下来的章节中，我们将向您展示一些最好的工具和实践，用于备份和恢复Linux系统。
- en: Backing up and restoring the system
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份和恢复系统
- en: Disasters can occur at any time. Risk is everywhere. In this respect, backing
    up your system is of utmost importance and needs to be done regularly. It is always
    better to practice good prevention than to recover from data loss and learn this
    the hard way.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 灾难可能随时发生，风险无处不在。在这方面，备份系统至关重要，并且需要定期进行。通常，预防比从数据丢失中恢复更为有效，而从中吸取教训的代价往往是沉重的。
- en: '**Backup** and **recovery** need to be done based on a well-thought-out strategy
    and need to take the RTO and RPO factors into consideration. The RTO should answer
    basic questions such as how fast to recover lost data and how this will affect
    the business operations, while the RPO should answer questions such as how much
    of your data you can afford to lose.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**备份**和**恢复**需要基于深思熟虑的策略，并且需要考虑RTO和RPO因素。RTO应该回答一些基本问题，比如恢复丢失数据的速度以及这将如何影响业务运营，而RPO应该回答像是您能承受丢失多少数据的问题。'
- en: 'There are different types and methods of backup. The following are some examples:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 备份有不同的类型和方法。以下是一些例子：
- en: '![Figure 10.1 – Backup methods and types](img/B19682_10_01.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.1 – 备份方法和类型](img/B19682_10_01.jpg)'
- en: Figure 10.1 – Backup methods and types
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1 – 备份方法和类型
- en: 'When doing a backup, keep the following rules in mind:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 进行备份时，请记住以下规则：
- en: The **321 rule** means that you should always have at least three copies of
    your data, with two copies on two different media at separate locations and one
    backup always being kept off-site (at a different geographical location). This
    is also known as the **rule of three**; it can be adapted to anything, such as
    312, 322, 311, or 323.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**321规则**意味着您应始终拥有至少三份数据副本，其中两份保存在不同介质上并存放在不同地点，而一份备份始终保存在异地（不同地理位置）。这也被称为**三分法则**；它可以适应任何情况，例如312、322、311或323。'
- en: '**Backup checking** is extremely relevant and is overlooked most of the time.
    It checks the data’s integrity and usefulness.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**备份检查**非常重要，但通常被忽视。它检查数据的完整性和有效性。'
- en: '**Clear and documented backup strategy and procedures** are beneficial to everyone
    in the IT team who is using the same practices.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清晰且有文档记录的备份策略和流程**对所有使用相同实践的IT团队成员都很有帮助。'
- en: In the next section, we will look at some well-known tools for full Linux system
    backups, starting with the ones that are integrated inside the operating system
    to third-party solutions that are equally suited for both home and enterprise
    use.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将介绍一些知名的全Linux系统备份工具，从操作系统内部集成的工具到同样适用于家庭和企业使用的第三方解决方案。
- en: Disk cloning solutions
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 磁盘克隆解决方案
- en: A good option for a backup is to clone the entire hard drive or several partitions
    that hold sensitive data. Linux offers a plethora of versatile tools for this
    job. Among those are the `dd` command, the `ddrescue` command, and the **Relax-and-Recover**
    (**ReaR**) software tool. Let’s look at these in detail in the following sections.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的备份选项是克隆整个硬盘或包含敏感数据的多个分区。Linux提供了许多多功能的工具来完成此任务。其中包括`dd`命令、`ddrescue`命令和**Relax-and-Recover**（**ReaR**）软件工具。接下来的章节中我们将详细介绍这些工具。
- en: The dd command
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: dd 命令
- en: One of the most well-known disk backup commands is the `dd` command. We discussed
    this previously in [*Chapter 6*](B19682_06.xhtml#_idTextAnchor124), *Working with
    Disks and Filesystems*. Let’s recap how it is used in a backup and restore scenario.
    The `dd` command is used to copy block by block, regardless of the filesystem
    type, from a source to a destination.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最著名的磁盘备份命令之一是 `dd` 命令。我们在[*第六章*](B19682_06.xhtml#_idTextAnchor124)，*磁盘与文件系统操作*中讨论过此命令。让我们回顾一下它在备份和恢复场景中的使用方式。`dd`
    命令用于按块复制数据，不管文件系统类型如何，从源设备到目标设备。
- en: Let’s learn how to clone an entire disk. We have a virtual machine on our system
    that has a 20 GB drive that we want to back up on a 128 GB USB pen drive. The
    procedures we are going to show you will work on bare metal too.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何克隆整个磁盘。我们系统上有一台虚拟机，配有一个 20 GB 的硬盘，我们想将其备份到一个 128 GB 的 USB 闪存驱动器上。我们将向您展示的操作同样适用于裸机环境。
- en: First, we will run the `sudo fdisk -l` command to verify that the disk sizes
    are correct. The output will show us information about both our local drive and
    the USB pen drive, among other information, depending on your system.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将运行 `sudo fdisk -l` 命令，以验证磁盘大小是否正确。输出将显示有关本地驱动器和 USB 闪存驱动器等信息，具体取决于您的系统。
- en: 'Now that we know what the sizes are and that the source can fit into the destination,
    we will proceed to cloning the entire virtual disk. We will clone the source disk,
    `/dev/vda`, to the destination disk, `/dev/sda` (the operation could take a while):'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经知道了磁盘的大小，并且源磁盘能够适配目标磁盘，我们将继续克隆整个虚拟磁盘。我们将源磁盘 `/dev/vda` 克隆到目标磁盘 `/dev/sda`（该操作可能需要一些时间）：
- en: '![Figure 10.2 – Using dd to clone an entire hard drive](img/B19682_10_02.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.2 – 使用 dd 克隆整个硬盘](img/B19682_10_02.jpg)'
- en: Figure 10.2 – Using dd to clone an entire hard drive
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.2 – 使用 dd 克隆整个硬盘
- en: 'The options shown in the preceding command are as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 前面命令中显示的选项如下：
- en: '`if=/dev/vda` represents the input file, which, in our case, is the source
    hard drive'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`if=/dev/vda` 代表输入文件，在我们的例子中是源硬盘'
- en: '`of=/dev/sda` represents the output file, which is the destination USB drive'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`of=/dev/sda` 代表输出文件，即目标 USB 驱动器'
- en: '`conv=noerror` represents the instruction that allows the command to continue
    ignoring errors'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`conv=noerror` 代表允许命令在出现错误时继续执行的指令'
- en: '`sync` represents the instruction to fill the input error blocks with zeros
    so that the data offset will always be synced'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sync` 代表一个指令，它将输入错误的块填充为零，以便数据偏移始终保持同步'
- en: '`status=progress` shows statistics about the transfer process'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`status=progress` 显示关于传输过程的统计信息'
- en: Please keep in mind that this operation could take a while to finish. On our
    system, it took 200 minutes to complete. We took the preceding screenshot while
    the operation was at the beginning. In the following section, we will show you
    how to use `ddrescue`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这个操作可能需要一段时间才能完成。在我们的系统上，它花费了 200 分钟才完成。我们在操作开始时拍摄了前面的截图。接下来的部分，我们将向您展示如何使用
    `ddrescue`。
- en: The ddrescue command
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ddrescue 命令
- en: The `ddrescue` command is yet another tool you can use to clone your disk. This
    tool copies from one device or file to another one, trying to copy only the good
    and healthy parts the first time. If your disk is failing, you might want to use
    `ddrescue` twice since, the first time, it will copy only the good sectors and
    map the errors to a destination file. The second time, it will copy only the bad
    sectors, so it is better to add an option for several read attempts just to be
    sure.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`ddrescue` 命令是另一个可以用来克隆磁盘的工具。此工具从一个设备或文件复制到另一个设备或文件，第一次会尽量只复制良好健康的部分。如果您的磁盘出现故障，您可能需要使用
    `ddrescue` 两次，因为第一次它只会复制好的扇区，并将错误映射到目标文件。第二次，它只会复制坏的扇区，因此最好添加多个读取尝试的选项，以确保操作的准确性。'
- en: 'On Ubuntu, the `ddrescue` utility is not installed by default. To install it,
    use the following `apt` command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 中，`ddrescue` 工具默认并未安装。要安装它，请使用以下 `apt` 命令：
- en: '[PRE0]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We will use `ddrescue` on the same system we used previously and clone the
    same drive. The command for this is as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用与之前相同的系统，克隆相同的硬盘。命令如下：
- en: '[PRE1]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output is as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下：
- en: '![Figure 10.3 – Using ddrescue to clone the hard drive](img/B19682_10_03.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.3 – 使用 ddrescue 克隆硬盘](img/B19682_10_03.jpg)'
- en: Figure 10.3 – Using ddrescue to clone the hard drive
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.3 – 使用 ddrescue 克隆硬盘
- en: We used the `ddrescue` command with the `--force` option to make sure that everything
    on the destination will be overwritten. This operation is time-consuming too,
    so be prepared for a lengthy wait. In our case, it took almost 1 hour to finish.
    Next, we will show you how to use another useful tool, the ReaR utility.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了 `ddrescue` 命令并加上 `--force` 选项，确保目标上的所有内容都会被覆盖。这个操作也非常耗时，所以请准备好等待较长时间。在我们的情况下，完成这一步几乎花了
    1 小时。接下来，我们将向你展示如何使用另一个有用的工具——ReaR 实用工具。
- en: Using ReaR
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 ReaR
- en: ReaR is a powerful disaster recovery and system migration tool written in Bash.
    It is used by enterprise-ready distributions such as RHEL and SLES, and can also
    be installed on Ubuntu. It was designed to be easy to use and set up. It is integrated
    with the local bootloader, with the `cron` scheduler, or monitoring tools such
    as **Nagios**. For more details on this tool, visit the official website at [http://relax-and-recover.org/about/](http://relax-and-recover.org/about/).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: ReaR 是一个强大的灾难恢复和系统迁移工具，使用 Bash 编写。它被像 RHEL 和 SLES 这样的企业级发行版使用，也可以安装在 Ubuntu
    上。它的设计目标是易于使用和设置。它与本地引导加载程序集成，支持 `cron` 调度程序，或像**Nagios**这样的监控工具。有关此工具的更多细节，请访问官方网站：[http://relax-and-recover.org/about/](http://relax-and-recover.org/about/)。
- en: 'To install it on Ubuntu, use the following command:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 上安装它，使用以下命令：
- en: '[PRE2]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Once the packages have been installed, you will need to know the location of
    the main configuration file, which is `/etc/rear/local.conf`, and all the configuration
    options should be written inside it. ReaR makes ISO files by default, but it also
    supports Samba (CIFS), USB, and NFS as backup destinations. Next, we will show
    you how to use ReaR to back up to a local NFS server.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完软件包后，你需要知道主配置文件的位置，即 `/etc/rear/local.conf`，所有的配置选项都应写在其中。ReaR 默认生成 ISO 文件，但它也支持将
    Samba（CIFS）、USB 和 NFS 作为备份目标。接下来，我们将展示如何使用 ReaR 备份到本地 NFS 服务器。
- en: Backing up to a local NFS server using ReaR
  id: totrans-105
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用 ReaR 备份到本地 NFS 服务器
- en: 'As an example, we will show you how to back up to an NFS server. As specified
    in the *Technical requirements* section, you would need to have at least two systems
    available on your network for this exercise: an NFS server set up on one of the
    machines (as a backup server) and a second system as the production machine to
    be backed up. ReaR should be installed on both of them. Perform the following
    steps:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，我们将向你展示如何备份到 NFS 服务器。根据*技术要求*部分，你需要至少在网络上有两台系统可用：一台机器上设置了 NFS 服务器（作为备份服务器），另一台作为需要备份的生产机器。ReaR
    应该安装在这两台机器上。请执行以下步骤：
- en: 'First, we must configure the NFS server accordingly (the operation is covered
    in [*Chapter 13*](B19682_13.xhtml#_idTextAnchor276), *Configuring Linux Servers*).
    For extensive information on setting up an NFS server, please refer to [*Chapter
    13*](B19682_13.xhtml#_idTextAnchor276); here, we only cover it briefly. The configuration
    file for NFS is `/etc/exports` and it stores information about the share’s location.
    Before you add any new information about the ReaR backup share’s location, add
    a new directory. We will consider the `/home/export/` directory for our NFS setup.
    Inside that directory, we will create a new one for our ReaR backups. The command
    to create the new directory is as follows:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们必须根据需要配置 NFS 服务器（相关操作在 [*第 13 章*](B19682_13.xhtml#_idTextAnchor276)，*配置
    Linux 服务器*中有介绍）。关于如何设置 NFS 服务器的详细信息，请参考 [*第 13 章*](B19682_13.xhtml#_idTextAnchor276)，这里我们仅做简要说明。NFS
    的配置文件是 `/etc/exports`，它存储了共享位置的信息。在添加任何新的 ReaR 备份共享位置之前，先添加一个新目录。我们将使用 `/home/export/`
    目录作为 NFS 设置的目录。在这个目录内，我们将为 ReaR 备份创建一个新的目录。创建新目录的命令如下：
- en: '[PRE3]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '/etc/exports file with your favorite editor and add a new line for the backup
    directory. The line should look like the following:'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用你喜欢的编辑器打开 `/etc/exports` 文件，并为备份目录添加新行。该行应该类似如下：
- en: '[PRE4]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Use your local network’s IP range, not the one we used.
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用你本地网络的 IP 范围，而不是我们使用的那个。
- en: '[PRE5]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Once the new line has been introduced, restart the NFS service and run the
    `exportfs` command using the `-``s` option:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦新增了新行，重启 NFS 服务并使用 `-``s` 选项运行 `exportfs` 命令：
- en: '[PRE6]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: OUTPUT=ISO
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: OUTPUT=ISO
- en: OUTPUT_URL=nfs://192.168.124.112/home/export/rear
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: OUTPUT_URL=nfs://192.168.124.112/home/export/rear
- en: BACKUP=NETFS
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: BACKUP=NETFS
- en: 'OUTPUT: The bootable image type, which, in our case, is ISO'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: OUTPUT：可引导镜像类型，在我们这里是 ISO
- en: '[PRE7]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`OUTPUT_URL`: The backup target, which can represent NFS, CIFS, FTP, RSYNC,
    or file'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`OUTPUT_URL`：备份目标，可以是 NFS、CIFS、FTP、RSYNC 或文件'
- en: '`BACKUP`: The backup method used, which, in our case, is `NETFS`, the default
    ReaR method'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BACKUP`：所使用的备份方法，在我们的案例中是 `NETFS`，这是 ReaR 的默认方法'
- en: '`BACKUP_URL`: The backup target’s location'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`BACKUP_URL`：备份目标的位置'
- en: 'Now, run the `mkbackup` command with the `-v` and `-``d` options:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用 `-v` 和 `-d` 选项运行 `mkbackup` 命令：
- en: '[PRE8]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The output will be large, so we will not show it to you here. The command will
    take a significant time to finish. Once it has finished, you can check the NFS
    directory to view its output. The backup should be in there.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将很大，因此我们在这里不展示它。该命令将需要较长时间才能完成。一旦完成，你可以检查 NFS 目录以查看其输出。备份应该就在其中。
- en: There are several files written on the NFS server. Among those, the one called
    `rear-neptune.iso` is the actual backup and the one that will be used in case
    a system restore is needed. There is also a file called `backup.tar.gz`, which
    contains all the files from our local machine.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在 NFS 服务器上写入了多个文件。其中名为 `rear-neptune.iso` 的文件是实际的备份文件，将在需要恢复系统时使用。另外，还有一个名为
    `backup.tar.gz` 的文件，包含了我们本地机器上的所有文件。
- en: Important note
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: The naming convention of ReaR is as follows. The name will consist of the term
    `rear-`, followed by the system’s hostname and the `.iso` extension. Our system’s
    hostname is `neptune`, which is why the backup file is called `rear-neptune.iso`
    in our case.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: ReaR 的命名约定如下。名称将由术语 `rear-` 开头，后接系统的主机名以及 `.iso` 扩展名。我们的系统主机名是 `neptune`，因此备份文件在我们的情况下被命名为
    `rear-neptune.iso`。
- en: Once the backup has been written on the NFS server, you will be able to restore
    the system by using a USB disk or DVD with the ISO image that was written on the
    NFS server.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦备份已写入 NFS 服务器，你将能够使用 USB 磁盘或带有 ISO 镜像的 DVD 来恢复系统，这个 ISO 镜像已写入 NFS 服务器。
- en: Backing up to USB using ReaR
  id: totrans-130
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用 ReaR 进行备份到 USB
- en: 'There is also the option of directly backing up on the USB disk. Here are the
    steps to be followed:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个直接备份到 USB 磁盘的选项。以下是需要遵循的步骤：
- en: 'Insert a disk into the USB port and format it by using the following command:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将磁盘插入 USB 端口并使用以下命令格式化它：
- en: '[PRE9]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The command will take a significant time to complete. The output is as follows:'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该命令将需要较长时间才能完成。输出如下：
- en: '![Figure 10.4 – Formatting the USB disk with ReaR](img/B19682_10_04.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.4 – 使用 ReaR 格式化 USB 磁盘](img/B19682_10_04.jpg)'
- en: Figure 10.4 – Formatting the USB disk with ReaR
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – 使用 ReaR 格式化 USB 磁盘
- en: 'Now, we need to modify the `/etc/rear/local.conf` file and adapt it so that
    it uses the USB as the backup destination. The new lines we will add should look
    as follows:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要修改 `/etc/rear/local.conf` 文件并进行调整，使其使用 USB 作为备份目标。我们将添加的新的行应该如下所示：
- en: '[PRE10]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To understand the last line of code, you can run the following command:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了理解最后一行代码，你可以运行以下命令：
- en: '[PRE11]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure 10.5 – Checking the URL location from the ReaR configuration file](img/B19682_10_05.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.5 – 从 ReaR 配置文件中检查 URL 位置](img/B19682_10_05.jpg)'
- en: Figure 10.5 – Checking the URL location from the ReaR configuration file
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5 – 从 ReaR 配置文件中检查 URL 位置
- en: 'To back up the system on the USB disk, run the following command:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了将系统备份到 USB 磁盘，运行以下命令：
- en: '[PRE12]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: To recover the system, you will need to boot from the USB drive and select the
    first option, which says `Recover "hostname"`, where `"hostname"` is the hostname
    of the computer you backed up.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了恢复系统，你需要从 USB 驱动器启动并选择第一个选项，即 `Recover "hostname"`，其中 `"hostname"` 是你备份的计算机的主机名。
- en: System backup and recovery are two very important tasks that should be indispensable
    to any Linux system administrator. Knowing how to execute those tasks can save
    data, time, and money for both the company and the client. Minimal downtime and
    having a quick, effective response should be the most important assets on every
    **Chief Technology Officer’s** (**CTO’s**) table. Backup and recovery strategies
    should always have a strong foundation in terms of good mitigation practices.
    In this respect, a strong diagnostics toolset and troubleshooting knowledge will
    always come in handy for every system administrator. This is why, in the next
    section, we will show you some of the best diagnostic tools in Linux.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 系统备份与恢复是两个非常重要的任务，应该是任何 Linux 系统管理员的必备技能。掌握这些任务的执行方法，可以为公司和客户节省数据、时间和金钱。最小化停机时间并提供快速、有效的响应，应该是每位**首席技术官**（**CTO**）桌面上最重要的资产。备份和恢复策略应该始终建立在良好的缓解实践基础上。从这个角度来看，一个强大的诊断工具集和故障排除知识将对每个系统管理员始终有帮助。这就是为什么在接下来的章节中，我们将展示一些
    Linux 中最佳的诊断工具。
- en: Introducing common Linux diagnostic tools for troubleshooting
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍常用的 Linux 诊断工具用于故障排除
- en: 'The openness of Linux is one of its best assets. This opened the door to an
    extensive number of solutions that can be used for any task at hand. Hence, many
    diagnostic tools are available to Linux system administrators. Depending on which
    part of your system you would like to diagnose, there are several tools available.
    Troubleshooting is essentially problem-solving based on diagnostics generated
    by specific tools. To reduce the number of diagnostic tools to cover, we will
    narrow down the issues to the following categories for this section:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 的开放性是其最优点之一。这为各种任务提供了大量可以使用的解决方案。因此，许多诊断工具可供 Linux 系统管理员使用。根据你想要诊断系统的哪个部分，有多种工具可供选择。故障排除本质上是基于特定工具生成的诊断信息来解决问题。为了减少需要覆盖的诊断工具数量，我们将在本节中将问题缩小到以下几个类别：
- en: Boot issues
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动问题
- en: General system issues
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般系统问题
- en: Network issues
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络问题
- en: Hardware issues
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬件问题
- en: There are specific diagnostic tools for each of these categories. We will start
    by showing you some of the most widely used ones.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 每个类别都有特定的诊断工具。我们将首先展示一些最常用的工具。
- en: Tools for troubleshooting boot issues
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除工具
- en: To understand the issues that may affect the boot process, it is important to
    know how the boot process works. We have not covered this in detail yet, so pay
    attention to everything that we will tell you.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解可能影响启动过程的问题，了解启动过程的工作原理非常重要。我们还没有详细介绍这一点，所以请注意接下来我们会告诉你的内容。
- en: The boot process
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动过程
- en: All the major Linux distributions, such as Ubuntu, OpenSUSE, Debian, Fedora,
    and RHEL, use `systemd` as their default init system. Until GRUB2 initialization
    and the `systemd` startup were put in place, the Linux boot process had several
    more stages.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 所有主要的 Linux 发行版，如 Ubuntu、OpenSUSE、Debian、Fedora 和 RHEL，都将 `systemd` 作为默认的初始化系统。在
    GRUB2 初始化和 `systemd` 启动实施之前，Linux 启动过程还有几个阶段。
- en: 'The boot order is as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 启动顺序如下：
- en: The **Basic Input Output System** (**BIOS**) **Power-On** **Self-Test** (**POST**)
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**基本输入输出系统** (**BIOS**) **开机自检** (**POST**)'
- en: GRUB2 bootloader initialization
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GRUB2 启动加载程序初始化
- en: GNU/Linux kernel initialization
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GNU/Linux 内核初始化
- en: '`systemd init` system initialization'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`systemd init` 系统初始化'
- en: BIOS POST is a process specific to hardware initialization and testing, and
    it is similar for every PC, regardless of whether it is using Linux or Windows.
    The BIOS makes sure that every hardware component inside the PC is working properly.
    When the BIOS fails to start, there is usually a hardware problem or incompatibility
    issue. The BIOS searches for the disk’s boot record, such as the **master boot
    record** (**MBR**) or **GUID Partition Table** (**GPT**), and loads it into memory.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: BIOS 自检（POST）是特定于硬件初始化和测试的过程，对于每台 PC 来说都是类似的，无论它是使用 Linux 还是 Windows。BIOS 会确保
    PC 内部的每个硬件组件都正常工作。如果 BIOS 无法启动，通常是硬件故障或不兼容问题。BIOS 会搜索磁盘的启动记录，如 **主引导记录** (**MBR**)
    或 **GUID 分区表** (**GPT**)，并将其加载到内存中。
- en: GRUB2 initialization is where Linux starts to kick in. This is the stage when
    the system loads the kernel into memory. It can choose between several different
    kernels in case there’s more than one operating system available. Once the kernel
    has been loaded into memory, it takes control of the boot process.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB2 初始化是 Linux 开始工作的地方。这是系统将内核加载到内存中的阶段。如果有多个操作系统可用，它可以在不同的内核之间进行选择。内核一旦被加载到内存中，它就控制了整个启动过程。
- en: The kernel is a self-extracting archive. Once extracted, it runs into the memory
    and loads the `init` system, the parent of all the other processes on Linux.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 内核是一个自解压存档。解压后，它会加载到内存中，并启动 `init` 系统，这是 Linux 中所有其他进程的父进程。
- en: The `init` system, called `systemd`, starts by mounting the filesystems and
    accessing all the available configuration files.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`init` 系统，称为 `systemd`，通过挂载文件系统并访问所有可用的配置文件来启动。'
- en: During the boot process, issues may appear. In the next section, we will discuss
    what to do if disaster strikes and your bootloader won’t start.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，可能会出现一些问题。在接下来的章节中，我们将讨论如果灾难发生，且启动加载程序无法启动时应该怎么办。
- en: Repairing GRUB2
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修复 GRUB2
- en: 'If GRUB2 breaks, you will not be able to access your system. This calls for
    a GRUB repair. At this stage, a live bootable USB drive will save you. The following
    steps are an exercise that could count as an experiment. In our case, we have
    an Ubuntu 22.04 LTS Desktop edition live disk, and we will use it for this example.
    However, you can use any Linux distribution you like, not necessarily Ubuntu.
    The point is that you would need a live bootable USB drive with Linux on it. Here
    are the steps you should follow:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果GRUB2损坏，你将无法访问系统。此时需要进行GRUB修复。在这个阶段，一个可启动的USB驱动器将为你提供帮助。以下步骤是一个可能算作实验的练习。在我们的案例中，我们有一张Ubuntu
    22.04 LTS桌面版的启动盘，我们将以此作为示例。然而，你可以使用任何你喜欢的Linux发行版，不一定非得是Ubuntu。关键是你需要一个安装了Linux的可启动USB驱动器。以下是你需要遵循的步骤：
- en: Plug in the Ubuntu 22.04 live disk drive and boot the system.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入Ubuntu 22.04的启动盘并启动系统。
- en: Open the BIOS, select the bootable disk as the main boot device, and restart
    it.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开BIOS，选择可启动磁盘作为主启动设备，并重新启动计算机。
- en: Select the **Try** **Ubuntu** option.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**尝试** **Ubuntu**选项。
- en: Once inside the Ubuntu instance, open Terminal, enter the `sudo fdisk -l` command,
    and check your disks and partitions.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入Ubuntu实例后，打开终端，输入`sudo fdisk -l`命令，检查你的磁盘和分区。
- en: 'Select the one that GRUB2 is installed on and use the following command (use
    the disk names as provided by your system; don’t copy/paste our example):'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择安装了GRUB2的磁盘，并使用以下命令（使用系统提供的磁盘名称，不要直接复制/粘贴我们的示例）：
- en: '[PRE13]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Install GRUB2 using the following commands:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装GRUB2：
- en: '[PRE14]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Unmount the partition using the following commands:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令卸载分区：
- en: '[PRE15]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Reboot the computer.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启计算机。
- en: Dealing with bootloaders is extremely sensitive. Pay attention to all the details
    and take care of all the commands you type in. If not, everything could go sideways.
    In the next section, we will show you some diagnostic tools for general system
    issues.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 处理引导加载程序非常敏感。请注意所有细节，并小心你输入的所有命令。如果不小心，一切可能都会出错。在接下来的部分，我们将向你展示一些用于诊断常见系统问题的工具。
- en: Tools for troubleshooting general system issues
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除常见系统问题的工具
- en: System issues can be of different types and complexities. Knowing the tools
    to deal with them is of utmost importance. In this section, we will cover the
    default tools provided by the Linux distribution. Basic troubleshooting knowledge
    is necessary for any Linux system administrator as issues can – and will – occur
    during regular operations.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 系统问题可能有不同的类型和复杂度。知道如何使用工具来处理它们至关重要。在这一部分，我们将介绍Linux发行版提供的默认工具。任何Linux系统管理员都需要具备基本的故障排除知识，因为在常规操作过程中，问题是不可避免的。
- en: What could general system issues mean? Well, basically, these are issues regarding
    disk space, memory usage, system load, and running processes.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 一般系统问题可能意味着什么呢？基本上，这些问题涉及磁盘空间、内存使用、系统负载和运行中的进程。
- en: Commands for disk-related issues
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与磁盘相关的问题的命令
- en: 'Disks, be they HDDs or SSDs, are an important part of the system. They provide
    the necessary space for your data, files, and software of any type, including
    the operating system. We will not discuss hardware-related issues as this will
    be the subject of a future section in this chapter called *Tools for troubleshooting
    hardware issues*. Instead, we will cover issues related to **disk space**. The
    most common diagnostic tools for this are already installed on any Linux system,
    and they are represented by the following commands:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘，无论是HDD还是SSD，都是系统的重要组成部分。它们为你的数据、文件和软件提供必要的空间，包括操作系统。我们不会讨论与硬件相关的问题，因为这将在本章的未来部分“*故障排除硬件问题的工具*”中进行探讨。相反，我们将讨论与**磁盘空间**相关的问题。最常见的诊断工具已经安装在任何Linux系统中，它们通过以下命令表示：
- en: '`du`: A utility that shows disk space utilization for files and directories'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`du`：显示文件和目录磁盘空间使用情况的工具'
- en: '`df`: A utility that shows the disk usage for directories'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`df`：显示目录磁盘使用情况的工具'
- en: 'The following is an example of using the `df` utility with the `-h` (human-readable)
    option:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用`df`工具并带有`-h`（人类可读）选项的示例：
- en: '[PRE16]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: If one of the disks runs out of space, it will be shown in the output. This
    is not an issue in our case, but the tool is still relevant for finding out which
    of the available disks is having issues with the free available space.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如果其中一块磁盘的空间不足，它会在输出中显示出来。虽然在我们的案例中这不是问题，但这个工具仍然很有用，可以帮助你找出哪个可用磁盘的空闲空间出现了问题。
- en: 'When a disk is full, or almost full, there are several fixes that can be applied.
    If you have to delete some of the files, we advise you to delete them from your
    `/home` directory. Try not to delete important system files. The following are
    some ideas for troubleshooting available space issues:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 当磁盘已满或接近满时，可以应用几种修复方法。如果必须删除某些文件，我们建议您删除 `/home` 目录中的文件。尽量不要删除重要的系统文件。以下是一些故障排除可用空间问题的建议：
- en: Delete the unnecessary files using the `rm` command (optionally using, with
    caution, the `-rf` option) or the `rmdir` command
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`rm`命令删除不必要的文件（可选择性地，谨慎使用`-rf`选项）或使用`rmdir`命令
- en: Move files to an external drive (or to the cloud) using the `rsync` command
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `rsync` 命令将文件移动到外部驱动器（或云端）
- en: Find which directories use the most space in your `/``home` directory
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找 `/home` 目录中使用最多空间的目录
- en: 'The following is an example of using the `du` utility to find the largest directories
    inside the `/home` directory. We are using two pipes to transfer the output of
    the `du` command to the `sort` command and finally to the `head` command with
    the option of `5` (because we want to show the five largest directories, not all
    of them):'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用`du`工具查找 `/home` 目录中最大目录的示例。我们使用了两个管道，将 `du` 命令的输出传递给 `sort` 命令，最后再传递给
    `head` 命令并使用 `5` 选项（因为我们只想显示五个最大目录，而不是所有的目录）：
- en: '![Figure 10.6 – Finding the largest directories in your /home directory](img/B19682_10_06.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.6 – 查找你 /home 目录中最大的目录](img/B19682_10_06.jpg)'
- en: Figure 10.6 – Finding the largest directories in your /home directory
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6 – 查找你 /home 目录中最大的目录
- en: 'Another troubleshooting scenario is with regard to the number of inodes being
    used, not with the space on a disk. In this case, you can use the `df -i` command
    to see whether you’ve run out of inodes:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个故障排除场景是与使用的 inode 数量有关，而不是磁盘上的空间。在这种情况下，您可以使用`df -i`命令查看是否用尽了 inode：
- en: '![Figure 10.7 – inode usage statistics](img/B19682_10_07.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.7 – inode 使用统计](img/B19682_10_07.jpg)'
- en: Figure 10.7 – inode usage statistics
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – inode 使用统计
- en: The output in the preceding screenshot shows basic information about the inode
    usage on the system. You will see the total numbers of inodes on different filesystems,
    how many inodes are in use (as a number and as a percentage), and how many are
    free.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示了关于系统中 inode 使用的基本信息。你会看到不同文件系统中 inode 的总数，已使用的 inode 数量（以数字和百分比表示），以及空闲的
    inode 数量。
- en: Besides the commands shown here, which are the defaults for every Linux distribution,
    there are many other open source tools for disk space issues, such as **pydf**,
    **parted**, **sfdisk**, **iostat**, and the GUI-based **GParted** application.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这里显示的命令，这些命令是每个 Linux 发行版的默认命令外，还有许多其他开源工具可以处理磁盘空间问题，例如**pydf**、**parted**、**sfdisk**、**iostat**以及基于
    GUI 的**GParted**应用程序。
- en: In the next section, we will show you how to use commands to verify possible
    memory issues.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将展示如何使用命令来验证可能的内存问题。
- en: Commands for memory usage issues
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内存使用问题的命令
- en: '`free` and it can be accessed in any major distribution. In the following example,
    we will use the `-h` option for a human-readable output:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`free` 命令可以在任何主要发行版中使用。在以下示例中，我们将使用 `-h` 选项来获取人类可读的输出：'
- en: '![Figure 10.8 – Using the free command in Linux](img/B19682_10_08.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.8 – 在 Linux 中使用 free 命令](img/B19682_10_08.jpg)'
- en: Figure 10.8 – Using the free command in Linux
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8 – 在 Linux 中使用 free 命令
- en: 'As shown in the preceding screenshot, using the `free` command (with the `-h`
    option for human-readable output) shows the following:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，使用`free`命令（带有`-h`选项以便输出人类可读格式）会显示以下内容：
- en: '`total`: The total amount of memory'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`total`：总内存'
- en: '`used`: The used memory, which is calculated as the total memory minus the
    buffered, cache, and free memory'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`used`：已使用的内存，通过总内存减去缓冲区、缓存和空闲内存计算得出'
- en: '`free`: The free or unused memory'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`free`：空闲或未使用的内存'
- en: '`shared`: The memory used by `tmpfs`'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`shared`：`tmpfs` 使用的内存'
- en: '`buff/cache`: The memory used by kernel buffers and the page cache'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`buff/cache`：内核缓冲区和页面缓存使用的内存'
- en: '`available`: The amount of memory available for new applications'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`available`：为新应用程序提供的可用内存'
- en: This way, you can find specific issues related to higher memory usage. Constantly
    checking memory usage on servers is important to see whether resources are being
    used efficiently.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，你可以找到与更高内存使用相关的具体问题。定期检查服务器的内存使用情况对于确保资源高效使用至关重要。
- en: 'Another way to check for memory usage is to use the `top` command, as shown
    in the following screenshot:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种检查内存使用情况的方法是使用 `top` 命令，如下图所示：
- en: '![Figure 10.9 – Using the top command to check memory usage](img/B19682_10_09.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.9 – 使用 `top` 命令检查内存使用情况](img/B19682_10_09.jpg)'
- en: Figure 10.9 – Using the top command to check memory usage
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9 – 使用 `top` 命令检查内存使用情况
- en: While using the `top` command, there are several sections available on screen.
    The output is dynamic, in the sense that it constantly changes, showing real-time
    information about the processes running on the system. The `memory` section shows
    information about total memory used, as well as free and buffered memory. All
    the information is shown in megabytes by default so that it’s easier to read and
    understand.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `top` 命令时，屏幕上有多个可用的部分。输出是动态的，意味着它会不断变化，实时显示系统中正在运行的进程的信息。`memory` 部分显示有关总内存使用情况的信息，以及空闲和缓存内存。所有信息默认以兆字节（MB）为单位显示，便于阅读和理解。
- en: 'Another command that shows information about memory (and other valuable system
    information) is `vmstat`:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个显示内存（以及其他有价值的系统信息）的命令是 `vmstat`：
- en: '![Figure 10.10 – Using vmstat with no options](img/B19682_10_10.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.10 – 使用不带选项的 vmstat 命令](img/B19682_10_10.jpg)'
- en: Figure 10.10 – Using vmstat with no options
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.10 – 使用不带选项的 vmstat 命令
- en: 'By default, `vmstat` shows information about processes, memory, swap, disk,
    and CPU usage. The memory information is shown starting from the second column
    and contains the following details:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`vmstat` 显示有关进程、内存、交换、磁盘和 CPU 使用情况的信息。内存信息从第二列开始显示，并包含以下详细信息：
- en: '`swpd`: How much virtual memory is being used'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`swpd`: 正在使用的虚拟内存量'
- en: '`free`: How much memory is free'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`free`: 内存中剩余的可用空间'
- en: '`buff`: How much memory is being used for buffering'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`buff`: 用于缓冲的内存量'
- en: '`cache`: How much memory is being used for caching'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache`: 用于缓存的内存量'
- en: 'The `vmstat` command has several options available. To learn about all the
    options and what all the columns from the output represent, visit the respective
    pages in the manual using the following command:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`vmstat` 命令有多个可用的选项。要了解所有选项以及输出中的各个列所代表的含义，可以使用以下命令访问手册中的相应页面：'
- en: '[PRE17]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The options that can be used with `vmstat` to show different information about
    memory are `-a` and `-s`. By using `vmstat -a`, the output will show the active
    and inactive memory:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 可以与 `vmstat` 一起使用的选项有 `-a` 和 `-s`，通过使用 `vmstat -a`，输出将显示活动内存和非活动内存：
- en: '![Figure 10.11 – Using vmstat -a to show the active and inactive memory](img/B19682_10_11.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.11 – 使用 vmstat -a 显示活动内存和非活动内存](img/B19682_10_11.jpg)'
- en: Figure 10.11 – Using vmstat -a to show the active and inactive memory
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.11 – 使用 `vmstat -a` 显示活动内存和非活动内存
- en: Using `vmstat -s` will show detailed memory, CPU, and disk statistics.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `vmstat -s` 命令将显示详细的内存、CPU 和磁盘统计信息。
- en: All the commands discussed in this section are essential for troubleshooting
    any memory issues. There might be others you can use, but these are the ones you
    will find by default on any Linux distribution.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论的所有命令对于排查内存问题非常重要。可能还有其他可以使用的命令，但这些命令是任何 Linux 发行版上默认提供的命令。
- en: 'Nevertheless, there is one more that deserves to be mentioned in this section:
    the `sar` command. This can be installed in Ubuntu through the `sysstat` package.
    Therefore, install the package using the following command:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还有一个值得在本节中提及的命令：`sar` 命令。可以通过 `sysstat` 软件包在 Ubuntu 中安装该命令。因此，可以使用以下命令安装该软件包：
- en: '[PRE18]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Once the package has been installed, to be able to use the `sar` command to
    show detailed statistics about the system’s memory usage, you will need to enable
    the `sysstat` service. It needs to be active to collect data. By default, the
    service runs every 10 minutes and saves the logs inside the `/var/log/sysstat/saXX`
    directory. Every directory is named after the day the service runs on. For example,
    if we were to run the `sar` command on April 25, the service would look for data
    inside `/var/log/sysstat/sa25`. We ran the `sar` command on April 25 before starting
    the service, and an error occurred. Thus, to enable data collection, first, we
    will start and enable the `sysstat` service, then we will run the application.
    With the `sar` command, you can generate different reports in real time. For example,
    if we want to generate a memory report times every two seconds, we will use the
    `-``r` option:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完包后，为了能够使用`sar`命令显示系统内存使用的详细统计数据，你需要启用`sysstat`服务。它需要处于活动状态才能收集数据。默认情况下，服务每10分钟运行一次，并将日志保存在`/var/log/sysstat/saXX`目录中。每个目录的命名是以服务运行的日期命名的。例如，如果我们在4月25日运行`sar`命令，服务会在`/var/log/sysstat/sa25`中查找数据。我们在启动服务之前运行了`sar`命令，并且发生了错误。因此，要启用数据收集，首先需要启动并启用`sysstat`服务，然后再运行应用程序。使用`sar`命令，你可以实时生成不同的报告。例如，如果我们想每两秒生成一次内存报告，可以使用`-r`选项：
- en: '![Figure 10.12 – Starting and enabling the service and running sar](img/B19682_10_12.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.12 – 启动和启用服务并运行 sar](img/B19682_10_12.jpg)'
- en: Figure 10.12 – Starting and enabling the service and running sar
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.12 – 启动和启用服务并运行 sar
- en: The service’s name is `sadc`) and it uses the `sysstat` name for the package
    and service.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 服务名称是`sadc`，它使用`sysstat`作为包和服务的名称。
- en: Important note
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: In the event of a system reboot, the service might not restart by default, even
    though the preceding commands were executed. To overcome this, on Ubuntu, you
    should edit the /`etc/default/sysstat` file and change the `ENABLED` status from
    `false` to `true`.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统重启的情况下，服务可能不会默认重新启动，即使之前的命令已执行。为了解决这个问题，在 Ubuntu 上，你应编辑`/etc/default/sysstat`文件，并将`ENABLED`的状态从`false`更改为`true`。
- en: The output shown in *Figure 10**.12* will write one line every two seconds,
    five times in a row, and an average line at the end. It is a powerful tool that
    can be used for more than just memory statistics. There are options for CPU and
    disk statistics as well.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图 10.12*中显示的输出将每两秒写一行，连续五次，最后显示一行平均值。它是一个强大的工具，不仅仅可以用于内存统计，还有 CPU 和磁盘统计选项。
- en: Overall, in this section, we covered the most important tools to use for troubleshooting
    memory issues. In the next section, we will cover tools to use for general system
    load issues.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，本节我们涵盖了用于排查内存问题的最重要工具。在下一节中，我们将介绍用于解决系统负载问题的工具。
- en: Commands for system load issues
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 系统负载问题的命令
- en: Similar to what we covered in the previous sections, in this section, we will
    discuss `top` command is one of the most widely used when we’re trying to determine
    the sluggishness of a system. All the other tools, such as `vmstat` and `sar`,
    can also be used for CPU and system load troubleshooting.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们在前面几节中讨论的类似，本节将讨论`top`命令，这是我们在判断系统卡顿时最常用的工具。其他工具，如`vmstat`和`sar`，也可以用于 CPU
    和系统负载故障排除。
- en: 'A basic command for troubleshooting system load is `uptime`:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 排查系统负载的一个基本命令是`uptime`：
- en: '![Figure 10.13 – Using uptime for checking system load](img/B19682_10_13.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.13 – 使用 uptime 检查系统负载](img/B19682_10_13.jpg)'
- en: Figure 10.13 – Using uptime for checking system load
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.13 – 使用 uptime 检查系统负载
- en: The `uptime` output shows three values at the end. Those values represent the
    load averages for 1, 5, and 15 minutes. The load average can give you a fair image
    of what happens with the system’s processes.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '`uptime`的输出显示了三个值，代表了1、5和15分钟的负载均值。负载均值可以为你提供一个关于系统进程状态的合理图像。'
- en: If you have a single CPU system, a load average of `1` means that that CPU is
    under full load. If the number is higher, this means that the load is much higher
    than the CPU can handle, and this will probably put a lot of stress on your system.
    Because of this, processes will take longer to execute and the system’s overall
    performance will be affected.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个单核 CPU 系统，负载均值为`1`意味着该 CPU 正在全负荷运行。如果数值更高，表示负载远远超过 CPU 的处理能力，这可能会给系统带来很大压力。因此，进程执行将需要更长的时间，系统的整体性能也会受到影响。
- en: A high load average means that there are applications that run multiple threads
    simultaneously at once. Nevertheless, some load issues are not only the result
    of an overcrowded CPU – they can be the combined effect of CPU load, disk I/O
    load, and memory load. In this case, the Swiss Army knife for troubleshooting
    system load issues is the `top` command. The output of the `top` command constantly
    changes in real time, based on the system’s load.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 高负载平均值意味着有些应用程序同时运行多个线程。然而，某些负载问题不仅是过载 CPU 的结果 – 它们可能是 CPU 负载、磁盘 I/O 负载和内存负载的综合效果。在这种情况下，用于故障排除系统负载问题的瑞士军刀是`top`命令。`top`
    命令的输出根据系统负载实时变化。
- en: 'By default, `top` sorts processes by how much CPU they use. It runs in interactive
    mode and, sometimes, the output is difficult to see on the screen. You can redirect
    the output to a file and use the command in batch mode using the `-b` option.
    This mode only updates the command a specified number of times. To run `top` in
    batch mode, run the following command:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`top`按 CPU 使用情况对进程进行排序。它以交互模式运行，有时屏幕上的输出不易看清。您可以将输出重定向到文件，并使用`-b`选项以批处理模式运行命令。此模式仅更新指定次数的命令。要以批处理模式运行`top`，请运行以下命令：
- en: '[PRE19]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The `top` command could be a little intimidating for inexperienced Linux users.
    The output is highlighted in the following screenshot:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 对于经验不足的 Linux 用户来说，`top` 命令可能有点吓人。输出如下截图所示：
- en: '![Figure 10.14 – The output of the top command](img/B19682_10_14.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.14 – top 命令的输出](img/B19682_10_14.jpg)'
- en: Figure 10.14 – The output of the top command
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.14 – top 命令的输出
- en: 'Let’s look at what the output means:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看输出的含义：
- en: '`us`: User CPU time'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`us`：用户 CPU 时间'
- en: '`sy`: System CPU time'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sy`：系统 CPU 时间'
- en: '`ni`: Nice CPU time'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ni`：优先级较低的 CPU 时间'
- en: '`id`: Idle CPU time'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id`：空闲 CPU 时间'
- en: '`wa`: Input/output wait time'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wa`：输入/输出等待时间'
- en: '`hi`: CPU hardware interrupts time'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hi`：CPU 硬件中断时间'
- en: '`si`: CPU software interrupts time'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`si`：CPU 软件中断时间'
- en: '`st`: CPU steal time'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`st`：CPU 窃取时间'
- en: 'Another useful tool for troubleshooting CPU usage and hard drive input/output
    time is `iostat`:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个用于故障排除 CPU 使用率和硬盘输入/输出时间的工具是`iostat`：
- en: '![Figure 10.15 – The output of iostat](img/B19682_10_15.jpg)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.15 – iostat 的输出](img/B19682_10_15.jpg)'
- en: Figure 10.15 – The output of iostat
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.15 – iostat 的输出
- en: 'The CPU statistics are similar to the ones from the output of the `top` command
    shown earlier. The I/O statistics are shown below the CPU statistic and here is
    what each column represents:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: CPU 统计信息类似于先前显示的`top`命令的输出。I/O 统计信息显示在 CPU 统计信息下方，以下是每列代表的内容：
- en: '`tps`: Transfers per second to the device (I/O requests)'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tps`：每秒传输到设备的次数（I/O 请求）'
- en: '`kB_read/s`: Amount of data read from the device (in terms of the number of
    blocks – kilobytes)'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kB_read/s`：从设备读取的数据量（以块数 – 千字节表示）'
- en: '`kB_wrtn/s`: Amount of data written to the device (in terms of the number of
    blocks – kilobytes)'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kB_wrtn/s`：写入到设备的数据量（以块数 – 千字节表示）'
- en: '`kB_dscd/s`: Amount of data discarded for the device (in kilobytes)'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kB_dscd/s`：设备丢弃的数据量（以千字节为单位）'
- en: '`kB_read`: Total number of blocks read'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kB_read`：读取的总块数'
- en: '`kB_wrtn`: Total number of blocks written'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kB_wrtn`：写入的总块数'
- en: '`kB_dscd`: Total number of blocks discarded'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kB_dscd`：丢弃的总块数'
- en: 'For more details about the `iostat` command, read the respective manual pages
    by using the following command:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关`iostat`命令的更多详细信息，请使用以下命令阅读相应的手册页面：
- en: '[PRE20]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Besides the `iostat` command, there is another one that you could use, called
    `iotop`. It is not installed by default on Ubuntu, but you can install it with
    the following command:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`iostat`命令，您还可以使用另一个称为`iotop`的命令。它在 Ubuntu 上默认情况下未安装，但您可以使用以下命令安装它：
- en: '[PRE21]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Once the package has been installed, you will need `sudo` privileges to run
    it:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您需要`sudo`权限来运行它：
- en: '[PRE22]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The output is as shown in the following screenshot:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下截图所示：
- en: '![Figure 10.16 – Running the iotop command](img/B19682_10_16.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.16 – 运行 iotop 命令](img/B19682_10_16.jpg)'
- en: Figure 10.16 – Running the iotop command
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.16 – 运行 iotop 命令
- en: You can also run the `sysstat` service to troubleshoot system load issues, similar
    to how we used it for troubleshooting memory issues.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以运行`sysstat`服务来解决系统负载问题，类似于我们用它来解决内存问题。
- en: 'By default, `sar` will output the CPU statistics for the current day:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`sar`将输出当前日期的 CPU 统计信息：
- en: '![Figure 10.17 – Running sar for CPU load troubleshooting](img/B19682_10_17.jpg)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.17 – 运行 sar 进行 CPU 负载故障排除](img/B19682_10_17.jpg)'
- en: Figure 10.17 – Running sar for CPU load troubleshooting
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.17 – 运行 sar 进行 CPU 负载故障排除
- en: In the preceding screenshot, `sar` ran five times, every two seconds. Our local
    network servers are not under heavy load at this time, but you can imagine that
    the output would be different when the command is run on a heavily used server.
    As we pointed out in the previous section, the `sar` command has several options
    that could prove useful in finding solutions to potential problems. Run the `man
    sar` command to view the manual page containing all the available options.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，`sar`命令运行了五次，每次间隔两秒。此时，我们的本地网络服务器负载不重，但你可以想象，如果在负载较重的服务器上运行该命令，输出会有所不同。正如我们在前一节中提到的，`sar`命令有多个选项，在寻找潜在问题的解决方案时可能会非常有用。运行`man
    sar`命令可以查看包含所有可用选项的手册页面。
- en: There are many other tools that could be used for general system troubleshooting.
    We barely scratched the surface of this subject with the tools shown in this section.
    We advise you to search for more tools designed for general system troubleshooting
    if you feel the need to do so. Otherwise, the ones presented here are sufficient
    for you to generate a viable report about possible system issues.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多其他工具可以用于一般的系统故障排除。我们在本节中展示的工具仅仅是这一主题的冰山一角。如果你有需要，可以搜索更多为系统故障排除设计的工具。否则，本文所介绍的工具已经足够让你生成一份关于可能系统问题的有效报告。
- en: Network-specific issues will be covered in the next section.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 网络特定的问题将在下一节中讲解。
- en: Tools for troubleshooting network issues
  id: totrans-295
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用于故障排除网络问题的工具
- en: Quite often, due to the complexities of a network, issues tend to appear. Networks
    are essential for everyday living. We use them everywhere, from our wireless smartwatch
    to our smartphone, to our computer, and up to the cloud. Everything is connected
    worldwide to make our lives better and a systems administrator’s life a little
    bit harder. In this interconnected world, things can go sideways quite easily,
    and network issues need troubleshooting.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 由于网络的复杂性，问题经常会出现。网络是日常生活中不可或缺的一部分。我们无处不在使用它们，从无线智能手表到智能手机，再到电脑，甚至到云端。所有的一切都在全球范围内连接，以便让我们的生活更加便捷，也让系统管理员的生活稍微复杂一些。在这个互联的世界中，事情很容易出问题，因此网络问题需要进行故障排除。
- en: Troubleshooting **network issues** is almost 80% of a system administrator’s
    job – probably even more. This number is not backed up by any official studies
    but more of a hands-on experience insight. Since most of the server and cloud
    issues are related to networking, an optimal working network means reduced downtime
    and happy clients and system administrators.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 故障排除**网络问题**几乎占据了系统管理员80%的工作——可能甚至更多。这个数字并没有官方研究数据支持，而是基于实际操作经验的洞察。由于大多数服务器和云端问题与网络有关，优化的网络意味着减少停机时间，并且能够让客户和系统管理员更开心。
- en: The tools we will cover in this section are the defaults on all major Linux
    distributions. All these tools were discussed in [*Chapter 7*](B19682_07.xhtml#_idTextAnchor139),
    *Networking with Linux*, and [*Chapter 9*](B19682_09.xhtml#_idTextAnchor194),
    *Securing Linux*, or will be discussed in [*Chapter 13*](B19682_13.xhtml#_idTextAnchor276),
    *Configuring Linux Servers*, so we will only name them again from a problem-solving
    standpoint. Let’s break down the tools we should use on specific TCP/IP layers.
    Remember how many layers there are in the TCP/IP model? There are five layers
    available, and we will start from layer 1\. As a good practice, troubleshooting
    a network is best done through the stack, starting from the application layer
    all the way to the physical layer.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中将介绍的工具是所有主要Linux发行版的默认工具。所有这些工具都在[*第7章*](B19682_07.xhtml#_idTextAnchor139)《*Linux网络*》和[*第9章*](B19682_09.xhtml#_idTextAnchor194)《*保护Linux*》中讨论过，或者将在[*第13章*](B19682_13.xhtml#_idTextAnchor276)《*配置Linux服务器*》中讨论。因此，我们只会从问题解决的角度再次提及它们。让我们从具体的TCP/IP层次来逐步分解应该使用的工具。你还记得TCP/IP模型有多少层吗？一共有五层，我们将从第1层开始。作为一种良好的实践，故障排除网络时，最好从应用层开始，逐层深入到物理层。
- en: Diagnosing the physical layer (layer 1)
  id: totrans-299
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 诊断物理层（第1层）
- en: 'One of the basic testing tools and one of the first to be used by most system
    administrators is the `ping` command. The name comes from `-c` option of the `ping`
    command. The output is as follows:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 最基本的测试工具之一，也是大多数系统管理员最先使用的工具就是`ping`命令。其名称来源于`ping`命令的`-c`选项。输出如下：
- en: '![Figure 10.18 – Running a basic test using the ping command](img/B19682_10_18.jpg)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![图10.18 – 使用ping命令进行基本测试](img/B19682_10_18.jpg)'
- en: Figure 10.18 – Running a basic test using the ping command
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.18 – 使用ping命令进行基本测试
- en: Ping is sending simple ICMP packets to the destination (in our case, it was
    [google.com](http://google.com)) and is waiting for a response. Once it is received
    and no packets are lost, this means that everything is working fine. The `ping`
    command can be used to test connections to local network systems, as well as remote
    networks. It is the first tool that’s used to test and isolate possible problems.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: Ping命令向目标发送简单的ICMP数据包（在我们的例子中是[google.com](http://google.com)），并等待响应。一旦收到响应且没有丢包，说明一切正常。`ping`命令可以用于测试本地网络系统的连接，也可以用于测试远程网络。它是用于测试和排除可能问题的第一个工具。
- en: 'There are times when a simple test with the `ping` command is not enough. In
    this case, another versatile command is the `ip` command. You can use it to check
    whether there are any issues with the physical layer:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，简单的`ping`命令测试不足以解决问题。在这种情况下，另一个多功能的命令是`ip`命令。你可以使用它来检查物理层是否有任何问题：
- en: '[PRE23]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You will see the output as follows:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到如下输出：
- en: '![Figure 10.19 – Showing the state of the physical interfaces with the ip command](img/B19682_10_19.jpg)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.19 – 使用ip命令显示物理接口的状态](img/B19682_10_19.jpg)'
- en: Figure 10.19 – Showing the state of the physical interfaces with the ip command
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.19 – 使用ip命令显示物理接口的状态
- en: In the preceding screenshot, you can see that the Ethernet interface is running
    well (`state UP`). As we are running on a virtual machine, we do not have a wireless
    connection. If we were to use a laptop, for example, the wireless connection would
    have been visible, showing something such as `wlp0s20f3`.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，你可以看到以太网接口运行正常（`state UP`）。由于我们运行的是虚拟机，没有无线连接。如果我们使用的是笔记本电脑，举个例子，无线连接会显示出来，类似于`wlp0s20f3`。
- en: 'If any of the interfaces is not working, for example, the wireless one, the
    output of the preceding command would show `state DOWN`. In our case, we will
    bring the wireless interface up using the following command:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 如果某个接口无法正常工作，例如无线接口，前面命令的输出会显示`state DOWN`。在我们的例子中，我们将使用以下命令来启用无线接口：
- en: '[PRE24]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Once executed, you can check the state of the interface by running the `ip`
    command once again:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后，你可以再次运行`ip`命令来检查接口的状态：
- en: '[PRE25]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: If you have direct access to a bare metal system, maybe a server, you can directly
    check whether the wires are connected. If, by any chance, you are using a wireless
    connection (not recommended), you will need to use the `ip` command.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你直接访问裸机系统，比如一台服务器，你可以直接检查电缆是否连接。如果你恰好使用的是无线连接（不推荐），你需要使用`ip`命令。
- en: 'Another useful tool for layer 1 is `ethtool`. On Ubuntu 22.04.2 LTS, it is
    installed by default. To check the Ethernet interface, run the following command
    by using the connection’s name (you’ve seen it while using the `ip` command):'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个用于第一层的有用工具是`ethtool`。在Ubuntu 22.04.2 LTS中，它默认安装。要检查以太网接口，可以使用以下命令，输入连接的名称（你在使用`ip`命令时看到过）：
- en: '[PRE26]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: By using `ethtool`, we can check whether a connection has negotiated the correct
    speed. In the output of the command (which we will not show here), you would see
    that the system has correctly negotiated a full 1,000 Mbps full-duplex connection,
    for example (it may differ in your case). In the next section, we will show you
    how to diagnose the layer 2 stack.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`ethtool`，我们可以检查连接是否协商了正确的速度。在命令的输出中（我们这里不展示），你会看到系统成功协商了一个1,000 Mbps的全双工连接，例如（在你的情况下可能会不同）。在下一部分，我们将展示如何诊断第二层栈。
- en: Diagnosing the data link layer (layer 2)
  id: totrans-318
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 诊断数据链路层（第二层）
- en: 'The second layer in the TCP/IP stack is called the `ip` command and the `arp`
    command. The `arp` command, which comes from the `arp` command is available through
    the `net-tools` package. First, proceed and install it using the following command:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: TCP/IP栈的第二层包括`ip`命令和`arp`命令。`arp`命令来自`net-tools`包。首先，安装该包，使用以下命令：
- en: '[PRE27]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To check the entries inside the ARP table, you can use the `arp` command with
    the `-a` (all) option. As we are running on a virtual machine, we will have only
    one entry. As a comparison, we run the same command on our host system, this time
    having three entries, one for the wireless connection, one for the wired connection,
    and another for the virtual bridge connection used by KVM. The following is an
    example:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查ARP表中的条目，可以使用带有`-a`（所有）选项的`arp`命令。由于我们运行的是虚拟机，我们只有一个条目。为了比较，我们在主机系统上运行相同的命令，这时有三个条目，一个是无线连接，一个是有线连接，还有一个是KVM使用的虚拟桥接连接。以下是一个示例：
- en: '![Figure 10.20 – Using the arp command to map the ARP entries](img/B19682_10_20.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.20 – 使用 arp 命令映射 ARP 条目](img/B19682_10_20.jpg)'
- en: Figure 10.20 – Using the arp command to map the ARP entries
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.20 – 使用 arp 命令映射 ARP 条目
- en: The output of the `arp` command will show all the connected devices, with details
    about their IP and MAC addresses. Note that the MAC addresses have been blurred
    for privacy reasons.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '`arp` 命令的输出将显示所有连接的设备，包含它们的 IP 地址和 MAC 地址的详细信息。请注意，出于隐私原因，MAC 地址已被模糊处理。'
- en: 'Similar to the `arp` command, you can use the `ip neighbor show` command, as
    shown in the following screenshot. We will use our host system, not the virtual
    machine:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 `arp` 命令，你可以使用 `ip neighbor show` 命令，如下图所示。我们将使用我们的主机系统，而不是虚拟机：
- en: '![Figure 10.21 – Listing the ARP entries using the ip command](img/B19682_10_21.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.21 – 使用 ip 命令列出 ARP 条目](img/B19682_10_21.jpg)'
- en: Figure 10.21 – Listing the ARP entries using the ip command
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.21 – 使用 ip 命令列出 ARP 条目
- en: 'The `ip` command can be used to delete entries from the ARP list, like so:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip` 命令可用于从 ARP 列表中删除条目，方法如下：'
- en: '[PRE28]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: We used the command to delete the virtual bridge connection, using its IP address
    and name from the list as shown in *Figure 10**.21*.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用命令删除了虚拟桥接连接，使用其 IP 地址和名称从列表中删除，如*图 10.21*所示。
- en: Both the `arp` and `ip` commands have a similar output. They are powerful commands
    and very useful for troubleshooting possible layer 2 issues. In the next section,
    we will show you how to diagnose the layer 3 stack.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '`arp` 和 `ip` 命令的输出类似。它们是强大的命令，对于排查可能的第 2 层问题非常有用。在下一部分中，我们将向你展示如何诊断第 3 层堆栈。'
- en: Diagnosing the internet layer (layer 3)
  id: totrans-332
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 诊断互联网层（第 3 层）
- en: 'On the internet layer, layer 3, we are working with IP addresses only. We already
    know about the tools to use here, such as the `ip` command, the `ping` command,
    the `traceroute` command, and the `nslookup` command. Since we’ve already covered
    the `ip` and `ping` commands, we will only discuss how to use `traceroute` and
    `nslookup` here. The `traceroute` command is not installed by default in Ubuntu.
    You will have to install it using the following command:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 在互联网层（第 3 层），我们仅使用 IP 地址。我们已经了解了这里要使用的工具，如 `ip` 命令、`ping` 命令、`traceroute` 命令和
    `nslookup` 命令。由于我们已经讨论过 `ip` 和 `ping` 命令，这里将仅讨论如何使用 `traceroute` 和 `nslookup`。`traceroute`
    命令在 Ubuntu 中默认没有安装。你需要使用以下命令安装它：
- en: '[PRE29]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The `nslookup` package is already available in Ubuntu by default. First, to
    check for the routing table to see the list of gateways for different routes,
    we can use the `ip route` `show` command:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '`nslookup` 包在 Ubuntu 中默认可用。首先，要检查路由表，查看不同路由的网关列表，我们可以使用 `ip route` `show` 命令：'
- en: '![Figure 10.22 – Showing the routing table using the “ip route show” command](img/B19682_10_22.jpg)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.22 – 使用 “ip route show” 命令显示路由表](img/B19682_10_22.jpg)'
- en: Figure 10.22 – Showing the routing table using the “ip route show” command
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.22 – 使用 “ip route show” 命令显示路由表
- en: The `ip route show` command is showing the default gateway. An issue would be
    if it is missing or incorrectly configured.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip route show` 命令显示了默认网关。若它缺失或配置错误，则可能是一个问题。'
- en: 'The `traceroute` tool is used to check the path of traffic from the source
    to the destination. The following output shows the path of packets traveling from
    our local gateway to Google’s servers:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '`traceroute` 工具用于检查从源到目的地的流量路径。以下输出显示了数据包从我们本地网关到 Google 服务器的路径：'
- en: '![Figure 10.23 – Using traceroute for path tracing](img/B19682_10_23.jpg)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.23 – 使用 traceroute 进行路径追踪](img/B19682_10_23.jpg)'
- en: Figure 10.23 – Using traceroute for path tracing
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.23 – 使用 traceroute 进行路径追踪
- en: Packets don’t usually have the same route when they’re sending and coming back
    to the source. Packets are sent to gateways to be processed and sent to the destination
    on a certain route. When packets exceed the local network, their route can be
    inaccurately represented by the `traceroute` tool, since the packets it relies
    on could be filtered by many of the gateways on the path (*ICMP TTL Exceeded*
    packets are generally filtered).
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包在发送和返回源时通常不会走相同的路由。数据包被发送到网关进行处理，然后按某条路由发送到目的地。当数据包超过本地网络时，它们的路由可能会被 `traceroute`
    工具不准确地表示，因为它依赖的数据包可能会被路径上的多个网关过滤（*ICMP TTL 超时*的数据包通常会被过滤）。
- en: 'Similar to `traceroute`, there is a newer tool called `tracepath`. It is installed
    by default on Ubuntu and is a replacement for `traceroute`. Both `traceroute`
    and `tracepath` use the UDP ports for tracking by default. The `tracepath` command
    can also be used with the `-n` option to show the IP address instead of the hostname.
    The following is an example of this:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 `traceroute`，还有一个更新的工具叫做 `tracepath`。它在 Ubuntu 上默认安装，是 `traceroute` 的替代品。`traceroute`
    和 `tracepath` 默认都使用 UDP 端口进行跟踪。`tracepath` 命令还可以与 `-n` 选项一起使用，以显示 IP 地址而不是主机名。以下是一个示例：
- en: '![Figure 10.24 – Using the tracepath command](img/B19682_10_24.jpg)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.24 – 使用 `tracepath` 命令](img/B19682_10_24.jpg)'
- en: Figure 10.24 – Using the tracepath command
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.24 – 使用 `tracepath` 命令
- en: Checking further network issues could lead to faulty DNS resolution, where a
    host can only be accessed by the IP address and not by the hostname. To troubleshoot
    this, even if it is not a layer 3 protocol, you could use the `nslookup` command,
    combined with the `ping` command.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步检查网络问题可能会导致 DNS 解析错误，导致主机只能通过 IP 地址访问，而无法通过主机名访问。要排查此问题，您可以使用 `nslookup`
    命令，并结合 `ping` 命令进行诊断，即使这不是一个第 3 层的协议。
- en: If the `nslookup` command has the same IP output as the `ping` command, it means
    that everything is fine. If a different IP address shows up in the output, then
    you have an issue with your host’s configuration. In the next section, we will
    show you how to diagnose both the layer 4 and layer 5 stacks.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `nslookup` 命令与 `ping` 命令输出的 IP 地址相同，那么一切正常。如果输出中出现不同的 IP 地址，那么您的主机配置可能存在问题。在下一部分中，我们将向您展示如何诊断第
    4 层和第 5 层的协议栈。
- en: Diagnosing the transport and application layers (layers 4 and 5)
  id: totrans-348
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 诊断传输层和应用层（第 4 层和第 5 层）
- en: The last two layers, layer 4 (`ss` command (where `ss` is short for **socket
    statistics**).
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的两层，第 4 层（`ss` 命令，其中 `ss` 是 **套接字统计** 的缩写）。
- en: The `ss` command is a recent replacement for `netstat` and is used to see the
    list of all network sockets. As such, a list can have a significant size, so you
    could use several command options to reduce it.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '`ss` 命令是 `netstat` 的最近替代品，用于查看所有网络套接字的列表。因此，列表可能会非常长，您可以使用多个命令选项来缩短它。'
- en: 'For example, you could use the `-t` option to see only the TCP sockets, the
    `-u` option for UDP sockets, and `-x` for Unix sockets. Thus, to see TCP and UDP
    socket information, we will use the `ss` command with the `-t` option. Furthermore,
    to see all the listening sockets on your system, you can use the `-l` option.
    This one, combined with the `-u` and `-t` options, will show you all the UDP and
    TCP listening sockets on your system. The following is an excerpt from a much
    longer list:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以使用 `-t` 选项仅查看 TCP 套接字，使用 `-u` 选项查看 UDP 套接字，使用 `-x` 查看 Unix 套接字。因此，要查看
    TCP 和 UDP 套接字信息，我们将使用带有 `-t` 选项的 `ss` 命令。此外，要查看系统上所有的监听套接字，您可以使用 `-l` 选项。将其与 `-u`
    和 `-t` 选项结合使用，将显示系统上所有的 UDP 和 TCP 监听套接字。以下是从更长列表中截取的一部分：
- en: "![Figure 10.25 – Using the ss command to list TCP and UDP sockets and \uFEFF\
    all listening sockets](img/B19682_10_25.jpg)"
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.25 – 使用 `ss` 命令列出 TCP 和 UDP 套接字以及所有监听套接字](img/B19682_10_25.jpg)'
- en: Figure 10.25 – Using the ss command to list TCP and UDP sockets and all listening
    sockets
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.25 – 使用 `ss` 命令列出 TCP 和 UDP 套接字以及所有监听套接字
- en: 'The `ss` command is important for network troubleshooting when you want to
    verify the available sockets and the ones that are in the `LISTEN` state, for
    example. Another use is for the `TIME_WAIT` state, and in this case, you can use
    the command as shown in the following screenshot:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '`ss` 命令在网络故障排除中非常重要，尤其是当您想要验证可用套接字及其处于 `LISTEN` 状态时。另一个用途是检查 `TIME_WAIT` 状态，您可以使用如下截图中的命令：'
- en: '![Figure 10.26 – Showing the TIME_WAIT ports with the ss command](img/B19682_10_26.jpg)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.26 – 使用 `ss` 命令显示 TIME_WAIT 端口](img/B19682_10_26.jpg)'
- en: Figure 10.26 – Showing the TIME_WAIT ports with the ss command
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.26 – 使用 `ss` 命令显示 TIME_WAIT 端口
- en: We used the `ss` command with the `-o` option and the `state time-wait` argument.
    The `TIME_WAIT` state is achieved when a socket closes for a short time.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了 `ss` 命令，搭配 `-o` 选项和 `state time-wait` 参数。当一个套接字关闭一段短时间时，会进入 `TIME_WAIT`
    状态。
- en: 'For more information on this state, you can visit the following link: [https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux](https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux).'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 如需获取更多关于此状态的信息，您可以访问以下链接：[https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux](https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux)。
- en: The `ss` tool should not be missing from a system administrator’s toolbox. Layer
    5, the application layer, comprises protocols used by applications, and we will
    remember protocols such as the **Dynamic Host Configuration Protocol** (**DHCP**),
    the **Hypertext Transfer Protocol** (**HTTP**), and the **File Transfer Protocol**
    (**FTP**). Since diagnosing layer 5 is mainly an application troubleshooting process,
    this will not be covered in this section.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '`ss`工具在系统管理员的工具箱中不可或缺。第5层，应用层，包含应用程序使用的协议，我们将记住像**动态主机配置协议**（**DHCP**）、**超文本传输协议**（**HTTP**）和**文件传输协议**（**FTP**）这样的协议。由于诊断第5层主要是一个应用程序故障排除过程，本节将不涉及此内容。'
- en: In the next section, we will discuss troubleshooting hardware issues.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论硬件故障排除。
- en: Tools for troubleshooting hardware issues
  id: totrans-361
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除硬件问题的工具
- en: The first step in troubleshooting hardware issues is to check your hardware.
    A very good tool to see details about the system’s hardware is the `dmidecode`
    command. This command is used to read details about each hardware component in
    a human-readable format. Each piece of hardware has a specific DMI code, depending
    on its type. This code is specific to the **System Management Basic Input/Output
    System** (**SMBIOS**). There are 45 codes that are used by the SMBIOS. More information
    about the codes can be obtained at [https://www.thegeekstuff.com/2008/11/how-to-get-hardware-information-on-linux-using-dmidecode-command/](https://www.thegeekstuff.com/2008/11/how-to-get-hardware-information-on-linux-using-dmidecode-command/).
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 故障排除硬件问题的第一步是检查你的硬件。查看系统硬件详细信息的一个非常好的工具是`dmidecode`命令。此命令用于以人类可读的格式读取每个硬件组件的详细信息。每个硬件都有一个特定的DMI代码，取决于它的类型。该代码特定于**系统管理基础输入/输出系统**（**SMBIOS**）。SMBIOS使用45个代码。有关这些代码的更多信息，可以访问[https://www.thegeekstuff.com/2008/11/how-to-get-hardware-information-on-linux-using-dmidecode-command/](https://www.thegeekstuff.com/2008/11/how-to-get-hardware-information-on-linux-using-dmidecode-command/)。
- en: 'To view details about the system’s memory, you can use the `dmidecode` command
    with the `-t` option (from `TYPE`) and code `17`, which corresponds to the memory
    device code from SMBIOS. An example from our virtual machine is as follows:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看系统内存的详细信息，可以使用带有`-t`选项（来自`TYPE`）和代码`17`的`dmidecode`命令，这对应于SMBIOS中的内存设备代码。以下是我们虚拟机中的一个示例：
- en: '![Figure 10.27 – Using dmidecode to view information about memory](img/B19682_10_27.jpg)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.27 – 使用 dmidecode 查看内存信息](img/B19682_10_27.jpg)'
- en: Figure 10.27 – Using dmidecode to view information about memory
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.27 – 使用 dmidecode 查看内存信息
- en: To see details about other hardware components, use the command with the specific
    code.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看其他硬件组件的详细信息，请使用带有特定代码的命令。
- en: Other quick troubleshooting tools include commands such as `lspci`, `lsblk`,
    and `lscpu`. The output of the `lsblk` command shows information about the disks
    and partitions being used on the system. The `lscpu` command will show details
    about the CPU.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 其他快速故障排除工具包括`lspci`、`lsblk`和`lscpu`等命令。`lsblk`命令的输出显示系统中正在使用的磁盘和分区信息。`lscpu`命令将显示有关CPU的详细信息。
- en: Also, when you’re troubleshooting hardware issues, taking a quick look at the
    kernel’s logs could prove useful. To do this, use the `dmesg` command. You can
    use the `dmesg | more` command to have more control over the output.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，在故障排除硬件问题时，快速查看内核日志可能会很有帮助。要做到这一点，请使用`dmesg`命令。你可以使用`dmesg | more`命令来更好地控制输出。
- en: As you’ve seen in this section, hardware troubleshooting is just as important
    and challenging as all other types of troubleshooting. Solving hardware-related
    issues is an integral part of any system administrator’s job. This involves constantly
    checking hardware components, replacing the faulty parts with new ones, and making
    sure that they run smoothly.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在本节中看到的，硬件故障排除与其他类型的故障排除同样重要且具有挑战性。解决硬件相关的问题是任何系统管理员工作的重要组成部分。这包括不断检查硬件组件，替换故障部件，并确保它们顺利运行。
- en: Summary
  id: totrans-370
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we emphasized the importance of disaster recovery planning,
    backup and restore strategies, and troubleshooting various system issues. Every
    system administrator should be able to put their knowledge into practice when
    disaster strikes. Different types of failures will eventually hit the running
    servers, so solutions should be found as soon as possible to ensure minimal downtime
    and to prevent data loss.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们强调了灾难恢复计划、备份与恢复策略以及排除各种系统问题的重要性。每个系统管理员都应能够在灾难发生时将自己的知识付诸实践。不同类型的故障最终会影响正在运行的服务器，因此应尽快找到解决方案，以确保最小的停机时间并防止数据丢失。
- en: This chapter represented the culmination of the *Advanced Linux Administration*
    section of this book. In the next chapter, we will introduce you to **server administration**,
    with emphasis on KVM virtual machine management, Docker containers, and different
    types of Linux server configuration.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是本书*高级Linux管理*部分的高潮。在下一章中，我们将向你介绍**服务器管理**，重点讲解KVM虚拟机管理、Docker容器和不同类型的Linux服务器配置。
- en: Questions
  id: totrans-373
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Troubleshooting is problem-solving at its best. Before we dive into the server
    section, let’s test your troubleshooting knowledge:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 故障排除是解决问题的最佳方式。在我们深入服务器部分之前，先测试一下你的故障排除知识：
- en: Try to draft a DRP for your private network or small business.
  id: totrans-375
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试为你的私有网络或小型企业草拟一份灾难恢复计划（DRP）。
- en: Back up your entire system using the 321 rule.
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用321规则备份你的整个系统。
- en: Find out what your system’s top 10 processes are that use CPU the most.
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找系统中使用CPU最多的前10个进程。
- en: Find out what your system’s top 10 processes are that use RAM the most.
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找系统中使用内存最多的前10个进程。
- en: Further reading
  id: totrans-379
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 延伸阅读
- en: 'Ubuntu LTS official documentation: [https://ubuntu.com/server/docs](https://ubuntu.com/server/docs)'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu LTS官方文档：[https://ubuntu.com/server/docs](https://ubuntu.com/server/docs)
- en: 'RHEL official documentation: [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/)'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHEL官方文档：[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/)
- en: 'SUSE official documentation: [https://documentation.suse.com/](https://documentation.suse.com/)'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SUSE官方文档：[https://documentation.suse.com/](https://documentation.suse.com/)
- en: Part 3:Server Administration
  id: totrans-383
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3部分：服务器管理
- en: In this third part, you will learn about advanced Linux server administration
    tasks by setting up different types of servers, as well as working with and managing
    virtual machines and Docker containers.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，你将通过设置不同类型的服务器来学习高级Linux服务器管理任务，并学习如何处理和管理虚拟机和Docker容器。
- en: 'This part has the following chapters:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 11*](B19682_11.xhtml#_idTextAnchor231), *Working with Virtual Machines*'
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第11章*](B19682_11.xhtml#_idTextAnchor231)，*与虚拟机的工作*'
- en: '[*Chapter 12*](B19682_12.xhtml#_idTextAnchor257), *Managing Containers with
    Docker*'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*](B19682_12.xhtml#_idTextAnchor257)，*使用Docker管理容器*'
- en: '[*Chapter 13*](B19682_13.xhtml#_idTextAnchor276), *Configuring Linux Servers*'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第13章*](B19682_13.xhtml#_idTextAnchor276)，*配置Linux服务器*'
