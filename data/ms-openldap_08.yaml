- en: Chapter 8. LDAP and the Web
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 LDAP 与 Web
- en: 'The book thus far has been focused on the LDAP services themselves. In this
    chapter we will look at integrating LDAP with other services. The focus of this
    chapter will be on integrating OpenLDAP and LDAP-enabled web services. The goal
    is not only to provide some concrete examples of certain web services, but also
    to give a general idea as to the common features of LDAP-enabled applications.
    We will make use primarily of the Apache web server, and of the phpLDAPadmin tool.
    In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，本书的重点是 LDAP 服务本身。在这一章中，我们将探讨如何将 LDAP 与其他服务集成。本章的重点将是将 OpenLDAP 与支持 LDAP
    的 Web 服务集成。目标不仅是提供一些具体的 Web 服务示例，还要给出关于支持 LDAP 的应用程序常见特征的一般了解。我们主要将使用 Apache Web
    服务器和 phpLDAPadmin 工具。本章将涉及以下主题：
- en: The basics of LDAP-enabled applications
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持 LDAP 的应用程序基础知识
- en: Using OpenLDAP for Apache authentication
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenLDAP 进行 Apache 认证
- en: Other features of Apache's LDAP module
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache LDAP 模块的其他功能
- en: Installing and configuring phpLDAPadmin
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置 phpLDAPadmin
- en: Managing a directory server through the web interface
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 Web 界面管理目录服务器
- en: We will conclude with some general guidance on integrating OpenLDAP and LDAP-aware
    applications.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将以一些关于集成 OpenLDAP 和支持 LDAP 的应用程序的一般指导结束。
- en: The LDAP-Aware Application
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 支持 LDAP 的应用程序
- en: What does it mean to say of an application that it is LDAP-aware? An LDAP-aware
    application is an application that can make use of directory information by contacting
    a directory server over the LDAP protocol and performing LDAP operations.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是支持 LDAP 的应用程序？支持 LDAP 的应用程序是指能够通过 LDAP 协议与目录服务器进行通信并执行 LDAP 操作，从而利用目录信息的应用程序。
- en: While the most common use of directory services is authentication, it is certainly
    not the only thing LDAP can be used for. Some DNS servers use a directory server
    to store zone information. Sendmail and Postfix can use LDAP to store information
    on mail routing. Mozilla Thunderbird, Microsoft Outlook, and many other mail clients
    treat LDAP servers as address books. All of these applications are rightly considered
    LDAP-enabled applications.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然目录服务最常见的用途是身份验证，但 LDAP 的用途绝不仅限于此。一些 DNS 服务器使用目录服务器存储区域信息。Sendmail 和 Postfix
    可以使用 LDAP 存储邮件路由信息。Mozilla Thunderbird、Microsoft Outlook 和许多其他邮件客户端将 LDAP 服务器视为地址簿。所有这些应用程序都被视为支持
    LDAP 的应用程序。
- en: Note
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: While there are many LDAP-aware applications, not all of them support the LDAP
    v3 protocol in spite of the fact that LDAP v3 has been around for a decade (see
    RFC 2251). Many LDAP-aware applications still use version 2 of the LDAP protocol,
    which lacks some important features, like StartTLS support and SASL binding.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有许多支持 LDAP 的应用程序，但并不是所有应用程序都支持 LDAP v3 协议，尽管 LDAP v3 已经发布了十年（请参见 RFC 2251）。许多支持
    LDAP 的应用程序仍然使用 LDAP 协议的版本 2，版本 2 缺少一些重要功能，如 StartTLS 支持和 SASL 绑定。
- en: 'The common feature of an LDAP-enabled application is the ability to connect
    to and bind to a directory server. And this is the feature that most often requires
    configuration. For that reason, most LDAP-enabled applications will need at minimum
    the following pieces of information:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 支持 LDAP 的应用程序的共同特点是能够连接并绑定到目录服务器。这也是最常需要配置的功能。因此，大多数支持 LDAP 的应用程序至少需要以下信息：
- en: A DN that will be used to bind to the directory.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个将用于绑定到目录的 DN。
- en: A password to use when binding.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于绑定时的密码。
- en: Information about the location of the LDAP server. This may be in the form of
    an `ldap` URL (`ldap://directory.example.com:389`) or a host and port pair (`host=directory.example.com`,
    `port=389`).
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 LDAP 服务器位置的信息。这可以是 `ldap` URL（`ldap://directory.example.com:389`）或主机和端口对（`host=directory.example.com`，`port=389`）。
- en: Some applications may need additional info, such as a search filter or a list
    of attributes to request.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一些应用程序可能需要额外的信息，如搜索过滤器或要请求的属性列表。
- en: Note
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If the DN is for the Anonymous user (which is an empty string), then password
    must not be set.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 DN 是匿名用户的 DN（即空字符串），则密码不需要设置。
- en: Of course, asking users to remember a full DN when they are normally accustomed
    to remembering only a login ID might not be a successful strategy. For this reason,
    many LDAP-enabled applications will use the traditional two-stage authentication,
    consisting of performing two simple binds.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，要求用户记住完整的 DN，而他们通常只习惯于记住登录 ID，这可能并不是一个成功的策略。为此，许多支持 LDAP 的应用程序将使用传统的两阶段认证，包括执行两次简单的绑定操作。
- en: Such an application will prompt a user for a login ID (usually mapped to the
    `uid` attribute in OpenLDAP) and a password. Then, the application will bind as
    an initial DN (often this DN will be anonymous), and then perform a search for
    the specified login attribute, in order to get the full DN. Then, the application
    will rebind with the newly-located DN and the user's supplied password.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的应用程序会提示用户输入登录 ID（通常映射到 OpenLDAP 中的 `uid` 属性）和密码。然后，应用程序会作为初始 DN 进行绑定（通常该
    DN 为匿名），接着执行对指定登录属性的搜索，以获取完整的 DN。然后，应用程序将使用新找到的 DN 和用户提供的密码重新绑定。
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In Chapter 5, we covered the different methods of binding to OpenLDAP.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在第五章中，我们介绍了不同的绑定 OpenLDAP 的方法。
- en: In this case, the application itself is not doing the password verification.
    It sends the password to the directory server, and the directory server does the
    appropriate authentication.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，应用程序本身并不进行密码验证。它将密码发送给目录服务器，目录服务器进行适当的身份验证。
- en: In rarer cases, applications may attempt a SASL bind instead of a simple bind.
    Then the application will not need the full DN. Instead, it will just need the
    SASL-specific information for the user (such as login ID and password for DIGEST-MD5,
    or an X.509 certificate for the SASL EXTERNAL mechanism).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在较少见的情况下，应用程序可能会尝试使用 SASL 绑定，而不是简单绑定。这样，应用程序将不需要完整的 DN。相反，它只需要用户的 SASL 特定信息（例如
    DIGEST-MD5 的登录 ID 和密码，或 SASL EXTERNAL 机制的 X.509 证书）。
- en: Applications that just use LDAP for authentication usually only need to perform
    the bind operation (or operations). Once the application knows that the user can
    successfully bind, the application has found out all it needs to know from the
    LDAP server.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 仅使用 LDAP 进行身份验证的应用程序通常只需要执行绑定操作（或多个操作）。一旦应用程序确认用户可以成功绑定，它就从 LDAP 服务器获取了所需的所有信息。
- en: Other applications (such as an address book or a DNS server) may continue to
    interact with the LDAP server to perform searches, or even to change the directory
    information tree.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 其他应用程序（例如通讯录或 DNS 服务器）可能会继续与 LDAP 服务器进行交互，执行搜索，甚至更改目录信息树。
- en: In this chapter we will first look at the Apache web server's ability to use
    OpenLDAP as an authentication source. Then we will move on to services that perform
    more substantial interactions with the directory server.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先查看 Apache web 服务器如何将 OpenLDAP 用作身份验证源。然后，我们将讨论那些与目录服务器进行更多互动的服务。
- en: Apache and LDAP
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache 和 LDAP
- en: The Apache web server ([http://httpd.apache.org](http://httpd.apache.org)) is
    the most frequently used web server on the Internet. It runs on most of the major
    operating systems, and is known for its stability and rich feature set. Almost
    every Linux distribution includes Apache as a supported package.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Apache web 服务器 ([http://httpd.apache.org](http://httpd.apache.org)) 是互联网中最常用的
    web 服务器。它可以运行在大多数主要操作系统上，以其稳定性和丰富的功能集而闻名。几乎每个 Linux 发行版都包括 Apache 作为支持的软件包。
- en: At the time of writing, Apache 2.2 is the version distributed with Ubuntu. But
    Apache 2.0 is still widely in use. Since configuration of LDAP between these two
    versions is slightly different, I will focus on Apache 2.2 but include tips on
    configuring the older Apache 2.0.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Ubuntu 发行版中提供的是 Apache 2.2 版本。但 Apache 2.0 仍然广泛使用。由于这两个版本之间的 LDAP 配置略有不同，我将重点介绍
    Apache 2.2，但也会包括配置旧版 Apache 2.0 的技巧。
- en: A Short Guide to Installing Apache
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Apache 简明指南
- en: Apache has an excellent manual, and the basic configuration provided with Ubuntu
    (and most other distributions, as well) is ready for basic use with very little
    configuration. So in this section, I will provide a very basic guide to getting
    started with Apache.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 提供了出色的手册，并且 Ubuntu 提供的基础配置（其他大多数发行版也是如此）几乎可以直接使用，只需很少的配置。因此，在这一部分，我将提供一个非常基本的
    Apache 入门指南。
- en: To learn more, you may want to consult the Apache website ([http://httpd.apache.org](http://httpd.apache.org)),
    the Ubuntu Apache configuration documentation ([https://help.ubuntu.com/7.04/server/C/httpd.html](https://help.ubuntu.com/7.04/server/C/httpd.html)),
    or one of the many guides, online and in print, on configuring Apache.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 若要了解更多信息，您可能希望查阅 Apache 网站 ([http://httpd.apache.org](http://httpd.apache.org))、Ubuntu
    Apache 配置文档 ([https://help.ubuntu.com/7.04/server/C/httpd.html](https://help.ubuntu.com/7.04/server/C/httpd.html))，或许多关于配置
    Apache 的指南，既有在线的，也有印刷版的。
- en: 'To install apache on Ubuntu, you will only need to run one command:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Ubuntu 上安装 Apache，您只需要运行一个命令：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installation of Apache will likely require that several other dependencies be
    installed, but `apt-get` will resolve the dependencies and merely prompt us to
    allow these to be installed.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Apache可能需要安装几个其他依赖项，但`apt-get`将解析这些依赖项，并仅提示我们允许安装它们。
- en: Note
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you built OpenLDAP from source, you may be prompted to install another (possibly
    older) version of the LDAP libraries to satisfy package dependencies. Doing so
    will not harm your current LDAP applications.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您从源代码构建OpenLDAP，则可能需要安装另一个（可能是较旧的）版本的LDAP库以满足软件包依赖关系。这样做不会影响当前的LDAP应用程序。
- en: In the previous version of Apache, version 1.3, an extra module (`mod_ldap`)
    needed to be installed in order to get LDAP support, but from Apache 2.0 onwards,
    LDAP support is included in the core Apache distribution. Later, we will install
    the PHP module to gain web server support for the PHP language, but for now we
    need no additional packages.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的Apache版本1.3中，需要安装额外的模块（`mod_ldap`）才能获得LDAP支持，但从Apache 2.0开始，LDAP支持已经包含在核心Apache发行版中。稍后，我们将安装PHP模块以获取对PHP语言的Web服务器支持，但目前不需要额外的软件包。
- en: 'The Apache configuration files are located, in Ubuntu, in the `/etc/apache2`
    directory. The directory layout looks like this:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu中，Apache配置文件位于`/etc/apache2`目录。目录布局如下：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The important ones, as far as we are concerned here, are highlighted.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们来说，重要的是已经突出显示。
- en: The `apache2.conf` file contains the basic settings for Apache. Apache can perform
    virtual hosting, where one server instance can host multiple different websites
    (on different IP addresses or host names). The `apache2.conf` file contains configuration
    information that applies to the core server and all hosted sites.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`apache2.conf`文件包含Apache的基本设置。Apache可以执行虚拟主机，其中一个服务器实例可以托管多个不同的网站（位于不同的IP地址或主机名上）。`apache2.conf`文件包含适用于核心服务器和所有托管站点的配置信息。'
- en: Like OpenLDAP, Apache's code is modular. Apart from the basic functionality
    of the server, features can be implemented in separate modules and loaded into
    the server at startup. When a module is installed, the module's configuration
    files are put in the `mods-available/` directory. To turn on a module one need
    only create a symbolic link in the `mods-enabled/` directory to the module's configuration
    files at `mods-available/` and, when Apache restarts, it will load the desired
    module. To further simplify this process there are two tools, `a2enmod` and `a2dismod`,
    that can be used (respectively) for enabling and disabling Apache modules.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于OpenLDAP，Apache的代码是模块化的。除了服务器的基本功能外，功能可以作为单独的模块实现，并在启动时加载到服务器中。安装模块时，模块的配置文件将放置在`mods-available/`目录中。要启用模块，只需在`mods-enabled/`目录中创建指向`mods-available/`目录中模块配置文件的符号链接，当Apache重新启动时，它将加载所需的模块。为了进一步简化此过程，还有两个工具，`a2enmod`和`a2dismod`，用于分别启用和禁用Apache模块。
- en: Note
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The method described here applies to Ubuntu, Debian, and a few other Apache
    distributions, but is not universal. Consult your system documentation for specific
    notes on how to enable or disable modules on your server. It is usually as simple
    as adding a line or two to one of the Apache configuration files.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法适用于Ubuntu、Debian和其他几个Apache发行版，但并非通用。请参阅您系统的文档，了解如何在服务器上启用或禁用模块的具体说明。通常只需在其中一个Apache配置文件中添加一两行即可。
- en: 'Finally, the virtual-host (or site-) specific configuration files are located
    at `sites-available/`. Such configuration files contain parameters that are specific
    to the particular virtual host, but not to the server generally. For example,
    say we want to host two websites on our Apache instance: `www.example.com` and
    `www.anothersite.com`. Each of these two sites would have a separate configuration
    file (usually eponymously called `www.example.com` and `www.anothersite.com`)
    in the `sites-available/` directory.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，虚拟主机（或站点特定）的配置文件位于`sites-available/`。这些配置文件包含特定于特定虚拟主机的参数，但不适用于整个服务器。例如，假设我们想在Apache实例上托管两个网站：`www.example.com`和`www.anothersite.com`。这两个站点将在`sites-available/`目录中分别有一个单独的配置文件（通常分别称为`www.example.com`和`www.anothersite.com`）。
- en: But simply having sites in the `sites-available/` folder is not enough to enable
    the site. As with modules, Apache checks the sites-enabled directory to see what
    sites it should activate at startup. Enabling a site takes nothing more than adding
    a symbolic link from the desired configuration file at `sites-available/` in the
    `sites-enabled/` directory. Again, the Apache utilities `a2ensite` and `a2dissite`
    can be used to manage those links.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，仅仅将网站放在`sites-available/`文件夹中并不足以启用该站点。与模块一样，Apache会检查`sites-enabled`目录，看看哪些站点应在启动时激活。启用站点只需要从`sites-available/`中的目标配置文件添加一个符号链接到`sites-enabled/`目录。同样，Apache的工具`a2ensite`和`a2dissite`可以用来管理这些链接。
- en: 'Ubuntu comes configured out of the box with a default website. The configuration
    file is at `sites-available/default`, and it is already linked to `sites-enabled/`.
    We need not change this configuration file to have a basic web server running.
    All we need to do to get Apache going is start it up:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu开箱即配了一个默认的网站。配置文件位于`sites-available/default`，并且已经链接到`sites-enabled/`。我们不需要更改这个配置文件就能运行一个基本的Web服务器。我们所需要做的就是启动Apache：
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You should now be able to browse the default website by pointing a web browser
    to the IP address of the server, for example `http://192.168.0.211`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该能够通过将Web浏览器指向服务器的IP地址来浏览默认网站，例如`http://192.168.0.211`。
- en: Configuring LDAP Authentication
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置LDAP认证
- en: 'The HTML files that this website serves are located at `/var/www/`. Let''s
    create a new directory in this folder, and then add password protection to it:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 该网站提供的HTML文件位于`/var/www/`。让我们在这个文件夹中创建一个新目录，然后为它添加密码保护：
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Inside of this new directory, let''s create a new XHTML page called `index.html`:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个新目录中，我们创建一个新的 XHTML 页面，命名为`index.html`：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This is just a simple, no-frills webpage that will set the title to `Insiders
    Only` and display the message: `This` `page` `is` `private`, `and` `only` `authenticated`
    `users` `should` `be` `able` `to` `access` `it`.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个简单、无花哨的网页，设置标题为`Insiders Only`，并显示消息：`This` `page` `is` `private`，`and`
    `only` `authenticated` `users` `should` `be` `able` `to` `access` `it`。
- en: Tip
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Granting Permissions**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**授予权限**'
- en: Apache runs as the user www-data. In order to serve the page to clients, Apache
    will need to be able to read the directory and the page. You may need to set the
    correct file system permissions with chmod. Directories will need to have read
    and execute permissions for www-data, and HTML files will need read access.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 以用户www-data的身份运行。为了将页面提供给客户端，Apache需要能够读取该目录和页面。你可能需要使用chmod设置正确的文件系统权限。目录需要为www-data设置读取和执行权限，HTML文件则需要读取权限。
- en: At this point you should be able to access this page by appending the directory
    name to the URL we accessed. In our example, the website URL was `http://192.168.0.211`.
    To access the `private/` directory's index page, we should be able to use the
    URL `http://192.168.0.211/private`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您应该能够通过在我们访问的URL后面加上目录名称来访问该页面。在我们的示例中，网站的URL是`http://192.168.0.211`。要访问`private/`目录的索引页面，我们应该能够使用`http://192.168.0.211/private`的URL。
- en: Of course, since we have not yet configured authentication for this directory,
    we will be able to see the page without first logging in.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，由于我们尚未为此目录配置认证，因此在未登录的情况下我们仍然能够查看该页面。
- en: Now that we have our new folder and HTML page, we can go about securing it from
    prying eyes. To do this, we will configure Apache to load the LDAP modules and
    then add a few lines to the `sites-available/default` file to turn on LDAP authentication
    for that folder and its contents.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了新的文件夹和HTML页面，我们可以开始为它提供安全保护，防止被窥探。为此，我们将配置Apache加载LDAP模块，并在`sites-available/default`文件中添加几行代码，启用该文件夹及其内容的LDAP认证。
- en: Loading the Modules
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加载模块
- en: The LDAP features for Apache are all implemented as Apache modules. By default,
    they are not turned on though they are installed. That is, the code is present
    on the server, and the default configuration files are located at `/etc/apache2/mods-available`,
    but no symbolic links to those files are present at `/etc/apache2/mods-enabled`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Apache的LDAP功能都是作为Apache模块实现的。默认情况下，它们并没有被启用，尽管已经安装。也就是说，代码已经存在于服务器上，默认的配置文件位于`/etc/apache2/mods-available`，但在`/etc/apache2/mods-enabled`中并没有指向这些文件的符号链接。
- en: Between Apache 2.0 and Apache 2.2, the names of these modules changed to better
    reflect what they are used for.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在Apache 2.0和Apache 2.2之间，这些模块的名称发生了变化，更好地反映了它们的用途。
- en: 'To enable the correct modules in Apache 2.2, run the `a2enmod` command:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Apache 2.2中启用正确的模块，请运行`a2enmod`命令：
- en: '[PRE5]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This will add a link in `mods-enabled` to `mods-available/auth_ldap.load`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这将会在 `mods-enabled` 中添加一个指向 `mods-available/auth_ldap.load` 的链接。
- en: 'In the older Apache 2.0, we will need to run a similar command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在较旧的 Apache 2.0 中，我们需要运行类似的命令：
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Tip
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Why the Difference?**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么会有差异？**'
- en: One of the major improvements introduced in Apache 2.2 is the reworking of the
    "Authentication, Authorization, and Access Control" features. The result of this
    reworking is a cleaner separation of authentication (AuthN) from authorization
    (AuthZ). This separation is reflected in module names.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 2.2 引入的一个重要改进是“身份验证、授权和访问控制”功能的重新设计。重新设计的结果是将身份验证（AuthN）和授权（AuthZ）更加清晰地分离。这一分离体现在模块名称上。
- en: 'Next, we will need to restart the server so that it will load and configure
    the module:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要重启服务器，以便它加载并配置该模块：
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Once that has been done we are ready to move on to the site's configuration
    file and add some protection to the new `/var/www/private` directory.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成这些操作，我们就可以继续编辑站点的配置文件，并为新建的 `/var/www/private` 目录添加一些保护措施。
- en: Editing the default Configuration File
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编辑默认配置文件
- en: The `default` configuration file is around 45 lines long. It contains all of
    the configuration directives necessary for running a rudimentary web server.The
    Ubuntu documentation explains the directives in this file.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`default` 配置文件大约有 45 行。它包含了运行一个基本 Web 服务器所需的所有配置指令。Ubuntu 文档解释了此文件中的指令。'
- en: 'We are interested in creating a portion of the configuration file with this
    structure:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望在配置文件中创建一个如下结构的部分：
- en: '[PRE8]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: A `<Directory>` section indicates that the configuration directives enclosed
    within the tag apply specifically to the named directory (`/path/on/file/system`
    in the given example) and its contents.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`<Directory>` 部分表示该标签内的配置指令专门应用于指定的目录（在给定示例中的 `/path/on/file/system`）及其内容。'
- en: The path that is contained inside the `<Directory>` tag is the file system path,
    not the relative path component from the URL. That is, our `private/` directory
    is located at `/var/www/private/` on the file system, but it's URL is `http://192.168.0.211/private`
    (and its relative URL, the part of the URL after the server section, is `/private/`).
    In the `<Directory>` tag, we would use `/var/www/private/`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`<Directory>` 标签内包含的路径是文件系统路径，而不是 URL 的相对路径组件。也就是说，我们的 `private/` 目录位于文件系统的
    `/var/www/private/` 位置，但它的 URL 是 `http://192.168.0.211/private`（相对 URL，即服务器部分后的
    URL，是 `/private/`）。在 `<Directory>` 标签中，我们将使用 `/var/www/private/`。'
- en: Since the parameters between the `<Directory>` and `</Directory>` tags apply
    only to the contents of that directory, a directory section can fine-tune permissions,
    features, and services at the directory level. We will create our own `<Directory>`
    section to add LDAP authentication to the `private/` directory.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 `<Directory>` 和 `</Directory>` 标签之间的参数仅适用于该目录的内容，因此目录部分可以在目录级别上微调权限、功能和服务。我们将创建自己的
    `<Directory>` 部分，以便为 `private/` 目录添加 LDAP 身份验证。
- en: To set this up we will need a mixture of parameters from the Apache's `mod_auth`
    and `mod_access` modules, which provide basic authentication and authorization
    services and are loaded by default, and the `ldap_auth` module, which we just
    loaded in the last section.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置这一功能，我们需要结合使用 Apache 的 `mod_auth` 和 `mod_access` 模块的参数，它们提供基本的身份验证和授权服务并默认加载，以及我们在上一节中刚加载的
    `ldap_auth` 模块。
- en: Again, there is a difference between the Apache 2.0 configuration and the Apache
    2.2 configuration. We will first take a close look at the Apache 2.2, and also
    provide a brief example of an Apache 2.0 configuration.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提醒，Apache 2.0 配置和 Apache 2.2 配置之间有所不同。我们将首先详细查看 Apache 2.2 配置，并简要提供 Apache
    2.0 配置的示例。
- en: The Directory Section—Apache 2.2
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 目录部分——Apache 2.2
- en: 'Now we are ready to create a new `<Directory>` section that will apply to the
    `/var/www/private` directory. We will add the following just above the `</VirtualHost>`
    line in the `default` configuration file:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备创建一个新的 `<Directory>` 部分，该部分将应用于 `/var/www/private` 目录。我们将在 `default`
    配置文件中的 `</VirtualHost>` 行上方添加以下内容：
- en: '[PRE9]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `<Directory>` section applies to our newly-created `private/` directory,
    and the directives specified in this section will force web users to authenticate
    when they try to access the `private/` directory or anything in it.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`<Directory>` 部分应用于我们新创建的 `private/` 目录，本节中指定的指令将强制网页用户在尝试访问 `private/` 目录或其中的任何内容时进行身份验证。'
- en: The first two parameters are part of Apache's built-in `mod_auth_basic` module.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 前两个参数是 Apache 内置的 `mod_auth_basic` 模块的一部分。
- en: 'The first parameter in the `<Directory>` section is `AuthType`. This parameter
    controls how the password information is sent from the client to the server and
    there are two possible values: `Basic` and `Digest`. If `Basic` is specified then
    passwords will be sent to the server in cleartext. Unfortunately, many HTTP clients
    only support `Basic`. `Digest` is more secure (setting it will instruct the client
    to hash the password before sending), but it is not as widely supported. Since
    this module uses an LDAP simple bind, the password must be sent unencrypted, which
    means that only `Basic` is currently supported.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`<Directory>` 部分中的第一个参数是 `AuthType`。该参数控制密码信息从客户端传输到服务器的方式，可能的值有两个：`Basic`
    和 `Digest`。如果选择 `Basic`，则密码将以明文发送到服务器。不幸的是，许多 HTTP 客户端只支持 `Basic`。`Digest` 更加安全（设置它将指示客户端在发送前对密码进行哈希处理），但支持的客户端较少。由于该模块使用
    LDAP 简单绑定，因此密码必须以未加密的形式发送，这意味着当前仅支持 `Basic`。'
- en: Tip
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Encrypting HTTP Traffic**'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**加密 HTTP 流量**'
- en: The best way of securing this authentication process is by configuring Apache
    to use SSL/TLS when communicating with the client. The Ubuntu Apache documentation
    and the official Apache project documentation both cover this.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 确保认证过程安全的最佳方式是配置 Apache 使用 SSL/TLS 来与客户端通信。Ubuntu Apache 文档和官方 Apache 项目文档都有相关介绍。
- en: 'The value of the `AuthName` field is sent to the browser as a way of indicating
    what the authentication is for. For example, when a web browser tries to access
    a file inside the `private/` directory, the user will be prompted for authentication
    information with a dialog box that looks something like this:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`AuthName` 字段的值会发送到浏览器，作为指示认证目的的方式。例如，当一个网页浏览器试图访问 `private/` 目录中的文件时，用户将会看到一个提示要求输入认证信息的对话框，样式大致如下：'
- en: '![The Directory Section—Apache 2.2](img/1021_08_01.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![The Directory Section—Apache 2.2](img/1021_08_01.jpg)'
- en: 'The `AuthName` appears in the first line of the dialog: **Enter username and
    password for "LDAP" at http://localhost**. In general, the value of `AuthName`
    ought to be a hint to indicate to the user what she or he is logging in to.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`AuthName` 显示在对话框的第一行：**请输入 "LDAP" 的用户名和密码，网址：http://localhost**。通常，`AuthName`
    的值应该是一个提示，告知用户他或她正在登录的内容。'
- en: Moving on to the next line in the `<Directory>` section, `AuthBasicProvider`
    specifies which service will be used for basic authentication. Along with LDAP,
    Apache supports flat files, hash-style databases, relational databases and other
    sources.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `<Directory>` 部分的下一行，`AuthBasicProvider` 指定用于基本认证的服务。除了 LDAP，Apache 还支持平面文件、哈希式数据库、关系型数据库以及其他来源。
- en: We want to use LDAP authentication. In Apache 2.2, LDAP authentication (AuthN)
    and Authorization (AuthZ) services are provided by the module `mod_authnz_ldap`.
    To use the `mod_authnz_ldap` authentication source, the `AuthBasicProvider` parameter
    should have the value `ldap`. This means that when the client attempts to authenticate
    to the web server, an LDAP source will be used to process the authentication tokens.
    In other words, username and password will be verified against the directory.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望使用 LDAP 认证。在 Apache 2.2 中，LDAP 认证（AuthN）和授权（AuthZ）服务由 `mod_authnz_ldap`
    模块提供。要使用 `mod_authnz_ldap` 认证源，`AuthBasicProvider` 参数应设置为 `ldap`。这意味着当客户端尝试对 Web
    服务器进行认证时，将使用 LDAP 源来处理认证令牌。换句话说，用户名和密码将与目录中的信息进行比对。
- en: Once authentication has successfully occurred, the next phase is *authorization*.
    During this phase the web server determines whether the authenticated user can
    access the requested resource. The next two parameters apply to the authorization
    process.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦认证成功，下一阶段是 *授权*。在这一阶段，Web 服务器决定认证过的用户是否有权限访问请求的资源。接下来两个参数适用于授权过程。
- en: The `Require` directive specifies what requirements must be met for a user to
    be granted access to the requested resource. Later, we will examine ways to require
    that the user have a particular attribute or be a member of a particular group
    in the directory information tree. But in our example the requirement, `valid-user`,
    requires only that the user exists in the specified source (the directory in this
    case) and that the user can successfully authenticate.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`Require` 指令指定用户获得访问请求资源的条件。稍后，我们将探讨如何要求用户具备特定属性或成为目录信息树中特定组的成员。但在我们的示例中，`valid-user`
    要求仅需要用户存在于指定的来源（此例为目录中）并且用户能够成功认证。'
- en: '`AuthzLDAPAuthoritative` indicates whether LDAP alone ought to be used as a
    source of authorization information. By default this is on, which will cause Apache
    to use one of the `ldap-*` `Require` values. But in the previous example all we
    want to do is make sure that the user is a valid user—that is, that the user successfully
    authenticated. That alone is sufficient authorization for us. Validity checking,
    in this way, is provided outside of the `mod_authnz_ldap` module, so we need to
    turn off the `AuthzLDAPAuthoritative` flag:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`AuthzLDAPAuthoritative` 表示是否应仅使用 LDAP 作为授权信息的来源。默认情况下，这是启用的，这将导致 Apache 使用一个
    `ldap-*` `Require` 值。但在之前的示例中，我们要做的只是确保用户是有效用户——也就是说，用户已成功通过身份验证。仅此就足够作为我们的授权。在这种情况下，验证检查是在
    `mod_authnz_ldap` 模块外部提供的，因此我们需要关闭 `AuthzLDAPAuthoritative` 标志：'
- en: '[PRE10]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In order to use the `valid-user` value for the `require` parameter, we need
    to turn `AuthzLDAPAuthoritative` off so that another module (`mod_auth_basic`)
    can be used to handle authorization. In this case, LDAP will only do the authentication
    step.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用 `require` 参数的 `valid-user` 值，我们需要关闭 `AuthzLDAPAuthoritative`，以便可以使用另一个模块（`mod_auth_basic`）来处理授权。在这种情况下，LDAP
    只会执行身份验证步骤。
- en: 'The next three directives are LDAP-specific:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的三个指令是 LDAP 特定的：
- en: '[PRE11]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '`AuthLDAPBindDN` and `AuthLDAPBindPassword` specify what DN and password Apache
    should use to perform a simple bind to the LDAP server. When a new authentication
    request comes in, Apache will bind to SLAPD with this DN and password and then
    search the directory information tree to get the DN of the user who is trying
    to authenticate. In other words, the bind DN and password are used for the first
    phase of the two-stage authentication discussed in the first part of this chapter.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`AuthLDAPBindDN` 和 `AuthLDAPBindPassword` 指定了 Apache 应使用的 DN 和密码，以执行对 LDAP
    服务器的简单绑定。当新的身份验证请求到来时，Apache 将使用此 DN 和密码绑定到 SLAPD，然后搜索目录信息树以获取尝试进行身份验证的用户的 DN。换句话说，绑定的
    DN 和密码用于本章第一部分讨论的两阶段身份验证的第一阶段。'
- en: Note
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If `AuthLDAPBindDN` and `AuthLDAPBindPassword` are omitted, Apache will bind
    as the Anonymous user.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略了 `AuthLDAPBindDN` 和 `AuthLDAPBindPassword`，Apache 将作为匿名用户进行绑定。
- en: For this application, the `uid=Authenticate` system account will be used to
    access the directory. This provides a degree of security (since we don't have
    to allow anonymous binding and searching), and it can also provide a better audit
    trail of who accessed what in the directory.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此应用程序，将使用 `uid=Authenticate` 系统帐户来访问目录。这提供了一定程度的安全性（因为我们不必允许匿名绑定和搜索），同时也可以提供更好的审计跟踪，记录谁访问了目录中的哪些内容。
- en: Note
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Your SLAPD ACLs will need to be configured in such a way as to allow this DN
    to bind from the Apache server or else the first stage of authentication will
    fail.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 SLAPD ACL 需要配置成允许此 DN 从 Apache 服务器进行绑定，否则身份验证的第一阶段将失败。
- en: The third `mod_authnz_ldap` directive is `AuthLDAPURL`. This parameter takes
    as its value an LDAP URL, complete with a base DN, a search type, a search pattern,
    and the attributes to be returned.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个 `mod_authnz_ldap` 指令是 `AuthLDAPURL`。该参数的值是一个 LDAP URL，包含基本 DN、搜索类型、搜索模式以及要返回的属性。
- en: 'In the previous example we used this LDAP URL: `ldap://localhost/ou=Users,dc=example,dc=com?uid??(objectclass=inetOrgPerson)`.
    Apache uses this URL to extract all of the information it will need to search
    for the DN of the user.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们使用了这个 LDAP URL：`ldap://localhost/ou=Users,dc=example,dc=com?uid??(objectclass=inetOrgPerson)`。Apache
    使用此 URL 提取它需要的所有信息，以便搜索用户的 DN。
- en: When a user logs in, as seen in the login dialog box a few pages back, Apache
    will get a username and a password. The username should map to the `uid` attribute
    of that user's LDAP record, and the password should match the value of the `userPassword`
    attribute (after SLAPD hashes it of course).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户登录时，正如几页之前登录对话框所示，Apache 将获取用户名和密码。用户名应映射到该用户 LDAP 记录中的 `uid` 属性，密码应与 `userPassword`
    属性的值匹配（当然是在 SLAPD 对其进行哈希处理之后）。
- en: Once it has received this information, Apache will bind as the DN in `AuthLDAPBindDN`,
    and execute a search based on the LDAP URL above, with the goal of getting the
    DN for the user who is trying to log in.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦接收到这些信息，Apache 将使用 `AuthLDAPBindDN` 中的 DN 进行绑定，并根据上述 LDAP URL 执行搜索，目标是获取尝试登录的用户的
    DN。
- en: Note
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that it is Apache that does all of the LDAP communication, not the browser.
    At no point does the web browser connect directly to the LDAP server. This means
    that the directory can be secured behind a firewall. As long as Apache can contact
    it, LDAP authentication can be used.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，所有 LDAP 通信都由 Apache 执行，而不是浏览器。网页浏览器从未直接连接到 LDAP 服务器。这意味着目录可以被防火墙保护。只要 Apache
    可以访问它，LDAP 认证就可以使用。
- en: 'While LDAP URLs are covered in more detail in [Appendix B](apb.html "Appendix B. LDAP
    URLs"), we will take a brief look at the one we have just seen to understand its
    function. The protocol section says that Apache is to make an unencrypted LDAP
    connection:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 LDAP URL 在[附录 B](apb.html "附录 B. LDAP URL")中有更详细的介绍，我们将简要查看刚才看到的 URL，以理解其功能。协议部分表明
    Apache 要建立一个未加密的 LDAP 连接：
- en: '[PRE12]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: An SSL LDAP connection can be made by using `ldaps://` instead of `ldap://`.
    (And you may also need the `LDAPTrustedGlobalCert` parameter to indicate where
    the certificate authority file for the LDAP certificate is located.)
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过使用 `ldaps://` 代替 `ldap://` 来建立 SSL LDAP 连接。（您可能还需要 `LDAPTrustedGlobalCert`
    参数来指示 LDAP 证书的证书授权文件的位置。）
- en: Tip
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Using StartTLS instead of LDAPS**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用 StartTLS 代替 LDAPS**'
- en: StartTLS (rather than LDAPS) is the preferred way of making an SSL/TLS connection
    to the directory. To use StartTLS in Apache 2.2 add the directive `LDAPTrustedMode
    TLS` to the `<Directory>` section. Again, you may need the `LDAPTrustedGlobalCert`
    parameter or other SSL/TLS parameters.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: StartTLS（而不是 LDAPS）是建立 SSL/TLS 连接到目录的首选方式。要在 Apache 2.2 中使用 StartTLS，请将指令`LDAPTrustedMode
    TLS`添加到`<Directory>`部分。再次提醒，您可能需要 `LDAPTrustedGlobalCert` 参数或其他 SSL/TLS 参数。
- en: 'After the protocol section of the URL comes the host:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: URL 的协议部分之后是主机：
- en: '[PRE13]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In this case, SLAPD is running on the same server as Apache, so `localhost`
    (or `127.0.0.1`) will cause Apache to use the loopback interface to connect to
    SLAPD.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，SLAPD 与 Apache 运行在同一台服务器上，因此 `localhost`（或 `127.0.0.1`）将导致 Apache 使用回环接口连接到
    SLAPD。
- en: 'The next section is the base DN, the DN where SLAPD will start its search for
    the user:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分是基础 DN，即 SLAPD 开始搜索用户的 DN：
- en: '[PRE14]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Since our users are all under the `ou=Users,dc=example,dc=com` branch, that
    is what we will use for our base DN.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的用户都位于 `ou=Users,dc=example,dc=com` 分支下，因此我们将使用它作为基础 DN。
- en: 'The rest of the parameters are all separated by question marks (`?`) instead
    of slashes. After the base DN comes the attribute that SLAPD will search for:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 剩余的参数都由问号（`?`）分隔，而不是斜杠。在基础 DN 后是 SLAPD 将搜索的属性：
- en: '[PRE15]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In this case, the name that the user sent to the directory should be her or
    his UID, so we want to look for the `uid` attribute. Similarly, you can use `cn`
    or any other attribute provided that you know it will return no more than one
    match.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，用户发送到目录的名称应该是她或他的 UID，因此我们需要查找 `uid` 属性。类似地，您可以使用 `cn` 或任何其他属性，只要您知道它将返回不超过一个匹配项。
- en: 'For Apache authentication to work an identifying attribute must return a unique
    DN. The operating principle for this is as follows: if a search for an entry were
    to return more than one, Apache would have no way of knowing which of the records
    was the appropriate one for the authenticating user. Therefore, if a search returns
    with multiple DNs Apache will consider the authentication attempt to have failed,
    and will not allow the user to access the site.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 要使 Apache 认证正常工作，必须返回唯一的 DN 作为标识属性。其操作原理如下：如果搜索返回多个条目，Apache 无法确定哪个记录是正确的认证用户。因此，如果搜索返回多个
    DN，Apache 将认为认证尝试失败，并且不允许用户访问该站点。
- en: After `uid` comes an empty parameter, indicated by the presence of two separators
    in a row`(??)` `??:`
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `uid` 后面是一个空参数，表示通过两个连续的分隔符`(??)` `??:`。
- en: '[PRE16]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This section, which is left blank, can be used to specify the search scope.
    By leaving this empty, we are accepting the default scope, which is `sub` (subtree).
    A subtree scope instructs SLAPD to look for any records that appear in or subordinate
    to the base DN. Other options are `base`, `one`, and `children`.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分可以用来指定搜索范围。将其留空表示接受默认范围，即 `sub`（子树）。子树范围指示 SLAPD 查找出现在基础 DN 或其下属的任何记录。其他选项包括
    `base`、`one` 和 `children`。
- en: 'The last field is the filter:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个字段是过滤器：
- en: '[PRE17]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This indicates that only records with the `inetOrgPerson` object class should
    be searched. When Apache processes the URL, it will construct a search filter
    that combines the username search with the given filter. The result is something
    like this: `(&(uid=matt)(objectclass=inetOrgPerson))`, where `matt` is the name
    of the user trying to log in.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这表示只有具有`inetOrgPerson`对象类的记录才会被搜索。当Apache处理URL时，它将构造一个结合用户名搜索和给定过滤器的搜索过滤器。结果可能是这样的：`(&(uid=matt)(objectclass=inetOrgPerson))`，其中`matt`是尝试登录的用户的名称。
- en: Against our directory information tree, the search should return one DN, `uid=matt,
    ou=users,dc=example,dc=com`. When the DN is returned to Apache it will then perform
    a second bind, this time as `uid=matt,ou=users,dc=example,dc=com` with the password
    submitted by the user. If this bind succeeds then Apache will grant the user access.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 针对我们的目录信息树，搜索应该返回一个DN，`uid=matt, ou=users,dc=example,dc=com`。当DN返回到Apache时，它将执行第二次绑定，这次使用`uid=matt,ou=users,dc=example,dc=com`和用户提交的密码。如果该绑定成功，则Apache将授予用户访问权限。
- en: With these parameters in the `<Directory>` section, we have now configured Apache
    to only allow web users to see information in the `private/` directory if they
    exist in the directory information tree and can supply the information necessary
    to successfully bind.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在`<Directory>`部分中使用这些参数后，我们已经配置了Apache，仅当web用户在目录信息树中存在并能够提供必要的信息成功绑定时，才能查看`private/`目录中的信息。
- en: Changes in Apache 2.0
  id: totrans-145
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Apache 2.0的变化
- en: 'To get basically the same behavior in Apache 2.0, we need to make a few minor
    changes to the configuration:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Apache 2.0中获得基本相同的行为，我们需要对配置进行一些小的修改：
- en: '[PRE18]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This file differs from the Apache 2.2 configuration only in that it is missing
    the `AuthBasicProvider` and the `AuthzLDAPAuthoritative` parameters.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件与Apache 2.2配置的不同之处在于，它缺少`AuthBasicProvider`和`AuthzLDAPAuthoritative`参数。
- en: Other Features of the Require Parameter
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Require`参数的其他功能'
- en: In the previous section we used the `Require` `valid-user` parameter to enforce
    the authorization requirement that any user that tried to access that section
    of the site be present in the directory information tree and be able to successfully
    bind.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们使用了`Require` `valid-user`参数来强制执行授权要求，要求任何尝试访问该网站部分的用户必须在目录信息树中存在，并能够成功绑定。
- en: 'But there are other options that the `Require` parameter will take. We will
    briefly see each. Apache 2.0 used different names for these and I have put them
    in parentheses after the name that Apache 2.2 uses:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，`Require`参数还可以采用其他选项。我们将简要地查看每个选项。Apache 2.0使用了不同的名称，我已将它们放在Apache 2.2使用的名称后面：
- en: '`valid-user`: This requires that the user is present in the directory and can
    bind. This option is the same in both 2.0 and 2.2.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`valid-user`：这要求用户在目录中存在并且可以绑定。这个选项在2.0和2.2版本中是相同的。'
- en: '`ldap-user` (`ler`): This requires that the user be in the list of users. For
    example, `Require` `ldap-user` `matt` `dave` would only allow users who are valid
    and who have the UID `matt` or the UID `dave`.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ldap-user`（`ler`）：这要求用户在用户列表中。例如，`Require` `ldap-user` `matt` `dave`将只允许有效的用户，且这些用户的UID为`matt`或`dave`。'
- en: '`ldap-dn` (`dn`): This requires that the DN be an exact match to the one in
    the `Require` parameter. For example, `Require` `ldap-dn` `uid=matt,ou=users,dc=example,dc=com`
    would require that the user be valid and have the DN `uid=matt,ou=users,dc=example,dc=com`.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ldap-dn`（`dn`）：这要求DN与`Require`参数中的DN完全匹配。例如，`Require` `ldap-dn` `uid=matt,ou=users,dc=example,dc=com`要求用户有效，并且具有DN
    `uid=matt,ou=users,dc=example,dc=com`。'
- en: '`ldap-group` (`group`): This requires that the user be valid and a member of
    the specified group. We will look at this directive more closely later.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ldap-group`（`group`）：这要求用户有效且是指定组的成员。稍后我们会更详细地讨论这个指令。'
- en: '`ldap-attribute`: This parameter is named the same in both 2.0 and 2.2\. For
    a user to gain access if this is used in a `Require` parameter, the user must
    be valid and must have the attribute as asserted in this parameter. For example,
    `Require` `ldap-attribute` `departmentNumber=001` will only grant access to users
    who are valid, and also have the attribute `departmentNumber` with the attribute
    value `001`.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ldap-attribute`：这个参数在2.0和2.2中名称相同。若在`Require`参数中使用此项，要使用户获得访问权限，用户必须有效，并且必须具有此参数所声明的属性。例如，`Require`
    `ldap-attribute` `departmentNumber=001` 只会授予有效的用户访问权限，并且该用户必须具有`departmentNumber`属性，且该属性值为`001`。'
- en: '`ldap-filter` (*new* *in* *Apache* *2.2*): This takes an LDAP filter and grants
    access if a user is valid and if the user''s record is returned when an LDAP search
    is executed with that filter.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ldap-filter`（*新功能*，*Apache 2.2*新增）：它接受一个LDAP过滤器，如果用户有效且在执行该过滤器的LDAP搜索时返回用户记录，则授予访问权限。'
- en: 'Configuring group-based access can be slightly more complicated than the other
    `Require` directives. A basic use of this requirement looks like this:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 配置基于组的访问控制可能比其他`Require`指令稍微复杂一些。该要求的基本用法如下：
- en: '[PRE19]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Note
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In Apache 2.0, `ldap-group` should be replaced by `group`.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在Apache 2.0中，`ldap-group`应替换为`group`。
- en: According to this directive, in order to authenticate, the user must be a member
    of the group `cn=Admins,ou=groups,dc=example,dc=com`. When a web user attempts
    to log in, Apache will bind as the user in `AuthLDAPBindDN`, do its search for
    the user's DN, bind as that user, and then (again as the user in `AuthLDAPBindDN`)
    check to make sure that that user is in the `cn=Admins` group.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 根据此指令，用户必须是`cn=Admins,ou=groups,dc=example,dc=com`组的成员，才能进行身份验证。当Web用户尝试登录时，Apache将作为`AuthLDAPBindDN`中的用户进行绑定，执行对该用户DN的搜索，再次以该用户身份进行绑定，然后（仍然作为`AuthLDAPBindDN`中的用户）检查该用户是否在`cn=Admins`组中。
- en: 'In order to allow this group search to operate correctly, the user in `AuthLDAPBindDN`
    must have access to group entries. (Our ACLs in Chapter 4 did not allow this.)
    You might need to add a rule like this to your ACLs:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使该组搜索正常运行，`AuthLDAPBindDN`中的用户必须具有访问组条目的权限。（我们在第4章中的ACL没有允许这一点。）你可能需要在ACL中添加如下规则：
- en: '[PRE20]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This will allow anyone (including the Anonymous user) the ability to read entries
    in the `ou=groups` subtree.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这将允许任何人（包括匿名用户）读取`ou=groups`子树中的条目。
- en: How does Apache know what type of group attribute to look for? The `groupOfNames`
    object class uses the `member` attribute, while the `groupOfUniqueNames` object
    class uses the `uniqueMember` attribute. Both are standard LDAP object classes.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Apache如何知道要查找哪种类型的组属性？`groupOfNames`对象类使用`member`属性，而`groupOfUniqueNames`对象类使用`uniqueMember`属性。两者都是标准的LDAP对象类。
- en: Apache checks both `member` and `uniqueMember` attributes. But the case may
    arise where you need to treat another attribute as a member attribute. `seeAlso`,
    `owner`, and `roleOccupant` are all standard attributes that could be so treated,
    and you can also define another one in a custom schema. In such cases, you can
    use the `AuthLDAPGroupAttribute` parameter in the `<Directory>` section to indicate
    to Apache what attribute it should treat as a membership attribute.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Apache会检查`member`和`uniqueMember`属性。但可能会出现需要将其他属性视为成员属性的情况。`seeAlso`、`owner`和`roleOccupant`都是可以作为成员属性的标准属性，此外你还可以在自定义架构中定义其他属性。在这种情况下，可以在`<Directory>`部分使用`AuthLDAPGroupAttribute`参数来告诉Apache应该将哪个属性视为成员属性。
- en: phpLDAPadmin
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: phpLDAPadmin
- en: We have configured Apache to use its built-in LDAP modules to perform authentication
    with the help of a directory server. Now we are going to turn to a more complex
    web-based application, **phpLDAPadmin**. phpLDAPadmin is an application, written
    in PHP, designed to help manage a directory server. While it is known to work
    on other directory servers, it was developed against OpenLDAP.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经配置了Apache，使用内置的LDAP模块通过目录服务器进行身份验证。现在我们将转向一个更复杂的基于Web的应用程序——**phpLDAPadmin**。phpLDAPadmin是一个用PHP编写的应用程序，旨在帮助管理目录服务器。虽然它已知可以在其他目录服务器上运行，但它是针对OpenLDAP开发的。
- en: Prerequisites
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前提条件
- en: Before we can install phpLDAPadmin, we will need to install a few other packages.
    In the first part of this chapter we looked at Apache. This (or some other web
    server) is required to run phpLDAPadmin. Additionally, some recent version of
    PHP (we will use PHP 5) is needed, along with the PHP LDAP module.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们安装phpLDAPadmin之前，需要先安装其他一些软件包。在本章的第一部分中，我们了解了Apache。要运行phpLDAPadmin，需要使用某些版本的Web服务器（我们使用的是PHP
    5），并且需要PHP LDAP模块。
- en: 'For example, to install PHP 5, we would run the following command:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要安装PHP 5，我们可以运行以下命令：
- en: '[PRE21]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Installing PHP may require the satisfaction of several other dependencies, but
    `apt-get` will take care of the heavy lifting for you.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 安装PHP可能需要满足其他一些依赖项，但`apt-get`会为你处理这些繁重的任务。
- en: Note
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you built OpenLDAP from source, you may be prompted to install another (possibly
    older) version of the LDAP libraries to satisfy package dependencies. Doing so
    will not harm your current LDAP applications.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是从源代码构建OpenLDAP，可能会提示你安装另一个（可能较旧的）版本的LDAP库，以满足软件包依赖性。这样做不会对当前的LDAP应用程序造成任何影响。
- en: Once PHP is installed, you can restart Apache, and then move on to installing
    phpLDAPadmin.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 PHP 安装完成，你可以重启 Apache，然后继续安装 phpLDAPadmin。
- en: Installing phpLDAPadmin
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 phpLDAPadmin
- en: The easiest way to install phpLDAPadmin is to use the package in the Ubuntu
    repository.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 phpLDAPadmin 的最简单方法是使用 Ubuntu 仓库中的软件包。
- en: 'phpLDAPadmin is included in the *universe* repository in Ubuntu. This means
    that as long as you have the universe repository enabled in your sources (see
    `/etc/apt/sources.list`), you can install it with a simple `apt-get` command:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: phpLDAPadmin 被包含在 Ubuntu 的*universe* 仓库中。这意味着，只要你在源列表中启用了 universe 仓库（请参见`/etc/apt/sources.list`），就可以通过简单的`apt-get`命令安装它：
- en: '[PRE22]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: phpLDAPadmin will be installed on the file system at `/usr/share/phpldapadmin`,
    and Apache is configured to direct requests for [http://hostname/phpldapadmin](http://hostname/phpldapadmin)
    to the phpLDAPadmin application. The Apache configuration is located at `/etc/phpldapadmin/apache.conf`.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: phpLDAPadmin 将被安装在文件系统中的`/usr/share/phpldapadmin`目录下，Apache 被配置为将对[http://hostname/phpldapadmin](http://hostname/phpldapadmin)的请求指向
    phpLDAPadmin 应用。Apache 配置文件位于`/etc/phpldapadmin/apache.conf`。
- en: Note
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'It is also easy to install phpLDAPadmin from the source distribution available
    at [http://phpldapadmin.sourceforge.net](http://phpldapadmin.sourceforge.net).
    Once the web server and PHP are installed, it is simply a matter of unpacking
    the source code into a folder under the web server''s web root directory (for
    example `/var/www/`). For complete instructions, see the installation guide on
    the official phpLDAPadmin documentation wiki: [http://wiki.phpldapadmin.info/tiki-index.php?page_ref_id=6](http://wiki.phpldapadmin.info/tiki-index.php?page_ref_id=6).'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以从[http://phpldapadmin.sourceforge.net](http://phpldapadmin.sourceforge.net)获取源代码包，轻松安装
    phpLDAPadmin。一旦 Web 服务器和 PHP 安装完成，只需将源代码解压到 Web 服务器的根目录下的一个文件夹中（例如`/var/www/`）。有关完整的安装说明，请参见官方
    phpLDAPadmin 文档 Wiki 上的安装指南：[http://wiki.phpldapadmin.info/tiki-index.php?page_ref_id=6](http://wiki.phpldapadmin.info/tiki-index.php?page_ref_id=6)。
- en: Once phpLDAPadmin is installed, we can move on to configuration.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完 phpLDAPadmin 后，我们可以继续配置。
- en: Is Your Package Broken?
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你的软件包是否损坏？
- en: 'Some versions of the Ubuntu phpLDAPadmin (notably `phpldapadmin_0.9.8.3-7`)
    shipped with a missing configuration file. Because of this, during the installation,
    you may see an error like this:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 一些版本的 Ubuntu phpLDAPadmin（特别是`phpldapadmin_0.9.8.3-7`）自带的配置文件丢失了。因为这个原因，在安装过程中，你可能会看到类似这样的错误：
- en: '[PRE23]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The problem is that the file `/etc/phpldapadmin/apache.conf` (which is linked
    to `/etc/apache2/conf.d/phpldapadmin`) is missing.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于文件`/etc/phpldapadmin/apache.conf`（它链接到`/etc/apache2/conf.d/phpldapadmin`）丢失了。
- en: Fortunately, we can create a suitable one-line `apache.conf` file in the `/etc/phpldapadmin`
    directory. The purpose of this configuration file is to map a suitable URI for
    phpLDAPadmin to the absolute path on the file system where the phpLDAPadmin scripts
    are.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们可以在`/etc/phpldapadmin`目录中创建一个合适的单行`apache.conf`文件。这个配置文件的目的是将 phpLDAPadmin
    映射到文件系统中 phpLDAPadmin 脚本所在的绝对路径。
- en: 'To create this mapping, we need to put only the following line in the `/etc/phpldapadmin/apache.conf`
    file:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建这个映射，我们只需要在`/etc/phpldapadmin/apache.conf`文件中添加以下一行：
- en: '[PRE24]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'After saving this change simply restart the web server:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 保存此更改后，简单地重启 Web 服务器：
- en: '[PRE25]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Apache should then restart without an error.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，Apache 应该会在没有错误的情况下重启。
- en: Configuring phpLDAPadmin
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 phpLDAPadmin
- en: The phpLDAPadmin configuration file is at `/etc/phpldapadmin/config.php`. phpLDAPadmin
    uses a config file format that, while common in PHP and Perl applications, may
    seem daunting to one who is used to editing the typical name/value parameter files
    that most UNIX applications use.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: phpLDAPadmin 配置文件位于`/etc/phpldapadmin/config.php`。phpLDAPadmin 使用的配置文件格式在 PHP
    和 Perl 应用中较为常见，但对于习惯编辑大多数 UNIX 应用使用的典型名称/值参数文件的人来说，可能会显得有些令人生畏。
- en: 'There are two major ways in which this configuration file differs from the
    standard type:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配置文件与标准类型的主要区别有两个：
- en: The way default configuration options are handled
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认配置选项的处理方式
- en: The form of a configuration parameter
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置参数的形式
- en: Regarding the first, phpLDAPadmin has two configuration files, one that stores
    all of the default settings (`/usr/share/phpldapadmin/lib/config_default.php`),
    and one intended for administrators to edit (`/etc/phpldapadmin/config.php`).
    Administrators should only change this second config file. The `config_default.php`
    file should not be altered.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 关于第一点，phpLDAPadmin 有两个配置文件，一个用于存储所有默认设置（`/usr/share/phpldapadmin/lib/config_default.php`），另一个供管理员编辑（`/etc/phpldapadmin/config.php`）。管理员应该只修改第二个配置文件。`config_default.php`
    文件不应被修改。
- en: When phpLDAPadmin attempts to access a setting, it will first check to see if
    there is a custom setting in the custom settings file (`config.php`). If one is
    found, that setting will be used. If one is not found, the value of the default
    setting is used.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 当 phpLDAPadmin 尝试访问某个设置时，它会首先检查是否在自定义设置文件（`config.php`）中存在该设置。如果找到了，它将使用该设置。如果没有找到，则使用默认设置的值。
- en: The advantage of this technique is that upgrades to phpLDAPadmin need not make
    any changes to the custom configuration file. Only the default file is modified.
    The downside is that sometimes new parameters are added, but go unnoticed, since
    the administrator's configuration file remains unchanged.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术的优点是，升级 phpLDAPadmin 时无需对自定义配置文件进行任何更改。只需修改默认文件。缺点是有时会添加新参数，但由于管理员的配置文件保持不变，可能会被忽略。
- en: The second difference, the form of the configuration parameter, is based in
    part on the first. Instead of using a simple text file to store parameters, phpLDAPadmin
    uses PHP variables to store information. In this sense, the `config.php` configuration
    file is actually a piece of code.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个区别，配置参数的形式，部分基于第一个。phpLDAPadmin 并没有使用简单的文本文件来存储参数，而是使用 PHP 变量来存储信息。从这个意义上讲，`config.php`
    配置文件实际上是一个代码片段。
- en: 'There are some clear advantages in doing this:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做有一些明显的优势：
- en: All of the built-in PHP features can be used in the configuration file (including
    dynamically evaluated scripts)
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置文件中可以使用所有内建的 PHP 功能（包括动态评估的脚本）。
- en: No special configuration file parser is needed, making code size smaller and
    run time faster
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需特殊的配置文件解析器，从而使得代码体积更小，运行速度更快。
- en: But there are definitely some drawbacks to this method, and the main one is
    that readability of the file can be greatly diminished. The default configuration
    file, for example, is almost 400 lines long and contains code (though only a smattering)
    mixed with configuration parameters.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 但是这种方法肯定有一些缺点，主要的问题是文件的可读性可能会大大降低。例如，默认配置文件几乎有 400 行，并且包含了代码（尽管只有少量）与配置参数混合在一起。
- en: Another drawback is that straightforward configuration of the application will
    still require some knowledge of the PHP language.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个缺点是，应用程序的直观配置仍然需要一些 PHP 语言的知识。
- en: As we look at the configuration file, I will not assume working knowledge of
    PHP, and will explain some of the constructs in the configuration file.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们查看配置文件时，我不会假设你对 PHP 有工作知识，并且会解释配置文件中的一些构造。
- en: A Basic Look at Configuration Parameters
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置参数的基本概览
- en: The configuration parameters in phpLDAPadmin can look daunting at first. In
    this section, I will explain the format of each type of configuration parameter.
    Each section gives a very brief example of what the parameter form looks like,
    followed by a more lengthy description of what is going on.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: phpLDAPadmin 中的配置参数一开始看起来可能让人望而却步。在这一部分，我将解释每种配置参数的格式。每个部分都会提供一个简短的示例，展示该参数的形式，之后是对其所做操作的更详细描述。
- en: If you are not a programmer, don't get discouraged if not all of this makes
    sense. The important thing is that you understand the structure of each of the
    configuration directives.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不是程序员，不必气馁，如果并非所有内容都能理解。最重要的是，你要理解每个配置指令的结构。
- en: Note
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Since this is not a PHP tutorial, I will only briefly introduce the concepts
    that are necessary to understand what we are doing when we set parameters. For
    more information on PHP, the PHP team maintains a very good online manual that
    can be accessed at [http://www.php.net/manual/en/](http://www.php.net/manual/en/).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这不是 PHP 教程，我只会简要介绍一些设置参数时需要理解的概念。如需更多 PHP 信息，PHP 团队维护了一个非常好的在线手册，网址是 [http://www.php.net/manual/en/](http://www.php.net/manual/en/)。
- en: 'Configuration parameters in phpLDAPadmin''s `config.php` file take one of three
    forms: a variable setting, a function call, or an array setting.'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在 phpLDAPadmin 的 `config.php` 文件中，配置参数有三种形式：变量设置、函数调用或数组设置。
- en: Setting a variable
  id: totrans-217
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 设置一个变量
- en: 'Setting a variable is the simplest of the three. In brief, a variable assignment
    looks like this:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 设置变量是这三者中最简单的。简而言之，变量赋值看起来像这样：
- en: '[PRE26]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This is how variable definitions work.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是变量定义的工作方式。
- en: 'In PHP, all variable names are prefixed with a dollar sign (`$`). The equals
    sign (`=`) is used to assign a value to a variable. String values should be enclosed
    in single quotes (`''`) or double quotes (`"`). Numbers (integers or floating
    point) need not be enclosed in quotation marks of any sort. Every line should
    end with a semi-colon (`;`). Here are two examples:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在PHP中，所有变量名都以美元符号（`$`）开头。等号（`=`）用来给变量赋值。字符串值应当用单引号（`'`）或双引号（`"`）括起来。数字（整数或浮动小数）不需要加任何引号。每一行都应以分号（`;`）结尾。以下是两个示例：
- en: '[PRE27]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The first sets the value of the `$name` variable to the string `Matt`. The second
    sets the value of the `$favorite_number` variable to the integer `7`.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个设置`$name`变量的值为字符串`Matt`。第二个设置`$favorite_number`变量的值为整数`7`。
- en: There are only a few of these simple configuration parameters in `config.php`.
    Most take the form of the more complex PHP statements.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在`config.php`中只有少数几个简单的配置参数。大多数参数是以更复杂的PHP语句形式出现的。
- en: Calling a function
  id: totrans-225
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 调用一个函数
- en: 'The second form of a configuration parameter in phpLDAPadmin''s configuration
    file uses a function call. Briefly, a function call looks like this:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: phpLDAPadmin的配置文件中的配置参数的第二种形式使用了函数调用。简言之，函数调用看起来像这样：
- en: '[PRE28]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: A function may have zero or more parameters, and the number is determined by
    the programmer.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 一个函数可以有零个或多个参数，参数的数量由程序员决定。
- en: Functions can be attached to objects. An object, roughly speaking, is a container
    for data and functions. phpLDAPadmin is an object-oriented program, meaning that
    it makes frequent use of objects to organize the functional units of the source
    code.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 函数可以附加到对象上。粗略来说，对象是数据和函数的容器。phpLDAPadmin是一个面向对象的程序，意味着它频繁使用对象来组织源代码的功能单元。
- en: 'To call a function that is attached to the object, you will need to use the
    arrow (access) operator (`->`), which is composed of a dash (`-`) and a greater-than
    sign (`>`). This indicates that the function is a *member* of the object. Here''s
    an example taken from the phpLDAPadmin configuration file:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 要调用附加到对象的函数，你需要使用箭头（访问）操作符（`->`），它由短横线（`-`）和大于号（`>`）组成。这表示该函数是对象的*成员*。以下是从phpLDAPadmin配置文件中提取的一个示例：
- en: '[PRE29]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The first line takes the variable named `$i`, and assigns it the value `0`.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行将名为`$i`的变量赋值为`0`。
- en: The second line creates a new `LDAPServers` object, and assigns it to the variable
    `$ldapservers`. Now, anytime we work with the variable `$ldapservers` we are actually
    working with an object that has all of the member functions and variables defined
    in the `LDAPServers` class. The `LDAPServers` class describes the servers that
    phpLDAPadmin will connect to.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行创建了一个新的`LDAPServers`对象，并将其赋值给变量`$ldapservers`。现在，每当我们操作变量`$ldapservers`时，实际上是在操作一个拥有`LDAPServers`类中定义的所有成员函数和变量的对象。`LDAPServers`类描述了phpLDAPadmin将连接的服务器。
- en: You can think of a class as defining all of the parts of a machine, and the
    object as an instance of that machine. Once we have our copy of our LDAPServers
    machine, we can access the data stored in the machine, and also use the machine's
    functions to perform certain tasks.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将类视为定义机器的各个部分，而对象则是该机器的实例。一旦我们拥有了LDAPServers机器的副本，就可以访问机器中存储的数据，并使用机器的功能执行特定任务。
- en: 'According to the class definition for this object, it has a handful of member
    functions, including the `SetValue()` function. This function stores data in the
    `$ldapservers` object. So the third line in the given example sets some information
    about the LDAP server:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 根据该对象的类定义，它有一些成员函数，包括`SetValue()`函数。该函数将数据存储在`$ldapservers`对象中。所以在给定示例中的第三行设置了一些关于LDAP服务器的信息：
- en: '[PRE30]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'This line uses the `SetValue()` function of `$ldapservers`. The `SetValue()`
    function takes four different pieces of information:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 这一行使用了`$ldapservers`的`SetValue()`函数。`SetValue()`函数需要四个不同的参数：
- en: The number for the server (the value of `$i`, in this case)
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器的编号（此时为`$i`的值）
- en: A string representing what sort of setting this is (`'server'`)
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个表示此设置类型的字符串（`'server'`）
- en: A string that names the property being set (`'name'`)
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个表示要设置的属性名称的字符串（`'name'`）
- en: A string representing the value of the property (`'My` `LDAP` `Server'`)
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个表示属性值的字符串（`'My` `LDAP` `Server'`）
- en: 'Later we will talk about what each one of these does. For the time being, though,
    the important thing is to understand the general form of the function: `$object->function(`
    `param_1,` `param_2);`. A function can have as many parameters as the programmer
    decides upon.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后我们将讨论这些每一项的作用。不过目前重要的是理解函数的一般形式：`$object->function(` `param_1,` `param_2);`。一个函数可以有程序员决定的任意数量的参数。
- en: For the most part, the comments in the configuration file will guide us as to
    what sorts of parameters each function will need. You should not need to look
    at any other piece of code to figure out what to put in an object.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分情况下，配置文件中的注释会引导我们了解每个函数需要什么样的参数。你不需要查看其他任何代码来弄清楚在对象中应该放入什么。
- en: Now let's take a look at the list kind of directive.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看列表类型的指令。
- en: Setting an Array Value
  id: totrans-245
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 设置数组值
- en: 'The last sort of configuration parameter in phpLDAPadmin is the array. There
    are two basic forms of setting an array value:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在 phpLDAPadmin 中，最后一种配置参数是数组。设置数组值有两种基本形式：
- en: '[PRE31]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'An **array** is an organized collection of information. PHP has two different
    kinds of arrays: an indexed array (where things are stored in a numbered sequence)
    and a map (where things are stored in name/value pairs).'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '**数组** 是一种组织信息的集合。PHP 有两种不同类型的数组：索引数组（其中元素按编号顺序存储）和映射数组（其中元素按名称/值对存储）。'
- en: 'An indexed array can be created like this:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 可以这样创建一个索引数组：
- en: '[PRE32]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'This creates an array with three items, `''a''`, `''b''`, and `''c''`. The
    first one, `''a''`, is stored in the first slot of the array and can be accessed
    by index number:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这创建了一个包含三项的数组：`'a'`、`'b'` 和 `'c'`。第一个 `'a'` 被存储在数组的第一个槽中，并可以通过索引号访问：
- en: '[PRE33]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Note that the first index number is zero, not one. This would return the value
    `''a''`. The second one can be accessed using the index number of the second item:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，第一个索引号是零，而不是一。这将返回值 `'a'`。第二个元素可以通过第二个项的索引号访问：
- en: '[PRE34]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This would return `'b'`.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回 `'b'`。
- en: 'In a map-type array, instead of using a number for an index, some string (or
    other object) can be used. For example, we can create an map this way:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在映射类型的数组中，不是使用数字作为索引，可以使用一些字符串（或其他对象）。例如，我们可以这样创建一个映射：
- en: '[PRE35]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'This creates an array with two items, one named `First` `Name` and one named
    `Last` `Name`. Now, instead of accessing them by index, I can access them by name:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 这创建了一个包含两个项的数组，一个名为 `First` `Name`，另一个名为 `Last` `Name`。现在，我可以通过名称而不是索引来访问它们：
- en: '[PRE36]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This would return `'Matt'`.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回 `'Matt'`。
- en: 'Once an array is created using the `array()` function, you can add elements
    to an array by assigning a value to an array slot. For an indexed array, this
    might look like the following:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦通过 `array()` 函数创建了一个数组，你可以通过给数组槽赋值来向数组中添加元素。对于一个索引数组，这可能像下面这样：
- en: '[PRE37]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: This would put `'d'` at the fourth position (0, 1, 2, **3**) in the array.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把 `'d'` 放在数组中的第四个位置（0、1、2、**3**）。
- en: 'Likewise, adding a value to a map is similar, except in place of the index
    number, you use a key name:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，向映射中添加值也类似，不同的是，你用的是键名而不是索引号：
- en: '[PRE38]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: This adds the name `'Dave'` to the array item with the key name `'First` `Name'`.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把名字 `'Dave'` 添加到键名为 `'First` `Name'` 的数组项中。
- en: 'Finally, arrays can be nested inside of each other. Again, here is an example
    from the phpLDAPadmin config file:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，数组可以互相嵌套。再一次，这里是来自 phpLDAPadmin 配置文件的一个示例：
- en: '[PRE39]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'In this example the `$queries` array is an indexed array where each value is
    a mapped array. So `$queries[0][''name'']` and `$queries[1][''name'']` represent
    two different name values. Each name value is stored in a different slot in the
    indexed array. Think of the array as being structured like this bit of pseudo-code:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，`$queries` 数组是一个索引数组，每个值都是一个映射数组。所以 `$queries[0]['name']` 和 `$queries[1]['name']`
    代表两个不同的名字值。每个名字值被存储在索引数组中的不同位置。可以把这个数组看作是像下面这样结构化的伪代码：
- en: '[PRE40]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Now we have two different queries (both stored in the same indexed array):
    Query 0 and Query 1\. Each query has its own name and base.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有两个不同的查询（都存储在同一个索引数组中）：查询 0 和 查询 1。每个查询都有自己的名字和基础。
- en: These are the basic features of arrays—the features that we will be using to
    configure phpLDAPadmin. Now we are ready to move on to the actual configuration
    of phpLDAPadmin.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是数组的基本特性——我们将用这些特性来配置 phpLDAPadmin。现在我们准备开始实际配置 phpLDAPadmin。
- en: Configuring the LDAP Server Settings
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置 LDAP 服务器设置
- en: The first thing we need to do is configure phpLDAPadmin to connect to our LDAP
    server. This is done using the `$ldapservers` object.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是配置 phpLDAPadmin 以连接到我们的 LDAP 服务器。这是通过 `$ldapservers` 对象来完成的。
- en: In my installation, Apache and OpenLDAP are running on the same server, so I
    will configure phpLDAPadmin to connect to the local instance.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的安装中，Apache 和 OpenLDAP 运行在同一台服务器上，因此我将配置 phpLDAPadmin 连接到本地实例。
- en: 'To begin this part of the configuration we need to locate the `$ldapservers`
    object in the configuration file. The line we are concerned with looks like this:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始这一部分的配置，我们需要在配置文件中找到 `$ldapservers` 对象。我们关心的行看起来像这样：
- en: '[PRE41]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: It is located on line 63 of our default configuration file.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 它位于我们默认配置文件的第 63 行。
- en: This defines the `$ldapservers` object. The rest of our configuration directives
    for our LDAP server need to go below this line.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 这定义了 `$ldapservers` 对象。我们为 LDAP 服务器配置的其他指令需要位于此行下方。
- en: 'The first thing to do is set up the information about our LDAP connection.
    We want to giver our LDAP server a name, host and port info, and information on
    whether we want this connection to be encrypted with TLS:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 首先需要做的是设置我们的 LDAP 连接信息。我们需要为我们的 LDAP 服务器指定一个名称、主机和端口信息，并指定是否希望通过 TLS 加密此连接：
- en: '[PRE42]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: This names our server `Example.Com`, and sets it up to connect to `localhost`
    on the default LDAP port `389` without any SSL/TLS encryption.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 这将我们的服务器命名为 `Example.Com`，并将其配置为连接到 `localhost` 上的默认 LDAP 端口 `389`，没有任何 SSL/TLS
    加密。
- en: The `$i` in the given functions indicates the number of the LDAP server that
    we are configuring. `$i` is set to `0`, indicating that this is the first LDAP
    server we are configuring. Where we would have to configure a second LDAP server,
    we would change `$i` to `1` and then continue with a second batch of the same
    sorts of directives.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 给定函数中的 `$i` 表示我们正在配置的 LDAP 服务器的编号。`$i` 被设置为 `0`，表示这是我们配置的第一个 LDAP 服务器。如果需要配置第二个
    LDAP 服务器，我们会将 `$i` 改为 `1`，然后继续执行第二批相同类型的指令。
- en: The second parameter, `'server'`, indicates that we are setting server parameters.
    The third parameter (`'name'`, `'host'`, `'port'`, and `'tls`') indicates the
    exact server parameter we are setting, and the fourth parameter contains the value
    to be assigned to the parameter.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个参数 `'server'` 表示我们正在设置服务器参数。第三个参数（`'name'`、`'host'`、`'port'` 和 `'tls'`）表示我们正在设置的具体服务器参数，第四个参数包含要分配给该参数的值。
- en: Note that the TLS setting is for turning on and off StartTLS (see Chapter 4).
    If you want to use LDAPS (SSL-based LDAP), then use an LDAP URL, `'ldaps://example.com',`
    in the host setting and set the port to the correct LDAPS port (`636` by default).
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，TLS 设置用于开启或关闭 StartTLS（见第 4 章）。如果您希望使用 LDAPS（基于 SSL 的 LDAP），请在主机设置中使用 LDAP
    URL，`'ldaps://example.com'`，并将端口设置为正确的 LDAPS 端口（默认端口为 `636`）。
- en: 'Next, we need to tell phpLDAPadmin where to store login information. This information
    is stored in the `auth_type` parameter:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要告诉 phpLDAPadmin 登录信息存储的位置。该信息存储在 `auth_type` 参数中：
- en: '[PRE43]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'When a user logs into phpLDAPadmin, information used for binding to LDAP gets
    stored. There are three places where this information can be stored:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户登录 phpLDAPadmin 时，用于绑定到 LDAP 的信息会被存储。此信息可以存储在三个地方：
- en: A cookie in the web browser ('`cookie'`)
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 浏览器中的 cookie（`'cookie'`）
- en: A server session variable (`'session'`)
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器会话变量（`'session'`）
- en: (The information can be added by hand to) the configuration file (`'config'`)
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （这些信息可以手动添加到）配置文件（`'config'`）
- en: In general, we should store the information in a session variable (as the given
    example does). If you should choose cookie-based storage make sure you also set
    `$config->custom->session['blowfish']` to a string of random characters. The string
    is used as a key for the Blowfish cipher and it must be at least 32-characters
    long. A longer key is better.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，我们应将信息存储在会话变量中（正如给定示例所做的那样）。如果选择基于 cookie 存储，请确保还将 `$config->custom->session['blowfish']`
    设置为一个随机字符的字符串。该字符串用作 Blowfish 加密算法的密钥，且必须至少为 32 个字符长，越长越好。
- en: Note
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For information on the blowfish cipher, see [http://www.schneier.com/blowfish.html](http://www.schneier.com/blowfish.html).
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Blowfish 加密算法的信息，请参见 [http://www.schneier.com/blowfish.html](http://www.schneier.com/blowfish.html)。
- en: 'The next parameter sets the list of naming contexts (base DNs) that phpLDAPadmin
    should display:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个参数设置了 phpLDAPadmin 应显示的命名上下文（基础 DN）列表：
- en: '[PRE44]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'This sets up only one context DN: `dc=example,dc=com`. While this setting is
    necessary on some LDAP servers, OpenLDAP should not need it. OpenLDAP publishes
    a list of contexts in the Root DSE record, and phpLDAPadmin can get the information
    from there. In fact, that is the default configuration for phpLDAPadmin, so the
    setting can be left off or set to this:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 这只设置了一个上下文DN：`dc=example,dc=com`。虽然在某些LDAP服务器上此设置是必要的，但OpenLDAP不需要它。OpenLDAP在根DSE记录中发布了上下文的列表，phpLDAPadmin可以从中获取信息。事实上，这就是phpLDAPadmin的默认配置，因此该设置可以省略或设置为：
- en: '[PRE45]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This creates an empty list of contexts (`array()`), and causes phpLDAPadmin
    to look up the supported contexts in the Root DSE.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个空的上下文列表（`array()`），并使phpLDAPadmin在根DSE中查找支持的上下文。
- en: 'There are just two parameters left to look at:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 只剩下两个参数需要查看：
- en: '[PRE46]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Let''s see these two settings:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来看看这两个设置：
- en: The first setting disables anonymous binding. This will prevent users from accessing
    phpLDAPadmin without logging in first. Even if this is allowed though, the ACLs
    in SLAPD will still prevent such users from modifying the directory information
    tree.
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个设置禁用匿名绑定。这将防止用户在未登录的情况下访问phpLDAPadmin。即使允许这种情况，SLAPD中的ACL仍然会阻止此类用户修改目录信息树。
- en: The second setting sets the default password hash to be used. Instead of using
    the LDAP Password Modify extended operation, phpLDAPadmin attempts to directly
    modify the `userPassword` attribute. In order to do this it must perform all of
    the encryption and base-64 encoding before sending the update to SLAPD. This setting
    tells phpLDAPadmin which hashing algorithm should be used when modifying passwords.
    OpenLDAP uses SSHA by default, and so we should set phpLDAPadmin to do the same.
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个设置指定了要使用的默认密码哈希。phpLDAPadmin尝试直接修改`userPassword`属性，而不是使用LDAP密码修改扩展操作。为了做到这一点，它必须在将更新发送到SLAPD之前，执行所有的加密和Base-64编码。此设置告诉phpLDAPadmin在修改密码时应该使用哪种哈希算法。默认情况下，OpenLDAP使用SSHA，因此我们应该将phpLDAPadmin设置为相同的算法。
- en: If you set a different value in `slapd.conf` using the password-hash directive,
    you should set the same value here.
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在`slapd.conf`中使用password-hash指令设置了不同的值，应该在这里设置相同的值。
- en: Note
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Not all of the cipher options in phpLDAPadmin are supported by OpenLDAP (or
    any other LDAP server, for that matter). You should not use the blowfish cipher
    for passwords. OpenLDAP does not support that cipher and phpLDAPadmin incorrectly
    labels it as a `crypt` hash.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 不是所有phpLDAPadmin中的加密选项都被OpenLDAP（或任何其他LDAP服务器）支持。你不应该为密码使用blowfish加密。OpenLDAP不支持这种加密方式，phpLDAPadmin错误地将其标记为`crypt`哈希。
- en: While there are many other configurable parameters in the phpLDAPadmin configuration
    file, we have the basics configured. We can now test out the phpLDAPadmin tool
    with our web browser.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然phpLDAPadmin配置文件中还有许多其他可配置的参数，但我们已经完成了基本的配置。现在可以使用我们的网页浏览器测试phpLDAPadmin工具了。
- en: A First Look at phpLDAPadmin
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: phpLDAPadmin初步介绍
- en: With PHP installed, Apache restarted, and phpLDAPadmin configured, we are now
    ready to connect to phpLDAPadmin. Ubuntu installs phpLDAPadmin so that it is available
    at the URL [http://<hostname or IP address>/phpldapadmin/](http://<hostname or
    IP address>/phpldapadmin/). In this case I am running the web browser on the same
    machine as the Apache server, so `http://localhost/phpldapadmin` points to the
    phpLDAPadmin tool.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了PHP、重启了Apache并配置了phpLDAPadmin后，我们现在可以连接到phpLDAPadmin。Ubuntu安装了phpLDAPadmin，并且它可以通过URL[http://<hostname
    or IP address>/phpldapadmin/](http://<hostname or IP address>/phpldapadmin/)访问。在这种情况下，我在与Apache服务器相同的机器上运行网页浏览器，因此`http://localhost/phpldapadmin`指向phpLDAPadmin工具。
- en: 'When phpLDAPadmin first loads, it will look something like this:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 当phpLDAPadmin第一次加载时，它看起来像这样：
- en: '![A First Look at phpLDAPadmin](img/1021_08_02.jpg)'
  id: totrans-312
  prefs: []
  type: TYPE_IMG
  zh: '![phpLDAPadmin初步介绍](img/1021_08_02.jpg)'
- en: The left-hand frame is the navigation frame for phpLDAPadmin. The computer icon
    accompanied by the text **Example.Com** indicates the server that we configured.
    If phpLDAPadmin has been configured with multiple hosts, then the left frame will
    list them all.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧框架是phpLDAPadmin的导航框架。带有**Example.Com**文本的计算机图标表示我们配置的服务器。如果phpLDAPadmin已配置了多个主机，则左侧框架将列出它们所有的主机。
- en: 'Here is the screenshot:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 这是截图：
- en: '![A First Look at phpLDAPadmin](img/1021_08_03.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![phpLDAPadmin初步介绍](img/1021_08_03.jpg)'
- en: At the top section, just below the version banner (**phpLDAPadmin – 0.9.8.3**),
    there are six links. The **Home** link points to this page. **Request feature**,
    **Donate**, and **Report a bug** all point to various places on the external phpLDAPadmin
    website. **Help** loads an internal page that in turn points back to the phpLDAPadmin
    forum website.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在顶部部分，在版本横幅（**phpLDAPadmin – 0.9.8.3**）下方，有六个链接。**主页**链接指向此页面。**请求功能**、**捐赠**和**报告错误**分别指向phpLDAPadmin外部网站的不同位置。**帮助**加载一个内部页面，里面的链接将返回phpLDAPadmin论坛网站。
- en: Finally, the **Purge caches** link can be used to purge the internal caches
    of copies of LDAP data that phpLDAPadmin uses to optimize performance. This may
    be necessary if phpLDAPadmin displays an old copy of some piece of data when it
    should display a more recent update.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，**清除缓存**链接可以用来清除phpLDAPadmin用来优化性能的LDAP数据副本的内部缓存。如果phpLDAPadmin显示的是某个数据的旧副本，而实际上应该显示更近期的更新，则可能需要此操作。
- en: To log in to our server, click on the **Login...** link beneath the **Example.Com**
    icon. This will load the login screen in the main frame on the right side.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 要登录我们的服务器，请点击**登录...**链接，位于**Example.Com**图标下方。这将在右侧的主框架中加载登录界面。
- en: '![A First Look at phpLDAPadmin](img/1021_08_04.jpg)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
  zh: '![phpLDAPadmin 初步界面](img/1021_08_04.jpg)'
- en: Note that unlike Apache by default, phpLDAPadmin by default requires that you
    enter your entire DN to log in. It then binds directly as that DN.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，与Apache默认设置不同，phpLDAPadmin默认要求您输入完整的DN才能登录。然后，它将直接以该DN进行绑定。
- en: Note
  id: totrans-321
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The warning message **Warning: This web connection is unencrypted** indicates
    that the connection between the browser and the web server is HTTP and not the
    encrypted HTTPS. For an application like this, it is a good idea to configure
    Apache to use HTTPS. For more information, see [http://httpd.apache.org/docs/2.0/ssl/](http://httpd.apache.org/docs/2.0/ssl/).'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 警告消息**警告：此网页连接未加密**表明浏览器与Web服务器之间的连接是HTTP而不是加密的HTTPS。对于这样的应用程序，最好配置Apache使用HTTPS。更多信息，请参见[http://httpd.apache.org/docs/2.0/ssl/](http://httpd.apache.org/docs/2.0/ssl/)。
- en: 'If the `anon_bind` parameter in the phpLDAPadmin `conf.php` file is set to
    `true` instead of `false`, users will also be able to check a box to log in as
    the Anonymous user:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 如果phpLDAPadmin `conf.php` 文件中的 `anon_bind` 参数设置为 `true` 而不是 `false`，用户还可以勾选一个框来以匿名用户身份登录：
- en: '[PRE47]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: In that case they will not need to enter either a DN or a password, but phpLDAPadmin
    will allow them to browse the directory information tree to the extent allowed
    by the ACLs.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，用户无需输入DN或密码，但phpLDAPadmin将允许他们在ACL允许的范围内浏览目录信息树。
- en: Navigating phpLDAPadmin
  id: totrans-326
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 浏览 phpLDAPadmin
- en: 'Once you have logged in, the navigation frame will display a list of directory
    information trees hosted on this directory server, as shown in the screenshot:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，导航框架将显示此目录服务器上托管的目录信息树列表，如屏幕截图所示：
- en: '![Navigating phpLDAPadmin](img/1021_08_05.jpg)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
  zh: '![浏览 phpLDAPadmin](img/1021_08_05.jpg)'
- en: 'Beneath **Example.Com**, there is now a list of seven links:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 在**Example.Com**下方，现在有七个链接列表：
- en: '**schema**: Clicking this displays the entire schema (from `cn=subschema`)
    that this LDAP server supports.'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**架构**: 点击此按钮将显示此LDAP服务器支持的整个架构（来自`cn=subschema`）。'
- en: '**search**: This loads the main search form for performing simple LDAP searches.'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**搜索**: 这将加载用于执行简单LDAP搜索的主搜索表单。'
- en: '**refresh**: This refreshes the data currently displayed in the tree beneath.
    If entries get added, but don''t immediately show up, clicking **refresh** should
    do the trick.'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**刷新**: 这将刷新当前显示在下方树形结构中的数据。如果条目已添加但未立即显示，点击**刷新**应该能够解决问题。'
- en: '**info**: The **info** link loads the Root DSE information (decoded to make
    it easier for humans to read) in the main frame. This can be a very useful resource
    for finding out about the directory server. (See [Appendix C](apc.html "Appendix C. Useful
    LDAP Commands") for more information about the Root DSE.)'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信息**: **信息**链接将加载根DSE信息（已解码，以便人类更易读），显示在主框架中。这对于了解目录服务器非常有用。（有关Root DSE的更多信息，请参见[附录C](apc.html
    "附录C. 有用的LDAP命令")。）'
- en: '**import**: This uploads an LDIF file, and then attempts to add the entries
    to the directory server (via an LDAP add operation).'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导入**: 这将上传一个LDIF文件，并尝试将条目添加到目录服务器（通过LDAP添加操作）。'
- en: '**export**: Using this link you can download a copy of the contents of the
    directory. This too uses the LDAP protocol, which means that it is subject to
    ACLs and might not export everything. In other words, it is not a replacement
    for `slapcat`. It does have the added advantage though, of being able to export
    to LDIF, DSML (an XML format), CSV (comma separated version), and VCARD.'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导出**：通过此链接，你可以下载目录内容的副本。此操作也使用 LDAP 协议，这意味着它受 ACL 限制，可能无法导出所有内容。换句话说，它不是
    `slapcat` 的替代品。不过，它有一个额外的优点：能够导出为 LDIF、DSML（XML 格式）、CSV（逗号分隔版本）和 VCARD 格式。'
- en: '**logout**: This link logs the current user out of phpLDAPadmin.'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注销**：此链接将当前用户从 phpLDAPadmin 中注销。'
- en: Underneath this list of links are the base entries for the two directory information
    trees currently hosted on this server, the `cn=log` tree,which holds the accesslog,
    and the `dc=example,dc=com` tree which holds the directory entries we have been
    creating throughout this book.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些链接列表下方是当前托管在此服务器上的两个目录信息树的基础条目，分别是 `cn=log` 树（保存访问日志）和 `dc=example,dc=com`
    树（保存我们在本书中创建的目录条目）。
- en: Note
  id: totrans-338
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Both of these trees show up because the base DN set in config.php looks like
    this: `$ldapservers->SetValue(` `$i,` `''server'',` `''base'',` `array());`. This
    caused phpLDAPadmin to use information from the Root DSE to determine which directory
    information trees were hosted here. The Root DSE returned two: `cn=log` and `dc=example,dc=com`.'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 这两棵树会显示出来，因为在 config.php 中设置的基础 DN 看起来像这样：`$ldapservers->SetValue(` `$i,` `'server',`
    `'base',` `array());`。这使得 phpLDAPadmin 使用来自根 DSE 的信息来确定哪些目录信息树在此托管。根 DSE 返回了两个：`cn=log`
    和 `dc=example,dc=com`。
- en: 'Clicking on a plus (`+`) icon expands that part of the tree, and shows the
    subordinate entries:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 点击加号（`+`）图标会展开树的那部分，显示其下属条目：
- en: '![Navigating phpLDAPadmin](img/1021_08_06.jpg)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![浏览 phpLDAPadmin](img/1021_08_06.jpg)'
- en: Navigating the directory information tree then, can be done quickly and efficiently
    through the left-pane navigation.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，可以通过左侧导航窗格快速有效地浏览目录信息树。
- en: 'Each entry in the tree has only the RDN portion of the DN displayed. Through
    viewing the hierarchy one can build the full DN, but if you wish to display the
    full DN by default you can set the following parameter in the `config.php` file:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 树中的每个条目仅显示 DN 的 RDN 部分。通过查看层级结构，可以构建完整的 DN，但如果你希望默认显示完整的 DN，可以在 `config.php`
    文件中设置以下参数：
- en: '[PRE48]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Conversely, if you want to show just the value of the RDN, without the `attr=`
    part, you can set it to `%rdnValue` in the given parameter instead.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，如果你只想显示 RDN 的值，而不显示 `attr=` 部分，你可以将该参数设置为 `%rdnValue`。
- en: Viewing and Modifying a Record
  id: totrans-346
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查看和修改记录
- en: 'To view an entire record, simply click on the desired entry in the hierarchy
    view in the left-hand navigation frame. For example, if we click on `cn=Admins`
    the full record will be displayed in the main frame:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看完整的记录，只需点击左侧导航框中的层级视图中的所需条目。例如，如果我们点击 `cn=Admins`，主框中将显示完整的记录：
- en: '![Viewing and Modifying a Record](img/1021_08_07.jpg)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![查看和修改记录](img/1021_08_07.jpg)'
- en: 'This screen provides a number of tools for manipulating a record, as well as
    a full display of all of the record''s attributes. The tools are as follows:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 此屏幕提供了多个工具来操作记录，并显示所有记录的属性。工具如下：
- en: '**Refresh**: This refreshes the current record. This may be useful in situations
    where the entry may have changed since the last time this page was loaded.'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**刷新**：此操作刷新当前记录。这在条目自上次加载此页面以来可能已更改时非常有用。'
- en: '**Copy or move this entry**: This can be used to relocate (or make a copy of)
    the entry to another location in the directory information tree.'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复制或移动此条目**：此操作可用于将条目移动（或复制）到目录信息树中的另一个位置。'
- en: '**Delete this entry**: This runs an LDAP delete on the record, removing it
    from the directory information tree.'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**删除此条目**：此操作会对记录执行 LDAP 删除，将其从目录信息树中移除。'
- en: '**Compare with another entry**: This shows a side-by-side editable view of
    two different records in the directory. This can be useful to visually scan two
    records, or to look at one record as a reference for creating another.'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与另一个条目进行比较**：此操作显示两个不同记录的并排可编辑视图。它可以用来直观地扫描两个记录，或者将一个记录作为创建另一个记录的参考。'
- en: '**Create a child entry**: This creates a new entry that is subordinate to the
    presently selected one.'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建子条目**：此操作将在当前选定条目的基础上创建一个新的子条目。'
- en: '**Export**: This performs the same function as the **Export** link in the left
    navigation pane except that it selects the present entry by default, instead of
    requiring the user to select a point to export.'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导出**：这与左侧导航窗格中的**导出**链接执行相同的功能，只不过它默认选择当前条目，而不需要用户选择要导出的点。'
- en: '**Show internal attributes**: This displays the operational attributes for
    the selected record. Of course, operational attributes cannot be modified by a
    client application and so these attributes will be read-only.'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示内部属性**：这将显示所选记录的操作属性。当然，操作属性不能由客户端应用程序修改，因此这些属性将是只读的。'
- en: '**Rename**: This allows you to change the RDN of an entry (such as we have
    done with the `ldapmodrdn` command line tool).'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重命名**：这允许您更改条目的RDN（就像我们使用`ldapmodrdn`命令行工具所做的那样）。'
- en: '**Add new attribute**: Using this, you can add new attributes to an entry.
    phpLDAPadmin allows you to pick from a list of attributes that the object classes
    of the current record allows a record to have. In other words, there is no danger
    of accidentally selecting an attribute that is not allowed for that record.'
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加新属性**：通过这个功能，您可以向条目添加新属性。phpLDAPadmin允许您从当前记录的对象类所允许的属性列表中选择属性。换句话说，您不必担心意外选择不允许该记录拥有的属性。'
- en: 'Beneath this selection of tools is a display of all of the attributes for the
    current record:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些工具选择下方，是当前记录的所有属性的显示：
- en: '![Viewing and Modifying a Record](img/1021_08_08.jpg)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![查看和修改记录](img/1021_08_08.jpg)'
- en: 'The `cn=Admins` group record has the following (non-operational) attributes:
    `cn`, `member`, `objectclass`, and `ou`. phpLDAPadmin analyzes the record and
    presents options that are fitting for the record.'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '`cn=Admins`组记录具有以下（非操作）属性：`cn`、`member`、`objectclass`和`ou`。phpLDAPadmin分析记录并呈现适合该记录的选项。'
- en: 'First, `cn` cannot be modified since it is used in the RDN (as is noted on
    the far right-hand side). Also, it is labeled as **required**. Clicking on the
    **rename** link will do the same thing as the **rename** option in the list of
    tools: it will prompt me to perform a `modrdn` operation.'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，`cn`不能修改，因为它用于RDN（如最右侧所示）。此外，它被标记为**必需**。点击**重命名**链接将与工具列表中的**重命名**选项做相同的事情：提示我执行`modrdn`操作。
- en: 'Under the `member` attribute, which is also required, there are two values:
    the DNs of the users who are members of this group.'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 在`member`属性下，它也是必需的，有两个值：属于此组的用户的DN。
- en: The arrows (![Viewing and Modifying a Record](img/1021_08_icon_arrow.jpg))to
    the left of the DNs are links pointing to the records of those users. If you click
    on the link it will load a page similar to this one that allows you to edit the
    record for that DN.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: DN左侧的箭头 (![查看和修改记录](img/1021_08_icon_arrow.jpg)) 是指向这些用户记录的链接。如果点击该链接，它将加载一个类似的页面，允许您编辑该DN的记录。
- en: On the other side of the member DN fields are icons that look like a directory
    with a magnifying class (![Viewing and Modifying a Record](img/1021_08_icon_find.jpg)).
    Clicking on this will allow you to navigate the directory tree to find another
    DN to place in this field.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 在成员DN字段的另一侧是看起来像带放大镜的目录图标 (![查看和修改记录](img/1021_08_icon_find.jpg))。点击此图标将允许您浏览目录树，找到另一个DN并将其放入此字段。
- en: We will look at that dialog in just a moment. But first, we will look into adding
    a new group member to our group by adding a new attribute value.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍后会查看这个对话框。但首先，我们将通过添加一个新的属性值来向我们的组中添加一个新的组成员。
- en: 'Looking at the **member** section of the record display, we can add a new member
    by clicking on the **add value** link. This will bring up an attribute editing
    screen:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 查看记录显示的**member**部分，我们可以通过点击**添加值**链接来添加新成员。这将弹出一个属性编辑屏幕：
- en: '![Viewing and Modifying a Record](img/1021_08_09.jpg)'
  id: totrans-368
  prefs: []
  type: TYPE_IMG
  zh: '![查看和修改记录](img/1021_08_09.jpg)'
- en: The attribute editing screen is used to add a new attribute to an existing record.
    At the top of the screen, we can see some basic information about what attribute
    (**member**) we are adding to which record (**cn=Admins**).
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 属性编辑屏幕用于向现有记录添加新属性。在屏幕顶部，我们可以看到有关我们正在添加的属性（**member**）以及其所在记录（**cn=Admins**）的一些基本信息。
- en: Next, the attribute editor lists the existing values of the attribute (since
    this group already has two members). Finally, there is a single-text input box
    to allow us to enter a new member.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，属性编辑器列出了该属性的现有值（因为该组已经有两个成员）。最后，有一个单行文本框，允许我们输入一个新成员。
- en: phpLDAPadmin examines the schema for this attribute and displays the schema
    description as well as a human-readable description of the syntax.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: phpLDAPadmin会检查该属性的架构并显示架构描述以及语法的可读人描述。
- en: 'Also, since the value of this field is a DN, the find icon (the folder image
    with the magnifying glass) appears on the right side. We can click that icon to
    bring up the find dialog, and in that window we can navigate the directory information
    tree in search of the DN we want to add. This is what it will look like:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，由于此字段的值是DN，右侧会出现查找图标（带放大镜的文件夹图标）。我们可以点击该图标调出查找对话框，在该窗口中，我们可以浏览目录信息树，找到我们想要添加的DN。它会像这样显示：
- en: '![Viewing and Modifying a Record](img/1021_08_10.jpg)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
  zh: '![查看和修改记录](img/1021_08_10.jpg)'
- en: Clicking on a plus sign (`+`) icon will expand that branch of the tree, while
    clicking on the DN itself will insert that DN into the field on the attribute
    editing screen.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 点击加号（`+`）图标将展开该树的分支，而点击DN本身则会将该DN插入到属性编辑屏幕中的字段中。
- en: Note
  id: totrans-375
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This finding dialog is used frequently in phpLDAPadmin, and provides a simple
    tree navigation tool for locating entries within the directory information tree.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 此查找对话框在phpLDAPadmin中经常使用，提供了一个简单的树形导航工具，用于在目录信息树中定位条目。
- en: 'Now we have the desired value in the new `member` field:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在新的`member`字段中有了所需的值：
- en: '![Viewing and Modifying a Record](img/1021_08_11.jpg)'
  id: totrans-378
  prefs: []
  type: TYPE_IMG
  zh: '![查看和修改记录](img/1021_08_11.jpg)'
- en: 'Clicking the **Add New Value** button will provisionally add this attribute
    to our `cn=Admin` group, and return us to the record view. Our new addition is
    shwon on the main record view:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**添加新值**按钮将暂时把此属性添加到我们的`cn=Admin`组，并将我们返回到记录视图。我们的新添加项将在主记录视图中显示：
- en: '![Viewing and Modifying a Record](img/1021_08_12.jpg)'
  id: totrans-380
  prefs: []
  type: TYPE_IMG
  zh: '![查看和修改记录](img/1021_08_12.jpg)'
- en: Now we have three members. At the bottom of this page is a button labeled **save
    changes**. This button saves any changes made directly to fields on this page,
    but it is not needed to save the new group member—the user `uid=barbara` has already
    been added to the group.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有三名成员。在页面底部有一个按钮，标注为**保存更改**。该按钮用于保存直接对页面字段所做的任何更改，但它并不需要用来保存新加入的组成员——用户`uid=barbara`已经被添加到该组。
- en: Notice that the `objectClass` field does not allow modification of structural
    object classes. That is because LDAP does not allow changing an entry's structural
    object class. However, new object classes (auxiliary ones) can be added using
    the **add value** link.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`objectClass`字段不允许修改结构对象类。这是因为LDAP不允许更改条目的结构对象类。然而，可以使用**添加值**链接添加新的对象类（辅助类）。
- en: Also, next to each object class is an information icon (![Viewing and Modifying
    a Record](img/1021_08_icon_info.jpg))—a blue circle with a white letter `i`.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在每个对象类旁边都有一个信息图标 (![查看和修改记录](img/1021_08_icon_info.jpg))——一个蓝色圆圈，里面有一个白色字母`i`。
- en: 'Clicking on this icon will load the schema viewer for that object class, which
    displays helpful information about an object class:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 点击此图标将加载该对象类的架构查看器，显示有关该对象类的有用信息：
- en: '![Viewing and Modifying a Record](img/1021_08_13.jpg)'
  id: totrans-385
  prefs: []
  type: TYPE_IMG
  zh: '![查看和修改记录](img/1021_08_13.jpg)'
- en: The schema viewer shows all of the information stored in the LDAP schema, but
    in a much more human-friendly way than the schema files we looked at in Chapter
    6\. The schema viewer provides an interface to view object classes, attribute
    definitions, matching rules, and syntax information. In this case it is showing
    the `groupOfNames` object class. Attributes and superior object classes are linked
    which makes it much easier to navigate through the schemas. Additionally, there
    is a **Jump to an objectClass** drop-down list that provides a fast way to look
    at some of the other object classes.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 架构查看器展示了LDAP架构中存储的所有信息，但比我们在第6章中查看的架构文件要更加人性化。架构查看器提供了一个界面来查看对象类、属性定义、匹配规则和语法信息。在这种情况下，它展示了`groupOfNames`对象类。属性和上级对象类是相互链接的，这使得浏览架构变得更加容易。此外，还有一个**跳转到对象类**下拉列表，提供了一种快速查看其他对象类的方式。
- en: Adding a New Record
  id: totrans-387
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加新记录
- en: New records can be added from many points in phpLDAPadmin. Anywhere there is
    a star icon (![Adding a New Record](img/1021_08_icon_star.jpg)), it denotes a
    position where a new subordinate record can be added.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在phpLDAPadmin的多个位置添加新记录。在任何有星形图标的地方 (![添加新记录](img/1021_08_icon_star.jpg))，都表示可以在此位置添加一个新的下级记录。
- en: 'Let''s add a simple user account. To do this we will use the tree view in the
    left-hand navigation pane to locate the `ou=Users` branch:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加一个简单的用户帐户。为此，我们将使用左侧导航窗格中的树状视图定位`ou=Users`分支：
- en: '![Adding a New Record](img/1021_08_14.jpg)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
  zh: '![添加新记录](img/1021_08_14.jpg)'
- en: Clicking on the star icon (**Create new entry here**) will load the record creation
    view into the main frame. From here we can begin defining our new user's entry.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 点击星形图标（**在此处创建新条目**）将把记录创建视图加载到主框架中。我们可以在此开始定义新用户的条目。
- en: 'The first thing to do is select a structural object class for our new user.
    phpLDAPadmin gives us a list to choose from:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是为新用户选择一个结构对象类。phpLDAPadmin提供了一个可供选择的列表：
- en: '![Adding a New Record](img/1021_08_15.jpg)'
  id: totrans-393
  prefs: []
  type: TYPE_IMG
  zh: '![添加新记录](img/1021_08_15.jpg)'
- en: The phpLDAPadmin system has a number of pre-defined templates for adding new
    entries but our LDAP server is not configured with all of the object classes that
    phpLDAPadmin supports. (Many of these schemas are defined, though, in the `/etc/ldap/schemas/`
    directory.)
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: phpLDAPadmin系统有许多预定义的模板用于添加新条目，但我们的LDAP服务器并未配置phpLDAPadmin支持的所有对象类。（这些模式中的许多已经在`/etc/ldap/schemas/`目录中定义。）
- en: Attempting to add a **User Account** (which uses the `posixUser` object class,
    as defined in `nis.schema`) will cause problems when you try to create the user.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试添加**用户帐户**（该帐户使用`posixUser`对象类，如`nis.schema`中定义的）会在创建用户时出现问题。
- en: Those that are defined in phpLDAPadmin but are disabled in the template definition
    are marked with a white arrow on a black circle; they cannot be selected.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 在phpLDAPadmin中定义但在模板定义中被禁用的条目会用黑色圆圈中的白色箭头标记；这些条目无法选择。
- en: Note
  id: totrans-397
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'New custom templates can be created and added easily. Templates are simple
    XML files stored at `/etc/phpldapadmin/templates/`. To add a new template, just
    create a new XML file (or copy and modify an existing one), save it in the `templates/`
    directory, and then use the **Purge cache** tool in phpLDAPadmin to force a reload
    of the XML files. See the bundle of examples included with this book (available
    at the Packt website: [http://www.packtpub.com](http://www.packtpub.com)).'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 可以轻松创建和添加新的自定义模板。模板是存储在`/etc/phpldapadmin/templates/`中的简单XML文件。要添加一个新的模板，只需创建一个新的XML文件（或复制并修改现有文件），将其保存在`templates/`目录中，然后使用phpLDAPadmin中的**清除缓存**工具强制重新加载XML文件。请参阅本书中附带的示例包（可在Packt网站上找到：[http://www.packtpub.com](http://www.packtpub.com)）。
- en: We want to create a new `inetOrgPerson` object. Since there is no pre-defined
    template for an `inetOrgPerson`, we will use the **Custom** template.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望创建一个新的`inetOrgPerson`对象。由于没有为`inetOrgPerson`预定义模板，我们将使用**自定义**模板。
- en: 'The first thing to do is create the DN and decide on a structural object class:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是创建DN并选择一个结构对象类：
- en: '![Adding a New Record](img/1021_08_16.jpg)'
  id: totrans-401
  prefs: []
  type: TYPE_IMG
  zh: '![添加新记录](img/1021_08_16.jpg)'
- en: 'Our new user''s UID will be `mary` and, as always, we will be using `uid` as
    the attribute in the RDN. The user will be in the `ou=Users` organizational unit.
    And we want to select `inetOrgPerson` (and `person` and `organizationalPerson`)
    from the list of object classes. Clicking **Proceed >>** will bring us to the
    next screen, where we can fill out a number of attribute values. Here is the next
    screen:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 我们新用户的UID将是`mary`，并且一如既往，我们将使用`uid`作为RDN中的属性。用户将位于`ou=Users`组织单位中。我们希望从对象类列表中选择`inetOrgPerson`（以及`person`和`organizationalPerson`）。点击**继续
    >>**将带我们进入下一个页面，在那里我们可以填写一些属性值。以下是下一个页面：
- en: '![Adding a New Record](img/1021_08_17.jpg)'
  id: totrans-403
  prefs: []
  type: TYPE_IMG
  zh: '![添加新记录](img/1021_08_17.jpg)'
- en: The required attributes are at the top of the form. After that, there is a section
    for selecting multiple optional attributes and giving them values. If you add
    a `userPassword` value here, it will be properly encrypted and stored on the directory
    server.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 必填属性位于表单的顶部。之后，有一个选择多个可选属性并为其赋值的部分。如果在这里添加`userPassword`值，它将被正确加密并存储在目录服务器上。
- en: Scrolling to the bottom of this page there is a button labeled **Create Object**.
    Clicking that will perform an LDAP add operation on the directory server.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动到此页面底部，有一个标有**创建对象**的按钮。点击该按钮将在目录服务器上执行LDAP添加操作。
- en: Once the new user is created phpLDAPadmin will display the entry.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦新用户创建完成，phpLDAPadmin将显示该条目。
- en: Other templates streamline this process by automatically selecting the correct
    object classes and narrowing down the available attributes to just those used
    most often.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 其他模板通过自动选择正确的对象类，并将可用的属性缩小到最常用的那些，简化了这一过程。
- en: Searching with phpLDAPadmin
  id: totrans-408
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用phpLDAPadmin进行搜索
- en: The last task we are going to look at with phpLDAPadmin is **searching**. phpLDAPadmin
    comes with a set of searching utilities that can be used to find information in
    the directory information tree.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 phpLDAPadmin 中查看的最后一个任务是 **搜索**。phpLDAPadmin 配备了一套搜索工具，可以用来在目录信息树中查找信息。
- en: 'To get to the search screen, click on **search** in the left-hand navigation
    frame. This will take you to the basic search screen:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 要进入搜索界面，请点击左侧导航框中的 **搜索**。这将带你到基本搜索屏幕：
- en: '![Searching with phpLDAPadmin](img/1021_08_18.jpg)'
  id: totrans-411
  prefs: []
  type: TYPE_IMG
  zh: '![使用 phpLDAPadmin 进行搜索](img/1021_08_18.jpg)'
- en: 'Here, we will search for any entries whose UID starts with the string `ma`.
    Pressing the **Search** button will execute the search, which, for our directory,
    returns four records:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将搜索所有 UID 以 `ma` 开头的条目。点击 **搜索** 按钮将执行搜索，对于我们的目录，它返回四条记录：
- en: '![Searching with phpLDAPadmin](img/1021_08_19.jpg)'
  id: totrans-413
  prefs: []
  type: TYPE_IMG
  zh: '![使用 phpLDAPadmin 进行搜索](img/1021_08_19.jpg)'
- en: This returned all of the users who had a UID that starts with `ma`. Note that,
    by default, the search will check all available directory contexts. That might
    mean that one directory information tree will have zero search results and another
    may have a host of matches.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回了所有 UID 以 `ma` 开头的用户。请注意，默认情况下，搜索会检查所有可用的目录上下文。这可能意味着某个目录信息树没有搜索结果，而另一个可能有一堆匹配项。
- en: 'Sometimes it is nice to have more control over the LDAP search though. Clicking
    the **Advanced Search Form** link at the top of the simple search screen will
    load a search screen with more options:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，拥有更多对 LDAP 搜索的控制也是很有用的。在简单搜索界面顶部点击 **高级搜索表单** 链接，将加载一个具有更多选项的搜索界面：
- en: '![Searching with phpLDAPadmin](img/1021_08_20.jpg)'
  id: totrans-416
  prefs: []
  type: TYPE_IMG
  zh: '![使用 phpLDAPadmin 进行搜索](img/1021_08_20.jpg)'
- en: This allows us to explicitly set the base DN, the scope, and the search filter,
    as well as specify a list of attributes that we want returned. In short, this
    search form contains the fields we are accustomed to seeing in other LDAP applications,
    like the `ldapsearch` command-line client.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们能够明确设置基础 DN、范围和搜索过滤器，并指定我们希望返回的属性列表。简而言之，这个搜索表单包含了我们在其他 LDAP 应用程序中常见的字段，例如
    `ldapsearch` 命令行客户端。
- en: This too will return a list of items matching our specification.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 这也将返回符合我们规格的项目列表。
- en: The third search option is **Predefined Searches**. This tool is especially
    helpful for running searches with the same parameters time after time.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个搜索选项是 **预定义搜索**。这个工具特别适合反复执行带有相同参数的搜索。
- en: 'The searches are predefined at the bottom of the `config.php` file in the `/etc/phpldapadmin/`
    directory. The predefined search section begins like this:'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索在 `/etc/phpldapadmin/` 目录下的 `config.php` 文件底部预定义。预定义搜索部分以如下方式开始：
- en: '[PRE49]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: The first line sets up a query counter and the second line creates a new array
    of queries. We are going to add configuration directives to the `$queries` array.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行设置查询计数器，第二行创建一个新的查询数组。我们将向 `$queries` 数组中添加配置指令。
- en: 'A search definition looks like this:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索定义如下所示：
- en: '[PRE50]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Each line adds a new name/value pair to the first slot in the `$queries` array
    (remember, `$q` is `0`, which indicates the first slot of the array). By now,
    the format of such a filter ought to look pretty familiar:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 每一行都会将一个新的名称/值对添加到 `$queries` 数组的第一个位置（记住，`$q` 是 `0`，表示数组的第一个位置）。到目前为止，这种过滤器的格式应该已经相当熟悉：
- en: '`name`: The human-readable name of the pre-defined search.'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：预定义搜索的可读名称。'
- en: '`base`: The base DN that the search will start with.'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`base`：搜索将从该基础 DN 开始。'
- en: '`scope`: The search scope (base, one, sub, children).'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scope`：搜索范围（基础、单一、子级、子孙）。'
- en: '`filter`: The LDAP filter.'
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filter`：LDAP 过滤器。'
- en: '`attributes`: The list of attributes that should be returned to the user. Note
    that the attribute list is enclosed by quotes and values are separated by commas.'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attributes`：应返回给用户的属性列表。请注意，属性列表被引号括起来，值之间用逗号分隔。'
- en: 'If we were to create a second filter, we would first increment the `$q` variable,
    and then define a new set of parameters:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要创建第二个过滤器，首先会递增 `$q` 变量，然后定义一组新的参数：
- en: '[PRE51]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: The line `$q++` changes the value of `$q` from `0` to `1`, putting the next
    five parameters in the next indexed slot of the `$queries` array.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 这一行 `$q++` 将 `$q` 的值从 `0` 改为 `1`，将下一个五个参数放入 `$queries` 数组的下一个索引位置。
- en: Once we have defined the filters and saved the file, we are ready to test them
    out. There is no need to restart Apache or SLAPD; phpLDAPadmin reads its configuration
    file with every new request, and will pick up our changes immediately.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们定义了过滤器并保存文件，就可以进行测试了。无需重启Apache或SLAPD；phpLDAPadmin会在每次新的请求时读取其配置文件，并立即加载我们的更改。
- en: 'Here is the screen for **Predefined Searches**:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 这是**预定义搜索**的屏幕：
- en: '![Searching with phpLDAPadmin](img/1021_08_21.jpg)'
  id: totrans-436
  prefs: []
  type: TYPE_IMG
  zh: '![使用phpLDAPadmin搜索](img/1021_08_21.jpg)'
- en: With the predefined search, all we must do to run it is select the desired search
    from the drop down list at the top of the page and press the **Search** button.
    Since the filter is stored in the configuration file, phpLDAPadmin doesn't need
    any additional information from us.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 使用预定义的搜索，我们只需从页面顶部的下拉列表中选择所需的搜索，并按下**搜索**按钮即可运行。由于过滤器存储在配置文件中，phpLDAPadmin不需要我们提供任何额外的信息。
- en: We've now looked at the main features of phpLDAPadmin, a well-developed tool
    for managing an LDAP directory through a web interface.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经查看了phpLDAPadmin的主要功能，它是一个通过网页界面管理LDAP目录的成熟工具。
- en: phpLDAPadmin is not the only Open Source program for managing directory servers.
    There are standard desktop tools like GQ ([http://gq-project.org](http://gq-project.org)),
    and dozens of other web-based LDAP tools. There are also plugins to bring LDAP
    support to other popular web-based applications (like Squirrelmail, Joomla, and
    OpenCms).
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: phpLDAPadmin并不是唯一的开源目录服务器管理程序。还有像GQ（[http://gq-project.org](http://gq-project.org)）这样的标准桌面工具，以及其他几十种基于网页的LDAP工具。还有插件可以将LDAP支持带入其他流行的基于网页的应用程序（如Squirrelmail、Joomla和OpenCms）。
- en: There are also tools available to bring LDAP services to other authentication
    tools. For example, the `libpam-ldap` package provides **PAM (Pluggable Authentication
    Modules)** with the capabilities for performing LDAP lookups. And **saslauthd**,
    an SASL daemon that provides authentication services, can also be configured to
    connect to an LDAP server for authentication purposes.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些工具可以将LDAP服务引入其他身份验证工具。例如，`libpam-ldap`包为**PAM（可插拔身份验证模块）**提供了执行LDAP查找的功能。而**saslauthd**，一个提供身份验证服务的SASL守护进程，也可以配置为连接到LDAP服务器进行身份验证。
- en: Finally, there are a whole host of DNS servers, mail servers, file servers,
    and other packages that can be configured to use LDAP to store and retrieve information,
    particularly authentication information.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有许多DNS服务器、邮件服务器、文件服务器以及其他可以配置为使用LDAP存储和检索信息（尤其是身份验证信息）的软件包。
- en: Summary
  id: totrans-442
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have looked at configuring other tools to interoperate with
    OpenLDAP. We began with the Apache web server, using LDAP as a source of authentication
    and authorization. Next we installed phpLDAPadmin, a web-based program for managing
    directory servers. We looked at the main features and did some custom tuning.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经探讨了配置其他工具与OpenLDAP互操作的方法。我们从Apache web服务器开始，使用LDAP作为身份验证和授权的来源。接着，我们安装了phpLDAPadmin，这是一个基于网页的目录服务器管理程序。我们查看了其主要功能并进行了自定义调整。
- en: 'Of course, this is only scratching the surface of the applications that are
    LDAP-enabled. The information presented in this chapter should get you going on
    implementing any LDAP-enabled application, since they all require the same basic
    configuration information: host, port, bind information, and search filters.'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这只是LDAP启用应用程序的冰山一角。本章中提供的信息应该能帮助你实施任何LDAP启用的应用程序，因为它们都需要相同的基本配置信息：主机、端口、绑定信息和搜索过滤器。
- en: To find out more about LDAP-enabled applications, you may want to take a look
    at some of the Open Source package websites like Freshmeat.Net ([http://freshmeat.net](http://freshmeat.net))
    and Source Forge ([http://sourceforge.net](http://sourceforge.net)).
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 若要了解更多关于启用LDAP的应用程序，你可能需要浏览一些开源软件包网站，比如Freshmeat.Net（[http://freshmeat.net](http://freshmeat.net)）和Source
    Forge（[http://sourceforge.net](http://sourceforge.net)）。
